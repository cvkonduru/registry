{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newResolver",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is721",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lenderAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "maxRentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "dailyRentPrice",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "lendAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "enum IResolver.PaymentToken",
          "name": "paymentToken",
          "type": "uint8"
        }
      ],
      "name": "Lend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renterAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "rentAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rentedAt",
          "type": "uint32"
        }
      ],
      "name": "Rent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "collectedAt",
          "type": "uint32"
        }
      ],
      "name": "RentClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopLend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopRent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "claimRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lendingID",
          "type": "uint256"
        }
      ],
      "name": "getLending",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentingID",
          "type": "uint256"
        }
      ],
      "name": "getRenting",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lendAmount",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "maxRentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "dailyRentPrice",
          "type": "bytes4[]"
        },
        {
          "internalType": "enum IResolver.PaymentToken[]",
          "name": "paymentToken",
          "type": "uint8[]"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "rentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rentAmount",
          "type": "uint256[]"
        }
      ],
      "name": "rent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newPaused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRentFee",
          "type": "uint256"
        }
      ],
      "name": "setRentFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopLend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "12": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
    "13": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721Receiver.sol",
    "17": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "18": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "19": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "2": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
    "21": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol",
    "22": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "23": "contracts/Registry.sol",
    "25": "contracts/interfaces/IRegistry.sol",
    "26": "contracts/interfaces/IResolver.sol",
    "3": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "5": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "6": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
    "7": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
    "8": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "9": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/extensions/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "Address": [
        6095
      ],
      "Context": [
        5798
      ],
      "ERC1155Holder": [
        3126
      ],
      "ERC1155Receiver": [
        3160
      ],
      "ERC165": [
        5751
      ],
      "ERC20": [
        3706
      ],
      "ERC721Holder": [
        4151
      ],
      "IERC1155": [
        3075
      ],
      "IERC1155Receiver": [
        5727
      ],
      "IERC165": [
        5686
      ],
      "IERC20": [
        3784
      ],
      "IERC20Metadata": [
        5776
      ],
      "IERC721": [
        4124
      ],
      "IERC721Receiver": [
        6113
      ],
      "IRegistry": [
        2790
      ],
      "IResolver": [
        2812
      ],
      "Registry": [
        2485
      ],
      "SafeERC20": [
        4008
      ]
    },
    "id": 2486,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:23"
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 3707,
        "src": "57:83:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 3785,
        "src": "141:84:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 4009,
        "src": "226:93:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 4125,
        "src": "320:86:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 4152,
        "src": "407:97:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 3076,
        "src": "505:88:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 3127,
        "src": "594:99:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 3161,
        "src": "694:101:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2486,
        "sourceUnit": 2791,
        "src": "797:36:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2790,
              "src": "2134:9:23"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:9:23"
          },
          {
            "baseName": {
              "id": 13,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4151,
              "src": "2145:12:23"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "2145:12:23"
          },
          {
            "baseName": {
              "id": 15,
              "name": "ERC1155Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3160,
              "src": "2159:15:23"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "2159:15:23"
          },
          {
            "baseName": {
              "id": 17,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3126,
              "src": "2176:13:23"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "2176:13:23"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2485,
        "linearizedBaseContracts": [
          2485,
          3126,
          3160,
          5727,
          5751,
          5686,
          4151,
          6113,
          2790
        ],
        "name": "Registry",
        "nameLocation": "2122:8:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 19,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4008,
              "src": "2202:9:23"
            },
            "nodeType": "UsingForDirective",
            "src": "2196:26:23",
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3706,
                "src": "2216:5:23"
              },
              "referencedDeclaration": 3706,
              "src": "2216:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3706",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "resolver",
            "nameLocation": "2246:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2228:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IResolver_$2812",
              "typeString": "contract IResolver"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "IResolver",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2812,
                "src": "2228:9:23"
              },
              "referencedDeclaration": 2812,
              "src": "2228:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IResolver_$2812",
                "typeString": "contract IResolver"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "2276:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2260:21:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2260:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "beneficiary",
            "nameLocation": "2311:11:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2287:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2287:15:23",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "lendingID",
            "nameLocation": "2344:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2328:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2328:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2356:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "rentingID",
            "nameLocation": "2379:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2363:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2363:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2391:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 38,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "2410:6:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2398:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2398:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2419:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf2b23ea",
            "id": 41,
            "mutability": "mutable",
            "name": "rentFee",
            "nameLocation": "2445:7:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2430:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2430:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2455:1:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 44,
            "mutability": "constant",
            "name": "SECONDS_IN_DAY",
            "nameLocation": "2487:14:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2462:47:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2462:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2504:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "lendings",
            "nameLocation": "2551:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2515:44:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 45,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2523:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2515:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
              },
              "valueType": {
                "id": 47,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46,
                  "name": "Lending",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2678,
                  "src": "2534:7:23"
                },
                "referencedDeclaration": 2678,
                "src": "2534:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                  "typeString": "struct IRegistry.Lending"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "rentings",
            "nameLocation": "2601:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 2485,
            "src": "2565:44:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 50,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2573:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2565:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
              },
              "valueType": {
                "id": 52,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51,
                  "name": "Renting",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2687,
                  "src": "2584:7:23"
                },
                "referencedDeclaration": 2687,
                "src": "2584:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                  "typeString": "struct IRegistry.Renting"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "2637:76:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2655:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2655:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2669:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2655:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061646d696e",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2676:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        },
                        "value": "ReNFT::not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2647:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2647:48:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "2647:48:23"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "2705:1:23"
                }
              ]
            },
            "id": 66,
            "name": "onlyAdmin",
            "nameLocation": "2625:9:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:2:23"
            },
            "src": "2616:97:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "2740:61:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2758:7:23",
                        "subExpression": {
                          "id": 69,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2759:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706175736564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2767:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        },
                        "value": "ReNFT::paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:33:23"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "2793:1:23"
                }
              ]
            },
            "id": 76,
            "name": "notPaused",
            "nameLocation": "2728:9:23",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:2:23"
            },
            "src": "2719:82:23",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "2920:240:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "newResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2950:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "2930:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2930:32:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "newBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2992:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 89,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "2972:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:35:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:35:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3037:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "3017:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:29:23"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3056:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$2812",
                        "typeString": "contract IResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99,
                          "name": "newResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3077:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 98,
                        "name": "IResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2812,
                        "src": "3067:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IResolver_$2812_$",
                          "typeString": "type(contract IResolver)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:22:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$2812",
                        "typeString": "contract IResolver"
                      }
                    },
                    "src": "3056:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IResolver_$2812",
                      "typeString": "contract IResolver"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:33:23"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3099:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3113:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3099:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3099:28:23"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3137:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3145:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3137:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "3137:16:23"
                }
              ]
            },
            "id": 112,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "newResolver",
                  "nameLocation": "2836:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2828:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "2873:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2857:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2857:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "2905:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2897:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2897:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:101:23"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2920:0:23"
            },
            "scope": 2485,
            "src": "2807:353:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2713
            ],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3508:312:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "handleLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "3542:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 144,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "3602:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 145,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "3631:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 146,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3659:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 147,
                            "name": "lendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "3684:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "maxRentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3712:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 149,
                            "name": "dailyRentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "3745:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            }
                          },
                          {
                            "id": 150,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3777:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                              "typeString": "enum IResolver.PaymentToken[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                              "typeString": "enum IResolver.PaymentToken[] memory"
                            }
                          ],
                          "id": 143,
                          "name": "createLendCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1779,
                          "src": "3566:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2661_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,bytes4[] memory,enum IResolver.PaymentToken[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:237:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 141,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "3518:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$_$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:295:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:295:23"
                }
              ]
            },
            "functionSelector": "1cbb410f",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 138,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3498:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3498:9:23"
              }
            ],
            "name": "lend",
            "nameLocation": "3175:4:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3489:8:23"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3220:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3189:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 114,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 113,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "3189:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "3189:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 115,
                    "nodeType": "ArrayTypeName",
                    "src": "3189:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3258:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3241:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3241:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 118,
                    "nodeType": "ArrayTypeName",
                    "src": "3241:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3295:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3278:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 120,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3278:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 121,
                    "nodeType": "ArrayTypeName",
                    "src": "3278:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "3329:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3312:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3312:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 124,
                    "nodeType": "ArrayTypeName",
                    "src": "3312:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "3364:15:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3349:30:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3349:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "3349:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "3405:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3389:30:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 129,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "3389:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 130,
                    "nodeType": "ArrayTypeName",
                    "src": "3389:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "3461:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3429:44:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                    "typeString": "enum IResolver.PaymentToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 133,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 132,
                        "name": "IResolver.PaymentToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2797,
                        "src": "3429:22:23"
                      },
                      "referencedDeclaration": 2797,
                      "src": "3429:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentToken_$2797",
                        "typeString": "enum IResolver.PaymentToken"
                      }
                    },
                    "id": 134,
                    "nodeType": "ArrayTypeName",
                    "src": "3429:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_storage_ptr",
                      "typeString": "enum IResolver.PaymentToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3179:300:23"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3508:0:23"
            },
            "scope": 2485,
            "src": "3166:654:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2729
            ],
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "4038:257:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 175,
                        "name": "handleStopLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "4072:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 177,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "4138:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 178,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "4167:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 179,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "4195:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 180,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "4220:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4262:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4248:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 181,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4252:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 182,
                                "nodeType": "ArrayTypeName",
                                "src": "4252:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4248:16:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 176,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "4100:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2661_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:178:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 174,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "4048:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$_$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:240:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:240:23"
                }
              ]
            },
            "functionSelector": "c9c40183",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 171,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4028:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "4028:9:23"
              }
            ],
            "name": "stopLend",
            "nameLocation": "3835:8:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4019:8:23"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3884:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3853:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 156,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "3853:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "3853:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 158,
                    "nodeType": "ArrayTypeName",
                    "src": "3853:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3922:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3905:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3905:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 161,
                    "nodeType": "ArrayTypeName",
                    "src": "3905:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3959:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3942:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 163,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3942:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "nodeType": "ArrayTypeName",
                    "src": "3942:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "3993:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3976:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 166,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3976:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 167,
                    "nodeType": "ArrayTypeName",
                    "src": "3976:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3843:166:23"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4038:0:23"
            },
            "scope": 2485,
            "src": "3826:469:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2751
            ],
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "4591:275:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "handleRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "4625:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 218,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "4685:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 219,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "4714:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 220,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4742:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 221,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "4767:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 222,
                            "name": "rentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "4795:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 223,
                            "name": "rentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "4825:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 217,
                          "name": "createRentCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "4649:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2661_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4649:200:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 215,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "4601:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$_$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4601:258:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "4601:258:23"
                }
              ]
            },
            "functionSelector": "cbe55e54",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4581:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "4581:9:23"
              }
            ],
            "name": "rent",
            "nameLocation": "4310:4:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4572:8:23"
            },
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4355:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4324:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 192,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 191,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "4324:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "4324:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 193,
                    "nodeType": "ArrayTypeName",
                    "src": "4324:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4393:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4376:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 195,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4376:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 196,
                    "nodeType": "ArrayTypeName",
                    "src": "4376:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "4430:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4413:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4413:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4413:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "4464:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4447:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4447:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 202,
                    "nodeType": "ArrayTypeName",
                    "src": "4447:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "4499:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4484:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4484:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "4484:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "4538:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4521:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 207,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4521:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 208,
                    "nodeType": "ArrayTypeName",
                    "src": "4521:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4314:240:23"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4591:0:23"
            },
            "scope": 2485,
            "src": "4301:565:23",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2770
            ],
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "5121:251:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "handleStopRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1067,
                        "src": "5155:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 253,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "5221:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 254,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "5250:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 255,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "5278:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 256,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "5303:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 257,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "5331:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 252,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "5183:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2661_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5183:172:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 250,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "5131:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$_$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5131:234:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:234:23"
                }
              ]
            },
            "functionSelector": "14b5685c",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5111:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5111:9:23"
              }
            ],
            "name": "stopRent",
            "nameLocation": "4881:8:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5102:8:23"
            },
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4930:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4899:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 230,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 229,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "4899:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "4899:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 231,
                    "nodeType": "ArrayTypeName",
                    "src": "4899:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4968:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4951:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 233,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4951:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 234,
                    "nodeType": "ArrayTypeName",
                    "src": "4951:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5005:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4988:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 236,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4988:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 237,
                    "nodeType": "ArrayTypeName",
                    "src": "4988:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5039:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5022:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 239,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5022:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 240,
                    "nodeType": "ArrayTypeName",
                    "src": "5022:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5076:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5059:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5059:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 243,
                    "nodeType": "ArrayTypeName",
                    "src": "5059:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4889:203:23"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5121:0:23"
            },
            "scope": 2485,
            "src": "4872:500:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2789
            ],
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "5628:252:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 285,
                        "name": "handleClaimRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1196,
                        "src": "5662:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 287,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5729:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 288,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "5758:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 289,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "5786:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 290,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5811:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 291,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "5839:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 286,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1910,
                          "src": "5691:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$2661_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5691:172:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 284,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "5638:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$_$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5638:235:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5638:235:23"
                }
              ]
            },
            "functionSelector": "937821a1",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5618:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "5618:9:23"
              }
            ],
            "name": "claimRent",
            "nameLocation": "5387:9:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5609:8:23"
            },
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "5437:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5406:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 264,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 263,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "5406:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "5406:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 265,
                    "nodeType": "ArrayTypeName",
                    "src": "5406:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "5475:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5458:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 267,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5458:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 268,
                    "nodeType": "ArrayTypeName",
                    "src": "5458:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5512:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5495:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 270,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5495:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 271,
                    "nodeType": "ArrayTypeName",
                    "src": "5495:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5546:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5529:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 273,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5529:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 274,
                    "nodeType": "ArrayTypeName",
                    "src": "5529:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5583:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5566:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 276,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5566:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 277,
                    "nodeType": "ArrayTypeName",
                    "src": "5566:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:203:23"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5628:0:23"
            },
            "scope": 2485,
            "src": "5378:502:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "6126:1637:23",
              "statements": [
                {
                  "body": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "6181:1362:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 315,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6212:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 316,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "6216:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 314,
                            "name": "ensureIsLendable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2255,
                            "src": "6195:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_CallData_$2661_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.CallData memory,uint256) pure"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:23:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:23:23"
                      },
                      {
                        "assignments": [
                          320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 320,
                            "mutability": "mutable",
                            "name": "identifier",
                            "nameLocation": "6240:10:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6232:18:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6232:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 336,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 324,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6318:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "6318:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 328,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 326,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6332:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 327,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "6332:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6318:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 329,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6362:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "6362:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 332,
                                  "indexExpression": {
                                    "id": 331,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6373:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6362:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 333,
                                  "name": "lendingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "6397:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 322,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6280:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6280:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6280:144:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 321,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6253:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6253:185:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6232:206:23"
                      },
                      {
                        "assignments": [
                          341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 341,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "6478:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6452:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 340,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 339,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2678,
                                "src": "6452:17:23"
                              },
                              "referencedDeclaration": 2678,
                              "src": "6452:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 345,
                        "initialValue": {
                          "baseExpression": {
                            "id": 342,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6488:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 344,
                          "indexExpression": {
                            "id": 343,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6497:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6488:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6452:56:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "6535:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 346,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2101,
                              2157
                            ],
                            "referencedDeclaration": 2101,
                            "src": "6522:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6522:21:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "6522:21:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 353,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6586:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "paymentToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2660,
                                    "src": "6586:15:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                                      "typeString": "enum IResolver.PaymentToken[] memory"
                                    }
                                  },
                                  "id": 356,
                                  "indexExpression": {
                                    "id": 355,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6602:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6586:18:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                    "typeString": "enum IResolver.PaymentToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                    "typeString": "enum IResolver.PaymentToken"
                                  }
                                ],
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6580:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 351,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6580:5:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6580:25:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 350,
                            "name": "ensureTokenNotSentinel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2395,
                            "src": "6557:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$__$",
                              "typeString": "function (uint8) pure"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6557:49:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "6557:49:23"
                      },
                      {
                        "assignments": [
                          361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 361,
                            "mutability": "mutable",
                            "name": "is721",
                            "nameLocation": "6625:5:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6620:10:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 360,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6620:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 370,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_NFTStandard_$2621",
                            "typeString": "enum IRegistry.NFTStandard"
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 362,
                                "name": "cd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "6633:2:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                  "typeString": "struct IRegistry.CallData memory"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2629,
                              "src": "6633:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                                "typeString": "enum IRegistry.NFTStandard[] memory"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "id": 364,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "6648:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6633:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2621",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 366,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2790,
                                "src": "6654:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2621,
                              "src": "6654:21:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2621_$",
                                "typeString": "type(enum IRegistry.NFTStandard)"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "E721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2619,
                            "src": "6654:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2621",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "src": "6633:47:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6620:60:23"
                      },
                      {
                        "expression": {
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 371,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "6694:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 373,
                            "indexExpression": {
                              "id": 372,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "6703:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6694:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 376,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6766:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2629,
                                  "src": "6766:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 379,
                                "indexExpression": {
                                  "id": 378,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6781:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6766:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 382,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6824:3:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6824:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6816:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6816:8:23",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6816:19:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 385,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6870:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 386,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "maxRentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2641,
                                  "src": "6870:18:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "id": 387,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6889:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6870:21:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 389,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6925:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 390,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dailyRentPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2644,
                                  "src": "6925:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                    "typeString": "bytes4[] memory"
                                  }
                                },
                                "id": 392,
                                "indexExpression": {
                                  "id": 391,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6943:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6925:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "condition": {
                                  "id": 393,
                                  "name": "is721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "6975:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 397,
                                          "name": "cd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "6993:2:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                            "typeString": "struct IRegistry.CallData memory"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lendAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2638,
                                        "src": "6993:13:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 400,
                                      "indexExpression": {
                                        "id": 399,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "7007:1:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6993:16:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6987:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 395,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6987:5:23",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6987:23:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "6975:35:23",
                                "trueExpression": {
                                  "hexValue": "31",
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6983:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "condition": {
                                  "id": 403,
                                  "name": "is721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "7045:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 407,
                                          "name": "cd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "7063:2:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                            "typeString": "struct IRegistry.CallData memory"
                                          }
                                        },
                                        "id": 408,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lendAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2638,
                                        "src": "7063:13:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 410,
                                      "indexExpression": {
                                        "id": 409,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "7077:1:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7063:16:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7057:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 405,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7057:5:23",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7057:23:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7045:35:23",
                                "trueExpression": {
                                  "hexValue": "31",
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7053:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 413,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "7112:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2660,
                                  "src": "7112:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                                    "typeString": "enum IResolver.PaymentToken[] memory"
                                  }
                                },
                                "id": 416,
                                "indexExpression": {
                                  "id": 415,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "7128:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7112:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              ],
                              "expression": {
                                "id": 374,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2790,
                                "src": "6717:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Lending",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2678,
                              "src": "6717:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Lending_$2678_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Lending storage pointer)"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "nftStandard",
                              "lenderAddress",
                              "maxRentDuration",
                              "dailyRentPrice",
                              "lendAmount",
                              "availableAmount",
                              "paymentToken"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6717:428:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "src": "6694:451:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "6694:451:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 423,
                              "name": "is721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "7196:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7219:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7219:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 426,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7247:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2632,
                                "src": "7247:13:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 430,
                              "indexExpression": {
                                "expression": {
                                  "id": 428,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7261:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2623,
                                "src": "7261:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7247:22:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 431,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7287:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 432,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2635,
                                "src": "7287:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 434,
                              "indexExpression": {
                                "id": 433,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7298:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7287:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 435,
                              "name": "lendingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7318:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 436,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7345:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxRentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2641,
                                "src": "7345:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 439,
                              "indexExpression": {
                                "id": 438,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7364:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7345:21:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 440,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7384:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 441,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2644,
                                "src": "7384:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 443,
                              "indexExpression": {
                                "id": 442,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7402:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7384:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "condition": {
                                "id": 444,
                                "name": "is721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "7422:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 448,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 299,
                                        "src": "7440:2:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 449,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lendAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2638,
                                      "src": "7440:13:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 451,
                                    "indexExpression": {
                                      "id": 450,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 303,
                                      "src": "7454:1:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7440:16:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7434:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 446,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7434:5:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7434:23:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "7422:35:23",
                              "trueExpression": {
                                "hexValue": "31",
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7430:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 454,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7475:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paymentToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2660,
                                "src": "7475:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                                  "typeString": "enum IResolver.PaymentToken[] memory"
                                }
                              },
                              "id": 457,
                              "indexExpression": {
                                "id": 456,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7491:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7475:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "expression": {
                              "id": 420,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "7164:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Lend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2586,
                            "src": "7164:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_enum$_PaymentToken_$2797_$returns$__$",
                              "typeString": "function (bool,address,address,uint256,uint256,uint8,bytes4,uint16,enum IResolver.PaymentToken)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7164:343:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 459,
                        "nodeType": "EmitStatement",
                        "src": "7159:348:23"
                      },
                      {
                        "expression": {
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7521:11:23",
                          "subExpression": {
                            "id": 460,
                            "name": "lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "7521:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "7521:11:23"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "6162:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 308,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6166:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "6166:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6162:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 464,
                  "initializationExpression": {
                    "assignments": [
                      303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6149:1:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "6141:9:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6141:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 306,
                    "initialValue": {
                      "expression": {
                        "id": 304,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6153:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2623,
                      "src": "6153:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6141:19:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6176:3:23",
                      "subExpression": {
                        "id": 311,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "6176:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 313,
                    "nodeType": "ExpressionStatement",
                    "src": "6176:3:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "6136:1407:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 466,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "7578:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7594:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7594:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 471,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7626:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2485",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2485",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7618:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7618:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7618:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 474,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7654:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2635,
                            "src": "7654:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 476,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7666:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2623,
                            "src": "7666:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 478,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7675:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2625,
                            "src": "7675:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7685:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 473,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "7645:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7645:42:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 483,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7710:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2638,
                            "src": "7710:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 485,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7725:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2623,
                            "src": "7725:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 487,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7734:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 488,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2625,
                            "src": "7734:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7744:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 482,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "7701:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7701:45:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 465,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1601,
                      "src": "7552:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:204:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:204:23"
                }
              ]
            },
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleLend",
            "nameLocation": "6077:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "6114:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "6088:28:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 297,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "6088:18:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "6088:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6087:30:23"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6126:0:23"
            },
            "scope": 2485,
            "src": "6068:1695:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "7831:1428:23",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "lentAmounts",
                      "nameLocation": "7858:11:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7841:28:23",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7841:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 503,
                        "nodeType": "ArrayTypeName",
                        "src": "7841:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 508,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "7886:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "right",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2625,
                          "src": "7886:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 510,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "7897:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "left",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2623,
                          "src": "7897:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7886:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7872:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7876:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "nodeType": "ArrayTypeName",
                        "src": "7876:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7872:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7841:64:23"
                },
                {
                  "assignments": [
                    519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 519,
                      "mutability": "mutable",
                      "name": "nftStandard",
                      "nameLocation": "7937:11:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7915:33:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      },
                      "typeName": {
                        "id": 518,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 517,
                          "name": "IRegistry.NFTStandard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2621,
                          "src": "7915:21:23"
                        },
                        "referencedDeclaration": 2621,
                        "src": "7915:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_NFTStandard_$2621",
                          "typeString": "enum IRegistry.NFTStandard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 523,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 520,
                        "name": "IRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2790,
                        "src": "7951:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                          "typeString": "type(contract IRegistry)"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NFTStandard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2621,
                      "src": "7951:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2621_$",
                        "typeString": "type(enum IRegistry.NFTStandard)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "E721",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2619,
                    "src": "7951:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_NFTStandard_$2621",
                      "typeString": "enum IRegistry.NFTStandard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7915:62:23"
                },
                {
                  "body": {
                    "id": 628,
                    "nodeType": "Block",
                    "src": "8032:1003:23",
                    "statements": [
                      {
                        "assignments": [
                          537
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 537,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "8054:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 628,
                            "src": "8046:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 536,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8046:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 556,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 541,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8139:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "8139:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 545,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 543,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8153:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 544,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "8153:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8139:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 546,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8183:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 547,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "8183:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 549,
                                  "indexExpression": {
                                    "id": 548,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "8194:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8183:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 550,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8218:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 551,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2647,
                                    "src": "8218:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 553,
                                  "indexExpression": {
                                    "id": 552,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "8231:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8218:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 539,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8101:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8101:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8101:150:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 538,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8074:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8074:191:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8046:219:23"
                      },
                      {
                        "assignments": [
                          559
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 559,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "8295:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 628,
                            "src": "8279:23:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 558,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 557,
                                "name": "Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2678,
                                "src": "8279:7:23"
                              },
                              "referencedDeclaration": 2678,
                              "src": "8279:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 563,
                        "initialValue": {
                          "baseExpression": {
                            "id": 560,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8305:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "id": 561,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "8314:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8305:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8279:53:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 565,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 497,
                                    "src": "8371:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 566,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2629,
                                  "src": "8371:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 568,
                                "indexExpression": {
                                  "id": 567,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 525,
                                  "src": "8386:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8371:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 569,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "8392:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 570,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2664,
                                "src": "8392:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "8371:40:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8429:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 564,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8346:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8346:126:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "8346:126:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 576,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "8600:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 577,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2672,
                                "src": "8600:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 578,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "8622:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2674,
                                "src": "8622:23:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "8600:45:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a6163746976656c792072656e746564",
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8663:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              },
                              "value": "ReNFT::actively rented"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              }
                            ],
                            "id": 575,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8575:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8575:126:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "8575:126:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 585,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8731:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 584,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2129,
                              2185
                            ],
                            "referencedDeclaration": 2129,
                            "src": "8715:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8715:24:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 587,
                        "nodeType": "ExpressionStatement",
                        "src": "8715:24:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 589,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8771:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 590,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8780:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8780:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 588,
                            "name": "ensureIsStoppable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "8753:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,address) pure"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8753:38:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 593,
                        "nodeType": "ExpressionStatement",
                        "src": "8753:38:23"
                      },
                      {
                        "expression": {
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 594,
                              "name": "lentAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "8805:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 599,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 595,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 525,
                                "src": "8817:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 596,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "8821:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2623,
                                "src": "8821:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8817:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8805:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 600,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8832:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2672,
                            "src": "8832:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8805:45:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 603,
                        "nodeType": "ExpressionStatement",
                        "src": "8805:45:23"
                      },
                      {
                        "expression": {
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 604,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "8864:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2621",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 605,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8878:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2664,
                            "src": "8878:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2621",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "src": "8864:33:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_NFTStandard_$2621",
                            "typeString": "enum IRegistry.NFTStandard"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "8864:33:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 612,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "8935:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2647,
                                "src": "8935:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 615,
                              "indexExpression": {
                                "id": 614,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 525,
                                "src": "8948:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8935:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 618,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8959:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8959:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8952:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 616,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8952:6:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8952:23:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 609,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "8916:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopLend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2606,
                            "src": "8916:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8916:60:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 622,
                        "nodeType": "EmitStatement",
                        "src": "8911:65:23"
                      },
                      {
                        "expression": {
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8990:34:23",
                          "subExpression": {
                            "baseExpression": {
                              "id": 623,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "8997:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 625,
                            "indexExpression": {
                              "id": 624,
                              "name": "lendingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "9006:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8997:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 627,
                        "nodeType": "ExpressionStatement",
                        "src": "8990:34:23"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 529,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "8013:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 530,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "8017:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "8017:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8013:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 629,
                  "initializationExpression": {
                    "assignments": [
                      525
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 525,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8000:1:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "7992:9:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 524,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7992:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 528,
                    "initialValue": {
                      "expression": {
                        "id": 526,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "8004:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2623,
                      "src": "8004:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7992:19:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8027:3:23",
                      "subExpression": {
                        "id": 533,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "8027:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 535,
                    "nodeType": "ExpressionStatement",
                    "src": "8027:3:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "7987:1048:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "9070:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 634,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9094:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2485",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2485",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9086:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9086:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9086:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 636,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9113:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9113:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 639,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9146:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2635,
                            "src": "9146:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 641,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9158:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2623,
                            "src": "9158:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 643,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9167:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2625,
                            "src": "9167:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9177:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 638,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "9137:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9137:42:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 648,
                            "name": "lentAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "9202:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 649,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9215:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2623,
                            "src": "9215:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 651,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9224:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 652,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2625,
                            "src": "9224:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 653,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9234:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2623,
                            "src": "9234:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 647,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2041,
                          "src": "9193:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9193:49:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 630,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1601,
                      "src": "9044:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9044:208:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "9044:208:23"
                }
              ]
            },
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopLend",
            "nameLocation": "7778:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "7819:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "7793:28:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 496,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 495,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "7793:18:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "7793:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7792:30:23"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7831:0:23"
            },
            "scope": 2485,
            "src": "7769:1490:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 912,
              "nodeType": "Block",
              "src": "9323:2444:23",
              "statements": [
                {
                  "body": {
                    "id": 910,
                    "nodeType": "Block",
                    "src": "9378:2383:23",
                    "statements": [
                      {
                        "assignments": [
                          678
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 678,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "9400:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "9392:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 677,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9392:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 682,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9485:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 683,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "9485:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 686,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 684,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9499:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "9499:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9485:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 687,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9529:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 688,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "9529:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 690,
                                  "indexExpression": {
                                    "id": 689,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "9540:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9529:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 691,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9564:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2647,
                                    "src": "9564:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 694,
                                  "indexExpression": {
                                    "id": 693,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "9577:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9564:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 680,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9447:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9447:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9447:150:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 679,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9420:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9420:191:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9392:219:23"
                      },
                      {
                        "assignments": [
                          699
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 699,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "9633:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "9625:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 698,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9625:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 715,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 703,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9718:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "9718:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 707,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 705,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9732:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 706,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "9732:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9718:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 708,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9762:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "9762:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 711,
                                  "indexExpression": {
                                    "id": 710,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "9773:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9762:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 712,
                                  "name": "rentingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9797:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 701,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9680:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9680:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9680:144:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 700,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9653:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9653:185:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9625:213:23"
                      },
                      {
                        "assignments": [
                          720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 720,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "9878:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "9852:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 719,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 718,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2678,
                                "src": "9852:17:23"
                              },
                              "referencedDeclaration": 2678,
                              "src": "9852:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 724,
                        "initialValue": {
                          "baseExpression": {
                            "id": 721,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "9888:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 723,
                          "indexExpression": {
                            "id": 722,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "9897:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9888:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9852:63:23"
                      },
                      {
                        "assignments": [
                          729
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 729,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "9955:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "9929:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 728,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 727,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2687,
                                "src": "9929:17:23"
                              },
                              "referencedDeclaration": 2687,
                              "src": "9929:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 733,
                        "initialValue": {
                          "baseExpression": {
                            "id": 730,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "9965:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 732,
                          "indexExpression": {
                            "id": 731,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "9974:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9965:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9929:63:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 735,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "10022:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 734,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2129,
                              2185
                            ],
                            "referencedDeclaration": 2129,
                            "src": "10006:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10006:24:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "10006:24:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 739,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "10057:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 738,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2101,
                              2157
                            ],
                            "referencedDeclaration": 2157,
                            "src": "10044:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2687_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10044:21:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 741,
                        "nodeType": "ExpressionStatement",
                        "src": "10044:21:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 743,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "10096:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 744,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "10105:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 745,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "10109:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 746,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10112:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10112:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 742,
                            "name": "ensureIsRentable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "10079:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$_t_struct$_CallData_$2661_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.CallData memory,uint256,address) pure"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10079:44:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 749,
                        "nodeType": "ExpressionStatement",
                        "src": "10079:44:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 751,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10162:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 752,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2629,
                                  "src": "10162:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 754,
                                "indexExpression": {
                                  "id": 753,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "10177:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10162:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 755,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "10183:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2664,
                                "src": "10183:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "10162:40:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10220:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10137:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10137:126:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "10137:126:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 762,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10302:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2656,
                                  "src": "10302:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 765,
                                "indexExpression": {
                                  "id": 764,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "10316:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10302:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 766,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "10322:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2674,
                                "src": "10322:23:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "10302:43:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c69642072656e7420616d6f756e74",
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10363:28:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              },
                              "value": "ReNFT::invalid rent amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              }
                            ],
                            "id": 761,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10277:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10277:128:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "10277:128:23"
                      },
                      {
                        "assignments": [
                          773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 773,
                            "mutability": "mutable",
                            "name": "paymentTokenIx",
                            "nameLocation": "10425:14:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "10419:20:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 772,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "10419:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 779,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 776,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "10448:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2677,
                              "src": "10448:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10442:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "10442:5:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10442:27:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10419:50:23"
                      },
                      {
                        "assignments": [
                          781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 781,
                            "mutability": "mutable",
                            "name": "paymentToken",
                            "nameLocation": "10491:12:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "10483:20:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 780,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10483:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 786,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 784,
                              "name": "paymentTokenIx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "10531:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "id": 782,
                              "name": "resolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10506:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IResolver_$2812",
                                "typeString": "contract IResolver"
                              }
                            },
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPaymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2804,
                            "src": "10506:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                              "typeString": "function (uint8) view external returns (address)"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10506:40:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10483:63:23"
                      },
                      {
                        "assignments": [
                          788
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 788,
                            "mutability": "mutable",
                            "name": "decimals",
                            "nameLocation": "10568:8:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "10560:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10560:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 794,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 790,
                                  "name": "paymentToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 781,
                                  "src": "10585:12:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 789,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3706,
                                "src": "10579:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10579:19:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3706",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3235,
                            "src": "10579:28:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10579:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10560:49:23"
                      },
                      {
                        "id": 839,
                        "nodeType": "Block",
                        "src": "10623:460:23",
                        "statements": [
                          {
                            "assignments": [
                              796
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 796,
                                "mutability": "mutable",
                                "name": "scale",
                                "nameLocation": "10649:5:23",
                                "nodeType": "VariableDeclaration",
                                "scope": 839,
                                "src": "10641:13:23",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 795,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10641:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 800,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10657:2:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 798,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "10661:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10657:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "10641:28:23"
                          },
                          {
                            "assignments": [
                              802
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 802,
                                "mutability": "mutable",
                                "name": "rentPrice",
                                "nameLocation": "10695:9:23",
                                "nodeType": "VariableDeclaration",
                                "scope": 839,
                                "src": "10687:17:23",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 801,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10687:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 818,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 803,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "10707:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2656,
                                    "src": "10707:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 806,
                                  "indexExpression": {
                                    "id": 805,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "10721:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10707:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 807,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "10746:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 808,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2653,
                                    "src": "10746:15:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                      "typeString": "uint8[] memory"
                                    }
                                  },
                                  "id": 810,
                                  "indexExpression": {
                                    "id": 809,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "10762:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10746:18:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "10707:57:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 813,
                                      "name": "lending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 720,
                                      "src": "10799:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                        "typeString": "struct IRegistry.Lending storage pointer"
                                      }
                                    },
                                    "id": 814,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "dailyRentPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2670,
                                    "src": "10799:22:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 815,
                                    "name": "scale",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 796,
                                    "src": "10823:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 812,
                                  "name": "unpackPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1991,
                                  "src": "10787:11:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (bytes4,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10787:42:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10707:122:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "10687:142:23"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 820,
                                    "name": "rentPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 802,
                                    "src": "10855:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10867:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10855:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10870:27:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  },
                                  "value": "ReNFT::rent price is zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  }
                                ],
                                "id": 819,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "10847:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10847:51:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 825,
                            "nodeType": "ExpressionStatement",
                            "src": "10847:51:23"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 830,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10974:3:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 831,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10974:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 834,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "11014:4:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Registry_$2485",
                                        "typeString": "contract Registry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Registry_$2485",
                                        "typeString": "contract Registry"
                                      }
                                    ],
                                    "id": 833,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11006:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 832,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11006:7:23",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 835,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11006:13:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 836,
                                  "name": "rentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
                                  "src": "11041:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 827,
                                      "name": "paymentToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 781,
                                      "src": "10922:12:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 826,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3706,
                                    "src": "10916:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10916:19:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$3706",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3841,
                                "src": "10916:36:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3784_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3784_$",
                                  "typeString": "function (contract IERC20,address,address,uint256)"
                                }
                              },
                              "id": 837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10916:152:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 838,
                            "nodeType": "ExpressionStatement",
                            "src": "10916:152:23"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 840,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "11096:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 842,
                            "indexExpression": {
                              "id": 841,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "11105:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11096:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 847,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "11185:3:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "11185:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11177:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 845,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11177:8:23",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11177:19:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 852,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 662,
                                        "src": "11232:2:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rentAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2656,
                                      "src": "11232:13:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 855,
                                    "indexExpression": {
                                      "id": 854,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 666,
                                      "src": "11246:1:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11232:16:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11226:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 850,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11226:5:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11226:23:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 857,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "11281:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 858,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2653,
                                  "src": "11281:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 860,
                                "indexExpression": {
                                  "id": 859,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "11297:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11281:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 863,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "11334:5:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "11334:15:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11327:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 861,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11327:6:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11327:23:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "id": 843,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2790,
                                "src": "11126:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Renting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2687,
                              "src": "11126:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Renting_$2687_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Renting storage pointer)"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "renterAddress",
                              "rentAmount",
                              "rentDuration",
                              "rentedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11126:239:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "src": "11096:269:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "11096:269:23"
                      },
                      {
                        "expression": {
                          "id": 880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 869,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "11379:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 871,
                              "indexExpression": {
                                "id": 870,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 678,
                                "src": "11388:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11379:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 872,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2674,
                            "src": "11379:43:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 875,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "11449:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 876,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2656,
                                  "src": "11449:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 878,
                                "indexExpression": {
                                  "id": 877,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "11463:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11449:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11426:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 873,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "11426:5:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11426:53:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11379:100:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 881,
                        "nodeType": "ExpressionStatement",
                        "src": "11379:100:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 885,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11530:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11530:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 887,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 662,
                                  "src": "11558:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 888,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2647,
                                "src": "11558:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 890,
                              "indexExpression": {
                                "id": 889,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "11571:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11558:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 891,
                              "name": "rentingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "11591:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 894,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "11624:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 895,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2656,
                                    "src": "11624:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 897,
                                  "indexExpression": {
                                    "id": 896,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "11638:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11624:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11618:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 892,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11618:5:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11618:23:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 899,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 662,
                                  "src": "11659:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 900,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2653,
                                "src": "11659:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 902,
                              "indexExpression": {
                                "id": 901,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "11675:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11659:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "id": 903,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "11695:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 904,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2684,
                              "src": "11695:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 882,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "11498:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Rent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2600,
                            "src": "11498:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint8_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint16,uint8,uint32)"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11498:227:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 906,
                        "nodeType": "EmitStatement",
                        "src": "11493:232:23"
                      },
                      {
                        "expression": {
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11739:11:23",
                          "subExpression": {
                            "id": 907,
                            "name": "rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "11739:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 909,
                        "nodeType": "ExpressionStatement",
                        "src": "11739:11:23"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 670,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "9359:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 671,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "9363:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "9363:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9359:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 911,
                  "initializationExpression": {
                    "assignments": [
                      666
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9346:1:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "9338:9:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9338:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 669,
                    "initialValue": {
                      "expression": {
                        "id": 667,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "9350:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2623,
                      "src": "9350:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9338:19:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9373:3:23",
                      "subExpression": {
                        "id": 674,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "9373:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 676,
                    "nodeType": "ExpressionStatement",
                    "src": "9373:3:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "9333:2428:23"
                }
              ]
            },
            "id": 913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleRent",
            "nameLocation": "9274:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "9311:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9285:28:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 661,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 660,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "9285:18:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "9285:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9284:30:23"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9323:0:23"
            },
            "scope": 2485,
            "src": "9265:2502:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1066,
              "nodeType": "Block",
              "src": "11835:1433:23",
              "statements": [
                {
                  "body": {
                    "id": 1064,
                    "nodeType": "Block",
                    "src": "11890:1372:23",
                    "statements": [
                      {
                        "assignments": [
                          932
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 932,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "11912:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1064,
                            "src": "11904:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 931,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11904:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 951,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 936,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "11997:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 937,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "11997:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 940,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 938,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12011:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 939,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "12011:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11997:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 941,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12041:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "12041:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 944,
                                  "indexExpression": {
                                    "id": 943,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "12052:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12041:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 945,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12076:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 946,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2647,
                                    "src": "12076:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 948,
                                  "indexExpression": {
                                    "id": 947,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "12089:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12076:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 934,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "11959:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11959:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11959:150:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 933,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11932:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11932:191:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11904:219:23"
                      },
                      {
                        "assignments": [
                          953
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 953,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "12145:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1064,
                            "src": "12137:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 952,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12137:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 972,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 957,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12230:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "12230:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 961,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 959,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12244:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 960,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "12244:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12230:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 962,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12274:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 963,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "12274:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 965,
                                  "indexExpression": {
                                    "id": 964,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "12285:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12274:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 966,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 916,
                                      "src": "12309:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 967,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2650,
                                    "src": "12309:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 969,
                                  "indexExpression": {
                                    "id": 968,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 920,
                                    "src": "12322:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12309:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 955,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "12192:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12192:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12192:150:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 954,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "12165:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12165:191:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12137:219:23"
                      },
                      {
                        "assignments": [
                          977
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 977,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "12396:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1064,
                            "src": "12370:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 976,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 975,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2678,
                                "src": "12370:17:23"
                              },
                              "referencedDeclaration": 2678,
                              "src": "12370:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 981,
                        "initialValue": {
                          "baseExpression": {
                            "id": 978,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "12406:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 980,
                          "indexExpression": {
                            "id": 979,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 932,
                            "src": "12415:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12406:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12370:63:23"
                      },
                      {
                        "assignments": [
                          986
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 986,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "12473:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1064,
                            "src": "12447:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 985,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 984,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2687,
                                "src": "12447:17:23"
                              },
                              "referencedDeclaration": 2687,
                              "src": "12447:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 990,
                        "initialValue": {
                          "baseExpression": {
                            "id": 987,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "12483:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 989,
                          "indexExpression": {
                            "id": 988,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "12492:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12483:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12447:63:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 992,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "12540:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 991,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2129,
                              2185
                            ],
                            "referencedDeclaration": 2129,
                            "src": "12524:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12524:24:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 994,
                        "nodeType": "ExpressionStatement",
                        "src": "12524:24:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 996,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "12581:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 997,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12590:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12590:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 999,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12602:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12602:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 995,
                            "name": "ensureIsReturnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2340,
                            "src": "12562:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2687_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,address,uint256) pure"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12562:56:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1002,
                        "nodeType": "ExpressionStatement",
                        "src": "12562:56:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1004,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 916,
                                    "src": "12657:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1005,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2629,
                                  "src": "12657:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 1007,
                                "indexExpression": {
                                  "id": 1006,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 920,
                                  "src": "12672:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12657:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1008,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "12678:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1009,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2664,
                                "src": "12678:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "12657:40:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 1011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12715:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 1003,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12632:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12632:126:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1013,
                        "nodeType": "ExpressionStatement",
                        "src": "12632:126:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1015,
                                  "name": "renting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 986,
                                  "src": "12797:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                    "typeString": "struct IRegistry.Renting storage pointer"
                                  }
                                },
                                "id": 1016,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2686,
                                "src": "12797:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1017,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "12819:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2672,
                                "src": "12819:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "12797:40:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a637269746963616c206572726f72",
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12855:23:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              },
                              "value": "ReNFT::critical error"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              }
                            ],
                            "id": 1014,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12772:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12772:120:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1022,
                        "nodeType": "ExpressionStatement",
                        "src": "12772:120:23"
                      },
                      {
                        "assignments": [
                          1024
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1024,
                            "mutability": "mutable",
                            "name": "secondsSinceRentStart",
                            "nameLocation": "12914:21:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1064,
                            "src": "12906:29:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1023,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12906:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1030,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1025,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12938:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12938:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1027,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "12956:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2684,
                            "src": "12956:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12938:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12906:66:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1032,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "13005:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1033,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "13014:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "id": 1034,
                              "name": "secondsSinceRentStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1024,
                              "src": "13023:21:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1031,
                            "name": "distributePayments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1451,
                            "src": "12986:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$2678_memory_ptr_$_t_struct$_Renting_$2687_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory,uint256)"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12986:59:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1036,
                        "nodeType": "ExpressionStatement",
                        "src": "12986:59:23"
                      },
                      {
                        "expression": {
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1037,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "13059:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 1039,
                              "indexExpression": {
                                "id": 1038,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 932,
                                "src": "13068:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13059:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2674,
                            "src": "13059:43:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1041,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "13106:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2686,
                            "src": "13106:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13059:65:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1044,
                        "nodeType": "ExpressionStatement",
                        "src": "13059:65:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1048,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 916,
                                  "src": "13162:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2647,
                                "src": "13162:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1051,
                              "indexExpression": {
                                "id": 1050,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 920,
                                "src": "13175:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13162:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1054,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "13186:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1055,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "13186:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13179:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1052,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13179:6:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13179:23:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1045,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "13143:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopRent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2612,
                            "src": "13143:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13143:60:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1058,
                        "nodeType": "EmitStatement",
                        "src": "13138:65:23"
                      },
                      {
                        "expression": {
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "13217:34:23",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1059,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "13224:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1061,
                            "indexExpression": {
                              "id": 1060,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "13233:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13224:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1063,
                        "nodeType": "ExpressionStatement",
                        "src": "13217:34:23"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 924,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 920,
                      "src": "11871:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 925,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "11875:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 926,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "11875:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11871:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1065,
                  "initializationExpression": {
                    "assignments": [
                      920
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 920,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11858:1:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "11850:9:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 919,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11850:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 923,
                    "initialValue": {
                      "expression": {
                        "id": 921,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "11862:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2623,
                      "src": "11862:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11850:19:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11885:3:23",
                      "subExpression": {
                        "id": 928,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "11885:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 930,
                    "nodeType": "ExpressionStatement",
                    "src": "11885:3:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "11845:1417:23"
                }
              ]
            },
            "id": 1067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopRent",
            "nameLocation": "11782:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "11823:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1067,
                  "src": "11797:28:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 915,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 914,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "11797:18:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "11797:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11796:30:23"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11835:0:23"
            },
            "scope": 2485,
            "src": "11773:1495:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "13327:1171:23",
              "statements": [
                {
                  "body": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "13382:1110:23",
                    "statements": [
                      {
                        "assignments": [
                          1086
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1086,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "13404:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1193,
                            "src": "13396:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1085,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13396:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1105,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1090,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13489:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1091,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "13489:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1094,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1092,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13503:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1093,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "13503:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13489:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1095,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13533:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1096,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "13533:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1098,
                                  "indexExpression": {
                                    "id": 1097,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "13544:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13533:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1099,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13568:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1100,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2647,
                                    "src": "13568:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1102,
                                  "indexExpression": {
                                    "id": 1101,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "13581:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13568:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1088,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13451:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "13451:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13451:150:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1087,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13424:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13424:191:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13396:219:23"
                      },
                      {
                        "assignments": [
                          1107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1107,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "13637:17:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1193,
                            "src": "13629:25:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1106,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13629:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1126,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1111,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13722:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1112,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "13722:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1115,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1113,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13736:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1114,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "13736:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13722:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1116,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13766:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1117,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2635,
                                    "src": "13766:10:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1119,
                                  "indexExpression": {
                                    "id": 1118,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "13777:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13766:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1120,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1070,
                                      "src": "13801:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1121,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2650,
                                    "src": "13801:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1123,
                                  "indexExpression": {
                                    "id": 1122,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "13814:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13801:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1109,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13684:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "13684:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13684:150:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1108,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13657:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13657:191:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13629:219:23"
                      },
                      {
                        "assignments": [
                          1131
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1131,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "13888:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1193,
                            "src": "13862:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 1130,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1129,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2678,
                                "src": "13862:17:23"
                              },
                              "referencedDeclaration": 2678,
                              "src": "13862:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1135,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1132,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "13898:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 1134,
                          "indexExpression": {
                            "id": 1133,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "13907:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13898:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13862:63:23"
                      },
                      {
                        "assignments": [
                          1140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1140,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "13965:7:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1193,
                            "src": "13939:33:23",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 1139,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1138,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2687,
                                "src": "13939:17:23"
                              },
                              "referencedDeclaration": 2687,
                              "src": "13939:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1144,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1141,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "13975:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 1143,
                          "indexExpression": {
                            "id": 1142,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "13984:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13975:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13939:63:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1146,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1131,
                              "src": "14032:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 1145,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2129,
                              2185
                            ],
                            "referencedDeclaration": 2129,
                            "src": "14016:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$2678_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14016:24:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1148,
                        "nodeType": "ExpressionStatement",
                        "src": "14016:24:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1150,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "14070:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1149,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2129,
                              2185
                            ],
                            "referencedDeclaration": 2185,
                            "src": "14054:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2687_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14054:24:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "14054:24:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1154,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "14110:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 1155,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14119:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14119:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1153,
                            "name": "ensureIsClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2412,
                            "src": "14092:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2687_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14092:43:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "14092:43:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1160,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1131,
                              "src": "14172:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1161,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "14181:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1159,
                            "name": "distributeClaimPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "14149:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$2678_memory_ptr_$_t_struct$_Renting_$2687_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory)"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14149:40:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1163,
                        "nodeType": "ExpressionStatement",
                        "src": "14149:40:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1167,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1070,
                                  "src": "14247:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2650,
                                "src": "14247:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1170,
                              "indexExpression": {
                                "id": 1169,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1074,
                                "src": "14260:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14247:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1173,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14287:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14287:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1172,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14280:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1171,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14280:6:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14280:23:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1164,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "14208:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "RentClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2618,
                            "src": "14208:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14208:109:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1177,
                        "nodeType": "EmitStatement",
                        "src": "14203:114:23"
                      },
                      {
                        "expression": {
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1178,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1131,
                              "src": "14331:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2674,
                            "src": "14331:23:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1181,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1131,
                                "src": "14373:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 1182,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2674,
                              "src": "14373:23:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 1183,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1140,
                                "src": "14415:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2686,
                              "src": "14415:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "14373:60:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "14331:102:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1187,
                        "nodeType": "ExpressionStatement",
                        "src": "14331:102:23"
                      },
                      {
                        "expression": {
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "14447:34:23",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1188,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "14454:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1190,
                            "indexExpression": {
                              "id": 1189,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "14463:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14454:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1192,
                        "nodeType": "ExpressionStatement",
                        "src": "14447:34:23"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1078,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "13363:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1079,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "13367:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "13367:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13363:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1194,
                  "initializationExpression": {
                    "assignments": [
                      1074
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13350:1:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "13342:9:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13342:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1077,
                    "initialValue": {
                      "expression": {
                        "id": 1075,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "13354:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2623,
                      "src": "13354:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13342:19:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13377:3:23",
                      "subExpression": {
                        "id": 1082,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "13377:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1084,
                    "nodeType": "ExpressionStatement",
                    "src": "13377:3:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "13337:1155:23"
                }
              ]
            },
            "id": 1196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleClaimRent",
            "nameLocation": "13283:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "13315:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "13299:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1068,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "13299:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "13299:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13298:20:23"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13327:0:23"
            },
            "scope": 2485,
            "src": "13274:1224:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "14811:484:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1210,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "14829:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 1211,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2632,
                            "src": "14829:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14829:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14852:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14829:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f206e667473",
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14855:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        },
                        "value": "ReNFT::no nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14821:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14821:51:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "14821:51:23"
                },
                {
                  "body": {
                    "id": 1271,
                    "nodeType": "Block",
                    "src": "14923:345:23",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1224,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "14959:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1225,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "14959:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1228,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1226,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "14973:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "14973:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14959:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1229,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "14985:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1230,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "14985:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1233,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1231,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "14999:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1232,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2625,
                                    "src": "14999:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14985:23:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14959:49:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1235,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14958:51:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                "id": 1244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1236,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "15030:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1237,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2629,
                                    "src": "15030:14:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                                      "typeString": "enum IRegistry.NFTStandard[] memory"
                                    }
                                  },
                                  "id": 1240,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1238,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "15045:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1239,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2625,
                                    "src": "15045:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15030:24:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1241,
                                      "name": "IRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2790,
                                      "src": "15058:9:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                                        "typeString": "type(contract IRegistry)"
                                      }
                                    },
                                    "id": 1242,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "NFTStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2621,
                                    "src": "15058:21:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2621_$",
                                      "typeString": "type(enum IRegistry.NFTStandard)"
                                    }
                                  },
                                  "id": 1243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "E1155",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2620,
                                  "src": "15058:27:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$2621",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "src": "15030:55:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1245,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15029:57:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14958:128:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1269,
                          "nodeType": "Block",
                          "src": "15150:108:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1254,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "15176:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  ],
                                  "id": 1253,
                                  "name": "handler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "15168:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                                    "typeString": "function (struct IRegistry.CallData memory)"
                                  }
                                },
                                "id": 1255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15168:11:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1256,
                              "nodeType": "ExpressionStatement",
                              "src": "15168:11:23"
                            },
                            {
                              "expression": {
                                "id": 1262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1257,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "15197:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1259,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "left",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2623,
                                  "src": "15197:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1260,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "15207:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2625,
                                  "src": "15207:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15197:18:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1263,
                              "nodeType": "ExpressionStatement",
                              "src": "15197:18:23"
                            },
                            {
                              "expression": {
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15233:10:23",
                                "subExpression": {
                                  "expression": {
                                    "id": 1264,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "15233:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1266,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2625,
                                  "src": "15233:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1268,
                              "nodeType": "ExpressionStatement",
                              "src": "15233:10:23"
                            }
                          ]
                        },
                        "id": 1270,
                        "nodeType": "IfStatement",
                        "src": "14937:321:23",
                        "trueBody": {
                          "id": 1252,
                          "nodeType": "Block",
                          "src": "15101:43:23",
                          "statements": [
                            {
                              "expression": {
                                "id": 1250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15119:10:23",
                                "subExpression": {
                                  "expression": {
                                    "id": 1247,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "15119:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2625,
                                  "src": "15119:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1251,
                              "nodeType": "ExpressionStatement",
                              "src": "15119:10:23"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1218,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "14889:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1219,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2625,
                      "src": "14889:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1220,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "14901:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2632,
                        "src": "14901:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14901:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14889:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1272,
                  "nodeType": "WhileStatement",
                  "src": "14882:386:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1274,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "15285:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 1273,
                      "name": "handler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1203,
                      "src": "15277:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15277:11:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "15277:11:23"
                }
              ]
            },
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bundleCall",
            "nameLocation": "14695:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "14751:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "14715:43:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                    "typeString": "function (struct IRegistry.CallData)"
                  },
                  "typeName": {
                    "id": 1202,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 1200,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1199,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1202,
                          "src": "14724:25:23",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                            "typeString": "struct IRegistry.CallData"
                          },
                          "typeName": {
                            "id": 1198,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1197,
                              "name": "IRegistry.CallData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2661,
                              "src": "14724:18:23"
                            },
                            "referencedDeclaration": 2661,
                            "src": "14724:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                              "typeString": "struct IRegistry.CallData"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "14723:27:23"
                    },
                    "returnParameterTypes": {
                      "id": 1201,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "14751:0:23"
                    },
                    "src": "14715:43:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$2661_memory_ptr_$returns$__$",
                      "typeString": "function (struct IRegistry.CallData)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1206,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "14794:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "14768:28:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1205,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1204,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "14768:18:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "14768:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14705:97:23"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14811:0:23"
            },
            "scope": 2485,
            "src": "14686:609:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1322,
              "nodeType": "Block",
              "src": "15422:237:23",
              "statements": [
                {
                  "expression": {
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1288,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "15432:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1289,
                        "name": "rentAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "15438:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 1290,
                        "name": "rentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "15448:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15438:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15432:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "15432:23:23"
                },
                {
                  "expression": {
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1294,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1286,
                      "src": "15465:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 1295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15472:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "15465:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "15465:12:23"
                },
                {
                  "assignments": [
                    1299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1299,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "15493:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1322,
                      "src": "15487:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15487:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1304,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1302,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "15516:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$2797",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$2797",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15510:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1300,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15510:5:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15510:19:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15487:42:23"
                },
                {
                  "assignments": [
                    1307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1307,
                      "mutability": "mutable",
                      "name": "pmtToken",
                      "nameLocation": "15545:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1322,
                      "src": "15539:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3706",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1306,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1305,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3706,
                          "src": "15539:5:23"
                        },
                        "referencedDeclaration": 3706,
                        "src": "15539:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1314,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1311,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "15587:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1309,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "15562:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$2812",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2804,
                          "src": "15562:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15562:40:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1308,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3706,
                      "src": "15556:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15556:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3706",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15539:64:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1318,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "15635:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1319,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "15648:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1315,
                        "name": "pmtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "15613:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3815,
                      "src": "15613:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3784_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3784_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15613:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1321,
                  "nodeType": "ExpressionStatement",
                  "src": "15613:39:23"
                }
              ]
            },
            "id": 1323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "takeFee",
            "nameLocation": "15310:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "rentAmt",
                  "nameLocation": "15326:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "15318:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15318:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "15358:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "15335:35:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PaymentToken_$2797",
                    "typeString": "enum IResolver.PaymentToken"
                  },
                  "typeName": {
                    "id": 1282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1281,
                      "name": "IResolver.PaymentToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2797,
                      "src": "15335:22:23"
                    },
                    "referencedDeclaration": 2797,
                    "src": "15335:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentToken_$2797",
                      "typeString": "enum IResolver.PaymentToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15317:54:23"
            },
            "returnParameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "15413:3:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "15405:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15405:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15404:13:23"
            },
            "scope": 2485,
            "src": "15301:358:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "15830:1073:23",
              "statements": [
                {
                  "assignments": [
                    1335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1335,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "15846:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "15840:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1334,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15840:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1341,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1338,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "15869:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2677,
                        "src": "15869:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$2797",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$2797",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15863:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1336,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15863:5:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15863:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15840:50:23"
                },
                {
                  "assignments": [
                    1343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1343,
                      "mutability": "mutable",
                      "name": "pmtToken",
                      "nameLocation": "15908:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "15900:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15900:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1348,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1346,
                        "name": "paymentTokenIx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1335,
                        "src": "15944:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1344,
                        "name": "resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "15919:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IResolver_$2812",
                          "typeString": "contract IResolver"
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPaymentToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2804,
                      "src": "15919:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                        "typeString": "function (uint8) view external returns (address)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15919:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15900:59:23"
                },
                {
                  "assignments": [
                    1350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "15977:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "15969:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15969:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1356,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1352,
                            "name": "pmtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "15994:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1351,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3706,
                          "src": "15988:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15988:15:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3235,
                      "src": "15988:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15988:26:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15969:45:23"
                },
                {
                  "assignments": [
                    1358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1358,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "16032:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "16024:13:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16024:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1362,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16040:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1360,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "16044:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16040:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16024:28:23"
                },
                {
                  "assignments": [
                    1364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1364,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "16070:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "16062:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16062:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1366,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "16094:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2670,
                        "src": "16094:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1368,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "16118:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1365,
                      "name": "unpackPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "16082:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes4,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16082:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16062:62:23"
                },
                {
                  "assignments": [
                    1372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "totalRenterPmt",
                      "nameLocation": "16142:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "16134:22:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16134:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1380,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1373,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1329,
                          "src": "16159:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2686,
                        "src": "16159:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 1375,
                        "name": "rentPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "16192:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16159:42:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1377,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1329,
                        "src": "16216:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2682,
                      "src": "16216:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16159:77:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16134:102:23"
                },
                {
                  "assignments": [
                    1382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1382,
                      "mutability": "mutable",
                      "name": "sendLenderAmt",
                      "nameLocation": "16254:13:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "16246:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16246:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1389,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1383,
                            "name": "secondsSinceRentStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1331,
                            "src": "16271:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1384,
                            "name": "rentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "16295:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16271:33:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1386,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16270:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1387,
                      "name": "SECONDS_IN_DAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "16320:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16270:64:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16246:88:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1391,
                          "name": "totalRenterPmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1372,
                          "src": "16352:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16369:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16352:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a65726f",
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16372:37:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        },
                        "value": "ReNFT::total renter payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        }
                      ],
                      "id": 1390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16344:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16344:66:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "16344:66:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1398,
                          "name": "sendLenderAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1382,
                          "src": "16428:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16444:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16428:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e646572207061796d656e74206973207a65726f",
                        "id": 1401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16447:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        },
                        "value": "ReNFT::lender payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        }
                      ],
                      "id": 1397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16420:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16420:59:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1403,
                  "nodeType": "ExpressionStatement",
                  "src": "16420:59:23"
                },
                {
                  "assignments": [
                    1405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1405,
                      "mutability": "mutable",
                      "name": "sendRenterAmt",
                      "nameLocation": "16497:13:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "16489:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16489:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1409,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1406,
                      "name": "totalRenterPmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "16513:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1407,
                      "name": "sendLenderAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1382,
                      "src": "16530:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16513:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16489:54:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1410,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "16557:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16568:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16557:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1426,
                  "nodeType": "IfStatement",
                  "src": "16553:145:23",
                  "trueBody": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "16571:127:23",
                    "statements": [
                      {
                        "assignments": [
                          1414
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1414,
                            "mutability": "mutable",
                            "name": "takenFee",
                            "nameLocation": "16593:8:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 1425,
                            "src": "16585:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1413,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16585:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1420,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1416,
                              "name": "sendLenderAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1382,
                              "src": "16612:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1417,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1326,
                                "src": "16627:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                                  "typeString": "struct IRegistry.Lending memory"
                                }
                              },
                              "id": 1418,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2677,
                              "src": "16627:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "id": 1415,
                            "name": "takeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "16604:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_PaymentToken_$2797_$returns$_t_uint256_$",
                              "typeString": "function (uint256,enum IResolver.PaymentToken) returns (uint256)"
                            }
                          },
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16604:44:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16585:63:23"
                      },
                      {
                        "expression": {
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1421,
                            "name": "sendLenderAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "16662:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1422,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "16679:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16662:25:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1424,
                        "nodeType": "ExpressionStatement",
                        "src": "16662:25:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1431,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1326,
                          "src": "16736:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1432,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2666,
                        "src": "16736:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1433,
                        "name": "sendLenderAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1382,
                        "src": "16759:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1428,
                            "name": "pmtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "16713:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1427,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3706,
                          "src": "16707:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16707:15:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3815,
                      "src": "16707:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3784_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3784_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16707:66:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "16707:66:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1436,
                      "name": "sendRenterAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "16787:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16803:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16787:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1449,
                  "nodeType": "IfStatement",
                  "src": "16783:114:23",
                  "trueBody": {
                    "id": 1448,
                    "nodeType": "Block",
                    "src": "16806:91:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1443,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1329,
                                "src": "16849:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                                  "typeString": "struct IRegistry.Renting memory"
                                }
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "renterAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2680,
                              "src": "16849:21:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1445,
                              "name": "sendRenterAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1405,
                              "src": "16872:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1440,
                                  "name": "pmtToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "16826:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1439,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3706,
                                "src": "16820:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16820:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3706",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3815,
                            "src": "16820:28:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3784_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3784_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16820:66:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1447,
                        "nodeType": "ExpressionStatement",
                        "src": "16820:66:23"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributePayments",
            "nameLocation": "15674:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "15727:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "15702:32:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1325,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1324,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2678,
                      "src": "15702:17:23"
                    },
                    "referencedDeclaration": 2678,
                    "src": "15702:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1329,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "15769:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "15744:32:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1328,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1327,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "15744:17:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "15744:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1331,
                  "mutability": "mutable",
                  "name": "secondsSinceRentStart",
                  "nameLocation": "15794:21:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "15786:29:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15786:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15692:129:23"
            },
            "returnParameters": {
              "id": 1333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15830:0:23"
            },
            "scope": 2485,
            "src": "15665:1238:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1539,
              "nodeType": "Block",
              "src": "17039:695:23",
              "statements": [
                {
                  "assignments": [
                    1461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1461,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "17055:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17049:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1460,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "17049:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1467,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1464,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "17078:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2677,
                        "src": "17078:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$2797",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$2797",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "17072:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1462,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "17072:5:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17072:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17049:50:23"
                },
                {
                  "assignments": [
                    1470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1470,
                      "mutability": "mutable",
                      "name": "paymentToken",
                      "nameLocation": "17115:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17109:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3706",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1469,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1468,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3706,
                          "src": "17109:5:23"
                        },
                        "referencedDeclaration": 3706,
                        "src": "17109:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1477,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1474,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1461,
                            "src": "17161:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1472,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17136:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$2812",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2804,
                          "src": "17136:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17136:40:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1471,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3706,
                      "src": "17130:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17130:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3706",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17109:68:23"
                },
                {
                  "assignments": [
                    1479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1479,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "17195:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17187:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1478,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17187:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1485,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1481,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1470,
                            "src": "17212:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3706",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$3706",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1480,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3706,
                          "src": "17206:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3706_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17206:19:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3235,
                      "src": "17206:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17206:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17187:49:23"
                },
                {
                  "assignments": [
                    1487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1487,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "17254:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17246:13:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17246:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1491,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17262:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1489,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "17266:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17262:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17246:28:23"
                },
                {
                  "assignments": [
                    1493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "17292:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17284:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17284:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1499,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1495,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "17316:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1496,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2670,
                        "src": "17316:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1497,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "17340:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1494,
                      "name": "unpackPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1991,
                      "src": "17304:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes4,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17304:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17284:62:23"
                },
                {
                  "assignments": [
                    1501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1501,
                      "mutability": "mutable",
                      "name": "finalAmt",
                      "nameLocation": "17364:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17356:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17356:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1502,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1457,
                          "src": "17375:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 1503,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2686,
                        "src": "17375:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 1504,
                        "name": "rentPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "17408:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17375:42:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1506,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "17432:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2682,
                      "src": "17432:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17375:77:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17356:96:23"
                },
                {
                  "assignments": [
                    1511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1511,
                      "mutability": "mutable",
                      "name": "takenFee",
                      "nameLocation": "17470:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1539,
                      "src": "17462:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17462:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1513,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17481:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17462:20:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1514,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "17496:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17507:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17496:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1528,
                  "nodeType": "IfStatement",
                  "src": "17492:157:23",
                  "trueBody": {
                    "id": 1527,
                    "nodeType": "Block",
                    "src": "17510:139:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1517,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "17524:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1519,
                                "name": "finalAmt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1501,
                                "src": "17560:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1522,
                                    "name": "paymentTokenIx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1461,
                                    "src": "17609:14:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1520,
                                    "name": "IResolver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2812,
                                    "src": "17586:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IResolver_$2812_$",
                                      "typeString": "type(contract IResolver)"
                                    }
                                  },
                                  "id": 1521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "PaymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2797,
                                  "src": "17586:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PaymentToken_$2797_$",
                                    "typeString": "type(enum IResolver.PaymentToken)"
                                  }
                                },
                                "id": 1523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17586:38:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              ],
                              "id": 1518,
                              "name": "takeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "17535:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_PaymentToken_$2797_$returns$_t_uint256_$",
                                "typeString": "function (uint256,enum IResolver.PaymentToken) returns (uint256)"
                              }
                            },
                            "id": 1524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17535:103:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17524:114:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1526,
                        "nodeType": "ExpressionStatement",
                        "src": "17524:114:23"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1532,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "17684:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2666,
                        "src": "17684:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1534,
                          "name": "finalAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1501,
                          "src": "17707:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1535,
                          "name": "takenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1511,
                          "src": "17718:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17707:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1529,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1470,
                        "src": "17658:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3706",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3815,
                      "src": "17658:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3784_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3784_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17658:69:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1538,
                  "nodeType": "ExpressionStatement",
                  "src": "17658:69:23"
                }
              ]
            },
            "id": 1540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeClaimPayment",
            "nameLocation": "16918:22:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "16975:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "16950:32:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1453,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1452,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2678,
                      "src": "16950:17:23"
                    },
                    "referencedDeclaration": 2678,
                    "src": "16950:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "17017:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "16992:32:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1456,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1455,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "16992:17:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "16992:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16940:90:23"
            },
            "returnParameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17039:0:23"
            },
            "scope": 2485,
            "src": "16909:825:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1600,
              "nodeType": "Block",
              "src": "17917:451:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTStandard_$2621",
                      "typeString": "enum IRegistry.NFTStandard"
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1556,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1543,
                          "src": "17931:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1557,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2629,
                        "src": "17931:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                          "typeString": "enum IRegistry.NFTStandard[] memory"
                        }
                      },
                      "id": 1560,
                      "indexExpression": {
                        "expression": {
                          "id": 1558,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1543,
                          "src": "17946:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "left",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2623,
                        "src": "17946:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17931:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1561,
                          "name": "IRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2790,
                          "src": "17958:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRegistry_$2790_$",
                            "typeString": "type(contract IRegistry)"
                          }
                        },
                        "id": 1562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2621,
                        "src": "17958:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTStandard_$2621_$",
                          "typeString": "type(enum IRegistry.NFTStandard)"
                        }
                      },
                      "id": 1563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "E721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2619,
                      "src": "17958:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "src": "17931:53:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1598,
                    "nodeType": "Block",
                    "src": "18154:208:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1591,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1545,
                              "src": "18240:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1592,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1547,
                              "src": "18262:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1593,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1550,
                              "src": "18282:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "lendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1553,
                              "src": "18307:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18335:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1584,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1543,
                                      "src": "18177:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1585,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "18177:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1588,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1586,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1543,
                                      "src": "18191:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1587,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "18191:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18177:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1583,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3075,
                                "src": "18168:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$3075_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 1589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18168:32:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$3075",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeBatchTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3074,
                            "src": "18168:54:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18168:183:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1597,
                        "nodeType": "ExpressionStatement",
                        "src": "18168:183:23"
                      }
                    ]
                  },
                  "id": 1599,
                  "nodeType": "IfStatement",
                  "src": "17927:435:23",
                  "trueBody": {
                    "id": 1582,
                    "nodeType": "Block",
                    "src": "17986:162:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1573,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1545,
                              "src": "18062:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1574,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1547,
                              "src": "18084:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1575,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1543,
                                  "src": "18104:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1576,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2635,
                                "src": "18104:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1579,
                              "indexExpression": {
                                "expression": {
                                  "id": 1577,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1543,
                                  "src": "18115:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1578,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2623,
                                "src": "18115:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18104:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1566,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1543,
                                      "src": "18008:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1567,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2632,
                                    "src": "18008:13:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1570,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1568,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1543,
                                      "src": "18022:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1569,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2623,
                                    "src": "18022:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18008:22:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1565,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4124,
                                "src": "18000:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$4124_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18000:31:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$4124",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4077,
                            "src": "18000:44:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18000:137:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1581,
                        "nodeType": "ExpressionStatement",
                        "src": "18000:137:23"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "17749:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1543,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "17787:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1601,
                  "src": "17771:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1542,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1541,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "17771:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "17771:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1545,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "17807:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1601,
                  "src": "17799:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17799:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1547,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17829:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1601,
                  "src": "17821:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17821:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "17858:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1601,
                  "src": "17841:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17841:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1549,
                    "nodeType": "ArrayTypeName",
                    "src": "17841:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "17892:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1601,
                  "src": "17875:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1551,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17875:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1552,
                    "nodeType": "ArrayTypeName",
                    "src": "17875:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17761:147:23"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17917:0:23"
            },
            "scope": 2485,
            "src": "17740:628:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "18862:471:23",
              "statements": [
                {
                  "assignments": [
                    1625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1625,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "18880:10:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "18872:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1624,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18872:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1634,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1629,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1603,
                            "src": "18933:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1630,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "18945:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1631,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1607,
                            "src": "18954:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1627,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18916:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18916:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18916:49:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1626,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18893:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18893:82:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18872:103:23"
                },
                {
                  "assignments": [
                    1639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1639,
                      "mutability": "mutable",
                      "name": "lending",
                      "nameLocation": "19011:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1666,
                      "src": "18985:33:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                        "typeString": "struct IRegistry.Lending"
                      },
                      "typeName": {
                        "id": 1638,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1637,
                          "name": "IRegistry.Lending",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2678,
                          "src": "18985:17:23"
                        },
                        "referencedDeclaration": 2678,
                        "src": "18985:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                          "typeString": "struct IRegistry.Lending"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1643,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1640,
                      "name": "lendings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "19021:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$2678_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                      }
                    },
                    "id": 1642,
                    "indexExpression": {
                      "id": 1641,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1625,
                      "src": "19030:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19021:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage",
                      "typeString": "struct IRegistry.Lending storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18985:56:23"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1646,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1639,
                              "src": "19078:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2664,
                            "src": "19078:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$2621",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_NFTStandard_$2621",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          ],
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19072:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1644,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "19072:5:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19072:26:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1649,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "19112:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2666,
                        "src": "19112:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1651,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "19147:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxRentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2668,
                        "src": "19147:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1653,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "19184:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1654,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2670,
                        "src": "19184:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "id": 1655,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "19220:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lendAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2672,
                        "src": "19220:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1657,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1639,
                          "src": "19252:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "availableAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2674,
                        "src": "19252:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1661,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1639,
                              "src": "19295:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1662,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2677,
                            "src": "19295:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PaymentToken_$2797",
                              "typeString": "enum IResolver.PaymentToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_PaymentToken_$2797",
                              "typeString": "enum IResolver.PaymentToken"
                            }
                          ],
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19289:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1659,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "19289:5:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19289:27:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1664,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19058:268:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_uint16_$_t_uint8_$",
                      "typeString": "tuple(uint8,address payable,uint8,bytes4,uint16,uint16,uint8)"
                    }
                  },
                  "functionReturnParameters": 1623,
                  "id": 1665,
                  "nodeType": "Return",
                  "src": "19051:275:23"
                }
              ]
            },
            "functionSelector": "296c21b7",
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLending",
            "nameLocation": "18565:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "18593:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18585:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18585:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "18621:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18613:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18613:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1607,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "18646:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18638:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18638:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18575:87:23"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18723:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1609,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18723:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1612,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18742:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18742:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18763:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18763:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18782:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "18782:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18802:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1617,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18802:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18822:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18822:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "18842:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18842:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18709:148:23"
            },
            "scope": 2485,
            "src": "18556:777:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1714,
              "nodeType": "Block",
              "src": "19587:344:23",
              "statements": [
                {
                  "assignments": [
                    1685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1685,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "19605:10:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "19597:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1684,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19597:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1694,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1689,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1669,
                            "src": "19658:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1690,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "19670:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1691,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1673,
                            "src": "19679:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1687,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19641:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19641:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19641:49:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1686,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19618:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19618:82:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19597:103:23"
                },
                {
                  "assignments": [
                    1699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1699,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "19736:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1714,
                      "src": "19710:33:23",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                        "typeString": "struct IRegistry.Renting"
                      },
                      "typeName": {
                        "id": 1698,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1697,
                          "name": "IRegistry.Renting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2687,
                          "src": "19710:17:23"
                        },
                        "referencedDeclaration": 2687,
                        "src": "19710:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                          "typeString": "struct IRegistry.Renting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1703,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1700,
                      "name": "rentings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "19746:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$2687_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                      }
                    },
                    "id": 1702,
                    "indexExpression": {
                      "id": 1701,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1685,
                      "src": "19755:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19746:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage",
                      "typeString": "struct IRegistry.Renting storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19710:56:23"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1704,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1699,
                          "src": "19797:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2680,
                        "src": "19797:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1706,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1699,
                          "src": "19832:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2686,
                        "src": "19832:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1708,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1699,
                          "src": "19864:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1709,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2682,
                        "src": "19864:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1710,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1699,
                          "src": "19898:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2684,
                        "src": "19898:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "id": 1712,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19783:141:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint16_$_t_uint8_$_t_uint32_$",
                      "typeString": "tuple(address payable,uint16,uint8,uint32)"
                    }
                  },
                  "functionReturnParameters": 1683,
                  "id": 1713,
                  "nodeType": "Return",
                  "src": "19776:148:23"
                }
              ]
            },
            "functionSelector": "fe46b7cd",
            "id": 1715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRenting",
            "nameLocation": "19348:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "19376:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19368:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19368:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1671,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "19404:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19396:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19396:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1673,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "19429:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19421:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19421:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19358:87:23"
            },
            "returnParameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19506:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19506:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19527:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19527:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19547:5:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19547:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1715,
                  "src": "19566:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1681,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19566:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19492:90:23"
            },
            "scope": 2485,
            "src": "19339:592:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1778,
              "nodeType": "Block",
              "src": "20489:521:23",
              "statements": [
                {
                  "expression": {
                    "id": 1776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1744,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1742,
                      "src": "20499:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20533:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20555:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1748,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1719,
                          "src": "20583:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1749,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1722,
                          "src": "20620:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1750,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "20653:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1751,
                          "name": "lendAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1728,
                          "src": "20686:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20735:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20721:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1752,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20725:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1753,
                              "nodeType": "ArrayTypeName",
                              "src": "20725:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20721:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20776:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20762:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1757,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20766:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1758,
                              "nodeType": "ArrayTypeName",
                              "src": "20766:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20762:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20818:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20806:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1762,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "20810:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1763,
                              "nodeType": "ArrayTypeName",
                              "src": "20810:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20806:14:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20860:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20846:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1767,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20850:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1768,
                              "nodeType": "ArrayTypeName",
                              "src": "20850:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20846:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1772,
                          "name": "maxRentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1731,
                          "src": "20893:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1773,
                          "name": "dailyRentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1734,
                          "src": "20938:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "id": 1774,
                          "name": "paymentToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1738,
                          "src": "20980:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1745,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2661,
                        "src": "20504:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$2661_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "20504:499:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "20499:504:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1777,
                  "nodeType": "ExpressionStatement",
                  "src": "20499:504:23"
                }
              ]
            },
            "id": 1779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLendCallData",
            "nameLocation": "20128:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1719,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "20187:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20156:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1717,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1716,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "20156:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "20156:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1718,
                    "nodeType": "ArrayTypeName",
                    "src": "20156:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "20225:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20208:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1720,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20208:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1721,
                    "nodeType": "ArrayTypeName",
                    "src": "20208:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "20262:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20245:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1723,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20245:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1724,
                    "nodeType": "ArrayTypeName",
                    "src": "20245:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1728,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "20296:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20279:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1726,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20279:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1727,
                    "nodeType": "ArrayTypeName",
                    "src": "20279:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1731,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "20331:15:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20316:30:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1729,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20316:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1730,
                    "nodeType": "ArrayTypeName",
                    "src": "20316:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1734,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "20372:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20356:30:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1732,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "20356:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 1733,
                    "nodeType": "ArrayTypeName",
                    "src": "20356:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1738,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "20428:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20396:44:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                    "typeString": "enum IResolver.PaymentToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1736,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1735,
                        "name": "IResolver.PaymentToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2797,
                        "src": "20396:22:23"
                      },
                      "referencedDeclaration": 2797,
                      "src": "20396:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentToken_$2797",
                        "typeString": "enum IResolver.PaymentToken"
                      }
                    },
                    "id": 1737,
                    "nodeType": "ArrayTypeName",
                    "src": "20396:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_storage_ptr",
                      "typeString": "enum IResolver.PaymentToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20146:300:23"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "20485:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "20469:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1741,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1740,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "20469:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "20469:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20468:20:23"
            },
            "scope": 2485,
            "src": "20119:891:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1843,
              "nodeType": "Block",
              "src": "21326:532:23",
              "statements": [
                {
                  "expression": {
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1804,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "21336:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21370:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21392:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1808,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1783,
                          "src": "21420:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1809,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1786,
                          "src": "21457:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1810,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "21490:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21537:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21523:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1811,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21527:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1812,
                              "nodeType": "ArrayTypeName",
                              "src": "21527:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21523:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1816,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1792,
                          "src": "21564:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21613:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21599:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1817,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21603:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1818,
                              "nodeType": "ArrayTypeName",
                              "src": "21603:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21599:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1822,
                          "name": "rentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1795,
                          "src": "21643:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1823,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1798,
                          "src": "21681:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21734:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21722:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1824,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "21726:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1825,
                              "nodeType": "ArrayTypeName",
                              "src": "21726:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21722:14:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21779:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21766:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1829,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "21770:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1830,
                              "nodeType": "ArrayTypeName",
                              "src": "21770:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21766:15:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21838:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21809:28:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (enum IResolver.PaymentToken[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1835,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1834,
                                  "name": "IResolver.PaymentToken",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2797,
                                  "src": "21813:22:23"
                                },
                                "referencedDeclaration": 2797,
                                "src": "21813:22:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              },
                              "id": 1836,
                              "nodeType": "ArrayTypeName",
                              "src": "21813:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_storage_ptr",
                                "typeString": "enum IResolver.PaymentToken[]"
                              }
                            }
                          },
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21809:31:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1805,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2661,
                        "src": "21341:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$2661_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "21341:510:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "21336:515:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1842,
                  "nodeType": "ExpressionStatement",
                  "src": "21336:515:23"
                }
              ]
            },
            "id": 1844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRentCallData",
            "nameLocation": "21025:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1783,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "21084:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21053:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1781,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1780,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "21053:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "21053:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1782,
                    "nodeType": "ArrayTypeName",
                    "src": "21053:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1786,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "21122:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21105:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1784,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21105:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1785,
                    "nodeType": "ArrayTypeName",
                    "src": "21105:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1789,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "21159:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21142:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1787,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21142:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1788,
                    "nodeType": "ArrayTypeName",
                    "src": "21142:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1792,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "21193:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21176:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1790,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21176:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1791,
                    "nodeType": "ArrayTypeName",
                    "src": "21176:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1795,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "21228:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21213:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1793,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "21213:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1794,
                    "nodeType": "ArrayTypeName",
                    "src": "21213:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "21267:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21250:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1796,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21250:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1797,
                    "nodeType": "ArrayTypeName",
                    "src": "21250:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21043:240:23"
            },
            "returnParameters": {
              "id": 1803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1802,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "21322:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "21306:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1801,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1800,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "21306:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "21306:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21305:20:23"
            },
            "scope": 2485,
            "src": "21016:842:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1909,
              "nodeType": "Block",
              "src": "22139:534:23",
              "statements": [
                {
                  "expression": {
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1866,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1864,
                      "src": "22149:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22183:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22205:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1870,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1848,
                          "src": "22233:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1871,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1851,
                          "src": "22270:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1872,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1854,
                          "src": "22303:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22350:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22336:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1873,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22340:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1874,
                              "nodeType": "ArrayTypeName",
                              "src": "22340:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22336:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1878,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1857,
                          "src": "22377:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1879,
                          "name": "_rentingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1860,
                          "src": "22412:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22462:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22450:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1880,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22454:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1881,
                              "nodeType": "ArrayTypeName",
                              "src": "22454:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22450:14:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22504:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22490:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1885,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22494:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1886,
                              "nodeType": "ArrayTypeName",
                              "src": "22494:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22490:16:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22549:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22537:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1890,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22541:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1891,
                              "nodeType": "ArrayTypeName",
                              "src": "22541:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22537:14:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22594:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22581:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1895,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "22585:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1896,
                              "nodeType": "ArrayTypeName",
                              "src": "22585:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22581:15:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22653:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22624:28:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (enum IResolver.PaymentToken[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1901,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1900,
                                  "name": "IResolver.PaymentToken",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2797,
                                  "src": "22628:22:23"
                                },
                                "referencedDeclaration": 2797,
                                "src": "22628:22:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$2797",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              },
                              "id": 1902,
                              "nodeType": "ArrayTypeName",
                              "src": "22628:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_storage_ptr",
                                "typeString": "enum IResolver.PaymentToken[]"
                              }
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22624:31:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$2797_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1867,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2661,
                        "src": "22154:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$2661_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "22154:512:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "22149:517:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "22149:517:23"
                }
              ]
            },
            "id": 1910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createActionCallData",
            "nameLocation": "21873:20:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "21934:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "21903:42:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1846,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1845,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2621,
                        "src": "21903:21:23"
                      },
                      "referencedDeclaration": 2621,
                      "src": "21903:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$2621",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1847,
                    "nodeType": "ArrayTypeName",
                    "src": "21903:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$2621_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "21972:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "21955:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1849,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21955:7:23",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1850,
                    "nodeType": "ArrayTypeName",
                    "src": "21955:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "22009:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "21992:24:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1852,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21992:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1853,
                    "nodeType": "ArrayTypeName",
                    "src": "21992:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1857,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "22043:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "22026:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1855,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22026:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1856,
                    "nodeType": "ArrayTypeName",
                    "src": "22026:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1860,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "22080:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "22063:27:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1858,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "22063:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1859,
                    "nodeType": "ArrayTypeName",
                    "src": "22063:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21893:203:23"
            },
            "returnParameters": {
              "id": 1865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "22135:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "22119:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1863,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1862,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "22119:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "22119:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22118:20:23"
            },
            "scope": 2485,
            "src": "21864:809:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "22788:472:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1920,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "22822:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1921,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "22829:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1919,
                      "name": "ensureIsUnpackablePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2382,
                      "src": "22798:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes4,uint256) pure"
                      }
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22798:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "22798:37:23"
                },
                {
                  "assignments": [
                    1925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1925,
                      "mutability": "mutable",
                      "name": "whole",
                      "nameLocation": "22852:5:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1990,
                      "src": "22845:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1924,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22845:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1933,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1930,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1912,
                            "src": "22874:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22867:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 1928,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "22867:6:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22867:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 1927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "22860:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1926,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22860:6:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22860:21:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22845:36:23"
                },
                {
                  "assignments": [
                    1935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1935,
                      "mutability": "mutable",
                      "name": "decimal",
                      "nameLocation": "22898:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1990,
                      "src": "22891:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1934,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22891:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1945,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 1942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1940,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1912,
                              "src": "22922:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "hexValue": "3136",
                              "id": 1941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22931:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16_by_1",
                                "typeString": "int_const 16"
                              },
                              "value": "16"
                            },
                            "src": "22922:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22915:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 1938,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "22915:6:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22915:19:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 1937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "22908:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1936,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22908:6:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22908:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22891:44:23"
                },
                {
                  "assignments": [
                    1947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1947,
                      "mutability": "mutable",
                      "name": "decimalScale",
                      "nameLocation": "22953:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1990,
                      "src": "22945:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1946,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22945:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1951,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1948,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "22968:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22976:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "22968:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22945:36:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1952,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1925,
                      "src": "22995:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 1953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23003:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "22995:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1960,
                  "nodeType": "IfStatement",
                  "src": "22991:55:23",
                  "trueBody": {
                    "id": 1959,
                    "nodeType": "Block",
                    "src": "23009:37:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1955,
                            "name": "whole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1925,
                            "src": "23023:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 1956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23031:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "23023:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1958,
                        "nodeType": "ExpressionStatement",
                        "src": "23023:12:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1961,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "23059:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23069:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "23059:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1969,
                  "nodeType": "IfStatement",
                  "src": "23055:59:23",
                  "trueBody": {
                    "id": 1968,
                    "nodeType": "Block",
                    "src": "23075:39:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1964,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1935,
                            "src": "23089:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23099:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "23089:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1967,
                        "nodeType": "ExpressionStatement",
                        "src": "23089:14:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1971,
                      "mutability": "mutable",
                      "name": "w",
                      "nameLocation": "23131:1:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1990,
                      "src": "23123:9:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23123:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1975,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1972,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1925,
                      "src": "23135:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1973,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "23143:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23135:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23123:25:23"
                },
                {
                  "assignments": [
                    1977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1977,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "23166:1:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1990,
                      "src": "23158:9:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23158:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1981,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1978,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "23170:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1979,
                      "name": "decimalScale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1947,
                      "src": "23180:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23170:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23158:34:23"
                },
                {
                  "assignments": [
                    1983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1983,
                      "mutability": "mutable",
                      "name": "fullPrice",
                      "nameLocation": "23210:9:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 1990,
                      "src": "23202:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23202:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1987,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1984,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1971,
                      "src": "23222:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1985,
                      "name": "d",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1977,
                      "src": "23226:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23222:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23202:25:23"
                },
                {
                  "expression": {
                    "id": 1988,
                    "name": "fullPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1983,
                    "src": "23244:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1918,
                  "id": 1989,
                  "nodeType": "Return",
                  "src": "23237:16:23"
                }
              ]
            },
            "id": 1991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpackPrice",
            "nameLocation": "22688:11:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "22707:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "22700:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "22700:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "22722:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "22714:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22714:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22699:29:23"
            },
            "returnParameters": {
              "id": 1918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "22775:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22775:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22774:9:23"
            },
            "scope": 2485,
            "src": "22679:581:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2040,
              "nodeType": "Block",
              "src": "23435:157:23",
              "statements": [
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2006,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "23445:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2010,
                            "name": "toIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "23463:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2011,
                            "name": "fromIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1996,
                            "src": "23470:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23463:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "23449:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2007,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23453:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2008,
                          "nodeType": "ArrayTypeName",
                          "src": "23453:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23449:28:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "23445:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "23445:32:23"
                },
                {
                  "body": {
                    "id": 2038,
                    "nodeType": "Block",
                    "src": "23527:59:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2026,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "23541:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2030,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2027,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2017,
                                "src": "23543:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2028,
                                "name": "fromIx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1996,
                                "src": "23547:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23543:10:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23541:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2031,
                              "name": "arr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1994,
                              "src": "23557:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2035,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2032,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2017,
                                "src": "23561:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2033,
                                "name": "arrOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2000,
                                "src": "23565:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23561:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23557:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23541:34:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2037,
                        "nodeType": "ExpressionStatement",
                        "src": "23541:34:23"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2020,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2017,
                      "src": "23512:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2021,
                      "name": "toIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1998,
                      "src": "23516:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23512:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2039,
                  "initializationExpression": {
                    "assignments": [
                      2017
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2017,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "23500:1:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "23492:9:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23492:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2019,
                    "initialValue": {
                      "id": 2018,
                      "name": "fromIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1996,
                      "src": "23504:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23492:18:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23522:3:23",
                      "subExpression": {
                        "id": 2023,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2017,
                        "src": "23522:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2025,
                    "nodeType": "ExpressionStatement",
                    "src": "23522:3:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "23487:99:23"
                }
              ]
            },
            "id": 2041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sliceArr",
            "nameLocation": "23275:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1994,
                  "mutability": "mutable",
                  "name": "arr",
                  "nameLocation": "23310:3:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "23293:20:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1992,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23293:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1993,
                    "nodeType": "ArrayTypeName",
                    "src": "23293:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "fromIx",
                  "nameLocation": "23331:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "23323:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23323:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "toIx",
                  "nameLocation": "23355:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "23347:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23347:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "arrOffset",
                  "nameLocation": "23377:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "23369:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23369:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23283:109:23"
            },
            "returnParameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "23432:1:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2041,
                  "src": "23415:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2002,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23415:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2003,
                    "nodeType": "ArrayTypeName",
                    "src": "23415:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23414:20:23"
            },
            "scope": 2485,
            "src": "23266:326:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2056,
              "nodeType": "Block",
              "src": "23836:67:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2047,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "23854:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23870:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23862:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2048,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23862:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23862:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23854:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a7a65726f2061646472657373",
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23874:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        },
                        "value": "ReNFT::zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        }
                      ],
                      "id": 2046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23846:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23846:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2055,
                  "nodeType": "ExpressionStatement",
                  "src": "23846:50:23"
                }
              ]
            },
            "id": 2057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotZeroAddr",
            "nameLocation": "23789:19:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "23817:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2057,
                  "src": "23809:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23809:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23808:14:23"
            },
            "returnParameters": {
              "id": 2045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23836:0:23"
            },
            "scope": 2485,
            "src": "23780:123:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2072,
              "nodeType": "Block",
              "src": "23962:73:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2063,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2059,
                          "src": "23980:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23996:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23988:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2064,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23988:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23988:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23980:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061207a65726f2061646472657373",
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24000:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        },
                        "value": "ReNFT::not a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        }
                      ],
                      "id": 2062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23972:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23972:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2071,
                  "nodeType": "ExpressionStatement",
                  "src": "23972:56:23"
                }
              ]
            },
            "id": 2073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsZeroAddr",
            "nameLocation": "23918:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2059,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "23943:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2073,
                  "src": "23935:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23935:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23934:14:23"
            },
            "returnParameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23962:0:23"
            },
            "scope": 2485,
            "src": "23909:126:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2100,
              "nodeType": "Block",
              "src": "24100:207:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2080,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2076,
                          "src": "24127:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2081,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2666,
                        "src": "24127:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2079,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "24110:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24110:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2083,
                  "nodeType": "ExpressionStatement",
                  "src": "24110:39:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2085,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "24167:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2668,
                          "src": "24167:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24194:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24167:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24197:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24159:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24159:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2091,
                  "nodeType": "ExpressionStatement",
                  "src": "24159:65:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2093,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2076,
                            "src": "24242:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2670,
                          "src": "24242:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24268:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24242:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206e6f74207a65726f",
                        "id": 2097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24271:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        },
                        "value": "ReNFT::rent price not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        }
                      ],
                      "id": 2092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24234:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24234:66:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2099,
                  "nodeType": "ExpressionStatement",
                  "src": "24234:66:23"
                }
              ]
            },
            "id": 2101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "24050:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2076,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "24078:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2101,
                  "src": "24063:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2075,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2074,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2678,
                      "src": "24063:7:23"
                    },
                    "referencedDeclaration": 2678,
                    "src": "24063:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24062:24:23"
            },
            "returnParameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24100:0:23"
            },
            "scope": 2485,
            "src": "24041:266:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
              "src": "24375:205:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2108,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2104,
                          "src": "24405:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2666,
                        "src": "24405:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2107,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "24385:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24385:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "24385:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2113,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2104,
                            "src": "24445:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2668,
                          "src": "24445:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24472:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24445:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e207a65726f",
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24475:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        },
                        "value": "ReNFT::duration zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        }
                      ],
                      "id": 2112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24437:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24437:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "24437:61:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2121,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2104,
                            "src": "24516:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2670,
                          "src": "24516:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24542:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24516:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24545:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24508:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24508:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "ExpressionStatement",
                  "src": "24508:65:23"
                }
              ]
            },
            "id": 2129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24322:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2104,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "24353:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "24338:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2103,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2102,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2678,
                      "src": "24338:7:23"
                    },
                    "referencedDeclaration": 2678,
                    "src": "24338:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24337:24:23"
            },
            "returnParameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24375:0:23"
            },
            "scope": 2485,
            "src": "24313:267:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2156,
              "nodeType": "Block",
              "src": "24645:197:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2136,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2132,
                          "src": "24672:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2137,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2680,
                        "src": "24672:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2135,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "24655:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24655:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "24655:39:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2141,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2132,
                            "src": "24712:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2682,
                          "src": "24712:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24736:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24712:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24739:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24704:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24704:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
                  "src": "24704:62:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2149,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2132,
                            "src": "24784:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2684,
                          "src": "24784:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24804:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24784:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206e6f74207a65726f",
                        "id": 2153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24807:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        },
                        "value": "ReNFT::rented at not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        }
                      ],
                      "id": 2148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24776:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24776:59:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2155,
                  "nodeType": "ExpressionStatement",
                  "src": "24776:59:23"
                }
              ]
            },
            "id": 2157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "24595:12:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24623:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2157,
                  "src": "24608:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2130,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "24608:7:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "24608:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24607:24:23"
            },
            "returnParameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24645:0:23"
            },
            "scope": 2485,
            "src": "24586:256:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2184,
              "nodeType": "Block",
              "src": "24910:198:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2164,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2160,
                          "src": "24940:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2165,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2680,
                        "src": "24940:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2163,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2057,
                      "src": "24920:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24920:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2167,
                  "nodeType": "ExpressionStatement",
                  "src": "24920:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2169,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2160,
                            "src": "24980:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2170,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2682,
                          "src": "24980:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25004:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24980:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25007:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24972:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24972:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2175,
                  "nodeType": "ExpressionStatement",
                  "src": "24972:61:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2177,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2160,
                            "src": "25051:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2178,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2684,
                          "src": "25051:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25071:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25051:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206973207a65726f",
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25074:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        },
                        "value": "ReNFT::rented at is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        }
                      ],
                      "id": 2176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25043:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25043:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2183,
                  "nodeType": "ExpressionStatement",
                  "src": "25043:58:23"
                }
              ]
            },
            "id": 2185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24857:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2160,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24888:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "24873:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2158,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "24873:7:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "24873:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24872:24:23"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24910:0:23"
            },
            "scope": 2485,
            "src": "24848:260:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2254,
              "nodeType": "Block",
              "src": "25184:380:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2194,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "25202:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2195,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2638,
                            "src": "25202:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2197,
                          "indexExpression": {
                            "id": 2196,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "25216:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25202:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25221:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25202:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e6420616d6f756e74206973207a65726f",
                        "id": 2200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25224:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        },
                        "value": "ReNFT::lend amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        }
                      ],
                      "id": 2193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25194:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25194:59:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2202,
                  "nodeType": "ExpressionStatement",
                  "src": "25194:59:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2204,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "25271:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2638,
                            "src": "25271:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2207,
                          "indexExpression": {
                            "id": 2206,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "25285:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25271:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25296:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2209,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25296:5:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2208,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25291:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25291:11:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25291:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25271:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25308:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25263:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25263:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2216,
                  "nodeType": "ExpressionStatement",
                  "src": "25263:64:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2218,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "25345:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2641,
                            "src": "25345:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2221,
                          "indexExpression": {
                            "id": 2220,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "25364:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25345:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25369:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25345:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25372:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25337:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25337:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2226,
                  "nodeType": "ExpressionStatement",
                  "src": "25337:61:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2228,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2188,
                              "src": "25416:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2229,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2641,
                            "src": "25416:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2231,
                          "indexExpression": {
                            "id": 2230,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "25435:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25416:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25446:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2233,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25446:5:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2232,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25441:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25441:11:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25441:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25416:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25458:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25408:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25408:69:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "25408:69:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 2244,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2188,
                                  "src": "25502:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 2245,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2644,
                                "src": "25502:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 2247,
                              "indexExpression": {
                                "id": 2246,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2190,
                                "src": "25520:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25502:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25495:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2242,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "25495:6:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25495:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25526:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25495:32:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25529:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25487:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25487:70:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2253,
                  "nodeType": "ExpressionStatement",
                  "src": "25487:70:23"
                }
              ]
            },
            "id": 2255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsLendable",
            "nameLocation": "25123:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25156:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "25140:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2187,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2186,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "25140:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "25140:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2190,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25168:1:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2255,
                  "src": "25160:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25160:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25139:31:23"
            },
            "returnParameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25184:0:23"
            },
            "scope": 2485,
            "src": "25114:450:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2311,
              "nodeType": "Block",
              "src": "25721:374:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2269,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2265,
                          "src": "25739:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 2270,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "25752:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2666,
                          "src": "25752:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "25739:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a63616e742072656e74206f776e206e6674",
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25775:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        },
                        "value": "ReNFT::cant rent own nft"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        }
                      ],
                      "id": 2268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25731:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25731:71:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "25731:71:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2277,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2261,
                              "src": "25820:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2278,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2653,
                            "src": "25820:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2280,
                          "indexExpression": {
                            "id": 2279,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "25836:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25820:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25847:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2282,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25847:5:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2281,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25842:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25842:11:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25842:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25820:37:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25859:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25812:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25812:66:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2289,
                  "nodeType": "ExpressionStatement",
                  "src": "25812:66:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2291,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2261,
                              "src": "25896:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2653,
                            "src": "25896:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2294,
                          "indexExpression": {
                            "id": 2293,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "25912:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25896:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25917:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25896:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25920:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25888:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25888:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "25888:58:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2301,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2261,
                              "src": "25977:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2653,
                            "src": "25977:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2304,
                          "indexExpression": {
                            "id": 2303,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2263,
                            "src": "25993:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25977:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2305,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "25999:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2668,
                          "src": "25999:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25977:45:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6f776564206d6178",
                        "id": 2308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26036:42:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        },
                        "value": "ReNFT::rent duration exceeds allowed max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        }
                      ],
                      "id": 2300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25956:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25956:132:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2310,
                  "nodeType": "ExpressionStatement",
                  "src": "25956:132:23"
                }
              ]
            },
            "id": 2312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsRentable",
            "nameLocation": "25579:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2258,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "25620:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "25605:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2256,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2678,
                      "src": "25605:7:23"
                    },
                    "referencedDeclaration": 2678,
                    "src": "25605:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2261,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25653:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "25637:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$2661_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2260,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2259,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2661,
                      "src": "25637:8:23"
                    },
                    "referencedDeclaration": 2661,
                    "src": "25637:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$2661_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2263,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25673:1:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "25665:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25665:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "25692:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "25684:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25684:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25595:112:23"
            },
            "returnParameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25721:0:23"
            },
            "scope": 2485,
            "src": "25570:525:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2339,
              "nodeType": "Block",
              "src": "26239:203:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2323,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2315,
                            "src": "26257:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2680,
                          "src": "26257:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2325,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2317,
                          "src": "26282:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26257:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742072656e746572",
                        "id": 2327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26293:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        },
                        "value": "ReNFT::not renter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        }
                      ],
                      "id": 2322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26249:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26249:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2329,
                  "nodeType": "ExpressionStatement",
                  "src": "26249:64:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "26344:42:23",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2332,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2315,
                              "src": "26362:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              }
                            },
                            {
                              "id": 2333,
                              "name": "blockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2319,
                              "src": "26371:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2331,
                            "name": "isPastReturnDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2441,
                            "src": "26345:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2687_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                            }
                          },
                          "id": 2334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26345:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706173742072657475726e2064617465",
                        "id": 2336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26400:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        },
                        "value": "ReNFT::past return date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        }
                      ],
                      "id": 2330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26323:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26323:112:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2338,
                  "nodeType": "ExpressionStatement",
                  "src": "26323:112:23"
                }
              ]
            },
            "id": 2340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsReturnable",
            "nameLocation": "26110:18:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "26153:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "26138:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2314,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2313,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "26138:7:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "26138:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2317,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26178:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "26170:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26170:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "26205:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2340,
                  "src": "26197:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26197:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26128:97:23"
            },
            "returnParameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26239:0:23"
            },
            "scope": 2485,
            "src": "26101:341:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "26551:81:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2349,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2343,
                            "src": "26569:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2350,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2666,
                          "src": "26569:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2351,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2345,
                          "src": "26594:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26569:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f74206c656e646572",
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26605:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        },
                        "value": "ReNFT::not lender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        }
                      ],
                      "id": 2348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26561:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26561:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "26561:64:23"
                }
              ]
            },
            "id": 2357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsStoppable",
            "nameLocation": "26457:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "26490:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "26475:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$2678_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2342,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2341,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2678,
                      "src": "26475:7:23"
                    },
                    "referencedDeclaration": 2678,
                    "src": "26475:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$2678_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2345,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26507:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "26499:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26499:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26474:43:23"
            },
            "returnParameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26551:0:23"
            },
            "scope": 2485,
            "src": "26448:184:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2381,
              "nodeType": "Block",
              "src": "26713:124:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2367,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2359,
                              "src": "26738:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26731:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2365,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "26731:6:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26731:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26747:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26731:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207072696365",
                        "id": 2371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26750:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        },
                        "value": "ReNFT::invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        }
                      ],
                      "id": 2364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26723:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26723:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2373,
                  "nodeType": "ExpressionStatement",
                  "src": "26723:50:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2375,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2361,
                          "src": "26791:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26800:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "26791:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207363616c65",
                        "id": 2378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26807:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        },
                        "value": "ReNFT::invalid scale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        }
                      ],
                      "id": 2374,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26783:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26783:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ExpressionStatement",
                  "src": "26783:47:23"
                }
              ]
            },
            "id": 2382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsUnpackablePrice",
            "nameLocation": "26647:23:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "26678:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "26671:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "26671:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "26693:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2382,
                  "src": "26685:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26685:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26670:29:23"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26713:0:23"
            },
            "scope": 2485,
            "src": "26638:199:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2394,
              "nodeType": "Block",
              "src": "26905:67:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2388,
                          "name": "paymentIx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2384,
                          "src": "26923:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26935:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26923:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f6b656e2069732073656e74696e656c",
                        "id": 2391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26938:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        },
                        "value": "ReNFT::token is sentinel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        }
                      ],
                      "id": 2387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26915:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26915:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2393,
                  "nodeType": "ExpressionStatement",
                  "src": "26915:50:23"
                }
              ]
            },
            "id": 2395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureTokenNotSentinel",
            "nameLocation": "26852:22:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "paymentIx",
                  "nameLocation": "26881:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2395,
                  "src": "26875:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26875:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26874:17:23"
            },
            "returnParameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26905:0:23"
            },
            "scope": 2485,
            "src": "26843:129:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2411,
              "nodeType": "Block",
              "src": "27098:134:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2405,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2398,
                            "src": "27146:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          {
                            "id": 2406,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "27155:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2404,
                          "name": "isPastReturnDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2441,
                          "src": "27129:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$2687_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                          }
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27129:41:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72657475726e2064617465206e6f7420706173736564",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27184:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        },
                        "value": "ReNFT::return date not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        }
                      ],
                      "id": 2403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27108:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27108:117:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "27108:117:23"
                }
              ]
            },
            "id": 2412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsClaimable",
            "nameLocation": "26987:17:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2398,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "27039:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "27014:32:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2397,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2396,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "27014:17:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "27014:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2400,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "27064:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "27056:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27056:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27004:80:23"
            },
            "returnParameters": {
              "id": 2402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27098:0:23"
            },
            "scope": 2485,
            "src": "26978:254:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2440,
              "nodeType": "Block",
              "src": "27361:175:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2423,
                          "name": "nowTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2417,
                          "src": "27379:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 2424,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2415,
                            "src": "27389:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2684,
                          "src": "27389:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "27379:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f77206265666f72652072656e746564",
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27407:26:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        },
                        "value": "ReNFT::now before rented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        }
                      ],
                      "id": 2422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27371:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27371:63:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "27371:63:23"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2430,
                        "name": "nowTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "27463:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2431,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2415,
                          "src": "27473:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2432,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2684,
                        "src": "27473:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "27463:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2434,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2415,
                          "src": "27492:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2682,
                        "src": "27492:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2436,
                        "name": "SECONDS_IN_DAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "27515:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "27492:37:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27463:66:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2421,
                  "id": 2439,
                  "nodeType": "Return",
                  "src": "27444:85:23"
                }
              ]
            },
            "id": 2441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPastReturnDate",
            "nameLocation": "27247:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2415,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "27279:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "27264:22:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$2687_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2413,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2687,
                      "src": "27264:7:23"
                    },
                    "referencedDeclaration": 2687,
                    "src": "27264:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$2687_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2417,
                  "mutability": "mutable",
                  "name": "nowTime",
                  "nameLocation": "27296:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "27288:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27288:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27263:41:23"
            },
            "returnParameters": {
              "id": 2421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2441,
                  "src": "27351:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2419,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27351:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27350:6:23"
            },
            "scope": 2485,
            "src": "27238:298:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2459,
              "nodeType": "Block",
              "src": "27783:103:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2449,
                          "name": "newRentFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2443,
                          "src": "27801:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27814:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "27801:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a666565206578636565647320313030706374",
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27821:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        },
                        "value": "ReNFT::fee exceeds 100pct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        }
                      ],
                      "id": 2448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27793:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27793:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2454,
                  "nodeType": "ExpressionStatement",
                  "src": "27793:56:23"
                },
                {
                  "expression": {
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2455,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "27859:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2456,
                      "name": "newRentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2443,
                      "src": "27869:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27859:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2458,
                  "nodeType": "ExpressionStatement",
                  "src": "27859:20:23"
                }
              ]
            },
            "functionSelector": "76774ea3",
            "id": 2460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2446,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2445,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27773:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "27773:9:23"
              }
            ],
            "name": "setRentFee",
            "nameLocation": "27733:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "newRentFee",
                  "nameLocation": "27752:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2460,
                  "src": "27744:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27744:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27743:20:23"
            },
            "returnParameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27783:0:23"
            },
            "scope": 2485,
            "src": "27724:162:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2471,
              "nodeType": "Block",
              "src": "27967:45:23",
              "statements": [
                {
                  "expression": {
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2467,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "27977:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2468,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2462,
                      "src": "27991:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "27977:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "27977:28:23"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "id": 2472,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2465,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2464,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27957:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "27957:9:23"
              }
            ],
            "name": "setBeneficiary",
            "nameLocation": "27901:14:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2462,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "27932:14:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "27916:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27916:15:23",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27915:32:23"
            },
            "returnParameters": {
              "id": 2466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27967:0:23"
            },
            "scope": 2485,
            "src": "27892:120:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2483,
              "nodeType": "Block",
              "src": "28072:35:23",
              "statements": [
                {
                  "expression": {
                    "id": 2481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2479,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "28082:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2480,
                      "name": "newPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2474,
                      "src": "28091:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "28082:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2482,
                  "nodeType": "ExpressionStatement",
                  "src": "28082:18:23"
                }
              ]
            },
            "functionSelector": "16c38b3c",
            "id": 2484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2476,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "28062:9:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "28062:9:23"
              }
            ],
            "name": "setPaused",
            "nameLocation": "28027:9:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2474,
                  "mutability": "mutable",
                  "name": "newPaused",
                  "nameLocation": "28042:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 2484,
                  "src": "28037:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28037:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28036:16:23"
            },
            "returnParameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28072:0:23"
            },
            "scope": 2485,
            "src": "28018:89:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2486,
        "src": "2113:25996:23",
        "usedErrors": []
      }
    ],
    "src": "32:29356:23"
  },
  "bytecode": "6080604052600160038190556004556005805460ff1916905560006006553480156200002a57600080fd5b5060405162004b6038038062004b608339810160408190526200004d916200010f565b6200005883620000b1565b6200006382620000b1565b6200006e81620000b1565b600080546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556001805491909316911617905562000179565b6001600160a01b0381166200010c5760405162461bcd60e51b815260206004820152601360248201527f52654e46543a3a7a65726f206164647265737300000000000000000000000000604482015260640160405180910390fd5b50565b6000806000606084860312156200012557600080fd5b8351620001328162000163565b6020850151909350620001458162000163565b6040850151909250620001588162000163565b809150509250925092565b6001600160a01b03811681146200010c57600080fd5b6149d780620001896000396000f3fe6080604052600436106100f35760003560e01c806376774ea31161008a578063c9c4018311610059578063c9c4018314610315578063cbe55e5414610335578063f23a6e6114610348578063fe46b7cd1461037457600080fd5b806376774ea314610285578063937821a1146102a5578063bc197c81146102c5578063bf2b23ea146102f157600080fd5b80631c31f710116100c65780631c31f710146101b35780631cbb410f146101d3578063296c21b7146101f35780635c975abb1461026b57600080fd5b806301ffc9a7146100f857806314b5685c1461012d578063150b7a021461014f57806316c38b3c14610193575b600080fd5b34801561010457600080fd5b506101186101133660046143f9565b6103cf565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b5061014d6101483660046140ed565b610406565b005b34801561015b57600080fd5b5061017a61016a366004613f45565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610124565b34801561019f57600080fd5b5061014d6101ae3660046143bf565b610451565b3480156101bf57600080fd5b5061014d6101ce366004613e7b565b61048e565b3480156101df57600080fd5b5061014d6101ee3660046141b1565b6104da565b3480156101ff57600080fd5b5061021361020e366004614018565b61051b565b6040805160ff98891681526001600160a01b039097166020880152948716948601949094526001600160e01b0319909216606085015261ffff90811660808501521660a08301529190911660c082015260e001610124565b34801561027757600080fd5b506005546101189060ff1681565b34801561029157600080fd5b5061014d6102a0366004614414565b6105f1565b3480156102b157600080fd5b5061014d6102c03660046140ed565b610671565b3480156102d157600080fd5b5061017a6102e0366004613e98565b63bc197c8160e01b95945050505050565b3480156102fd57600080fd5b5061030760065481565b604051908152602001610124565b34801561032157600080fd5b5061014d61033036600461404d565b6106a7565b61014d6103433660046142cb565b61070e565b34801561035457600080fd5b5061017a610363366004613fb0565b63f23a6e6160e01b95945050505050565b34801561038057600080fd5b5061039461038f366004614018565b61074d565b604080516001600160a01b03909516855261ffff909316602085015260ff9091169183019190915263ffffffff166060820152608001610124565b60006001600160e01b03198216630271189760e51b148061040057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60055460ff16156104325760405162461bcd60e51b815260040161042990614688565b60405180910390fd5b61044a6107cb6104458787878787610d18565b610e9e565b5050505050565b6001546001600160a01b0316331461047b5760405162461bcd60e51b8152600401610429906146af565b6005805460ff1916911515919091179055565b6001546001600160a01b031633146104b85760405162461bcd60e51b8152600401610429906146af565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60055460ff16156104fd5760405162461bcd60e51b815260040161042990614688565b610512610fd361044589898989898989611578565b50505050505050565b6000806000806000806000808a8a8a60405160200161053c93929190614485565b60408051601f19818403018152918152815160209283012060008181526007909352912080549192509060ff16600181111561057a5761057a61492d565b81546001600160a01b036101008204169060ff600160a81b8204811691600160b01b810460e01b9161ffff600160d01b8304811692600160e01b810490911691600160f01b9091041660038111156105d4576105d461492d565b985098509850985098509850985050509397509397509397909450565b6001546001600160a01b0316331461061b5760405162461bcd60e51b8152600401610429906146af565b612710811061066c5760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a666565206578636565647320313030706374000000000000006044820152606401610429565b600655565b60055460ff16156106945760405162461bcd60e51b815260040161042990614688565b61044a6116a86104458787878787610d18565b60055460ff16156106ca5760405162461bcd60e51b815260040161042990614688565b610708611aa9610445868686866000604051908082528060200260200182016040528015610702578160200160208202803683370190505b50610d18565b50505050565b60055460ff16156107315760405162461bcd60e51b815260040161042990614688565b610745611e766104458888888888886125f8565b505050505050565b600080600080600087878760405160200161076a93929190614485565b60408051808303601f190181529181528151602092830120600090815260089092529020546001600160a01b03811699600160c81b820461ffff169950600160a01b820460ff169850600160a81b90910463ffffffff169650945050505050565b80515b8160200151811015610d1457600082606001518360000151815181106107f6576107f6614943565b60200260200101518360800151838151811061081457610814614943565b6020026020010151846101000151848151811061083357610833614943565b602002602001015160405160200161084d93929190614485565b6040516020818303038152906040528051906020012090506000836060015184600001518151811061088157610881614943565b60200260200101518460800151848151811061089f5761089f614943565b602002602001015185610120015185815181106108be576108be614943565b60200260200101516040516020016108d893929190614485565b60408051601f198184030181528282528051602091820120600086815260078352838120828252600890935283902060e08501909352815490945090926109d9918490829060ff1660018111156109315761093161492d565b60018111156109425761094261492d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b9091041660038111156109c0576109c061492d565b60038111156109d1576109d161492d565b90525061271a565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152610a3090334261279d565b815460ff166001811115610a4657610a4661492d565b86604001518681518110610a5c57610a5c614943565b60200260200101516001811115610a7557610a7561492d565b14610a925760405162461bcd60e51b8152600401610429906145b9565b81548154600160d01b90910461ffff908116600160c81b909204161115610af35760405162461bcd60e51b81526020600482015260156024820152742932a7232a1d1d31b934ba34b1b0b61032b93937b960591b6044820152606401610429565b8054600090610b0f90600160a81b900463ffffffff16426148b9565b6040805160e081019091528454919250610c30918590829060ff166001811115610b3b57610b3b61492d565b6001811115610b4c57610b4c61492d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b909104166003811115610bca57610bca61492d565b6003811115610bdb57610bdb61492d565b9052506040805160808101825285546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201528361284d565b81546000868152600760205260409020805461ffff600160c81b909304831692601c91610c66918591600160e01b90041661472c565b92506101000a81548161ffff021916908361ffff1602179055508661010001518681518110610c9757610c97614943565b60200260200101517f58855dd8908b14c6d7922d964418f37efd968bc6b9b857560870b14a898f916d42604051610cda919063ffffffff91909116815260200190565b60405180910390a2505050600090815260086020526040902080546001600160d81b03191690555080610d0c816148fc565b9150506107ce565b5050565b610d20613ad7565b604051806101a00160405280600081526020016001815260200187815260200186815260200185815260200160006001600160401b03811115610d6557610d65614959565b604051908082528060200260200182016040528015610d8e578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610dbf578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610df0578160200160208202803683370190505b50815260208101859052604081018490526060016000604051908082528060200260200182016040528015610e2f578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610e60578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015610e91578160200160208202803683370190505b5090529695505050505050565b600081606001515111610ee45760405162461bcd60e51b815260206004820152600e60248201526d52654e46543a3a6e6f206e66747360901b6044820152606401610429565b806060015151816020015114610fc6578060600151816020015181518110610f0e57610f0e614943565b60200260200101516001600160a01b03168160600151826000015181518110610f3957610f39614943565b60200260200101516001600160a01b0316148015610f89575060018160400151826020015181518110610f6e57610f6e614943565b60200260200101516001811115610f8757610f8761492d565b145b15610fa65760208101805190610f9e826148fc565b905250610ee4565b610fb3818363ffffffff16565b60208101805180835290610f9e826148fc565b610d14818363ffffffff16565b80515b816020015181101561153757610fec8282612af2565b6000826060015183600001518151811061100857611008614943565b60200260200101518360800151838151811061102657611026614943565b602002602001015160035460405160200161104393929190614485565b60408051601f198184030181528282528051602091820120600081815260079092529082902060e084019092528154909350909161113b918390829060ff1660018111156110935761109361492d565b60018111156110a4576110a461492d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b9091041660038111156111225761112261492d565b60038111156111335761113361492d565b905250612c68565b611173846101800151848151811061115557611155614943565b6020026020010151600381111561116e5761116e61492d565b612d21565b6000808560400151858151811061118c5761118c614943565b602002602001015160018111156111a5576111a561492d565b1490506040518060e00160405280866040015186815181106111c9576111c9614943565b602002602001015160018111156111e2576111e261492d565b8152602001336001600160a01b031681526020018660c00151868151811061120c5761120c614943565b602002602001015160ff1681526020018660e00151868151811061123257611232614943565b60200260200101516001600160e01b031916815260200182611271578660a00151868151811061126457611264614943565b6020026020010151611274565b60015b60ff168152602001826112a4578660a00151868151811061129757611297614943565b60200260200101516112a7565b60015b60ff1661ffff16815260200186610180015186815181106112ca576112ca614943565b602002602001015160038111156112e3576112e361492d565b9052600084815260076020526040902081518154829060ff1916600183818111156113105761131061492d565b02179055506020820151815460408401516060850151608086015160a0870151610100600160b01b03199094166101006001600160a01b039096169590950260ff60a81b191694909417600160a81b60ff909316929092029190911765ffffffffffff60b01b1916600160b01b60e09290921c9190910261ffff60d01b191617600160d01b61ffff938416021761ffff60e01b198116600160e01b9390921692909202908117835560c084015191839162ffffff60e01b1990911660ff60f01b1990911617600160f01b8360038111156113ec576113ec61492d565b02179055509050508460800151848151811061140a5761140a614943565b6020026020010151856060015186600001518151811061142c5761142c614943565b60200260200101516001600160a01b0316336001600160a01b03167f46e173c7568bb4f093e16923381dcba2a6b48f9cc9e688867965731218500ad3846003548a60c001518a8151811061148257611482614943565b60200260200101518b60e001518b815181106114a0576114a0614943565b6020026020010151886114d0578c60a001518c815181106114c3576114c3614943565b60200260200101516114d3565b60015b8d61018001518d815181106114ea576114ea614943565b602002602001015160405161150496959493929190614526565b60405180910390a46003805490600061151c836148fc565b9190505550505050808061152f906148fc565b915050610fd6565b506115758133306115578560800151866000015187602001516000612d74565b6115708660a00151876000015188602001516000612d74565b612e33565b50565b611580613ad7565b604051806101a00160405280600081526020016001815260200189815260200188815260200187815260200186815260200185815260200184815260200160006001600160401b038111156115d7576115d7614959565b604051908082528060200260200182016040528015611600578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015611631578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015611662578160200160208202803683370190505b5081526020016000604051908082528060200260200182016040528015611693578160200160208202803683370190505b50815260200192909252509695505050505050565b80515b8160200151811015610d1457600082606001518360000151815181106116d3576116d3614943565b6020026020010151836080015183815181106116f1576116f1614943565b6020026020010151846101000151848151811061171057611710614943565b602002602001015160405160200161172a93929190614485565b6040516020818303038152906040528051906020012090506000836060015184600001518151811061175e5761175e614943565b60200260200101518460800151848151811061177c5761177c614943565b6020026020010151856101200151858151811061179b5761179b614943565b60200260200101516040516020016117b593929190614485565b60408051601f198184030181528282528051602091820120600086815260078352838120828252600890935283902060e085019093528154909450909261180e918490829060ff1660018111156109315761093161492d565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff16606082015261186390612fb4565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201526118b9904261303a565b6040805160e0810190915282546119d791908490829060ff1660018111156118e3576118e361492d565b60018111156118f4576118f461492d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b9091041660038111156119725761197261492d565b60038111156119835761198361492d565b9052506040805160808101825284546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff166060820152613090565b85610120015185815181106119ee576119ee614943565b60200260200101517f4630b53a4335803b2a4f9c1ce896f4cadbf909907810e496eda17614483d7b9442604051611a31919063ffffffff91909116815260200190565b60405180910390a280548254611a5c9161ffff600160c81b909104811691600160e01b90041661472c565b825461ffff91909116600160e01b0261ffff60e01b199091161790915550600090815260086020526040902080546001600160d81b03191690555080611aa1816148fc565b9150506116ab565b80516020820151600091611abc916148b9565b6001600160401b03811115611ad357611ad3614959565b604051908082528060200260200182016040528015611afc578160200160208202803683370190505b5082519091506000905b8360200151811015611e3e5760008460600151856000015181518110611b2e57611b2e614943565b602002602001015185608001518381518110611b4c57611b4c614943565b60200260200101518661010001518481518110611b6b57611b6b614943565b6020026020010151604051602001611b8593929190614485565b60408051601f19818403018152918152815160209283012060008181526007909352912080549192509060ff166001811115611bc357611bc361492d565b86604001518481518110611bd957611bd9614943565b60200260200101516001811115611bf257611bf261492d565b14611c0f5760405162461bcd60e51b8152600401610429906145b9565b8054600160d01b810461ffff908116600160e01b9092041614611c6d5760405162461bcd60e51b815260206004820152601660248201527514995391950e8e9858dd1a5d995b1e481c995b9d195960521b6044820152606401610429565b6040805160e081019091528154611c9791908390829060ff1660018111156109315761093161492d565b6040805160e081019091528154611d6a91908390829060ff166001811115611cc157611cc161492d565b6001811115611cd257611cd261492d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b909104166003811115611d5057611d5061492d565b6003811115611d6157611d6161492d565b90525033613242565b80548651600160d01b90910461ffff16908690611d8790866148b9565b81518110611d9757611d97614943565b60209081029190910101528054610100870151805160ff90921695509084908110611dc457611dc4614943565b60200260200101517fd0234bc8dd7e933f60cbc1e90fc139a8a9683af1cb92743607dafb9dfb70059b42604051611e07919063ffffffff91909116815260200190565b60405180910390a250600090815260076020526040902080546001600160f81b031916905580611e36816148fc565b915050611b06565b50611e71833033611e5e8760800151886000015189602001516000612d74565b8751602089015161157091899181612d74565b505050565b80515b8160200151811015610d145760008260600151836000015181518110611ea157611ea1614943565b602002602001015183608001518381518110611ebf57611ebf614943565b60200260200101518461010001518481518110611ede57611ede614943565b6020026020010151604051602001611ef893929190614485565b60405160208183030381529060405280519060200120905060008360600151846000015181518110611f2c57611f2c614943565b602002602001015184608001518481518110611f4a57611f4a614943565b6020026020010151600454604051602001611f6793929190614485565b60408051601f198184030181528282528051602091820120600086815260078352838120828252600890935283902060e0850190935281549094509092611fc0918490829060ff1660018111156109315761093161492d565b6040805160808101825282546001600160a01b0381168252600160a01b810460ff166020830152600160a81b810463ffffffff1692820192909252600160c81b90910461ffff1660608201526120159061329b565b6040805160e0810190915282546120ea91908490829060ff16600181111561203f5761203f61492d565b60018111156120505761205061492d565b815281546001600160a01b03610100820416602083015260ff600160a81b8204811660408401526001600160e01b0319600160b01b830460e01b16606084015261ffff600160d01b830481166080850152600160e01b83041660a084015260c090920191600160f01b9091041660038111156120ce576120ce61492d565b60038111156120df576120df61492d565b90525087873361334e565b815460ff1660018111156121005761210061492d565b8660400151868151811061211657612116614943565b6020026020010151600181111561212f5761212f61492d565b1461214c5760405162461bcd60e51b8152600401610429906145b9565b81546101608701518051600160e01b90920461ffff16918790811061217357612173614943565b602002602001015111156121c95760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a696e76616c69642072656e7420616d6f756e740000000000006044820152606401610429565b8154600090600160f01b900460ff1660038111156121e9576121e961492d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b15801561223557600080fd5b505afa158015612249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226d9190613e5e565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122aa57600080fd5b505afa1580156122be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e2919061442d565b60ff16905060006122f482600a6147cf565b865490915060009061231090600160b01b900460e01b836134c2565b8b61014001518b8151811061232757612327614943565b602002602001015160ff168c61016001518c8151811061234957612349614943565b602002602001015161235b9190614877565b6123659190614877565b9050600081116123875760405162461bcd60e51b815260040161042990614627565b61239c6001600160a01b038516333084613551565b50506040518060800160405280336001600160a01b031681526020018a61014001518a815181106123cf576123cf614943565b602002602001015160ff1681526020014263ffffffff1681526020018a61016001518a8151811061240257612402614943565b60209081029190910181015160ff90811690925260008981526008825260409081902084518154938601519286015160609096015161ffff16600160c81b0261ffff60c81b1963ffffffff909716600160a81b029690961665ffffffffffff60a81b1993909516600160a01b026001600160a81b03199094166001600160a01b03909116179290921716919091179190911790556101608901518051899081106124ae576124ae614943565b602002602001015160ff1660076000898152602001908152602001600020600001601c8282829054906101000a900461ffff166124eb9190614896565b92506101000a81548161ffff021916908361ffff160217905550600454896101000151898151811061251f5761251f614943565b6020026020010151336001600160a01b03167f61e1a1e6f89eaba4ba0119b0023bd32b1bb0412ab96ccd8d0588a3e98a0976318c61016001518c8151811061256957612569614943565b60200260200101518d61014001518d8151811061258857612588614943565b6020908102919091018101518a546040805160ff95861681529490921692840192909252600160a81b90910463ffffffff169082015260600160405180910390a4600480549060006125d9836148fc565b91905055505050505050505080806125f0906148fc565b915050611e79565b612600613ad7565b604051806101a00160405280600081526020016001815260200188815260200187815260200186815260200160006001600160401b0381111561264557612645614959565b60405190808252806020026020018201604052801561266e578160200160208202803683370190505b508152602001600060405190808252806020026020018201604052801561269f578160200160208202803683370190505b50815260200160006040519080825280602002602001820160405280156126d0578160200160208202803683370190505b5081526020808201969096526040805160008082528189018352828401919091526060830196909652608082019490945283519485529484019092525060a0909201529392505050565b61272781602001516135bc565b604081015160ff166127725760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a6475726174696f6e207a65726f60601b6044820152606401610429565b60608101516001600160e01b0319166115755760405162461bcd60e51b815260040161042990614627565b816001600160a01b031683600001516001600160a01b0316146127f65760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103932b73a32b960791b6044820152606401610429565b6128008382613608565b15611e715760405162461bcd60e51b815260206004820152601760248201527f52654e46543a3a706173742072657475726e20646174650000000000000000006044820152606401610429565b60008360c0015160038111156128655761286561492d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b1580156128b157600080fd5b505afa1580156128c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e99190613e5e565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561292657600080fd5b505afa15801561293a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061295e919061442d565b60ff169050600061297082600a6147cf565b905060006129828860600151836134c2565b90506000876020015160ff1682896060015161ffff166129a29190614877565b6129ac9190614877565b90506000620151806129be848a614877565b6129c8919061476a565b905060008211612a265760405162461bcd60e51b815260206004820152602360248201527f52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a60448201526265726f60e81b6064820152608401610429565b60008111612a765760405162461bcd60e51b815260206004820152601d60248201527f52654e46543a3a6c656e646572207061796d656e74206973207a65726f0000006044820152606401610429565b6000612a8282846148b9565b9050600654600014612aae576000612a9e838d60c00151613696565b9050612aaa81846148b9565b9250505b60208b0151612ac8906001600160a01b0389169084613773565b8015612ae5578951612ae5906001600160a01b0389169083613773565b5050505050505050505050565b60008260a001518281518110612b0a57612b0a614943565b602002602001015111612b5f5760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a6c656e6420616d6f756e74206973207a65726f0000000000006044820152606401610429565b60ff80168260a001518281518110612b7957612b79614943565b60200260200101511115612b9f5760405162461bcd60e51b81526004016104299061465e565b60008260c001518281518110612bb757612bb7614943565b602002602001015160ff1611612bdf5760405162461bcd60e51b8152600401610429906145f0565b60ff80168260c001518281518110612bf957612bf9614943565b602002602001015160ff161115612c225760405162461bcd60e51b81526004016104299061465e565b60008260e001518281518110612c3a57612c3a614943565b602002602001015160e01c63ffffffff1611610d145760405162461bcd60e51b815260040161042990614627565b612c7581602001516137a3565b604081015160ff1615612cc55760405162461bcd60e51b815260206004820152601860248201527752654e46543a3a6475726174696f6e206e6f74207a65726f60401b6044820152606401610429565b60608101516001600160e01b031916156115755760405162461bcd60e51b815260206004820152601a60248201527f52654e46543a3a72656e74207072696365206e6f74207a65726f0000000000006044820152606401610429565b60008160ff16116115755760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a746f6b656e2069732073656e74696e656c00000000000000006044820152606401610429565b6060612d8084846148b9565b6001600160401b03811115612d9757612d97614959565b604051908082528060200260200182016040528015612dc0578160200160208202803683370190505b509050835b83811015612e2a5785612dd884836148b9565b81518110612de857612de8614943565b6020026020010151828683612dfd91906148b9565b81518110612e0d57612e0d614943565b602090810291909101015280612e22816148fc565b915050612dc5565b50949350505050565b60006040860151865181518110612e4c57612e4c614943565b60200260200101516001811115612e6557612e6561492d565b1415612f2b576060850151855181518110612e8257612e82614943565b60200260200101516001600160a01b03166323b872dd85858860800151896000015181518110612eb457612eb4614943565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015612f0e57600080fd5b505af1158015612f22573d6000803e3d6000fd5b5050505061044a565b6060850151855181518110612f4257612f42614943565b60200260200101516001600160a01b0316632eb2c2d6858585856040518563ffffffff1660e01b8152600401612f7b94939291906144cb565b600060405180830381600087803b158015612f9557600080fd5b505af1158015612fa9573d6000803e3d6000fd5b505050505050505050565b8051612fbf906135bc565b602081015160ff16612fe35760405162461bcd60e51b8152600401610429906145f0565b604081015163ffffffff166115755760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a72656e746564206174206973207a65726f00000000000000006044820152606401610429565b6130448282613608565b610d145760405162461bcd60e51b815260206004820152601d60248201527f52654e46543a3a72657475726e2064617465206e6f74207061737365640000006044820152606401610429565b60008260c0015160038111156130a8576130a861492d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b1580156130f457600080fd5b505afa158015613108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061312c9190613e5e565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561316957600080fd5b505afa15801561317d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131a1919061442d565b60ff16905060006131b382600a6147cf565b905060006131c58760600151836134c2565b90506000866020015160ff1682886060015161ffff166131e59190614877565b6131ef9190614877565b9050600060065460001461321e5761321b828860ff1660038111156132165761321661492d565b613696565b90505b6020890151612fa99061323183856148b9565b6001600160a01b0389169190613773565b806001600160a01b031682602001516001600160a01b031614610d145760405162461bcd60e51b81526020600482015260116024820152702932a7232a1d1d3737ba103632b73232b960791b6044820152606401610429565b80516132a6906137a3565b602081015160ff16156132f65760405162461bcd60e51b815260206004820152601860248201527752654e46543a3a6475726174696f6e206e6f74207a65726f60401b6044820152606401610429565b604081015163ffffffff16156115755760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a72656e746564206174206e6f74207a65726f000000000000006044820152606401610429565b83602001516001600160a01b0316816001600160a01b031614156133b45760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a63616e742072656e74206f776e206e667400000000000000006044820152606401610429565b60ff801683610140015183815181106133cf576133cf614943565b602002602001015160ff1611156133f85760405162461bcd60e51b81526004016104299061465e565b6000836101400151838151811061341157613411614943565b602002602001015160ff16116134395760405162461bcd60e51b8152600401610429906145f0565b836040015160ff16836101400151838151811061345857613458614943565b602002602001015160ff1611156107085760405162461bcd60e51b815260206004820152602860248201527f52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6044820152670deeecac840dac2f60c31b6064820152608401610429565b60006134ce83836137fa565b60f083901c61ffff60e085901c1660006134ea6127108661476a565b905061270f8361ffff1611156135005761270f92505b61270f8261ffff1611156135145761270f91505b60006135248661ffff8616614877565b905060006135368361ffff8616614877565b905060006135448284614752565b9998505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107089085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261388b565b6001600160a01b0381166115755760405162461bcd60e51b815260206004820152601360248201527252654e46543a3a7a65726f206164647265737360681b6044820152606401610429565b6000826040015163ffffffff1682116136635760405162461bcd60e51b815260206004820152601860248201527f52654e46543a3a6e6f77206265666f72652072656e74656400000000000000006044820152606401610429565b62015180836020015160ff166136799190614877565b604084015161368e9063ffffffff16846148b9565b119392505050565b6000600654836136a69190614877565b90506136b46127108261476a565b905060008260038111156136ca576136ca61492d565b6000805460405163c6ee427f60e01b815260ff8416600482015292935090916001600160a01b039091169063c6ee427f9060240160206040518083038186803b15801561371657600080fd5b505afa15801561372a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061374e9190613e5e565b60025490915061376b906001600160a01b03808416911685613773565b505092915050565b6040516001600160a01b038316602482015260448101829052611e7190849063a9059cbb60e01b90606401613585565b6001600160a01b038116156115755760405162461bcd60e51b815260206004820152601960248201527f52654e46543a3a6e6f742061207a65726f2061646472657373000000000000006044820152606401610429565b60e082901c6138425760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a696e76616c696420707269636560601b6044820152606401610429565b612710811015610d145760405162461bcd60e51b815260206004820152601460248201527352654e46543a3a696e76616c6964207363616c6560601b6044820152606401610429565b60006138e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661395d9092919063ffffffff16565b805190915015611e7157808060200190518101906138fe91906143dc565b611e715760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610429565b606061396c8484600085613976565b90505b9392505050565b6060824710156139d75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610429565b843b613a255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610429565b600080866001600160a01b03168587604051613a4191906144af565b60006040518083038185875af1925050503d8060008114613a7e576040519150601f19603f3d011682016040523d82523d6000602084013e613a83565b606091505b5091509150613a93828286613a9e565b979650505050505050565b60608315613aad57508161396f565b825115613abd5782518084602001fd5b8160405162461bcd60e51b81526004016104299190614586565b604051806101a00160405280600081526020016000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600082601f830112613b5057600080fd5b81356020613b65613b6083614709565b6146d9565b80838252828201915082860187848660051b8901011115613b8557600080fd5b60005b85811015613bad578135613b9b8161496f565b84529284019290840190600101613b88565b5090979650505050505050565b600082601f830112613bcb57600080fd5b81356020613bdb613b6083614709565b80838252828201915082860187848660051b8901011115613bfb57600080fd5b60005b85811015613bad57613c0f82613dd2565b84529284019290840190600101613bfe565b600082601f830112613c3257600080fd5b81356020613c42613b6083614709565b80838252828201915082860187848660051b8901011115613c6257600080fd5b6000805b86811015613c8e57823560028110613c7c578283fd5b85529385019391850191600101613c66565b509198975050505050505050565b600082601f830112613cad57600080fd5b81356020613cbd613b6083614709565b80838252828201915082860187848660051b8901011115613cdd57600080fd5b6000805b86811015613c8e57823560048110613cf7578283fd5b85529385019391850191600101613ce1565b600082601f830112613d1a57600080fd5b81356020613d2a613b6083614709565b80838252828201915082860187848660051b8901011115613d4a57600080fd5b60005b85811015613bad57813584529284019290840190600101613d4d565b600082601f830112613d7a57600080fd5b81356020613d8a613b6083614709565b80838252828201915082860187848660051b8901011115613daa57600080fd5b60005b85811015613bad578135613dc081614992565b84529284019290840190600101613dad565b80356001600160e01b031981168114613dea57600080fd5b919050565b600082601f830112613e0057600080fd5b81356001600160401b03811115613e1957613e19614959565b613e2c601f8201601f19166020016146d9565b818152846020838601011115613e4157600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215613e7057600080fd5b815161396f8161496f565b600060208284031215613e8d57600080fd5b813561396f8161496f565b600080600080600060a08688031215613eb057600080fd5b8535613ebb8161496f565b94506020860135613ecb8161496f565b935060408601356001600160401b0380821115613ee757600080fd5b613ef389838a01613d09565b94506060880135915080821115613f0957600080fd5b613f1589838a01613d09565b93506080880135915080821115613f2b57600080fd5b50613f3888828901613def565b9150509295509295909350565b60008060008060808587031215613f5b57600080fd5b8435613f668161496f565b93506020850135613f768161496f565b92506040850135915060608501356001600160401b03811115613f9857600080fd5b613fa487828801613def565b91505092959194509250565b600080600080600060a08688031215613fc857600080fd5b8535613fd38161496f565b94506020860135613fe38161496f565b9350604086013592506060860135915060808601356001600160401b0381111561400c57600080fd5b613f3888828901613def565b60008060006060848603121561402d57600080fd5b83356140388161496f565b95602085013595506040909401359392505050565b6000806000806080858703121561406357600080fd5b84356001600160401b038082111561407a57600080fd5b61408688838901613c21565b9550602087013591508082111561409c57600080fd5b6140a888838901613b3f565b945060408701359150808211156140be57600080fd5b6140ca88838901613d09565b935060608701359150808211156140e057600080fd5b50613fa487828801613d09565b600080600080600060a0868803121561410557600080fd5b85356001600160401b038082111561411c57600080fd5b61412889838a01613c21565b9650602088013591508082111561413e57600080fd5b61414a89838a01613b3f565b9550604088013591508082111561416057600080fd5b61416c89838a01613d09565b9450606088013591508082111561418257600080fd5b61418e89838a01613d09565b935060808801359150808211156141a457600080fd5b50613f3888828901613d09565b600080600080600080600060e0888a0312156141cc57600080fd5b87356001600160401b03808211156141e357600080fd5b6141ef8b838c01613c21565b985060208a013591508082111561420557600080fd5b6142118b838c01613b3f565b975060408a013591508082111561422757600080fd5b6142338b838c01613d09565b965060608a013591508082111561424957600080fd5b6142558b838c01613d09565b955060808a013591508082111561426b57600080fd5b6142778b838c01613d69565b945060a08a013591508082111561428d57600080fd5b6142998b838c01613bba565b935060c08a01359150808211156142af57600080fd5b506142bc8a828b01613c9c565b91505092959891949750929550565b60008060008060008060c087890312156142e457600080fd5b86356001600160401b03808211156142fb57600080fd5b6143078a838b01613c21565b9750602089013591508082111561431d57600080fd5b6143298a838b01613b3f565b9650604089013591508082111561433f57600080fd5b61434b8a838b01613d09565b9550606089013591508082111561436157600080fd5b61436d8a838b01613d09565b9450608089013591508082111561438357600080fd5b61438f8a838b01613d69565b935060a08901359150808211156143a557600080fd5b506143b289828a01613d09565b9150509295509295509295565b6000602082840312156143d157600080fd5b813561396f81614984565b6000602082840312156143ee57600080fd5b815161396f81614984565b60006020828403121561440b57600080fd5b61396f82613dd2565b60006020828403121561442657600080fd5b5035919050565b60006020828403121561443f57600080fd5b815161396f81614992565b600081518084526020808501945080840160005b8381101561447a5781518752958201959082019060010161445e565b509495945050505050565b60609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b600082516144c18184602087016148d0565b9190910192915050565b6001600160a01b0385811682528416602082015260a0604082018190526000906144f79083018561444a565b8281036060840152614509818561444a565b838103608090940193909352505060008152602001949350505050565b86151581526020810186905260ff85811660408301526001600160e01b0319851660608301528316608082015260c081016004831061457557634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b60208152600082518060208401526145a58160408501602087016148d0565b601f01601f19169190910160400192915050565b6020808252601b908201527f52654e46543a3a696e76616c6964206e6674207374616e646172640000000000604082015260600190565b60208082526017908201527f52654e46543a3a6475726174696f6e206973207a65726f000000000000000000604082015260600190565b60208082526019908201527f52654e46543a3a72656e74207072696365206973207a65726f00000000000000604082015260600190565b60208082526010908201526f0a4ca9c8ca87474dcdee840ead2dce8760831b604082015260600190565b6020808252600d908201526c14995391950e8e9c185d5cd959609a1b604082015260600190565b60208082526010908201526f2932a7232a1d1d3737ba1030b236b4b760811b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561470157614701614959565b604052919050565b60006001600160401b0382111561472257614722614959565b5060051b60200190565b600061ffff80831681851680830382111561474957614749614917565b01949350505050565b6000821982111561476557614765614917565b500190565b60008261478757634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156147c75781600019048211156147ad576147ad614917565b808516156147ba57918102915b93841c9390800290614791565b509250929050565b600061396f83836000826147e557506001610400565b816147f257506000610400565b816001811461480857600281146148125761482e565b6001915050610400565b60ff84111561482357614823614917565b50506001821b610400565b5060208310610133831016604e8410600b8410161715614851575081810a610400565b61485b838361478c565b806000190482111561486f5761486f614917565b029392505050565b600081600019048311821515161561489157614891614917565b500290565b600061ffff838116908316818110156148b1576148b1614917565b039392505050565b6000828210156148cb576148cb614917565b500390565b60005b838110156148eb5781810151838201526020016148d3565b838111156107085750506000910152565b600060001982141561491057614910614917565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461157557600080fd5b801515811461157557600080fd5b60ff8116811461157557600080fdfea264697066735822122030db94195e83cee8207f524a11f345e543f934668a9c30364de1bfcc2d7fcf9064736f6c63430008070033",
  "bytecodeSha1": "0c5c017b09a204beaad13db76e4449002dac5d5e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "10": {
        "SafeERC20._callOptionalReturn": {
          "177": [
            3668,
            3689,
            false
          ],
          "178": [
            3752,
            3782,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "17": {},
      "18": {
        "Address.functionCallWithValue": {
          "174": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "175": [
            7335,
            7342,
            false
          ],
          "176": [
            7476,
            7497,
            false
          ]
        }
      },
      "19": {},
      "2": {},
      "21": {},
      "22": {},
      "23": {
        "Registry.bundleCall": {
          "131": [
            14829,
            14853,
            true
          ]
        },
        "Registry.distributeClaimPayment": {
          "160": [
            17496,
            17508,
            false
          ]
        },
        "Registry.distributePayments": {
          "144": [
            16352,
            16370,
            true
          ],
          "145": [
            16428,
            16445,
            true
          ],
          "146": [
            16557,
            16569,
            false
          ],
          "147": [
            16787,
            16804,
            false
          ]
        },
        "Registry.ensureIsClaimable": {
          "159": [
            27129,
            27170,
            true
          ]
        },
        "Registry.ensureIsLendable": {
          "148": [
            25202,
            25222,
            true
          ],
          "149": [
            25271,
            25306,
            true
          ],
          "150": [
            25345,
            25370,
            true
          ],
          "151": [
            25416,
            25456,
            true
          ],
          "152": [
            25495,
            25527,
            true
          ]
        },
        "Registry.ensureIsNotNull": {
          "140": [
            24445,
            24473,
            true
          ],
          "141": [
            24516,
            24543,
            true
          ],
          "157": [
            24980,
            25005,
            true
          ],
          "158": [
            25051,
            25072,
            true
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "170": [
            23854,
            23872,
            true
          ]
        },
        "Registry.ensureIsNull": {
          "153": [
            24167,
            24195,
            true
          ],
          "154": [
            24242,
            24269,
            true
          ],
          "162": [
            24712,
            24737,
            true
          ],
          "163": [
            24784,
            24805,
            true
          ]
        },
        "Registry.ensureIsRentable": {
          "164": [
            25739,
            25773,
            true
          ],
          "165": [
            25820,
            25857,
            true
          ],
          "166": [
            25896,
            25918,
            true
          ],
          "167": [
            25977,
            26022,
            true
          ]
        },
        "Registry.ensureIsReturnable": {
          "142": [
            26257,
            26291,
            true
          ],
          "143": [
            26344,
            26386,
            true
          ]
        },
        "Registry.ensureIsStoppable": {
          "161": [
            26569,
            26603,
            true
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "173": [
            26791,
            26805,
            true
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "172": [
            23980,
            23998,
            true
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "155": [
            26923,
            26936,
            true
          ]
        },
        "Registry.handleLend": {
          "132": [
            6975,
            6980,
            true
          ],
          "133": [
            7045,
            7050,
            true
          ],
          "134": [
            7422,
            7427,
            true
          ]
        },
        "Registry.handleRent": {
          "137": [
            10162,
            10202,
            true
          ],
          "138": [
            10302,
            10345,
            true
          ],
          "139": [
            10855,
            10868,
            true
          ]
        },
        "Registry.handleStopLend": {
          "135": [
            8371,
            8411,
            true
          ],
          "136": [
            8600,
            8645,
            true
          ]
        },
        "Registry.handleStopRent": {
          "129": [
            12657,
            12697,
            true
          ],
          "130": [
            12797,
            12837,
            true
          ]
        },
        "Registry.isPastReturnDate": {
          "171": [
            27379,
            27405,
            true
          ]
        },
        "Registry.safeTransfer": {
          "156": [
            17931,
            17984,
            false
          ]
        },
        "Registry.setRentFee": {
          "128": [
            27801,
            27819,
            true
          ]
        },
        "Registry.unpackPrice": {
          "168": [
            22995,
            23007,
            false
          ],
          "169": [
            23059,
            23073,
            false
          ]
        }
      },
      "25": {},
      "26": {},
      "3": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "10": {
        "SafeERC20._callOptionalReturn": {
          "121": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "117": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "110": [
            983,
            1079
          ]
        }
      },
      "12": {},
      "13": {},
      "17": {},
      "18": {
        "Address.functionCall": {
          "122": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "123": [
            4737,
            4818
          ],
          "124": [
            4828,
            4888
          ],
          "125": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "126": [
            7358,
            7375
          ],
          "127": [
            7802,
            7822
          ]
        }
      },
      "19": {},
      "2": {},
      "21": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "22": {},
      "23": {
        "Registry.bundleCall": {
          "23": [
            14821,
            14872
          ],
          "24": [
            15119,
            15129
          ],
          "25": [
            15168,
            15179
          ],
          "26": [
            15197,
            15215
          ],
          "27": [
            15233,
            15243
          ],
          "28": [
            15277,
            15288
          ]
        },
        "Registry.claimRent": {
          "9": [
            5638,
            5873
          ]
        },
        "Registry.createActionCallData": {
          "22": [
            22149,
            22666
          ]
        },
        "Registry.createLendCallData": {
          "37": [
            20499,
            21003
          ]
        },
        "Registry.createRentCallData": {
          "68": [
            21336,
            21851
          ]
        },
        "Registry.distributeClaimPayment": {
          "97": [
            17524,
            17638
          ],
          "98": [
            17658,
            17727
          ]
        },
        "Registry.distributePayments": {
          "74": [
            16344,
            16410
          ],
          "75": [
            16420,
            16479
          ],
          "76": [
            16662,
            16687
          ],
          "77": [
            16707,
            16773
          ],
          "78": [
            16820,
            16886
          ]
        },
        "Registry.ensureIsClaimable": {
          "96": [
            27108,
            27225
          ]
        },
        "Registry.ensureIsLendable": {
          "79": [
            25194,
            25253
          ],
          "80": [
            25263,
            25327
          ],
          "81": [
            25337,
            25398
          ],
          "82": [
            25408,
            25477
          ],
          "83": [
            25487,
            25557
          ]
        },
        "Registry.ensureIsNotNull": {
          "69": [
            24385,
            24427
          ],
          "70": [
            24437,
            24498
          ],
          "71": [
            24508,
            24573
          ],
          "93": [
            24920,
            24962
          ],
          "94": [
            24972,
            25033
          ],
          "95": [
            25043,
            25101
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "111": [
            23846,
            23896
          ]
        },
        "Registry.ensureIsNull": {
          "84": [
            24110,
            24149
          ],
          "85": [
            24159,
            24224
          ],
          "86": [
            24234,
            24300
          ],
          "100": [
            24655,
            24694
          ],
          "101": [
            24704,
            24766
          ],
          "102": [
            24776,
            24835
          ]
        },
        "Registry.ensureIsRentable": {
          "103": [
            25731,
            25802
          ],
          "104": [
            25812,
            25878
          ],
          "105": [
            25888,
            25946
          ],
          "106": [
            25956,
            26088
          ]
        },
        "Registry.ensureIsReturnable": {
          "72": [
            26249,
            26313
          ],
          "73": [
            26323,
            26435
          ]
        },
        "Registry.ensureIsStoppable": {
          "99": [
            26561,
            26625
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "119": [
            26723,
            26773
          ],
          "120": [
            26783,
            26830
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "118": [
            23972,
            24028
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "87": [
            26915,
            26965
          ]
        },
        "Registry.getLending": {
          "6": [
            19051,
            19326
          ]
        },
        "Registry.getRenting": {
          "12": [
            19776,
            19924
          ]
        },
        "Registry.handleClaimRent": {
          "38": [
            14016,
            14040
          ],
          "39": [
            14054,
            14078
          ],
          "40": [
            14092,
            14135
          ],
          "41": [
            14149,
            14189
          ],
          "42": [
            14203,
            14317
          ],
          "43": [
            14331,
            14433
          ],
          "44": [
            14447,
            14481
          ],
          "45": [
            13377,
            13380
          ]
        },
        "Registry.handleLend": {
          "29": [
            6195,
            6218
          ],
          "30": [
            6522,
            6543
          ],
          "31": [
            6557,
            6606
          ],
          "32": [
            6694,
            7145
          ],
          "33": [
            7159,
            7507
          ],
          "34": [
            7521,
            7532
          ],
          "35": [
            6176,
            6179
          ],
          "36": [
            7552,
            7756
          ]
        },
        "Registry.handleRent": {
          "56": [
            10006,
            10030
          ],
          "57": [
            10044,
            10065
          ],
          "58": [
            10079,
            10123
          ],
          "59": [
            10137,
            10263
          ],
          "60": [
            10277,
            10405
          ],
          "61": [
            10847,
            10898
          ],
          "62": [
            10916,
            11068
          ],
          "63": [
            11096,
            11365
          ],
          "64": [
            11379,
            11479
          ],
          "65": [
            11493,
            11725
          ],
          "66": [
            11739,
            11750
          ],
          "67": [
            9373,
            9376
          ]
        },
        "Registry.handleStopLend": {
          "46": [
            8346,
            8472
          ],
          "47": [
            8575,
            8701
          ],
          "48": [
            8715,
            8739
          ],
          "49": [
            8753,
            8791
          ],
          "50": [
            8805,
            8850
          ],
          "51": [
            8864,
            8897
          ],
          "52": [
            8911,
            8976
          ],
          "53": [
            8990,
            9024
          ],
          "54": [
            8027,
            8030
          ],
          "55": [
            9044,
            9252
          ]
        },
        "Registry.handleStopRent": {
          "13": [
            12524,
            12548
          ],
          "14": [
            12562,
            12618
          ],
          "15": [
            12632,
            12758
          ],
          "16": [
            12772,
            12892
          ],
          "17": [
            12986,
            13045
          ],
          "18": [
            13059,
            13124
          ],
          "19": [
            13138,
            13203
          ],
          "20": [
            13217,
            13251
          ],
          "21": [
            11885,
            11888
          ]
        },
        "Registry.isPastReturnDate": {
          "112": [
            27371,
            27434
          ],
          "113": [
            27444,
            27529
          ]
        },
        "Registry.lend": {
          "5": [
            3518,
            3813
          ]
        },
        "Registry.rent": {
          "11": [
            4601,
            4859
          ]
        },
        "Registry.safeTransfer": {
          "91": [
            18000,
            18137
          ],
          "92": [
            18168,
            18351
          ]
        },
        "Registry.setBeneficiary": {
          "4": [
            27977,
            28005
          ]
        },
        "Registry.setPaused": {
          "3": [
            28082,
            28100
          ]
        },
        "Registry.setRentFee": {
          "7": [
            27793,
            27849
          ],
          "8": [
            27859,
            27879
          ]
        },
        "Registry.sliceArr": {
          "88": [
            23445,
            23477
          ],
          "89": [
            23541,
            23575
          ],
          "90": [
            23522,
            23525
          ]
        },
        "Registry.stopLend": {
          "10": [
            4048,
            4288
          ]
        },
        "Registry.stopRent": {
          "2": [
            5131,
            5365
          ]
        },
        "Registry.takeFee": {
          "114": [
            15432,
            15455
          ],
          "115": [
            15465,
            15477
          ],
          "116": [
            15613,
            15652
          ]
        },
        "Registry.unpackPrice": {
          "107": [
            22798,
            22835
          ],
          "108": [
            23023,
            23035
          ],
          "109": [
            23089,
            23103
          ]
        }
      },
      "25": {},
      "26": {},
      "3": {},
      "5": {},
      "6": {
        "ERC1155Receiver.supportsInterface": {
          "0": [
            430,
            526
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721Receiver",
    "IRegistry",
    "IResolver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "2113:25996:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:221:6;;;;;;;;;;-1:-1:-1;312:221:6;;;;;:::i;:::-;;:::i;:::-;;;18644:14:31;;18637:22;18619:41;;18607:2;18592:18;312:221:6;;;;;;;;4872:500:23;;;;;;;;;;-1:-1:-1;4872:500:23;;;;;:::i;:::-;;:::i;:::-;;517:200:17;;;;;;;;;;-1:-1:-1;517:200:17;;;;;:::i;:::-;-1:-1:-1;;;517:200:17;;;;;;;;;;-1:-1:-1;;;;;;19591:33:31;;;19573:52;;19561:2;19546:18;517:200:17;19429:202:31;28018:89:23;;;;;;;;;;-1:-1:-1;28018:89:23;;;;;:::i;:::-;;:::i;27892:120::-;;;;;;;;;;-1:-1:-1;27892:120:23;;;;;:::i;:::-;;:::i;3166:654::-;;;;;;;;;;-1:-1:-1;3166:654:23;;;;;:::i;:::-;;:::i;18556:777::-;;;;;;;;;;-1:-1:-1;18556:777:23;;;;;:::i;:::-;;:::i;:::-;;;;33093:4:31;33081:17;;;33063:36;;-1:-1:-1;;;;;33135:32:31;;;33130:2;33115:18;;33108:60;33204:17;;;33184:18;;;33177:45;;;;-1:-1:-1;;;;;;33258:33:31;;;33253:2;33238:18;;33231:61;33311:6;33354:15;;;33348:3;33333:19;;33326:44;33407:15;33155:3;33386:19;;33379:44;33460:17;;;;33454:3;33439:19;;33432:46;33050:3;33035:19;18556:777:23;32766:718:31;2398:26:23;;;;;;;;;;-1:-1:-1;2398:26:23;;;;;;;;27724:162;;;;;;;;;;-1:-1:-1;27724:162:23;;;;;:::i;:::-;;:::i;5378:502::-;;;;;;;;;;-1:-1:-1;5378:502:23;;;;;:::i;:::-;;:::i;404:247:5:-;;;;;;;;;;-1:-1:-1;404:247:5;;;;;:::i;:::-;-1:-1:-1;;;404:247:5;;;;;;;;2430:26:23;;;;;;;;;;;;;;;;;;;32344:25:31;;;32332:2;32317:18;2430:26:23;32198:177:31;3826:469:23;;;;;;;;;;-1:-1:-1;3826:469:23;;;;;:::i;:::-;;:::i;4301:565::-;;;;;;:::i;:::-;;:::i;179:219:5:-;;;;;;;;;;-1:-1:-1;179:219:5;;;;;:::i;:::-;-1:-1:-1;;;179:219:5;;;;;;;;19339:592:23;;;;;;;;;;-1:-1:-1;19339:592:23;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;17986:32:31;;;17968:51;;18067:6;18055:19;;;18050:2;18035:18;;18028:47;18123:4;18111:17;;;18091:18;;;18084:45;;;;18177:10;18165:23;18160:2;18145:18;;18138:51;17955:3;17940:19;19339:592:23;17745:450:31;312:221:6;414:4;-1:-1:-1;;;;;;437:49:6;;-1:-1:-1;;;437:49:6;;:89;;-1:-1:-1;;;;;;;;;;871:40:21;;;490:36:6;430:96;312:221;-1:-1:-1;;312:221:6:o;4872:500:23:-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:23;;;;;;;:::i;:::-;;;;;;;;;5131:234:::1;5155:14;5183:172;5221:11;5250:10;5278:7;5303:10;5331;5183:20;:172::i;:::-;5131:10;:234::i;:::-;4872:500:::0;;;;;:::o;28018:89::-;2669:5;;-1:-1:-1;;;;;2669:5:23;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:23;;;;;;;:::i;:::-;28082:6:::1;:18:::0;;-1:-1:-1;;28082:18:23::1;::::0;::::1;;::::0;;;::::1;::::0;;28018:89::o;27892:120::-;2669:5;;-1:-1:-1;;;;;2669:5:23;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:23;;;;;;;:::i;:::-;27977:11:::1;:28:::0;;-1:-1:-1;;;;;;27977:28:23::1;-1:-1:-1::0;;;;;27977:28:23;;;::::1;::::0;;;::::1;::::0;;27892:120::o;3166:654::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:23;;;;;;;:::i;:::-;3518:295:::1;3542:10;3566:237;3602:11;3631:10;3659:7;3684:10;3712:15;3745:14;3777:12;3566:18;:237::i;3518:295::-;3166:654:::0;;;;;;;:::o;18556:777::-;18723:5;18742:7;18763:5;18782:6;18802;18822;18842:5;18872:18;18933:10;18945:7;18954:10;18916:49;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18916:49:23;;;;;;;;;18893:82;;18916:49;18893:82;;;;18985:33;19021:20;;;:8;:20;;;;;19078:19;;18893:82;;-1:-1:-1;19021:20:23;19078:19;;;19072:26;;;;;;;:::i;:::-;19112:21;;-1:-1:-1;;;;;19112:21:23;;;;;19147:23;-1:-1:-1;;;19147:23:23;;;;;-1:-1:-1;;;19184:22:23;;;;;19220:18;-1:-1:-1;;;19220:18:23;;;;;-1:-1:-1;;;19252:23:23;;;;;;-1:-1:-1;;;19295:20:23;;;;19289:27;;;;;;;;:::i;:::-;19051:275;;;;;;;;;;;;;;;;18556:777;;;;;;;;;;;:::o;27724:162::-;2669:5;;-1:-1:-1;;;;;2669:5:23;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:23;;;;;;;:::i;:::-;27814:5:::1;27801:10;:18;27793:56;;;::::0;-1:-1:-1;;;27793:56:23;;20923:2:31;27793:56:23::1;::::0;::::1;20905:21:31::0;20962:2;20942:18;;;20935:30;21001:27;20981:18;;;20974:55;21046:18;;27793:56:23::1;20721:349:31::0;27793:56:23::1;27859:7;:20:::0;27724:162::o;5378:502::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:23;;;;;;;:::i;:::-;5638:235:::1;5662:15;5691:172;5729:11;5758:10;5786:7;5811:10;5839;5691:20;:172::i;3826:469::-:0;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:23;;;;;;;:::i;:::-;4048:240:::1;4072:14;4100:178;4138:11:::0;4167:10;4195:7;4220:10;4262:1:::1;4248:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4248:16:23::1;;4100:20;:178::i;4048:240::-;3826:469:::0;;;;:::o;4301:565::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:23;;;;;;;:::i;:::-;4601:258:::1;4625:10;4649:200;4685:11;4714:10;4742:7;4767:10;4795:12;4825:10;4649:18;:200::i;4601:258::-;4301:565:::0;;;;;;:::o;19339:592::-;19506:7;19527:6;19547:5;19566:6;19597:18;19658:10;19670:7;19679:10;19641:49;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;19641:49:23;;;;;;19618:82;;19641:49;19618:82;;;;19710:33;19746:20;;;:8;:20;;;;;19797:21;-1:-1:-1;;;;;19797:21:23;;;-1:-1:-1;;;19832:18:23;;;;;-1:-1:-1;;;;19864:20:23;;;;;-1:-1:-1;;;;19898:16:23;;;;;;-1:-1:-1;19339:592:23;-1:-1:-1;;;;;19339:592:23:o;11773:1495::-;11862:7;;11845:1417;11875:2;:8;;;11871:1;:12;11845:1417;;;11904:25;11997:2;:13;;;12011:2;:7;;;11997:22;;;;;;;;:::i;:::-;;;;;;;12041:2;:10;;;12052:1;12041:13;;;;;;;;:::i;:::-;;;;;;;12076:2;:12;;;12089:1;12076:15;;;;;;;;:::i;:::-;;;;;;;11959:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11932:191;;;;;;11904:219;;12137:25;12230:2;:13;;;12244:2;:7;;;12230:22;;;;;;;;:::i;:::-;;;;;;;12274:2;:10;;;12285:1;12274:13;;;;;;;;:::i;:::-;;;;;;;12309:2;:12;;;12322:1;12309:15;;;;;;;;:::i;:::-;;;;;;;12192:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12192:150:23;;;;;;;;;12165:191;;12192:150;12165:191;;;;12370:33;12406:27;;;:8;:27;;;;;12483;;;:8;:27;;;;;;12524:24;;;;;;;;12165:191;;-1:-1:-1;12406:27:23;;12524:24;;12406:27;;12192:150;;12524:24;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12524:24:23;;;;;;;;;-1:-1:-1;;;12524:24:23;;;;;;;;-1:-1:-1;;;;;;;;;12524:24:23;;;;;;;;;;-1:-1:-1;;;12524:24:23;;;;;;;;-1:-1:-1;;;12524:24:23;;;;;;;;;;;;-1:-1:-1;;;12524:24:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12524:15:23;:24::i;:::-;12562:56;;;;;;;;;;-1:-1:-1;;;;;12562:56:23;;;;-1:-1:-1;;;12562:56:23;;;;;;;;-1:-1:-1;;;12562:56:23;;;;;;;;;;;-1:-1:-1;;;12562:56:23;;;;;;;;;;;12590:10;12602:15;12562:18;:56::i;:::-;12678:19;;;;;12657:40;;;;;;;:::i;:::-;:2;:14;;;12672:1;12657:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;12632:126;;;;-1:-1:-1;;;12632:126:23;;;;;;;:::i;:::-;12819:18;;12797;;-1:-1:-1;;;12819:18:23;;;;;;;-1:-1:-1;;;12797:18:23;;;;:40;;12772:120;;;;-1:-1:-1;;;12772:120:23;;30592:2:31;12772:120:23;;;30574:21:31;30631:2;30611:18;;;30604:30;-1:-1:-1;;;30650:18:31;;;30643:51;30711:18;;12772:120:23;30390:345:31;12772:120:23;12956:16;;12906:29;;12938:34;;-1:-1:-1;;;12956:16:23;;;;12938:15;:34;:::i;:::-;12986:59;;;;;;;;;;;12906:66;;-1:-1:-1;12986:59:23;;13005:7;;12986:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12986:59:23;;;;;;;;;-1:-1:-1;;;12986:59:23;;;;;;;;-1:-1:-1;;;;;;;;;12986:59:23;;;;;;;;;;-1:-1:-1;;;12986:59:23;;;;;;;;-1:-1:-1;;;12986:59:23;;;;;;;;;;;;-1:-1:-1;;;12986:59:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12986:59:23;;;;;;;;;;-1:-1:-1;;;;;12986:59:23;;;;-1:-1:-1;;;12986:59:23;;;;;;;;-1:-1:-1;;;12986:59:23;;;;;;;;;;;-1:-1:-1;;;12986:59:23;;;;;;;;;13023:21;12986:18;:59::i;:::-;13106:18;;;13059:27;;;:8;:27;;;;;:65;;13106:18;-1:-1:-1;;;13106:18:23;;;;;;13059:43;;:65;;13106:18;;-1:-1:-1;;;13059:65:23;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13162:2;:12;;;13175:1;13162:15;;;;;;;;:::i;:::-;;;;;;;13143:60;13186:15;13143:60;;;;;32554:10:31;32542:23;;;;32524:42;;32512:2;32497:18;;32380:192;13143:60:23;;;;;;;;-1:-1:-1;;;13224:27:23;;;;:8;:27;;;;;13217:34;;-1:-1:-1;;;;;;13217:34:23;;;-1:-1:-1;11885:3:23;;;;:::i;:::-;;;;11845:1417;;;;11773:1495;:::o;21864:809::-;22119:18;;:::i;:::-;22154:512;;;;;;;;22183:1;22154:512;;;;22205:1;22154:512;;;;22233:11;22154:512;;;;22270:10;22154:512;;;;22303:7;22154:512;;;;22350:1;-1:-1:-1;;;;;22336:16:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22336:16:23;-1:-1:-1;22154:512:23;;;;22549:1;22537:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22537:14:23;-1:-1:-1;22154:512:23;;;;22594:1;22581:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22581:15:23;-1:-1:-1;22154:512:23;;;;;;;;;;;;;;;;-1:-1:-1;22450:14:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22450:14:23;-1:-1:-1;22154:512:23;;;;22504:1;22490:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22490:16:23;-1:-1:-1;22154:512:23;;;;22653:1;22624:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22624:31:23;-1:-1:-1;22154:512:23;;22149:517;21864:809;-1:-1:-1;;;;;;21864:809:23:o;14686:609::-;14852:1;14829:2;:13;;;:20;:24;14821:51;;;;-1:-1:-1;;;14821:51:23;;23808:2:31;14821:51:23;;;23790:21:31;23847:2;23827:18;;;23820:30;-1:-1:-1;;;23866:18:31;;;23859:44;23920:18;;14821:51:23;23606:338:31;14821:51:23;14901:2;:13;;;:20;14889:2;:8;;;:32;14882:386;;14985:2;:13;;;14999:2;:8;;;14985:23;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14959:49:23;:2;:13;;;14973:2;:7;;;14959:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14959:49:23;;14958:128;;;;-1:-1:-1;15058:27:23;15030:2;:14;;;15045:2;:8;;;15030:24;;;;;;;;:::i;:::-;;;;;;;:55;;;;;;;;:::i;:::-;;14958:128;14937:321;;;15119:8;;;:10;;;;;;:::i;:::-;;;-1:-1:-1;14882:386:23;;14937:321;15168:11;15176:2;15168:7;:11;;:::i;:::-;15207:8;;;;;15197:18;;;15207:8;15233:10;15207:8;15233:10;:::i;14882:386::-;15277:11;15285:2;15277:7;:11;;:::i;6068:1695::-;6153:7;;6136:1407;6166:2;:8;;;6162:1;:12;6136:1407;;;6195:23;6212:2;6216:1;6195:16;:23::i;:::-;6232:18;6318:2;:13;;;6332:2;:7;;;6318:22;;;;;;;;:::i;:::-;;;;;;;6362:2;:10;;;6373:1;6362:13;;;;;;;;:::i;:::-;;;;;;;6397:9;;6280:144;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6280:144:23;;;;;;;;;6253:185;;6280:144;6253:185;;;;6452:33;6488:20;;;:8;:20;;;;;;;6522:21;;;;;;;;6253:185;;-1:-1:-1;6488:20:23;;6522:21;;6488:20;;6280:144;;6522:21;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;6522:21:23;;;;;;;;;-1:-1:-1;;;6522:21:23;;;;;;;;-1:-1:-1;;;;;;;;;6522:21:23;;;;;;;;;;-1:-1:-1;;;6522:21:23;;;;;;;;-1:-1:-1;;;6522:21:23;;;;;;;;;;;;-1:-1:-1;;;6522:21:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;6522:12:23;:21::i;:::-;6557:49;6586:2;:15;;;6602:1;6586:18;;;;;;;;:::i;:::-;;;;;;;6580:25;;;;;;;;:::i;:::-;6557:22;:49::i;:::-;6620:10;;6633:2;:14;;;6648:1;6633:17;;;;;;;;:::i;:::-;;;;;;;:47;;;;;;;;:::i;:::-;;6620:60;;6717:428;;;;;;;;6766:2;:14;;;6781:1;6766:17;;;;;;;;:::i;:::-;;;;;;;6717:428;;;;;;;;:::i;:::-;;;;;6824:10;-1:-1:-1;;;;;6717:428:23;;;;;6870:2;:18;;;6889:1;6870:21;;;;;;;;:::i;:::-;;;;;;;6717:428;;;;;;6925:2;:17;;;6943:1;6925:20;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6717:428:23;;;;;;6975:5;:35;;6993:2;:13;;;7007:1;6993:16;;;;;;;;:::i;:::-;;;;;;;6975:35;;;6983:1;6975:35;6717:428;;;;;;7045:5;:35;;7063:2;:13;;;7077:1;7063:16;;;;;;;;:::i;:::-;;;;;;;7045:35;;;7053:1;7045:35;6717:428;;;;;;;;7112:2;:15;;;7128:1;7112:18;;;;;;;;:::i;:::-;;;;;;;6717:428;;;;;;;;:::i;:::-;;;6694:20;;;;:8;:20;;;;;:451;;;;:20;;-1:-1:-1;;6694:451:23;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6694:451:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6694:451:23;;;;-1:-1:-1;;;;;6694:451:23;;;;;;;-1:-1:-1;;;;6694:451:23;;;;;-1:-1:-1;;;6694:451:23;;;;;;;;;;;;-1:-1:-1;;;;6694:451:23;-1:-1:-1;;;6694:451:23;;;;;;;;;-1:-1:-1;;;;6694:451:23;;-1:-1:-1;;;6694:451:23;;;;;;-1:-1:-1;;;;6694:451:23;;-1:-1:-1;;;6694:451:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;6694:451:23;;;-1:-1:-1;;;;6694:451:23;;;;-1:-1:-1;;;6694:451:23;;;;;;;;;:::i;:::-;;;;;;;;;7287:2;:10;;;7298:1;7287:13;;;;;;;;:::i;:::-;;;;;;;7247:2;:13;;;7261:2;:7;;;7247:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7164:343:23;7219:10;-1:-1:-1;;;;;7164:343:23;;7196:5;7318:9;;7345:2;:18;;;7364:1;7345:21;;;;;;;;:::i;:::-;;;;;;;7384:2;:17;;;7402:1;7384:20;;;;;;;;:::i;:::-;;;;;;;7422:5;:35;;7440:2;:13;;;7454:1;7440:16;;;;;;;;:::i;:::-;;;;;;;7422:35;;;7430:1;7422:35;7475:2;:15;;;7491:1;7475:18;;;;;;;;:::i;:::-;;;;;;;7164:343;;;;;;;;;;;:::i;:::-;;;;;;;;7521:9;:11;;;:9;:11;;;:::i;:::-;;;;;;6181:1362;;;6176:3;;;;;:::i;:::-;;;;6136:1407;;;;7552:204;7578:2;7594:10;7626:4;7645:42;7654:2;:10;;;7666:2;:7;;;7675:2;:8;;;7685:1;7645:8;:42::i;:::-;7701:45;7710:2;:13;;;7725:2;:7;;;7734:2;:8;;;7744:1;7701:8;:45::i;:::-;7552:12;:204::i;:::-;6068:1695;:::o;20119:891::-;20469:18;;:::i;:::-;20504:499;;;;;;;;20533:1;20504:499;;;;20555:1;20504:499;;;;20583:11;20504:499;;;;20620:10;20504:499;;;;20653:7;20504:499;;;;20686:10;20504:499;;;;20893:15;20504:499;;;;20938:14;20504:499;;;;20735:1;-1:-1:-1;;;;;20721:16:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20721:16:23;-1:-1:-1;20504:499:23;;;;20776:1;20762:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20762:16:23;-1:-1:-1;20504:499:23;;;;20818:1;20806:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20806:14:23;-1:-1:-1;20504:499:23;;;;20860:1;20846:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20846:16:23;-1:-1:-1;20504:499:23;;;;;;;;-1:-1:-1;20499:504:23;20119:891;-1:-1:-1;;;;;;20119:891:23:o;13274:1224::-;13354:7;;13337:1155;13367:2;:8;;;13363:1;:12;13337:1155;;;13396:25;13489:2;:13;;;13503:2;:7;;;13489:22;;;;;;;;:::i;:::-;;;;;;;13533:2;:10;;;13544:1;13533:13;;;;;;;;:::i;:::-;;;;;;;13568:2;:12;;;13581:1;13568:15;;;;;;;;:::i;:::-;;;;;;;13451:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13424:191;;;;;;13396:219;;13629:25;13722:2;:13;;;13736:2;:7;;;13722:22;;;;;;;;:::i;:::-;;;;;;;13766:2;:10;;;13777:1;13766:13;;;;;;;;:::i;:::-;;;;;;;13801:2;:12;;;13814:1;13801:15;;;;;;;;:::i;:::-;;;;;;;13684:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13684:150:23;;;;;;;;;13657:191;;13684:150;13657:191;;;;13862:33;13898:27;;;:8;:27;;;;;13975;;;:8;:27;;;;;;14016:24;;;;;;;;13657:191;;-1:-1:-1;13898:27:23;;14016:24;;13898:27;;13684:150;;14016:24;;;;;;;;;;:::i;:::-;14054;;;;;;;;;;-1:-1:-1;;;;;14054:24:23;;;;-1:-1:-1;;;14054:24:23;;;;;;;;-1:-1:-1;;;14054:24:23;;;;;;;;;;;-1:-1:-1;;;14054:24:23;;;;;;;;;;;:15;:24::i;:::-;14092:43;;;;;;;;;;-1:-1:-1;;;;;14092:43:23;;;;-1:-1:-1;;;14092:43:23;;;;;;;;-1:-1:-1;;;14092:43:23;;;;;;;;;;;-1:-1:-1;;;14092:43:23;;;;;;;;;;;14119:15;14092:17;:43::i;:::-;14149:40;;;;;;;;;;;;;;14172:7;;14149:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;14149:40:23;;;;;;;;;-1:-1:-1;;;14149:40:23;;;;;;;;-1:-1:-1;;;;;;;;;14149:40:23;;;;;;;;;;-1:-1:-1;;;14149:40:23;;;;;;;;-1:-1:-1;;;14149:40:23;;;;;;;;;;;;-1:-1:-1;;;14149:40:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;14149:40:23;;;;;;;;;;-1:-1:-1;;;;;14149:40:23;;;;-1:-1:-1;;;14149:40:23;;;;;;;;-1:-1:-1;;;14149:40:23;;;;;;;;;;;-1:-1:-1;;;14149:40:23;;;;;;;;;:22;:40::i;:::-;14247:2;:12;;;14260:1;14247:15;;;;;;;;:::i;:::-;;;;;;;14208:109;14287:15;14208:109;;;;;32554:10:31;32542:23;;;;32524:42;;32512:2;32497:18;;32380:192;14208:109:23;;;;;;;;14415:18;;14373:23;;:60;;14415:18;-1:-1:-1;;;14415:18:23;;;;;;-1:-1:-1;;;14373:23:23;;;:60;:::i;:::-;14331:102;;;;;;;-1:-1:-1;;;14331:102:23;-1:-1:-1;;;;14331:102:23;;;;;;;-1:-1:-1;14331:23:23;14454:27;;;:8;:27;;;;;14447:34;;-1:-1:-1;;;;;;14447:34:23;;;-1:-1:-1;13377:3:23;;;;:::i;:::-;;;;13337:1155;;7769:1490;7897:7;;7886:8;;;;7841:28;;7886:18;;;:::i;:::-;-1:-1:-1;;;;;7872:33:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7872:33:23;-1:-1:-1;8004:7:23;;7841:64;;-1:-1:-1;7915:33:23;;7987:1048;8017:2;:8;;;8013:1;:12;7987:1048;;;8046:25;8139:2;:13;;;8153:2;:7;;;8139:22;;;;;;;;:::i;:::-;;;;;;;8183:2;:10;;;8194:1;8183:13;;;;;;;;:::i;:::-;;;;;;;8218:2;:12;;;8231:1;8218:15;;;;;;;;:::i;:::-;;;;;;;8101:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8101:150:23;;;;;;;;;8074:191;;8101:150;8074:191;;;;8279:23;8305:27;;;:8;:27;;;;;8392:19;;8074:191;;-1:-1:-1;8305:27:23;8392:19;;;8371:40;;;;;;;:::i;:::-;:2;:14;;;8386:1;8371:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;8346:126;;;;-1:-1:-1;;;8346:126:23;;;;;;;:::i;:::-;8622:23;;-1:-1:-1;;;8600:18:23;;8622:23;8600:18;;;-1:-1:-1;;;8622:23:23;;;;8600:45;8575:126;;;;-1:-1:-1;;;8575:126:23;;21985:2:31;8575:126:23;;;21967:21:31;22024:2;22004:18;;;21997:30;-1:-1:-1;;;22043:18:31;;;22036:52;22105:18;;8575:126:23;21783:346:31;8575:126:23;8715:24;;;;;;;;;;;;;;8731:7;;8715:24;;;;;;;;;;;;:::i;:::-;8753:38;;;;;;;;;;;;;;8771:7;;8753:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;8753:38:23;;;;;;;;;-1:-1:-1;;;8753:38:23;;;;;;;;-1:-1:-1;;;;;;;;;8753:38:23;;;;;;;;;;-1:-1:-1;;;8753:38:23;;;;;;;;-1:-1:-1;;;8753:38:23;;;;;;;;;;;;-1:-1:-1;;;8753:38:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;8780:10:23;8753:17;:38::i;:::-;8832:18;;8821:7;;-1:-1:-1;;;8832:18:23;;;;;;8805:11;;8817;;:1;:11;:::i;:::-;8805:24;;;;;;;;:::i;:::-;;;;;;;;;;:45;8878:19;;;8935:12;;;:15;;8878:19;;;;;-1:-1:-1;8935:12:23;8948:1;;8935:15;;;;;;:::i;:::-;;;;;;;8916:60;8959:15;8916:60;;;;;32554:10:31;32542:23;;;;32524:42;;32512:2;32497:18;;32380:192;8916:60:23;;;;;;;;-1:-1:-1;8997:27:23;;;;:8;:27;;;;;8990:34;;-1:-1:-1;;;;;;8990:34:23;;;8027:3;;;;:::i;:::-;;;;7987:1048;;;;9044:208;9070:2;9094:4;9113:10;9137:42;9146:2;:10;;;9158:2;:7;;;9167:2;:8;;;9177:1;9137:8;:42::i;:::-;9215:7;;9224:8;;;;9193:49;;9202:11;;9215:7;9193:8;:49::i;9044:208::-;7831:1428;;7769:1490;:::o;9265:2502::-;9350:7;;9333:2428;9363:2;:8;;;9359:1;:12;9333:2428;;;9392:25;9485:2;:13;;;9499:2;:7;;;9485:22;;;;;;;;:::i;:::-;;;;;;;9529:2;:10;;;9540:1;9529:13;;;;;;;;:::i;:::-;;;;;;;9564:2;:12;;;9577:1;9564:15;;;;;;;;:::i;:::-;;;;;;;9447:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9420:191;;;;;;9392:219;;9625:25;9718:2;:13;;;9732:2;:7;;;9718:22;;;;;;;;:::i;:::-;;;;;;;9762:2;:10;;;9773:1;9762:13;;;;;;;;:::i;:::-;;;;;;;9797:9;;9680:144;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9680:144:23;;;;;;;;;9653:185;;9680:144;9653:185;;;;9852:33;9888:27;;;:8;:27;;;;;9965;;;:8;:27;;;;;;10006:24;;;;;;;;9653:185;;-1:-1:-1;9888:27:23;;10006:24;;9888:27;;9680:144;;10006:24;;;;;;;;;;:::i;:::-;10044:21;;;;;;;;;;-1:-1:-1;;;;;10044:21:23;;;;-1:-1:-1;;;10044:21:23;;;;;;;;-1:-1:-1;;;10044:21:23;;;;;;;;;;;-1:-1:-1;;;10044:21:23;;;;;;;;;;;:12;:21::i;:::-;10079:44;;;;;;;;;;;;;;10096:7;;10079:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;10079:44:23;;;;;;;;;-1:-1:-1;;;10079:44:23;;;;;;;;-1:-1:-1;;;;;;;;;10079:44:23;;;;;;;;;;-1:-1:-1;;;10079:44:23;;;;;;;;-1:-1:-1;;;10079:44:23;;;;;;;;;;;;-1:-1:-1;;;10079:44:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;10105:2:23;10109:1;10112:10;10079:16;:44::i;:::-;10183:19;;;;;10162:40;;;;;;;:::i;:::-;:2;:14;;;10177:1;10162:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;10137:126;;;;-1:-1:-1;;;10137:126:23;;;;;;;:::i;:::-;10322:23;;10302:13;;;;:16;;-1:-1:-1;;;10322:23:23;;;;;;10316:1;;10302:16;;;;;;:::i;:::-;;;;;;;:43;;10277:128;;;;-1:-1:-1;;;10277:128:23;;21277:2:31;10277:128:23;;;21259:21:31;21316:2;21296:18;;;21289:30;21355:28;21335:18;;;21328:56;21401:18;;10277:128:23;21075:350:31;10277:128:23;10448:20;;10419;;-1:-1:-1;;;10448:20:23;;;;10442:27;;;;;;;;:::i;:::-;10483:20;10506:8;;:40;;-1:-1:-1;;;10506:40:23;;32749:4:31;32737:17;;10506:40:23;;;32719:36:31;10419:50:23;;-1:-1:-1;10483:20:23;;-1:-1:-1;;;;;10506:8:23;;;;:24;;32692:18:31;;10506:40:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10483:63;;10560:16;10585:12;-1:-1:-1;;;;;10579:28:23;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10560:49;;;-1:-1:-1;10641:13:23;10657:12;10560:49;10657:2;:12;:::i;:::-;10799:22;;10641:28;;-1:-1:-1;10687:17:23;;10787:42;;-1:-1:-1;;;10799:22:23;;;;10641:28;10787:11;:42::i;:::-;10746:2;:15;;;10762:1;10746:18;;;;;;;;:::i;:::-;;;;;;;10707:57;;:2;:13;;;10721:1;10707:16;;;;;;;;:::i;:::-;;;;;;;:57;;;;:::i;:::-;:122;;;;:::i;:::-;10687:142;;10867:1;10855:9;:13;10847:51;;;;-1:-1:-1;;;10847:51:23;;;;;;;:::i;:::-;10916:152;-1:-1:-1;;;;;10916:36:23;;10974:10;11014:4;11041:9;10916:36;:152::i;:::-;10623:460;;11126:239;;;;;;;;11185:10;-1:-1:-1;;;;;11126:239:23;;;;;11281:2;:15;;;11297:1;11281:18;;;;;;;;:::i;:::-;;;;;;;11126:239;;;;;;11334:15;11126:239;;;;;;11232:2;:13;;;11246:1;11232:16;;;;;;;;:::i;:::-;;;;;;;;;;;;11126:239;;;;;;;11096:27;;;;:8;:27;;;;;;;:269;;;;;;;;;;;;;;;;;11126:239;11096:269;-1:-1:-1;;;11096:269:23;-1:-1:-1;;;;11096:269:23;;;;-1:-1:-1;;;11096:269:23;;;;;-1:-1:-1;;;;11096:269:23;;;;-1:-1:-1;;;11096:269:23;-1:-1:-1;;;;;;11096:269:23;;;-1:-1:-1;;;;;11096:269:23;;;;;;;;;;;;;;;;;;;11449:13;;;;:16;;11463:1;;11449:16;;;;;;:::i;:::-;;;;;;;11379:100;;:8;:27;11388:17;11379:27;;;;;;;;;;;:43;;;:100;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11591:9;;11558:2;:12;;;11571:1;11558:15;;;;;;;;:::i;:::-;;;;;;;11530:10;-1:-1:-1;;;;;11498:227:23;;11624:2;:13;;;11638:1;11624:16;;;;;;;;:::i;:::-;;;;;;;11659:2;:15;;;11675:1;11659:18;;;;;;;;:::i;:::-;;;;;;;;;;;;11695:16;;11498:227;;;33712:4:31;33700:17;;;33682:36;;33754:17;;;;33734:18;;;33727:45;;;;-1:-1:-1;;;11695:16:23;;;;;33788:18:31;;;33781:51;33670:2;33655:18;11498:227:23;;;;;;;11739:9;:11;;;:9;:11;;;:::i;:::-;;;;;;9378:2383;;;;;;;9373:3;;;;;:::i;:::-;;;;9333:2428;;21016:842;21306:18;;:::i;:::-;21341:510;;;;;;;;21370:1;21341:510;;;;21392:1;21341:510;;;;21420:11;21341:510;;;;21457:10;21341:510;;;;21490:7;21341:510;;;;21537:1;-1:-1:-1;;;;;21523:16:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21523:16:23;-1:-1:-1;21341:510:23;;;;21734:1;21722:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21722:14:23;-1:-1:-1;21341:510:23;;;;21779:1;21766:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21766:15:23;-1:-1:-1;21341:510:23;;;;;;;;;;;21599:16;;-1:-1:-1;21599:16:23;;;;;;;;21341:510;;;;;;;;;;;;;;;;;;;;;21809:31;;;;;;;;;;;-1:-1:-1;21341:510:23;;;;;21336:515;;-1:-1:-1;;;21016:842:23:o;24313:267::-;24385:42;24405:7;:21;;;24385:19;:42::i;:::-;24445:23;;;;:28;;24437:61;;;;-1:-1:-1;;;24437:61:23;;20574:2:31;24437:61:23;;;20556:21:31;20613:2;20593:18;;;20586:30;-1:-1:-1;;;20632:18:31;;;20625:50;20692:18;;24437:61:23;20372:344:31;24437:61:23;24516:22;;;;-1:-1:-1;;;;;;24516:27:23;24508:65;;;;-1:-1:-1;;;24508:65:23;;;;;;;:::i;26101:341::-;26282:9;-1:-1:-1;;;;;26257:34:23;:7;:21;;;-1:-1:-1;;;;;26257:34:23;;26249:64;;;;-1:-1:-1;;;26249:64:23;;28494:2:31;26249:64:23;;;28476:21:31;28533:2;28513:18;;;28506:30;-1:-1:-1;;;28552:18:31;;;28545:47;28609:18;;26249:64:23;28292:341:31;26249:64:23;26345:41;26362:7;26371:14;26345:16;:41::i;:::-;26344:42;26323:112;;;;-1:-1:-1;;;26323:112:23;;25969:2:31;26323:112:23;;;25951:21:31;26008:2;25988:18;;;25981:30;26047:25;26027:18;;;26020:53;26090:18;;26323:112:23;25767:347:31;15665:1238:23;15840:20;15869:7;:20;;;15863:27;;;;;;;;:::i;:::-;15900:16;15919:8;;:40;;-1:-1:-1;;;15919:40:23;;32749:4:31;32737:17;;15919:40:23;;;32719:36:31;15840:50:23;;-1:-1:-1;15900:16:23;;-1:-1:-1;;;;;15919:8:23;;;;:24;;32692:18:31;;15919:40:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15900:59;;15969:16;15994:8;-1:-1:-1;;;;;15988:24:23;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15969:45;;;-1:-1:-1;16024:13:23;16040:12;15969:45;16040:2;:12;:::i;:::-;16024:28;;16062:17;16082:42;16094:7;:22;;;16118:5;16082:11;:42::i;:::-;16062:62;;16134:22;16216:7;:20;;;16159:77;;16192:9;16159:7;:18;;;:42;;;;;;:::i;:::-;:77;;;;:::i;:::-;16134:102;-1:-1:-1;16246:21:23;2504:5;16271:33;16295:9;16271:21;:33;:::i;:::-;16270:64;;;;:::i;:::-;16246:88;;16369:1;16352:14;:18;16344:66;;;;-1:-1:-1;;;16344:66:23;;26675:2:31;16344:66:23;;;26657:21:31;26714:2;26694:18;;;26687:30;26753:34;26733:18;;;26726:62;-1:-1:-1;;;26804:18:31;;;26797:33;26847:19;;16344:66:23;26473:399:31;16344:66:23;16444:1;16428:13;:17;16420:59;;;;-1:-1:-1;;;16420:59:23;;28136:2:31;16420:59:23;;;28118:21:31;28175:2;28155:18;;;28148:30;28214:31;28194:18;;;28187:59;28263:18;;16420:59:23;27934:353:31;16420:59:23;16489:21;16513:30;16530:13;16513:14;:30;:::i;:::-;16489:54;;16557:7;;16568:1;16557:12;16553:145;;16585:16;16604:44;16612:13;16627:7;:20;;;16604:7;:44::i;:::-;16585:63;-1:-1:-1;16662:25:23;16585:63;16662:25;;:::i;:::-;;;16571:127;16553:145;16736:21;;;;16707:66;;-1:-1:-1;;;;;16707:28:23;;;16759:13;16707:28;:66::i;:::-;16787:17;;16783:114;;16849:21;;16820:66;;-1:-1:-1;;;;;16820:28:23;;;16872:13;16820:28;:66::i;:::-;15830:1073;;;;;;;;15665:1238;;;:::o;25114:450::-;25221:1;25202:2;:13;;;25216:1;25202:16;;;;;;;;:::i;:::-;;;;;;;:20;25194:59;;;;-1:-1:-1;;;25194:59:23;;23453:2:31;25194:59:23;;;23435:21:31;23492:2;23472:18;;;23465:30;23531:28;23511:18;;;23504:56;23577:18;;25194:59:23;23251:350:31;25194:59:23;25291:15;25271:35;;:2;:13;;;25285:1;25271:16;;;;;;;;:::i;:::-;;;;;;;:35;;25263:64;;;;-1:-1:-1;;;25263:64:23;;;;;;;:::i;:::-;25369:1;25345:2;:18;;;25364:1;25345:21;;;;;;;;:::i;:::-;;;;;;;:25;;;25337:61;;;;-1:-1:-1;;;25337:61:23;;;;;;;:::i;:::-;25441:15;25416:40;;:2;:18;;;25435:1;25416:21;;;;;;;;:::i;:::-;;;;;;;:40;;;;25408:69;;;;-1:-1:-1;;;25408:69:23;;;;;;;:::i;:::-;25526:1;25502:2;:17;;;25520:1;25502:20;;;;;;;;:::i;:::-;;;;;;;25495:28;;:32;;;25487:70;;;;-1:-1:-1;;;25487:70:23;;;;;;;:::i;24041:266::-;24110:39;24127:7;:21;;;24110:16;:39::i;:::-;24167:23;;;;:28;;;24159:65;;;;-1:-1:-1;;;24159:65:23;;21632:2:31;24159:65:23;;;21614:21:31;21671:2;21651:18;;;21644:30;-1:-1:-1;;;21690:18:31;;;21683:54;21754:18;;24159:65:23;21430:348:31;24159:65:23;24242:22;;;;-1:-1:-1;;;;;;24242:27:23;;24234:66;;;;-1:-1:-1;;;24234:66:23;;23098:2:31;24234:66:23;;;23080:21:31;23137:2;23117:18;;;23110:30;23176:28;23156:18;;;23149:56;23222:18;;24234:66:23;22896:350:31;26843:129:23;26935:1;26923:9;:13;;;26915:50;;;;-1:-1:-1;;;26915:50:23;;31702:2:31;26915:50:23;;;31684:21:31;31741:2;31721:18;;;31714:30;31780:26;31760:18;;;31753:54;31824:18;;26915:50:23;31500:348:31;23266:326:23;23415:18;23463:13;23470:6;23463:4;:13;:::i;:::-;-1:-1:-1;;;;;23449:28:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23449:28:23;-1:-1:-1;23445:32:23;-1:-1:-1;23504:6:23;23487:99;23516:4;23512:1;:8;23487:99;;;23557:3;23561:13;23565:9;23561:1;:13;:::i;:::-;23557:18;;;;;;;;:::i;:::-;;;;;;;23541:1;23547:6;23543:1;:10;;;;:::i;:::-;23541:13;;;;;;;;:::i;:::-;;;;;;;;;;:34;23522:3;;;;:::i;:::-;;;;23487:99;;;;23266:326;;;;;;:::o;17740:628::-;17958:26;17931:14;;;;17946:7;;17931:23;;;;;;;;:::i;:::-;;;;;;;:53;;;;;;;;:::i;:::-;;17927:435;;;18008:13;;;;18022:7;;18008:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;18000:44:23;;18062:4;18084:2;18104;:10;;;18115:2;:7;;;18104:19;;;;;;;;:::i;:::-;;;;;;;;;;;18000:137;;-1:-1:-1;;;;;;18000:137:23;;;;;;;-1:-1:-1;;;;;17623:15:31;;;18000:137:23;;;17605:34:31;17675:15;;;;17655:18;;;17648:43;17707:18;;;17700:34;17540:18;;18000:137:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17927:435;;;18177:13;;;;18191:7;;18177:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;18168:54:23;;18240:4;18262:2;18282:7;18307:10;18168:183;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17740:628;;;;;:::o;24848:260::-;24940:21;;24920:42;;:19;:42::i;:::-;24980:20;;;;:25;;24972:61;;;;-1:-1:-1;;;24972:61:23;;;;;;;:::i;:::-;25051:16;;;;:21;;25043:58;;;;-1:-1:-1;;;25043:58:23;;27783:2:31;25043:58:23;;;27765:21:31;27822:2;27802:18;;;27795:30;27861:26;27841:18;;;27834:54;27905:18;;25043:58:23;27581:348:31;26978:254:23;27129:41;27146:7;27155:14;27129:16;:41::i;:::-;27108:117;;;;-1:-1:-1;;;27108:117:23;;27425:2:31;27108:117:23;;;27407:21:31;27464:2;27444:18;;;27437:30;27503:31;27483:18;;;27476:59;27552:18;;27108:117:23;27223:353:31;16909:825:23;17049:20;17078:7;:20;;;17072:27;;;;;;;;:::i;:::-;17109:18;17136:8;;:40;;-1:-1:-1;;;17136:40:23;;32749:4:31;32737:17;;17136:40:23;;;32719:36:31;17049:50:23;;-1:-1:-1;17109:18:23;;-1:-1:-1;;;;;17136:8:23;;;;:24;;32692:18:31;;17136:40:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17109:68;;17187:16;17212:12;-1:-1:-1;;;;;17206:28:23;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17187:49;;;-1:-1:-1;17246:13:23;17262:12;17187:49;17262:2;:12;:::i;:::-;17246:28;;17284:17;17304:42;17316:7;:22;;;17340:5;17304:11;:42::i;:::-;17284:62;;17356:16;17432:7;:20;;;17375:77;;17408:9;17375:7;:18;;;:42;;;;;;:::i;:::-;:77;;;;:::i;:::-;17356:96;;17462:16;17496:7;;17507:1;17496:12;17492:157;;17535:103;17560:8;17609:14;17586:38;;;;;;;;;;:::i;:::-;17535:7;:103::i;:::-;17524:114;;17492:157;17684:21;;;;17658:69;;17707:19;17718:8;17707;:19;:::i;:::-;-1:-1:-1;;;;;17658:25:23;;;:69;:25;:69::i;26448:184::-;26594:9;-1:-1:-1;;;;;26569:34:23;:7;:21;;;-1:-1:-1;;;;;26569:34:23;;26561:64;;;;-1:-1:-1;;;26561:64:23;;27079:2:31;26561:64:23;;;27061:21:31;27118:2;27098:18;;;27091:30;-1:-1:-1;;;27137:18:31;;;27130:47;27194:18;;26561:64:23;26877:341:31;24586:256:23;24672:21;;24655:39;;:16;:39::i;:::-;24712:20;;;;:25;;;24704:62;;;;-1:-1:-1;;;24704:62:23;;21632:2:31;24704:62:23;;;21614:21:31;21671:2;21651:18;;;21644:30;-1:-1:-1;;;21690:18:31;;;21683:54;21754:18;;24704:62:23;21430:348:31;24704:62:23;24784:16;;;;:21;;;24776:59;;;;-1:-1:-1;;;24776:59:23;;24907:2:31;24776:59:23;;;24889:21:31;24946:2;24926:18;;;24919:30;24985:27;24965:18;;;24958:55;25030:18;;24776:59:23;24705:349:31;25570:525:23;25752:7;:21;;;-1:-1:-1;;;;;25739:34:23;:9;-1:-1:-1;;;;;25739:34:23;;;25731:71;;;;-1:-1:-1;;;25731:71:23;;28840:2:31;25731:71:23;;;28822:21:31;28879:2;28859:18;;;28852:30;28918:26;28898:18;;;28891:54;28962:18;;25731:71:23;28638:348:31;25731:71:23;25842:15;25820:37;;:2;:15;;;25836:1;25820:18;;;;;;;;:::i;:::-;;;;;;;:37;;;;25812:66;;;;-1:-1:-1;;;25812:66:23;;;;;;;:::i;:::-;25917:1;25896:2;:15;;;25912:1;25896:18;;;;;;;;:::i;:::-;;;;;;;:22;;;25888:58;;;;-1:-1:-1;;;25888:58:23;;;;;;;:::i;:::-;25999:7;:23;;;25977:45;;:2;:15;;;25993:1;25977:18;;;;;;;;:::i;:::-;;;;;;;:45;;;;25956:132;;;;-1:-1:-1;;;25956:132:23;;22336:2:31;25956:132:23;;;22318:21:31;22375:2;22355:18;;;22348:30;22414:34;22394:18;;;22387:62;-1:-1:-1;;;22465:18:31;;;22458:38;22513:19;;25956:132:23;22134:404:31;22679:581:23;22775:7;22798:37;22822:5;22829;22798:23;:37::i;:::-;22860:21;;;;22908:27;;;;;;22845:12;22968:13;22976:5;22968;:13;:::i;:::-;22945:36;;23003:4;22995:5;:12;;;22991:55;;;23031:4;23023:12;;22991:55;23069:4;23059:7;:14;;;23055:59;;;23099:4;23089:14;;23055:59;23123:9;23135:13;23143:5;23135:13;;;;:::i;:::-;23123:25;-1:-1:-1;23158:9:23;23170:22;23180:12;23170:22;;;;:::i;:::-;23158:34;-1:-1:-1;23202:17:23;23222:5;23158:34;23222:1;:5;:::i;:::-;23202:25;22679:581;-1:-1:-1;;;;;;;;;22679:581:23:o;845:241:10:-;1010:68;;-1:-1:-1;;;;;17623:15:31;;;1010:68:10;;;17605:34:31;17675:15;;17655:18;;;17648:43;17707:18;;;17700:34;;;983:96:10;;1003:5;;-1:-1:-1;;;1033:27:10;17540:18:31;;1010:68:10;;;;-1:-1:-1;;1010:68:10;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:10;-1:-1:-1;;;;;;1010:68:10;;;;;;;;;;983:19;:96::i;23780:123:23:-;-1:-1:-1;;;;;23854:18:23;;23846:50;;;;-1:-1:-1;;;23846:50:23;;20226:2:31;23846:50:23;;;20208:21:31;20265:2;20245:18;;;20238:30;-1:-1:-1;;;20284:18:31;;;20277:49;20343:18;;23846:50:23;20024:343:31;27238:298:23;27351:4;27389:7;:16;;;27379:26;;:7;:26;27371:63;;;;-1:-1:-1;;;27371:63:23;;22745:2:31;27371:63:23;;;22727:21:31;22784:2;22764:18;;;22757:30;22823:26;22803:18;;;22796:54;22867:18;;27371:63:23;22543:348:31;27371:63:23;2504:5;27492:7;:20;;;:37;;;;;;:::i;:::-;27473:16;;;;27463:26;;;;:7;:26;:::i;:::-;:66;;27238:298;-1:-1:-1;;;27238:298:23:o;15301:358::-;15405:11;15448:7;;15438;:17;;;;:::i;:::-;15432:23;-1:-1:-1;15465:12:23;15472:5;15432:23;15465:12;:::i;:::-;;;15487:20;15516:12;15510:19;;;;;;;;:::i;:::-;15539:14;15562:8;;:40;;-1:-1:-1;;;15562:40:23;;32749:4:31;32737:17;;15562:40:23;;;32719:36:31;15487:42:23;;-1:-1:-1;15539:14:23;;-1:-1:-1;;;;;15562:8:23;;;;:24;;32692:18:31;;15562:40:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15635:11;;15539:64;;-1:-1:-1;15613:39:23;;-1:-1:-1;;;;;15613:21:23;;;;15635:11;15648:3;15613:21;:39::i;:::-;15422:237;;15301:358;;;;:::o;634:205:10:-;773:58;;-1:-1:-1;;;;;18392:32:31;;773:58:10;;;18374:51:31;18441:18;;;18434:34;;;746:86:10;;766:5;;-1:-1:-1;;;796:23:10;18347:18:31;;773:58:10;18200:274:31;23909:126:23;-1:-1:-1;;;;;23980:18:23;;;23972:56;;;;-1:-1:-1;;;23972:56:23;;29193:2:31;23972:56:23;;;29175:21:31;29232:2;29212:18;;;29205:30;29271:27;29251:18;;;29244:55;29316:18;;23972:56:23;28991:349:31;26638:199:23;26731:13;;;;26723:50;;;;-1:-1:-1;;;26723:50:23;;24151:2:31;26723:50:23;;;24133:21:31;24190:2;24170:18;;;24163:30;-1:-1:-1;;;24209:18:31;;;24202:50;24269:18;;26723:50:23;23949:344:31;26723:50:23;26800:5;26791;:14;;26783:47;;;;-1:-1:-1;;;26783:47:23;;31353:2:31;26783:47:23;;;31335:21:31;31392:2;31372:18;;;31365:30;-1:-1:-1;;;31411:18:31;;;31404:50;31471:18;;26783:47:23;31151:344:31;3140:706:10;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:10;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:10;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:10;;30942:2:31;3744:85:10;;;30924:21:31;30981:2;30961:18;;;30954:30;31020:34;31000:18;;;30993:62;-1:-1:-1;;;31071:18:31;;;31064:40;31121:19;;3744:85:10;30740:406:31;3461:223:18;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:18;;24500:2:31;4737:81:18;;;24482:21:31;24539:2;24519:18;;;24512:30;24578:34;24558:18;;;24551:62;-1:-1:-1;;;24629:18:31;;;24622:36;24675:19;;4737:81:18;24298:402:31;4737:81:18;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:18;;29547:2:31;4828:60:18;;;29529:21:31;29586:2;29566:18;;;29559:30;29625:31;29605:18;;;29598:59;29674:18;;4828:60:18;29345:353:31;4828:60:18;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:18;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:18:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:18;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:18;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:748:31:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:238;509:2;506:1;503:9;495:238;;;580:3;567:17;597:31;622:5;597:31;:::i;:::-;641:18;;679:12;;;;711;;;;527:1;520:9;495:238;;;-1:-1:-1;751:5:31;;14:748;-1:-1:-1;;;;;;;14:748:31:o;767:677::-;820:5;873:3;866:4;858:6;854:17;850:27;840:55;;891:1;888;881:12;840:55;927:6;914:20;953:4;977:60;993:43;1033:2;993:43;:::i;977:60::-;1059:3;1083:2;1078:3;1071:15;1111:2;1106:3;1102:12;1095:19;;1146:2;1138:6;1134:15;1198:3;1193:2;1187;1184:1;1180:10;1172:6;1168:23;1164:32;1161:41;1158:61;;;1215:1;1212;1205:12;1158:61;1237:1;1247:168;1261:2;1258:1;1255:9;1247:168;;;1318:22;1336:3;1318:22;:::i;:::-;1306:35;;1361:12;;;;1393;;;;1279:1;1272:9;1247:168;;1449:793;1512:5;1565:3;1558:4;1550:6;1546:17;1542:27;1532:55;;1583:1;1580;1573:12;1532:55;1619:6;1606:20;1645:4;1669:60;1685:43;1725:2;1685:43;:::i;1669:60::-;1751:3;1775:2;1770:3;1763:15;1803:2;1798:3;1794:12;1787:19;;1838:2;1830:6;1826:15;1890:3;1885:2;1879;1876:1;1872:10;1864:6;1860:23;1856:32;1853:41;1850:61;;;1907:1;1904;1897:12;1850:61;1929:1;1950;1960:253;1976:2;1971:3;1968:11;1960:253;;;2051:3;2038:17;2088:1;2081:5;2078:12;2068:40;;2104:1;2101;2094:12;2068:40;2121:18;;2159:12;;;;2191;;;;1998:1;1989:11;1960:253;;;-1:-1:-1;2231:5:31;;1449:793;-1:-1:-1;;;;;;;;1449:793:31:o;2247:794::-;2311:5;2364:3;2357:4;2349:6;2345:17;2341:27;2331:55;;2382:1;2379;2372:12;2331:55;2418:6;2405:20;2444:4;2468:60;2484:43;2524:2;2484:43;:::i;2468:60::-;2550:3;2574:2;2569:3;2562:15;2602:2;2597:3;2593:12;2586:19;;2637:2;2629:6;2625:15;2689:3;2684:2;2678;2675:1;2671:10;2663:6;2659:23;2655:32;2652:41;2649:61;;;2706:1;2703;2696:12;2649:61;2728:1;2749;2759:253;2775:2;2770:3;2767:11;2759:253;;;2850:3;2837:17;2887:1;2880:5;2877:12;2867:40;;2903:1;2900;2893:12;2867:40;2920:18;;2958:12;;;;2990;;;;2797:1;2788:11;2759:253;;3046:673;3100:5;3153:3;3146:4;3138:6;3134:17;3130:27;3120:55;;3171:1;3168;3161:12;3120:55;3207:6;3194:20;3233:4;3257:60;3273:43;3313:2;3273:43;:::i;3257:60::-;3339:3;3363:2;3358:3;3351:15;3391:2;3386:3;3382:12;3375:19;;3426:2;3418:6;3414:15;3478:3;3473:2;3467;3464:1;3460:10;3452:6;3448:23;3444:32;3441:41;3438:61;;;3495:1;3492;3485:12;3438:61;3517:1;3527:163;3541:2;3538:1;3535:9;3527:163;;;3598:17;;3586:30;;3636:12;;;;3668;;;;3559:1;3552:9;3527:163;;3724:744;3776:5;3829:3;3822:4;3814:6;3810:17;3806:27;3796:55;;3847:1;3844;3837:12;3796:55;3883:6;3870:20;3909:4;3933:60;3949:43;3989:2;3949:43;:::i;3933:60::-;4015:3;4039:2;4034:3;4027:15;4067:2;4062:3;4058:12;4051:19;;4102:2;4094:6;4090:15;4154:3;4149:2;4143;4140:1;4136:10;4128:6;4124:23;4120:32;4117:41;4114:61;;;4171:1;4168;4161:12;4114:61;4193:1;4203:236;4217:2;4214:1;4211:9;4203:236;;;4288:3;4275:17;4305:29;4328:5;4305:29;:::i;:::-;4347:18;;4385:12;;;;4417;;;;4235:1;4228:9;4203:236;;4473:173;4540:20;;-1:-1:-1;;;;;;4589:32:31;;4579:43;;4569:71;;4636:1;4633;4626:12;4569:71;4473:173;;;:::o;4651:530::-;4693:5;4746:3;4739:4;4731:6;4727:17;4723:27;4713:55;;4764:1;4761;4754:12;4713:55;4800:6;4787:20;-1:-1:-1;;;;;4822:2:31;4819:26;4816:52;;;4848:18;;:::i;:::-;4892:55;4935:2;4916:13;;-1:-1:-1;;4912:27:31;4941:4;4908:38;4892:55;:::i;:::-;4972:2;4963:7;4956:19;5018:3;5011:4;5006:2;4998:6;4994:15;4990:26;4987:35;4984:55;;;5035:1;5032;5025:12;4984:55;5100:2;5093:4;5085:6;5081:17;5074:4;5065:7;5061:18;5048:55;5148:1;5123:16;;;5141:4;5119:27;5112:38;;;;5127:7;4651:530;-1:-1:-1;;;4651:530:31:o;5186:251::-;5256:6;5309:2;5297:9;5288:7;5284:23;5280:32;5277:52;;;5325:1;5322;5315:12;5277:52;5357:9;5351:16;5376:31;5401:5;5376:31;:::i;5442:255::-;5509:6;5562:2;5550:9;5541:7;5537:23;5533:32;5530:52;;;5578:1;5575;5568:12;5530:52;5617:9;5604:23;5636:31;5661:5;5636:31;:::i;5702:1071::-;5856:6;5864;5872;5880;5888;5941:3;5929:9;5920:7;5916:23;5912:33;5909:53;;;5958:1;5955;5948:12;5909:53;5997:9;5984:23;6016:31;6041:5;6016:31;:::i;:::-;6066:5;-1:-1:-1;6123:2:31;6108:18;;6095:32;6136:33;6095:32;6136:33;:::i;:::-;6188:7;-1:-1:-1;6246:2:31;6231:18;;6218:32;-1:-1:-1;;;;;6299:14:31;;;6296:34;;;6326:1;6323;6316:12;6296:34;6349:61;6402:7;6393:6;6382:9;6378:22;6349:61;:::i;:::-;6339:71;;6463:2;6452:9;6448:18;6435:32;6419:48;;6492:2;6482:8;6479:16;6476:36;;;6508:1;6505;6498:12;6476:36;6531:63;6586:7;6575:8;6564:9;6560:24;6531:63;:::i;:::-;6521:73;;6647:3;6636:9;6632:19;6619:33;6603:49;;6677:2;6667:8;6664:16;6661:36;;;6693:1;6690;6683:12;6661:36;;6716:51;6759:7;6748:8;6737:9;6733:24;6716:51;:::i;:::-;6706:61;;;5702:1071;;;;;;;;:::o;6778:665::-;6873:6;6881;6889;6897;6950:3;6938:9;6929:7;6925:23;6921:33;6918:53;;;6967:1;6964;6957:12;6918:53;7006:9;6993:23;7025:31;7050:5;7025:31;:::i;:::-;7075:5;-1:-1:-1;7132:2:31;7117:18;;7104:32;7145:33;7104:32;7145:33;:::i;:::-;7197:7;-1:-1:-1;7251:2:31;7236:18;;7223:32;;-1:-1:-1;7306:2:31;7291:18;;7278:32;-1:-1:-1;;;;;7322:30:31;;7319:50;;;7365:1;7362;7355:12;7319:50;7388:49;7429:7;7420:6;7409:9;7405:22;7388:49;:::i;:::-;7378:59;;;6778:665;;;;;;;:::o;7448:734::-;7552:6;7560;7568;7576;7584;7637:3;7625:9;7616:7;7612:23;7608:33;7605:53;;;7654:1;7651;7644:12;7605:53;7693:9;7680:23;7712:31;7737:5;7712:31;:::i;:::-;7762:5;-1:-1:-1;7819:2:31;7804:18;;7791:32;7832:33;7791:32;7832:33;:::i;:::-;7884:7;-1:-1:-1;7938:2:31;7923:18;;7910:32;;-1:-1:-1;7989:2:31;7974:18;;7961:32;;-1:-1:-1;8044:3:31;8029:19;;8016:33;-1:-1:-1;;;;;8061:30:31;;8058:50;;;8104:1;8101;8094:12;8058:50;8127:49;8168:7;8159:6;8148:9;8144:22;8127:49;:::i;8187:383::-;8264:6;8272;8280;8333:2;8321:9;8312:7;8308:23;8304:32;8301:52;;;8349:1;8346;8339:12;8301:52;8388:9;8375:23;8407:31;8432:5;8407:31;:::i;:::-;8457:5;8509:2;8494:18;;8481:32;;-1:-1:-1;8560:2:31;8545:18;;;8532:32;;8187:383;-1:-1:-1;;;8187:383:31:o;8575:1073::-;8777:6;8785;8793;8801;8854:3;8842:9;8833:7;8829:23;8825:33;8822:53;;;8871:1;8868;8861:12;8822:53;8911:9;8898:23;-1:-1:-1;;;;;8981:2:31;8973:6;8970:14;8967:34;;;8997:1;8994;8987:12;8967:34;9020:70;9082:7;9073:6;9062:9;9058:22;9020:70;:::i;:::-;9010:80;;9143:2;9132:9;9128:18;9115:32;9099:48;;9172:2;9162:8;9159:16;9156:36;;;9188:1;9185;9178:12;9156:36;9211:63;9266:7;9255:8;9244:9;9240:24;9211:63;:::i;:::-;9201:73;;9327:2;9316:9;9312:18;9299:32;9283:48;;9356:2;9346:8;9343:16;9340:36;;;9372:1;9369;9362:12;9340:36;9395:63;9450:7;9439:8;9428:9;9424:24;9395:63;:::i;:::-;9385:73;;9511:2;9500:9;9496:18;9483:32;9467:48;;9540:2;9530:8;9527:16;9524:36;;;9556:1;9553;9546:12;9524:36;;9579:63;9634:7;9623:8;9612:9;9608:24;9579:63;:::i;9653:1300::-;9889:6;9897;9905;9913;9921;9974:3;9962:9;9953:7;9949:23;9945:33;9942:53;;;9991:1;9988;9981:12;9942:53;10031:9;10018:23;-1:-1:-1;;;;;10101:2:31;10093:6;10090:14;10087:34;;;10117:1;10114;10107:12;10087:34;10140:70;10202:7;10193:6;10182:9;10178:22;10140:70;:::i;:::-;10130:80;;10263:2;10252:9;10248:18;10235:32;10219:48;;10292:2;10282:8;10279:16;10276:36;;;10308:1;10305;10298:12;10276:36;10331:63;10386:7;10375:8;10364:9;10360:24;10331:63;:::i;:::-;10321:73;;10447:2;10436:9;10432:18;10419:32;10403:48;;10476:2;10466:8;10463:16;10460:36;;;10492:1;10489;10482:12;10460:36;10515:63;10570:7;10559:8;10548:9;10544:24;10515:63;:::i;:::-;10505:73;;10631:2;10620:9;10616:18;10603:32;10587:48;;10660:2;10650:8;10647:16;10644:36;;;10676:1;10673;10666:12;10644:36;10699:63;10754:7;10743:8;10732:9;10728:24;10699:63;:::i;:::-;10689:73;;10815:3;10804:9;10800:19;10787:33;10771:49;;10845:2;10835:8;10832:16;10829:36;;;10861:1;10858;10851:12;10829:36;;10884:63;10939:7;10928:8;10917:9;10913:24;10884:63;:::i;10958:1775::-;11276:6;11284;11292;11300;11308;11316;11324;11377:3;11365:9;11356:7;11352:23;11348:33;11345:53;;;11394:1;11391;11384:12;11345:53;11434:9;11421:23;-1:-1:-1;;;;;11504:2:31;11496:6;11493:14;11490:34;;;11520:1;11517;11510:12;11490:34;11543:70;11605:7;11596:6;11585:9;11581:22;11543:70;:::i;:::-;11533:80;;11666:2;11655:9;11651:18;11638:32;11622:48;;11695:2;11685:8;11682:16;11679:36;;;11711:1;11708;11701:12;11679:36;11734:63;11789:7;11778:8;11767:9;11763:24;11734:63;:::i;:::-;11724:73;;11850:2;11839:9;11835:18;11822:32;11806:48;;11879:2;11869:8;11866:16;11863:36;;;11895:1;11892;11885:12;11863:36;11918:63;11973:7;11962:8;11951:9;11947:24;11918:63;:::i;:::-;11908:73;;12034:2;12023:9;12019:18;12006:32;11990:48;;12063:2;12053:8;12050:16;12047:36;;;12079:1;12076;12069:12;12047:36;12102:63;12157:7;12146:8;12135:9;12131:24;12102:63;:::i;:::-;12092:73;;12218:3;12207:9;12203:19;12190:33;12174:49;;12248:2;12238:8;12235:16;12232:36;;;12264:1;12261;12254:12;12232:36;12287:61;12340:7;12329:8;12318:9;12314:24;12287:61;:::i;:::-;12277:71;;12401:3;12390:9;12386:19;12373:33;12357:49;;12431:2;12421:8;12418:16;12415:36;;;12447:1;12444;12437:12;12415:36;12470:62;12524:7;12513:8;12502:9;12498:24;12470:62;:::i;:::-;12460:72;;12585:3;12574:9;12570:19;12557:33;12541:49;;12615:2;12605:8;12602:16;12599:36;;;12631:1;12628;12621:12;12599:36;;12654:73;12719:7;12708:8;12697:9;12693:24;12654:73;:::i;:::-;12644:83;;;10958:1775;;;;;;;;;;:::o;12738:1523::-;13006:6;13014;13022;13030;13038;13046;13099:3;13087:9;13078:7;13074:23;13070:33;13067:53;;;13116:1;13113;13106:12;13067:53;13156:9;13143:23;-1:-1:-1;;;;;13226:2:31;13218:6;13215:14;13212:34;;;13242:1;13239;13232:12;13212:34;13265:70;13327:7;13318:6;13307:9;13303:22;13265:70;:::i;:::-;13255:80;;13388:2;13377:9;13373:18;13360:32;13344:48;;13417:2;13407:8;13404:16;13401:36;;;13433:1;13430;13423:12;13401:36;13456:63;13511:7;13500:8;13489:9;13485:24;13456:63;:::i;:::-;13446:73;;13572:2;13561:9;13557:18;13544:32;13528:48;;13601:2;13591:8;13588:16;13585:36;;;13617:1;13614;13607:12;13585:36;13640:63;13695:7;13684:8;13673:9;13669:24;13640:63;:::i;:::-;13630:73;;13756:2;13745:9;13741:18;13728:32;13712:48;;13785:2;13775:8;13772:16;13769:36;;;13801:1;13798;13791:12;13769:36;13824:63;13879:7;13868:8;13857:9;13853:24;13824:63;:::i;:::-;13814:73;;13940:3;13929:9;13925:19;13912:33;13896:49;;13970:2;13960:8;13957:16;13954:36;;;13986:1;13983;13976:12;13954:36;14009:61;14062:7;14051:8;14040:9;14036:24;14009:61;:::i;:::-;13999:71;;14123:3;14112:9;14108:19;14095:33;14079:49;;14153:2;14143:8;14140:16;14137:36;;;14169:1;14166;14159:12;14137:36;;14192:63;14247:7;14236:8;14225:9;14221:24;14192:63;:::i;:::-;14182:73;;;12738:1523;;;;;;;;:::o;14266:241::-;14322:6;14375:2;14363:9;14354:7;14350:23;14346:32;14343:52;;;14391:1;14388;14381:12;14343:52;14430:9;14417:23;14449:28;14471:5;14449:28;:::i;14512:245::-;14579:6;14632:2;14620:9;14611:7;14607:23;14603:32;14600:52;;;14648:1;14645;14638:12;14600:52;14680:9;14674:16;14699:28;14721:5;14699:28;:::i;14762:184::-;14820:6;14873:2;14861:9;14852:7;14848:23;14844:32;14841:52;;;14889:1;14886;14879:12;14841:52;14912:28;14930:9;14912:28;:::i;14951:180::-;15010:6;15063:2;15051:9;15042:7;15038:23;15034:32;15031:52;;;15079:1;15076;15069:12;15031:52;-1:-1:-1;15102:23:31;;14951:180;-1:-1:-1;14951:180:31:o;15136:247::-;15204:6;15257:2;15245:9;15236:7;15232:23;15228:32;15225:52;;;15273:1;15270;15263:12;15225:52;15305:9;15299:16;15324:29;15347:5;15324:29;:::i;15388:435::-;15441:3;15479:5;15473:12;15506:6;15501:3;15494:19;15532:4;15561:2;15556:3;15552:12;15545:19;;15598:2;15591:5;15587:14;15619:1;15629:169;15643:6;15640:1;15637:13;15629:169;;;15704:13;;15692:26;;15738:12;;;;15773:15;;;;15665:1;15658:9;15629:169;;;-1:-1:-1;15814:3:31;;15388:435;-1:-1:-1;;;;;15388:435:31:o;15828:359::-;16033:2;16029:15;;;;-1:-1:-1;;16025:53:31;16013:66;;16104:2;16095:12;;16088:28;;;;16141:2;16132:12;;16125:28;16178:2;16169:12;;15828:359::o;16192:274::-;16321:3;16359:6;16353:13;16375:53;16421:6;16416:3;16409:4;16401:6;16397:17;16375:53;:::i;:::-;16444:16;;;;;16192:274;-1:-1:-1;;16192:274:31:o;16471:889::-;-1:-1:-1;;;;;16922:15:31;;;16904:34;;16974:15;;16969:2;16954:18;;16947:43;16884:3;17021:2;17006:18;;16999:31;;;16847:4;;17053:57;;17090:19;;17082:6;17053:57;:::i;:::-;17158:9;17150:6;17146:22;17141:2;17130:9;17126:18;17119:50;17192:44;17229:6;17221;17192:44;:::i;:::-;17273:22;;;17267:3;17252:19;;;17245:51;;;;-1:-1:-1;;17320:1:31;17305:17;;17351:2;17339:15;;16471:889;-1:-1:-1;;;;16471:889:31:o;18671:753::-;18983:14;;18976:22;18958:41;;19030:2;19015:18;;19008:34;;;19090:4;19078:17;;;19073:2;19058:18;;19051:45;-1:-1:-1;;;;;;19132:33:31;;19127:2;19112:18;;19105:61;19203:17;;19197:3;19182:19;;19175:46;18945:3;18930:19;;19251:1;19240:13;;19230:144;;19296:10;19291:3;19287:20;19284:1;19277:31;19331:4;19328:1;19321:15;19359:4;19356:1;19349:15;19230:144;19411:6;19405:3;19394:9;19390:19;19383:35;18671:753;;;;;;;;;:::o;19636:383::-;19785:2;19774:9;19767:21;19748:4;19817:6;19811:13;19860:6;19855:2;19844:9;19840:18;19833:34;19876:66;19935:6;19930:2;19919:9;19915:18;19910:2;19902:6;19898:15;19876:66;:::i;:::-;20003:2;19982:15;-1:-1:-1;;19978:29:31;19963:45;;;;20010:2;19959:54;;19636:383;-1:-1:-1;;19636:383:31:o;25059:351::-;25261:2;25243:21;;;25300:2;25280:18;;;25273:30;25339:29;25334:2;25319:18;;25312:57;25401:2;25386:18;;25059:351::o;25415:347::-;25617:2;25599:21;;;25656:2;25636:18;;;25629:30;25695:25;25690:2;25675:18;;25668:53;25753:2;25738:18;;25415:347::o;26119:349::-;26321:2;26303:21;;;26360:2;26340:18;;;26333:30;26399:27;26394:2;26379:18;;26372:55;26459:2;26444:18;;26119:349::o;29703:340::-;29905:2;29887:21;;;29944:2;29924:18;;;29917:30;-1:-1:-1;;;29978:2:31;29963:18;;29956:46;30034:2;30019:18;;29703:340::o;30048:337::-;30250:2;30232:21;;;30289:2;30269:18;;;30262:30;-1:-1:-1;;;30323:2:31;30308:18;;30301:43;30376:2;30361:18;;30048:337::o;31853:340::-;32055:2;32037:21;;;32094:2;32074:18;;;32067:30;-1:-1:-1;;;32128:2:31;32113:18;;32106:46;32184:2;32169:18;;31853:340::o;33843:275::-;33914:2;33908:9;33979:2;33960:13;;-1:-1:-1;;33956:27:31;33944:40;;-1:-1:-1;;;;;33999:34:31;;34035:22;;;33996:62;33993:88;;;34061:18;;:::i;:::-;34097:2;34090:22;33843:275;;-1:-1:-1;33843:275:31:o;34123:183::-;34183:4;-1:-1:-1;;;;;34208:6:31;34205:30;34202:56;;;34238:18;;:::i;:::-;-1:-1:-1;34283:1:31;34279:14;34295:4;34275:25;;34123:183::o;34311:224::-;34350:3;34378:6;34411:2;34408:1;34404:10;34441:2;34438:1;34434:10;34472:3;34468:2;34464:12;34459:3;34456:21;34453:47;;;34480:18;;:::i;:::-;34516:13;;34311:224;-1:-1:-1;;;;34311:224:31:o;34540:128::-;34580:3;34611:1;34607:6;34604:1;34601:13;34598:39;;;34617:18;;:::i;:::-;-1:-1:-1;34653:9:31;;34540:128::o;34673:217::-;34713:1;34739;34729:132;;34783:10;34778:3;34774:20;34771:1;34764:31;34818:4;34815:1;34808:15;34846:4;34843:1;34836:15;34729:132;-1:-1:-1;34875:9:31;;34673:217::o;34895:422::-;34984:1;35027:5;34984:1;35041:270;35062:7;35052:8;35049:21;35041:270;;;35121:4;35117:1;35113:6;35109:17;35103:4;35100:27;35097:53;;;35130:18;;:::i;:::-;35180:7;35170:8;35166:22;35163:55;;;35200:16;;;;35163:55;35279:22;;;;35239:15;;;;35041:270;;;35045:3;34895:422;;;;;:::o;35322:131::-;35382:5;35411:36;35438:8;35432:4;35507:5;35537:8;35527:80;;-1:-1:-1;35578:1:31;35592:5;;35527:80;35626:4;35616:76;;-1:-1:-1;35663:1:31;35677:5;;35616:76;35708:4;35726:1;35721:59;;;;35794:1;35789:130;;;;35701:218;;35721:59;35751:1;35742:10;;35765:5;;;35789:130;35826:3;35816:8;35813:17;35810:43;;;35833:18;;:::i;:::-;-1:-1:-1;;35889:1:31;35875:16;;35904:5;;35701:218;;36003:2;35993:8;35990:16;35984:3;35978:4;35975:13;35971:36;35965:2;35955:8;35952:16;35947:2;35941:4;35938:12;35934:35;35931:77;35928:159;;;-1:-1:-1;36040:19:31;;;36072:5;;35928:159;36119:34;36144:8;36138:4;36119:34;:::i;:::-;36189:6;36185:1;36181:6;36177:19;36168:7;36165:32;36162:58;;;36200:18;;:::i;:::-;36238:20;;35458:806;-1:-1:-1;;;35458:806:31:o;36269:168::-;36309:7;36375:1;36371;36367:6;36363:14;36360:1;36357:21;36352:1;36345:9;36338:17;36334:45;36331:71;;;36382:18;;:::i;:::-;-1:-1:-1;36422:9:31;;36269:168::o;36442:217::-;36481:4;36510:6;36566:10;;;;36536;;36588:12;;;36585:38;;;36603:18;;:::i;:::-;36640:13;;36442:217;-1:-1:-1;;;36442:217:31:o;36664:125::-;36704:4;36732:1;36729;36726:8;36723:34;;;36737:18;;:::i;:::-;-1:-1:-1;36774:9:31;;36664:125::o;36794:258::-;36866:1;36876:113;36890:6;36887:1;36884:13;36876:113;;;36966:11;;;36960:18;36947:11;;;36940:39;36912:2;36905:10;36876:113;;;37007:6;37004:1;37001:13;36998:48;;;-1:-1:-1;;37042:1:31;37024:16;;37017:27;36794:258::o;37057:135::-;37096:3;-1:-1:-1;;37117:17:31;;37114:43;;;37137:18;;:::i;:::-;-1:-1:-1;37184:1:31;37173:13;;37057:135::o;37197:127::-;37258:10;37253:3;37249:20;37246:1;37239:31;37289:4;37286:1;37279:15;37313:4;37310:1;37303:15;37329:127;37390:10;37385:3;37381:20;37378:1;37371:31;37421:4;37418:1;37411:15;37445:4;37442:1;37435:15;37461:127;37522:10;37517:3;37513:20;37510:1;37503:31;37553:4;37550:1;37543:15;37577:4;37574:1;37567:15;37593:127;37654:10;37649:3;37645:20;37642:1;37635:31;37685:4;37682:1;37675:15;37709:4;37706:1;37699:15;37725:131;-1:-1:-1;;;;;37800:31:31;;37790:42;;37780:70;;37846:1;37843;37836:12;37861:118;37947:5;37940:13;37933:21;37926:5;37923:32;37913:60;;37969:1;37966;37959:12;37984:114;38068:4;38061:5;38057:16;38050:5;38047:27;38037:55;;38088:1;38085;38078:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    2113,
    28109
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76774EA3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9C40183 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC9C40183 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xCBE55E54 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xFE46B7CD EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x76774EA3 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x937821A1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xBF2B23EA EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C31F710 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1C31F710 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x1CBB410F EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x296C21B7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x14B5685C EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x193 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x43F9 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x40ED JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x3F45 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x43BF JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3E7B JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x41B1 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x4018 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP9 ADD MSTORE SWAP5 DUP8 AND SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4414 JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x40ED JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E98 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x404D JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x42CB JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FB0 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x4018 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x400 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A PUSH2 0x7CB PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xE9E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x46AF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x46AF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x512 PUSH2 0xFD3 PUSH2 0x445 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1578 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x492D JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL DUP2 DIV PUSH1 0xE0 SHL SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D4 PUSH2 0x492D JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP SWAP4 SWAP8 SWAP1 SWAP5 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x46AF JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A66656520657863656564732031303070637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x16A8 PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x708 PUSH2 0x1AA9 PUSH2 0x445 DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x702 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH2 0xD18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4688 JUMP JUMPDEST PUSH2 0x745 PUSH2 0x1E76 PUSH2 0x445 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25F8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x76A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP10 PUSH1 0x1 PUSH1 0xC8 SHL DUP3 DIV PUSH2 0xFFFF AND SWAP10 POP PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH1 0xFF AND SWAP9 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x7F6 JUMPI PUSH2 0x7F6 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x833 JUMPI PUSH2 0x833 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x881 JUMPI PUSH2 0x881 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH2 0x89F PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8BE JUMPI PUSH2 0x8BE PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x9D9 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x942 PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9D1 JUMPI PUSH2 0x9D1 PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x271A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA30 SWAP1 CALLER TIMESTAMP PUSH2 0x279D JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA46 PUSH2 0x492D JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xA5C JUMPI PUSH2 0xA5C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA75 PUSH2 0x492D JUMP JUMPDEST EQ PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45B9 JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB0F SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP5 SLOAD SWAP2 SWAP3 POP PUSH2 0xC30 SWAP2 DUP6 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB3B JUMPI PUSH2 0xB3B PUSH2 0x492D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBCA PUSH2 0x492D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDB PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH2 0x284D JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP4 DIV DUP4 AND SWAP3 PUSH1 0x1C SWAP2 PUSH2 0xC66 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV AND PUSH2 0x472C JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH2 0x100 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xCDA SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0xD0C DUP2 PUSH2 0x48FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD20 PUSH2 0x3AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD65 JUMPI PUSH2 0xD65 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD8E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDBF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDF0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE60 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE91 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD MLOAD GT PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x52654E46543A3A6E6F206E667473 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0xFC6 JUMPI DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF0E JUMPI PUSH2 0xF0E PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF39 JUMPI PUSH2 0xF39 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xF89 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF6E JUMPI PUSH2 0xF6E PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF87 JUMPI PUSH2 0xF87 PUSH2 0x492D JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xFA6 JUMPI PUSH1 0x20 DUP2 ADD DUP1 MLOAD SWAP1 PUSH2 0xF9E DUP3 PUSH2 0x48FC JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xFB3 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 PUSH2 0xF9E DUP3 PUSH2 0x48FC JUMP JUMPDEST PUSH2 0xD14 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x1537 JUMPI PUSH2 0xFEC DUP3 DUP3 PUSH2 0x2AF2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1008 JUMPI PUSH2 0x1008 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1026 JUMPI PUSH2 0x1026 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1043 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH1 0xE0 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH2 0x113B SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1093 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A4 PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1122 JUMPI PUSH2 0x1122 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1133 JUMPI PUSH2 0x1133 PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x2C68 JUMP JUMPDEST PUSH2 0x1173 DUP5 PUSH2 0x180 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x116E JUMPI PUSH2 0x116E PUSH2 0x492D JUMP JUMPDEST PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x118C JUMPI PUSH2 0x118C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x492D JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E2 PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xC0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x120C JUMPI PUSH2 0x120C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xE0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1232 JUMPI PUSH2 0x1232 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0x1271 JUMPI DUP7 PUSH1 0xA0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1264 JUMPI PUSH2 0x1264 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0x12A4 JUMPI DUP7 PUSH1 0xA0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH2 0x180 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x12CA JUMPI PUSH2 0x12CA PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E3 PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH2 0x1310 PUSH2 0x492D JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP5 AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH6 0xFFFFFFFFFFFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0xD0 SHL NOT AND OR PUSH1 0x1 PUSH1 0xD0 SHL PUSH2 0xFFFF SWAP4 DUP5 AND MUL OR PUSH2 0xFFFF PUSH1 0xE0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL SWAP1 DUP2 OR DUP4 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 DUP4 SWAP2 PUSH3 0xFFFFFF PUSH1 0xE0 SHL NOT SWAP1 SWAP2 AND PUSH1 0xFF PUSH1 0xF0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xF0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13EC JUMPI PUSH2 0x13EC PUSH2 0x492D JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x140A JUMPI PUSH2 0x140A PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x142C JUMPI PUSH2 0x142C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x46E173C7568BB4F093E16923381DCBA2A6B48F9CC9E688867965731218500AD3 DUP5 PUSH1 0x3 SLOAD DUP11 PUSH1 0xC0 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x1482 JUMPI PUSH2 0x1482 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0xE0 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x14A0 JUMPI PUSH2 0x14A0 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH2 0x14D0 JUMPI DUP13 PUSH1 0xA0 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x14C3 JUMPI PUSH2 0x14C3 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP14 PUSH2 0x180 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x14EA JUMPI PUSH2 0x14EA PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1504 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x151C DUP4 PUSH2 0x48FC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x152F SWAP1 PUSH2 0x48FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFD6 JUMP JUMPDEST POP PUSH2 0x1575 DUP2 CALLER ADDRESS PUSH2 0x1557 DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2D74 JUMP JUMPDEST PUSH2 0x1570 DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2D74 JUMP JUMPDEST PUSH2 0x2E33 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x3AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D7 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1600 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1631 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1662 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1693 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16F1 JUMPI PUSH2 0x16F1 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x172A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x179B JUMPI PUSH2 0x179B PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x180E SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1863 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x18B9 SWAP1 TIMESTAMP PUSH2 0x303A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x19D7 SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E3 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F4 PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1972 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1983 JUMPI PUSH2 0x1983 PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3090 JUMP JUMPDEST DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19EE JUMPI PUSH2 0x19EE PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1A31 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SLOAD DUP3 SLOAD PUSH2 0x1A5C SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV AND PUSH2 0x472C JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH2 0xFFFF PUSH1 0xE0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x1AA1 DUP2 PUSH2 0x48FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16AB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1ABC SWAP2 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD3 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1B2E JUMPI PUSH2 0x1B2E PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B4C JUMPI PUSH2 0x1B4C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B6B JUMPI PUSH2 0x1B6B PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B85 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH2 0x1BC3 PUSH2 0x492D JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BD9 JUMPI PUSH2 0x1BD9 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF2 PUSH2 0x492D JUMP JUMPDEST EQ PUSH2 0x1C0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45B9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV AND EQ PUSH2 0x1C6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995391950E8E9858DD1A5D995B1E481C995B9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH2 0x1C97 SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH2 0x1D6A SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC1 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD2 PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D50 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D61 PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE POP CALLER PUSH2 0x3242 JUMP JUMPDEST DUP1 SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 DUP7 SWAP1 PUSH2 0x1D87 SWAP1 DUP7 PUSH2 0x48B9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D97 JUMPI PUSH2 0x1D97 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 SLOAD PUSH2 0x100 DUP8 ADD MLOAD DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP6 POP SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1DC4 JUMPI PUSH2 0x1DC4 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0xD0234BC8DD7E933F60CBC1E90FC139A8A9683AF1CB92743607DAFB9DFB70059B TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1E07 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x1E36 DUP2 PUSH2 0x48FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B06 JUMP JUMPDEST POP PUSH2 0x1E71 DUP4 ADDRESS CALLER PUSH2 0x1E5E DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2D74 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x1570 SWAP2 DUP10 SWAP2 DUP2 PUSH2 0x2D74 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1EA1 JUMPI PUSH2 0x1EA1 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EBF JUMPI PUSH2 0x1EBF PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1EDE JUMPI PUSH2 0x1EDE PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1F2C JUMPI PUSH2 0x1F2C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1F4A JUMPI PUSH2 0x1F4A PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F67 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4485 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x1FC0 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x2015 SWAP1 PUSH2 0x329B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x20EA SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x203F JUMPI PUSH2 0x203F PUSH2 0x492D JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x2050 PUSH2 0x492D JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20CE JUMPI PUSH2 0x20CE PUSH2 0x492D JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20DF JUMPI PUSH2 0x20DF PUSH2 0x492D JUMP JUMPDEST SWAP1 MSTORE POP DUP8 DUP8 CALLER PUSH2 0x334E JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2100 JUMPI PUSH2 0x2100 PUSH2 0x492D JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2116 JUMPI PUSH2 0x2116 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x212F JUMPI PUSH2 0x212F PUSH2 0x492D JUMP JUMPDEST EQ PUSH2 0x214C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45B9 JUMP JUMPDEST DUP2 SLOAD PUSH2 0x160 DUP8 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x2173 JUMPI PUSH2 0x2173 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x21C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E9 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x226D SWAP2 SWAP1 PUSH2 0x3E5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E2 SWAP2 SWAP1 PUSH2 0x442D JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x22F4 DUP3 PUSH1 0xA PUSH2 0x47CF JUMP JUMPDEST DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2310 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xE0 SHL DUP4 PUSH2 0x34C2 JUMP JUMPDEST DUP12 PUSH2 0x140 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x2327 JUMPI PUSH2 0x2327 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x2349 JUMPI PUSH2 0x2349 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST PUSH2 0x2365 SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x2387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4627 JUMP JUMPDEST PUSH2 0x239C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP5 PUSH2 0x3551 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x140 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x23CF JUMPI PUSH2 0x23CF PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x160 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x2402 JUMPI PUSH2 0x2402 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP4 DUP7 ADD MLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0xC8 SHL MUL PUSH2 0xFFFF PUSH1 0xC8 SHL NOT PUSH4 0xFFFFFFFF SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP7 SWAP1 SWAP7 AND PUSH6 0xFFFFFFFFFFFF PUSH1 0xA8 SHL NOT SWAP4 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR SWAP3 SWAP1 SWAP3 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x160 DUP10 ADD MLOAD DUP1 MLOAD DUP10 SWAP1 DUP2 LT PUSH2 0x24AE JUMPI PUSH2 0x24AE PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH1 0x7 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x24EB SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 SLOAD DUP10 PUSH2 0x100 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x251F JUMPI PUSH2 0x251F PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631 DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x2569 JUMPI PUSH2 0x2569 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x2588 JUMPI PUSH2 0x2588 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x25D9 DUP4 PUSH2 0x48FC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x25F0 SWAP1 PUSH2 0x48FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E79 JUMP JUMPDEST PUSH2 0x2600 PUSH2 0x3AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2645 JUMPI PUSH2 0x2645 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x266E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x269F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP10 ADD DUP4 MSTORE DUP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE SWAP5 DUP5 ADD SWAP1 SWAP3 MSTORE POP PUSH1 0xA0 SWAP1 SWAP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2727 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x35BC JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A6475726174696F6E207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4627 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103932B73A32B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x2800 DUP4 DUP3 PUSH2 0x3608 JUMP JUMPDEST ISZERO PUSH2 0x1E71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A706173742072657475726E2064617465000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2865 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28E9 SWAP2 SWAP1 PUSH2 0x3E5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x293A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x295E SWAP2 SWAP1 PUSH2 0x442D JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2970 DUP3 PUSH1 0xA PUSH2 0x47CF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2982 DUP9 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x34C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 DUP10 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x29A2 SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST PUSH2 0x29AC SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x15180 PUSH2 0x29BE DUP5 DUP11 PUSH2 0x4877 JUMP JUMPDEST PUSH2 0x29C8 SWAP2 SWAP1 PUSH2 0x476A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x2A26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65726F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2A76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A82 DUP3 DUP5 PUSH2 0x48B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x2AAE JUMPI PUSH1 0x0 PUSH2 0x2A9E DUP4 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x3696 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AAA DUP2 DUP5 PUSH2 0x48B9 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x2AC8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP5 PUSH2 0x3773 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AE5 JUMPI DUP10 MLOAD PUSH2 0x2AE5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP4 PUSH2 0x3773 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B0A JUMPI PUSH2 0x2B0A PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x2B5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B79 JUMPI PUSH2 0x2B79 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2B9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x465E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BB7 JUMPI PUSH2 0x2BB7 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x2BDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BF9 JUMPI PUSH2 0x2BF9 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x2C22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x465E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2C3A JUMPI PUSH2 0x2C3A PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 SHR PUSH4 0xFFFFFFFF AND GT PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4627 JUMP JUMPDEST PUSH2 0x2C75 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2CC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND ISZERO PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2D80 DUP5 DUP5 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D97 JUMPI PUSH2 0x2D97 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DC0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2A JUMPI DUP6 PUSH2 0x2DD8 DUP5 DUP4 PUSH2 0x48B9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2DE8 JUMPI PUSH2 0x2DE8 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP7 DUP4 PUSH2 0x2DFD SWAP2 SWAP1 PUSH2 0x48B9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2E0D JUMPI PUSH2 0x2E0D PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2E22 DUP2 PUSH2 0x48FC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2DC5 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MLOAD DUP7 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E4C JUMPI PUSH2 0x2E4C PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E65 JUMPI PUSH2 0x2E65 PUSH2 0x492D JUMP JUMPDEST EQ ISZERO PUSH2 0x2F2B JUMPI PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E82 JUMPI PUSH2 0x2E82 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP6 DUP6 DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2EB4 JUMPI PUSH2 0x2EB4 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x44A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2F42 JUMPI PUSH2 0x2F42 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2EB2C2D6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2FBF SWAP1 PUSH2 0x35BC JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2FE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45F0 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x3044 DUP3 DUP3 PUSH2 0x3608 JUMP JUMPDEST PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x30A8 JUMPI PUSH2 0x30A8 PUSH2 0x492D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x312C SWAP2 SWAP1 PUSH2 0x3E5E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x317D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A1 SWAP2 SWAP1 PUSH2 0x442D JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x31B3 DUP3 PUSH1 0xA PUSH2 0x47CF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31C5 DUP8 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x34C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x31E5 SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST PUSH2 0x31EF SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x321E JUMPI PUSH2 0x321B DUP3 DUP9 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3216 JUMPI PUSH2 0x3216 PUSH2 0x492D JUMP JUMPDEST PUSH2 0x3696 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x2FA9 SWAP1 PUSH2 0x3231 DUP4 DUP6 PUSH2 0x48B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 PUSH2 0x3773 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103632B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x32A6 SWAP1 PUSH2 0x37A3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x32F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x33B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x33CF JUMPI PUSH2 0x33CF PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x33F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x465E JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3411 JUMPI PUSH2 0x3411 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x3439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45F0 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3458 JUMPI PUSH2 0x3458 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDEEECAC840DAC2F PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CE DUP4 DUP4 PUSH2 0x37FA JUMP JUMPDEST PUSH1 0xF0 DUP4 SWAP1 SHR PUSH2 0xFFFF PUSH1 0xE0 DUP6 SWAP1 SHR AND PUSH1 0x0 PUSH2 0x34EA PUSH2 0x2710 DUP7 PUSH2 0x476A JUMP JUMPDEST SWAP1 POP PUSH2 0x270F DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3500 JUMPI PUSH2 0x270F SWAP3 POP JUMPDEST PUSH2 0x270F DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x3514 JUMPI PUSH2 0x270F SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x3524 DUP7 PUSH2 0xFFFF DUP7 AND PUSH2 0x4877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3536 DUP4 PUSH2 0xFFFF DUP7 AND PUSH2 0x4877 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3544 DUP3 DUP5 PUSH2 0x4752 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x708 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x388B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x52654E46543A3A7A65726F2061646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP3 GT PUSH2 0x3663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH2 0x3679 SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x368E SWAP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0x48B9 JUMP JUMPDEST GT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x36A6 SWAP2 SWAP1 PUSH2 0x4877 JUMP JUMPDEST SWAP1 POP PUSH2 0x36B4 PUSH2 0x2710 DUP3 PUSH2 0x476A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x36CA JUMPI PUSH2 0x36CA PUSH2 0x492D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x372A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x374E SWAP2 SWAP1 PUSH2 0x3E5E JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x376B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND DUP6 PUSH2 0x3773 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E71 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x3585 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xE0 DUP3 SWAP1 SHR PUSH2 0x3842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207072696365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207363616C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E0 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x395D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1E71 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x38FE SWAP2 SWAP1 PUSH2 0x43DC JUMP JUMPDEST PUSH2 0x1E71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x396C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3976 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x39D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x3A25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3A41 SWAP2 SWAP1 PUSH2 0x44AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3A7E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3A83 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3A93 DUP3 DUP3 DUP7 PUSH2 0x3A9E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3AAD JUMPI POP DUP2 PUSH2 0x396F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3ABD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3B65 PUSH2 0x3B60 DUP4 PUSH2 0x4709 JUMP JUMPDEST PUSH2 0x46D9 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3B85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3BAD JUMPI DUP2 CALLDATALOAD PUSH2 0x3B9B DUP2 PUSH2 0x496F JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3B88 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3BDB PUSH2 0x3B60 DUP4 PUSH2 0x4709 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3BFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3BAD JUMPI PUSH2 0x3C0F DUP3 PUSH2 0x3DD2 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3BFE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3C42 PUSH2 0x3B60 DUP4 PUSH2 0x4709 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3C8E JUMPI DUP3 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x3C7C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3C66 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3CBD PUSH2 0x3B60 DUP4 PUSH2 0x4709 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3CDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3C8E JUMPI DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3CF7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3CE1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3D2A PUSH2 0x3B60 DUP4 PUSH2 0x4709 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3D4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3BAD JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D4D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3D8A PUSH2 0x3B60 DUP4 PUSH2 0x4709 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3DAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3BAD JUMPI DUP2 CALLDATALOAD PUSH2 0x3DC0 DUP2 PUSH2 0x4992 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3DAD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3DEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3E19 JUMPI PUSH2 0x3E19 PUSH2 0x4959 JUMP JUMPDEST PUSH2 0x3E2C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x46D9 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x396F DUP2 PUSH2 0x496F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x396F DUP2 PUSH2 0x496F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3EB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x3EBB DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3ECB DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EF3 DUP10 DUP4 DUP11 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F15 DUP10 DUP4 DUP11 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3F2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F38 DUP9 DUP3 DUP10 ADD PUSH2 0x3DEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3F66 DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x3F76 DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3F98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FA4 DUP8 DUP3 DUP9 ADD PUSH2 0x3DEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3FC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x3FD3 DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3FE3 DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x400C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F38 DUP9 DUP3 DUP10 ADD PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x402D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x4038 DUP2 PUSH2 0x496F JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x407A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4086 DUP9 DUP4 DUP10 ADD PUSH2 0x3C21 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x409C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40A8 DUP9 DUP4 DUP10 ADD PUSH2 0x3B3F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40CA DUP9 DUP4 DUP10 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FA4 DUP8 DUP3 DUP9 ADD PUSH2 0x3D09 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x411C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4128 DUP10 DUP4 DUP11 ADD PUSH2 0x3C21 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x413E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x414A DUP10 DUP4 DUP11 ADD PUSH2 0x3B3F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x416C DUP10 DUP4 DUP11 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x418E DUP10 DUP4 DUP11 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x41A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F38 DUP9 DUP3 DUP10 ADD PUSH2 0x3D09 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x41CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x41E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41EF DUP12 DUP4 DUP13 ADD PUSH2 0x3C21 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4211 DUP12 DUP4 DUP13 ADD PUSH2 0x3B3F JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4233 DUP12 DUP4 DUP13 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4255 DUP12 DUP4 DUP13 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x426B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4277 DUP12 DUP4 DUP13 ADD PUSH2 0x3D69 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x428D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4299 DUP12 DUP4 DUP13 ADD PUSH2 0x3BBA JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x42AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42BC DUP11 DUP3 DUP12 ADD PUSH2 0x3C9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x42E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x42FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4307 DUP11 DUP4 DUP12 ADD PUSH2 0x3C21 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x431D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4329 DUP11 DUP4 DUP12 ADD PUSH2 0x3B3F JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x433F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x434B DUP11 DUP4 DUP12 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x436D DUP11 DUP4 DUP12 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x438F DUP11 DUP4 DUP12 ADD PUSH2 0x3D69 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x43A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B2 DUP10 DUP3 DUP11 ADD PUSH2 0x3D09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x396F DUP2 PUSH2 0x4984 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x396F DUP2 PUSH2 0x4984 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x440B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x396F DUP3 PUSH2 0x3DD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x443F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x396F DUP2 PUSH2 0x4992 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x447A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x445E JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x44C1 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x48D0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x44F7 SWAP1 DUP4 ADD DUP6 PUSH2 0x444A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4509 DUP2 DUP6 PUSH2 0x444A JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x60 DUP4 ADD MSTORE DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x4575 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x45A5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x48D0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0xA4CA9C8CA87474DCDEE840EAD2DCE87 PUSH1 0x83 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x14995391950E8E9C185D5CD959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2932A7232A1D1D3737BA1030B236B4B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4701 JUMPI PUSH2 0x4701 PUSH2 0x4959 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4722 JUMPI PUSH2 0x4722 PUSH2 0x4959 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x4749 JUMPI PUSH2 0x4749 PUSH2 0x4917 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4765 JUMPI PUSH2 0x4765 PUSH2 0x4917 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4787 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x47C7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x47AD JUMPI PUSH2 0x47AD PUSH2 0x4917 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x47BA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4791 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396F DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x47E5 JUMPI POP PUSH1 0x1 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH2 0x47F2 JUMPI POP PUSH1 0x0 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4808 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4812 JUMPI PUSH2 0x482E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x400 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4823 JUMPI PUSH2 0x4823 PUSH2 0x4917 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x400 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4851 JUMPI POP DUP2 DUP2 EXP PUSH2 0x400 JUMP JUMPDEST PUSH2 0x485B DUP4 DUP4 PUSH2 0x478C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x486F JUMPI PUSH2 0x486F PUSH2 0x4917 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4891 JUMPI PUSH2 0x4891 PUSH2 0x4917 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x48B1 JUMPI PUSH2 0x48B1 PUSH2 0x4917 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x48CB JUMPI PUSH2 0x48CB PUSH2 0x4917 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x48EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x48D3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x708 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x4910 JUMPI PUSH2 0x4910 PUSH2 0x4917 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xDB SWAP5 NOT 0x5E DUP4 0xCE 0xE8 KECCAK256 PUSH32 0x524A11F345E543F934668A9C30364DE1BFCC2D7FCF9064736F6C634300080700 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "LT",
      "path": "23"
    },
    "9": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF3"
    },
    "12": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "SHR",
      "path": "23"
    },
    "19": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "20": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x76774EA3"
    },
    "25": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "GT",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "30": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "31": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC9C40183"
    },
    "36": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "GT",
      "path": "23"
    },
    "37": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "41": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "42": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC9C40183"
    },
    "47": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "48": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x315"
    },
    "51": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "52": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "53": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xCBE55E54"
    },
    "58": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "59": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x335"
    },
    "62": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "63": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "64": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF23A6E61"
    },
    "69": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "70": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x348"
    },
    "73": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "74": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "75": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFE46B7CD"
    },
    "80": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "81": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x374"
    },
    "84": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "85": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "REVERT",
      "path": "23"
    },
    "89": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "90": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "91": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x76774EA3"
    },
    "96": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "97": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x285"
    },
    "100": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "101": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "102": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x937821A1"
    },
    "107": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "108": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A5"
    },
    "111": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "112": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "113": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xBC197C81"
    },
    "118": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "119": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C5"
    },
    "122": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "123": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "124": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xBF2B23EA"
    },
    "129": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "130": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F1"
    },
    "133": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "134": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "137": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "REVERT",
      "path": "23"
    },
    "138": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "139": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "140": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1C31F710"
    },
    "145": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "GT",
      "path": "23"
    },
    "146": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "150": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "151": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1C31F710"
    },
    "156": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "157": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B3"
    },
    "160": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "161": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "162": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1CBB410F"
    },
    "167": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "168": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D3"
    },
    "171": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "172": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "173": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x296C21B7"
    },
    "178": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "179": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F3"
    },
    "182": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "183": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "184": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5C975ABB"
    },
    "189": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "190": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26B"
    },
    "193": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "194": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "REVERT",
      "path": "23"
    },
    "198": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "199": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "200": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x1FFC9A7"
    },
    "205": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "206": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF8"
    },
    "209": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "210": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "211": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x14B5685C"
    },
    "216": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "217": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12D"
    },
    "220": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "221": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "222": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x150B7A02"
    },
    "227": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "228": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14F"
    },
    "231": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "232": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "233": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x16C38B3C"
    },
    "238": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "EQ",
      "path": "23"
    },
    "239": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x193"
    },
    "242": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "243": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "244": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "246": {
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "DUP1",
      "path": "23"
    },
    "247": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2113,
        28109
      ],
      "op": "REVERT",
      "path": "23"
    },
    "248": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "249": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "250": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "6"
    },
    "251": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "252": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x104"
    },
    "255": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "256": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "258": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "6"
    },
    "259": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "REVERT",
      "path": "6"
    },
    "260": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "265": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x113"
    },
    "268": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "269": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "271": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x43F9"
    },
    "274": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "6"
    },
    "275": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "276": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CF"
    },
    "279": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "6"
    },
    "280": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "281": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "283": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "DUP2"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "293": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "296": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "6"
    },
    "297": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "298": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SUB",
      "path": "6"
    },
    "299": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "300": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "RETURN",
      "path": "6"
    },
    "301": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "302": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "303": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "DUP1",
      "path": "23"
    },
    "304": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "305": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x139"
    },
    "308": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "309": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "311": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "DUP1",
      "path": "23"
    },
    "312": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "REVERT",
      "path": "23"
    },
    "313": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "318": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x148"
    },
    "321": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "322": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "324": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x40ED"
    },
    "327": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "23"
    },
    "328": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "329": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x406"
    },
    "332": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "23"
    },
    "333": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "334": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "STOP",
      "path": "23"
    },
    "335": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "336": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "337": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "17"
    },
    "338": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "339": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15B"
    },
    "342": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "343": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "17"
    },
    "346": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "REVERT",
      "path": "17"
    },
    "347": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17A"
    },
    "352": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16A"
    },
    "355": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "356": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "358": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3F45"
    },
    "361": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "17"
    },
    "362": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "363": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP5",
      "path": "17"
    },
    "372": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "373": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "17"
    },
    "374": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "17"
    },
    "375": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "17"
    },
    "376": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "17"
    },
    "377": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "17"
    },
    "378": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "379": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "op": "NOT"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x124"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "404": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "405": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "DUP1",
      "path": "23"
    },
    "406": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "407": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19F"
    },
    "410": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "411": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "413": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "DUP1",
      "path": "23"
    },
    "414": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "REVERT",
      "path": "23"
    },
    "415": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "416": {
      "op": "POP"
    },
    "417": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "420": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AE"
    },
    "423": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "424": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "426": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x43BF"
    },
    "429": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMP",
      "path": "23"
    },
    "430": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "431": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x451"
    },
    "434": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMP",
      "path": "23"
    },
    "435": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "436": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "437": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "DUP1",
      "path": "23"
    },
    "438": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "439": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BF"
    },
    "442": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "443": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "445": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "DUP1",
      "path": "23"
    },
    "446": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "REVERT",
      "path": "23"
    },
    "447": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "452": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CE"
    },
    "455": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "456": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "458": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E7B"
    },
    "461": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMP",
      "path": "23"
    },
    "462": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "463": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48E"
    },
    "466": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMP",
      "path": "23"
    },
    "467": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "468": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "469": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "DUP1",
      "path": "23"
    },
    "470": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "471": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DF"
    },
    "474": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "475": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "477": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "DUP1",
      "path": "23"
    },
    "478": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "REVERT",
      "path": "23"
    },
    "479": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "484": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EE"
    },
    "487": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "488": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "490": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x41B1"
    },
    "493": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "23"
    },
    "494": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "495": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4DA"
    },
    "498": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "23"
    },
    "499": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "500": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "501": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "DUP1",
      "path": "23"
    },
    "502": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "503": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FF"
    },
    "506": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "507": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "509": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "DUP1",
      "path": "23"
    },
    "510": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "REVERT",
      "path": "23"
    },
    "511": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x213"
    },
    "516": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20E"
    },
    "519": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "520": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "522": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4018"
    },
    "525": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMP",
      "path": "23"
    },
    "526": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "527": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x51B"
    },
    "530": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMP",
      "path": "23"
    },
    "531": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "532": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "534": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "DUP1",
      "path": "23"
    },
    "535": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "538": {
      "op": "SWAP9"
    },
    "539": {
      "op": "DUP10"
    },
    "540": {
      "op": "AND"
    },
    "541": {
      "op": "DUP2"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "op": "SWAP1"
    },
    "552": {
      "op": "SWAP8"
    },
    "553": {
      "op": "AND"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "556": {
      "op": "DUP9"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "SWAP5"
    },
    "560": {
      "op": "DUP8"
    },
    "561": {
      "op": "AND"
    },
    "562": {
      "op": "SWAP5"
    },
    "563": {
      "op": "DUP7"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "op": "SWAP5"
    },
    "566": {
      "op": "SWAP1"
    },
    "567": {
      "op": "SWAP5"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "op": "NOT"
    },
    "578": {
      "op": "SWAP1"
    },
    "579": {
      "op": "SWAP3"
    },
    "580": {
      "op": "AND"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "583": {
      "op": "DUP6"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "MSTORE"
    },
    "586": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "589": {
      "op": "SWAP1"
    },
    "590": {
      "op": "DUP2"
    },
    "591": {
      "op": "AND"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "594": {
      "op": "DUP6"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "AND"
    },
    "598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "600": {
      "op": "DUP4"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "SWAP2"
    },
    "604": {
      "op": "SWAP1"
    },
    "605": {
      "op": "SWAP2"
    },
    "606": {
      "op": "AND"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "614": {
      "op": "ADD"
    },
    "615": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x124"
    },
    "618": {
      "op": "JUMP"
    },
    "619": {
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "620": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "621": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "622": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "623": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x277"
    },
    "626": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "627": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "629": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "630": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "REVERT",
      "path": "23"
    },
    "631": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "635": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "636": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118"
    },
    "639": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "640": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "642": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "AND",
      "path": "23"
    },
    "643": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP2",
      "path": "23"
    },
    "644": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMP",
      "path": "23"
    },
    "645": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "646": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "647": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "DUP1",
      "path": "23"
    },
    "648": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "649": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x291"
    },
    "652": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "653": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "655": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "DUP1",
      "path": "23"
    },
    "656": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "REVERT",
      "path": "23"
    },
    "657": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "662": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "665": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "666": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "668": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4414"
    },
    "671": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMP",
      "path": "23"
    },
    "672": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "673": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5F1"
    },
    "676": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMP",
      "path": "23"
    },
    "677": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "678": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "679": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "DUP1",
      "path": "23"
    },
    "680": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "681": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B1"
    },
    "684": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "685": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "687": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "DUP1",
      "path": "23"
    },
    "688": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "REVERT",
      "path": "23"
    },
    "689": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "694": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C0"
    },
    "697": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "698": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "700": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x40ED"
    },
    "703": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMP",
      "path": "23"
    },
    "704": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "705": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x671"
    },
    "708": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMP",
      "path": "23"
    },
    "709": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "710": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "711": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "5"
    },
    "712": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "713": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D1"
    },
    "716": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "717": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "719": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "5"
    },
    "720": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "REVERT",
      "path": "5"
    },
    "721": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A"
    },
    "726": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E0"
    },
    "729": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "730": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "732": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E98"
    },
    "735": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "5"
    },
    "736": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "737": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "746": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "747": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "5"
    },
    "748": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "5"
    },
    "749": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "5"
    },
    "750": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "5"
    },
    "751": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "5"
    },
    "752": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "5"
    },
    "753": {
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "754": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "755": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "23"
    },
    "756": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "757": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD"
    },
    "760": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "761": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "763": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "23"
    },
    "764": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "REVERT",
      "path": "23"
    },
    "765": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "766": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "POP",
      "path": "23"
    },
    "767": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x307"
    },
    "770": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "772": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "773": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP2",
      "path": "23"
    },
    "774": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMP",
      "path": "23"
    },
    "775": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "776": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "778": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "779": {
      "op": "SWAP1"
    },
    "780": {
      "op": "DUP2"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "784": {
      "op": "ADD"
    },
    "785": {
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x124"
    },
    "788": {
      "op": "JUMP"
    },
    "789": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "790": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "791": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "DUP1",
      "path": "23"
    },
    "792": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "793": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x321"
    },
    "796": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "797": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "799": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "DUP1",
      "path": "23"
    },
    "800": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "REVERT",
      "path": "23"
    },
    "801": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "806": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x330"
    },
    "809": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "810": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "812": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x404D"
    },
    "815": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "23"
    },
    "816": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "817": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6A7"
    },
    "820": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "23"
    },
    "821": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "822": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D"
    },
    "825": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x343"
    },
    "828": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "829": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "831": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x42CB"
    },
    "834": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "23"
    },
    "835": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "836": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x70E"
    },
    "839": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "23"
    },
    "840": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "841": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "842": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "5"
    },
    "843": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "844": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x354"
    },
    "847": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "848": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "5"
    },
    "851": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "REVERT",
      "path": "5"
    },
    "852": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17A"
    },
    "857": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x363"
    },
    "860": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "861": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "863": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FB0"
    },
    "866": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "5"
    },
    "867": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "868": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "877": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "878": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "5"
    },
    "879": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "5"
    },
    "880": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "5"
    },
    "881": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "5"
    },
    "882": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "5"
    },
    "883": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "5"
    },
    "884": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "885": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "886": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "DUP1",
      "path": "23"
    },
    "887": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "888": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x380"
    },
    "891": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "892": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "894": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "DUP1",
      "path": "23"
    },
    "895": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "REVERT",
      "path": "23"
    },
    "896": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x394"
    },
    "901": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x38F"
    },
    "904": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "905": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "907": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4018"
    },
    "910": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMP",
      "path": "23"
    },
    "911": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "912": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x74D"
    },
    "915": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMP",
      "path": "23"
    },
    "916": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "917": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "919": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "DUP1",
      "path": "23"
    },
    "920": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "SWAP6"
    },
    "931": {
      "op": "AND"
    },
    "932": {
      "op": "DUP6"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "937": {
      "op": "SWAP1"
    },
    "938": {
      "op": "SWAP4"
    },
    "939": {
      "op": "AND"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "op": "DUP6"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "AND"
    },
    "950": {
      "op": "SWAP2"
    },
    "951": {
      "op": "DUP4"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "SWAP2"
    },
    "954": {
      "op": "SWAP1"
    },
    "955": {
      "op": "SWAP2"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "962": {
      "op": "AND"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x124"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "976": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        414,
        418
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 0
    },
    "988": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "AND",
      "path": "6"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "EQ",
      "path": "6"
    },
    "998": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "999": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x400"
    },
    "1002": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "op": "NOT"
    },
    "1021": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 1
    },
    "1022": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "21"
    },
    "1023": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "21"
    },
    "1024": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        490,
        526
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1025": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        430,
        526
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1026": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "o",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1030": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1031": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1033": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1034": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1036": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "23"
    },
    "1037": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1038": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x432"
    },
    "1041": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1042": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1044": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1053": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1054": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1056": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "23"
    },
    "1057": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1060": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1061": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4688"
    },
    "1064": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1065": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1066": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1068": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1069": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1070": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1071": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SUB",
      "path": "23"
    },
    "1072": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1073": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "23"
    },
    "1074": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1075": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5365
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 2,
      "value": "0x44A"
    },
    "1078": {
      "fn": "Registry.stopRent",
      "offset": [
        5155,
        5169
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7CB"
    },
    "1081": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5355
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x445"
    },
    "1084": {
      "fn": "Registry.stopRent",
      "offset": [
        5221,
        5232
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1085": {
      "fn": "Registry.stopRent",
      "offset": [
        5250,
        5260
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1086": {
      "fn": "Registry.stopRent",
      "offset": [
        5278,
        5285
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1087": {
      "fn": "Registry.stopRent",
      "offset": [
        5303,
        5313
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1088": {
      "fn": "Registry.stopRent",
      "offset": [
        5331,
        5341
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1089": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5203
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD18"
    },
    "1092": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        5183,
        5355
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1093": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5355
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1094": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5141
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE9E"
    },
    "1097": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        5131,
        5365
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1098": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5365
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1099": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "23"
    },
    "1100": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "23"
    },
    "1101": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "23"
    },
    "1102": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "23"
    },
    "1103": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "23"
    },
    "1104": {
      "fn": "Registry.stopRent",
      "jump": "o",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1105": {
      "fn": "Registry.setPaused",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1106": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1108": {
      "fn": "Registry.setPaused",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "23"
    },
    "1118": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1119": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "23"
    },
    "1120": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47B"
    },
    "1123": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1124": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1126": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1135": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1136": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1138": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "23"
    },
    "1139": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1142": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1143": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x46AF"
    },
    "1146": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1147": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1148": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28088
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 3,
      "value": "0x5"
    },
    "1150": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1151": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1154": {
      "op": "NOT"
    },
    "1155": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "AND",
      "path": "23"
    },
    "1156": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1157": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1158": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1159": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1160": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1161": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1162": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "OR",
      "path": "23"
    },
    "1163": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1164": {
      "fn": "Registry.setPaused",
      "offset": [
        28082,
        28100
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1165": {
      "fn": "Registry.setPaused",
      "jump": "o",
      "offset": [
        28018,
        28107
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1166": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1167": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1169": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "SUB"
    },
    "1178": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "23"
    },
    "1179": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1180": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "23"
    },
    "1181": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4B8"
    },
    "1184": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1185": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1187": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1196": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1197": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1199": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "23"
    },
    "1200": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1203": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1204": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x46AF"
    },
    "1207": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1208": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1209": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        27988
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 4,
      "value": "0x2"
    },
    "1211": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1212": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "NOT"
    },
    "1222": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "AND",
      "path": "23"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1232": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1233": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1234": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "AND",
      "path": "23"
    },
    "1235": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1236": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1237": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1238": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "OR",
      "path": "23"
    },
    "1239": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1240": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27977,
        28005
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1241": {
      "fn": "Registry.setBeneficiary",
      "jump": "o",
      "offset": [
        27892,
        28012
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1242": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1243": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1245": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1246": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1248": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "23"
    },
    "1249": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1250": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4FD"
    },
    "1253": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1254": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1256": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1265": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1266": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1268": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "23"
    },
    "1269": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1272": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1273": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4688"
    },
    "1276": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1277": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1278": {
      "fn": "Registry.lend",
      "offset": [
        3518,
        3813
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 5,
      "value": "0x512"
    },
    "1281": {
      "fn": "Registry.lend",
      "offset": [
        3542,
        3552
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFD3"
    },
    "1284": {
      "fn": "Registry.lend",
      "offset": [
        3566,
        3803
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x445"
    },
    "1287": {
      "fn": "Registry.lend",
      "offset": [
        3602,
        3613
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1288": {
      "fn": "Registry.lend",
      "offset": [
        3631,
        3641
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1289": {
      "fn": "Registry.lend",
      "offset": [
        3659,
        3666
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1290": {
      "fn": "Registry.lend",
      "offset": [
        3684,
        3694
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1291": {
      "fn": "Registry.lend",
      "offset": [
        3712,
        3727
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1292": {
      "fn": "Registry.lend",
      "offset": [
        3745,
        3759
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1293": {
      "fn": "Registry.lend",
      "offset": [
        3777,
        3789
      ],
      "op": "DUP10",
      "path": "23"
    },
    "1294": {
      "fn": "Registry.lend",
      "offset": [
        3566,
        3584
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1578"
    },
    "1297": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3566,
        3803
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1298": {
      "fn": "Registry.lend",
      "offset": [
        3518,
        3813
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1299": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1300": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1301": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1302": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1303": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1304": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1305": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "23"
    },
    "1306": {
      "fn": "Registry.lend",
      "jump": "o",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1307": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1308": {
      "fn": "Registry.getLending",
      "offset": [
        18723,
        18728
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1310": {
      "fn": "Registry.getLending",
      "offset": [
        18742,
        18749
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1311": {
      "fn": "Registry.getLending",
      "offset": [
        18763,
        18768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1313": {
      "fn": "Registry.getLending",
      "offset": [
        18782,
        18788
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1314": {
      "fn": "Registry.getLending",
      "offset": [
        18802,
        18808
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1316": {
      "fn": "Registry.getLending",
      "offset": [
        18822,
        18828
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1317": {
      "fn": "Registry.getLending",
      "offset": [
        18842,
        18847
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1319": {
      "fn": "Registry.getLending",
      "offset": [
        18872,
        18890
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1320": {
      "fn": "Registry.getLending",
      "offset": [
        18933,
        18943
      ],
      "op": "DUP11",
      "path": "23"
    },
    "1321": {
      "fn": "Registry.getLending",
      "offset": [
        18945,
        18952
      ],
      "op": "DUP11",
      "path": "23"
    },
    "1322": {
      "fn": "Registry.getLending",
      "offset": [
        18954,
        18964
      ],
      "op": "DUP11",
      "path": "23"
    },
    "1323": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1325": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1326": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1328": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "ADD",
      "path": "23"
    },
    "1329": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x53C"
    },
    "1332": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1333": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1334": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1335": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1336": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "1339": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18916,
        18965
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1340": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1341": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1343": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1344": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1347": {
      "op": "NOT"
    },
    "1348": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1349": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1350": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "SUB",
      "path": "23"
    },
    "1351": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "ADD",
      "path": "23"
    },
    "1352": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1353": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1354": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1355": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1356": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1357": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1358": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1359": {
      "fn": "Registry.getLending",
      "offset": [
        18916,
        18965
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1361": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1362": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1363": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "ADD",
      "path": "23"
    },
    "1364": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1365": {
      "fn": "Registry.getLending",
      "offset": [
        18985,
        19018
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1367": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1368": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1369": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1370": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19029
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "1372": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1373": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1374": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1375": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1376": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1377": {
      "fn": "Registry.getLending",
      "offset": [
        19078,
        19097
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 6
    },
    "1378": {
      "fn": "Registry.getLending",
      "offset": [
        19078,
        19097
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1379": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1380": {
      "fn": "Registry.getLending",
      "offset": [
        18893,
        18975
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "fn": "Registry.getLending",
      "offset": [
        19021,
        19041
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1383": {
      "fn": "Registry.getLending",
      "offset": [
        19078,
        19097
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1385": {
      "fn": "Registry.getLending",
      "offset": [
        19078,
        19097
      ],
      "op": "AND",
      "path": "23"
    },
    "1386": {
      "fn": "Registry.getLending",
      "offset": [
        19078,
        19097
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1388": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1389": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "GT",
      "path": "23"
    },
    "1390": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1391": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x57A"
    },
    "1394": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1395": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x57A"
    },
    "1398": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "1401": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19072,
        19098
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1402": {
      "fn": "Registry.getLending",
      "offset": [
        19072,
        19098
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1403": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1404": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1416": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1417": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "DIV",
      "path": "23"
    },
    "1418": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "AND",
      "path": "23"
    },
    "1419": {
      "fn": "Registry.getLending",
      "offset": [
        19112,
        19133
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1420": {
      "fn": "Registry.getLending",
      "offset": [
        19147,
        19170
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "fn": "Registry.getLending",
      "offset": [
        19147,
        19170
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1428": {
      "fn": "Registry.getLending",
      "offset": [
        19147,
        19170
      ],
      "op": "DIV",
      "path": "23"
    },
    "1429": {
      "fn": "Registry.getLending",
      "offset": [
        19147,
        19170
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1430": {
      "fn": "Registry.getLending",
      "offset": [
        19147,
        19170
      ],
      "op": "AND",
      "path": "23"
    },
    "1431": {
      "fn": "Registry.getLending",
      "offset": [
        19147,
        19170
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "fn": "Registry.getLending",
      "offset": [
        19184,
        19206
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1438": {
      "fn": "Registry.getLending",
      "offset": [
        19184,
        19206
      ],
      "op": "DIV",
      "path": "23"
    },
    "1439": {
      "fn": "Registry.getLending",
      "offset": [
        19184,
        19206
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "1441": {
      "fn": "Registry.getLending",
      "offset": [
        19184,
        19206
      ],
      "op": "SHL",
      "path": "23"
    },
    "1442": {
      "fn": "Registry.getLending",
      "offset": [
        19184,
        19206
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1443": {
      "fn": "Registry.getLending",
      "offset": [
        19220,
        19238
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "Registry.getLending",
      "offset": [
        19220,
        19238
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1452": {
      "fn": "Registry.getLending",
      "offset": [
        19220,
        19238
      ],
      "op": "DIV",
      "path": "23"
    },
    "1453": {
      "fn": "Registry.getLending",
      "offset": [
        19220,
        19238
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1454": {
      "fn": "Registry.getLending",
      "offset": [
        19220,
        19238
      ],
      "op": "AND",
      "path": "23"
    },
    "1455": {
      "fn": "Registry.getLending",
      "offset": [
        19220,
        19238
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "fn": "Registry.getLending",
      "offset": [
        19252,
        19275
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1462": {
      "fn": "Registry.getLending",
      "offset": [
        19252,
        19275
      ],
      "op": "DIV",
      "path": "23"
    },
    "1463": {
      "fn": "Registry.getLending",
      "offset": [
        19252,
        19275
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1464": {
      "fn": "Registry.getLending",
      "offset": [
        19252,
        19275
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1465": {
      "fn": "Registry.getLending",
      "offset": [
        19252,
        19275
      ],
      "op": "AND",
      "path": "23"
    },
    "1466": {
      "fn": "Registry.getLending",
      "offset": [
        19252,
        19275
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "Registry.getLending",
      "offset": [
        19295,
        19315
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1473": {
      "fn": "Registry.getLending",
      "offset": [
        19295,
        19315
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1474": {
      "fn": "Registry.getLending",
      "offset": [
        19295,
        19315
      ],
      "op": "DIV",
      "path": "23"
    },
    "1475": {
      "fn": "Registry.getLending",
      "offset": [
        19295,
        19315
      ],
      "op": "AND",
      "path": "23"
    },
    "1476": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1478": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1479": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "GT",
      "path": "23"
    },
    "1480": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1481": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5D4"
    },
    "1484": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1485": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5D4"
    },
    "1488": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "1491": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19289,
        19316
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1492": {
      "fn": "Registry.getLending",
      "offset": [
        19289,
        19316
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1493": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1494": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1495": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1496": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1497": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1498": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1499": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1500": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1501": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1502": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1503": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1504": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1505": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1506": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1507": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1508": {
      "fn": "Registry.getLending",
      "offset": [
        19051,
        19326
      ],
      "op": "POP",
      "path": "23"
    },
    "1509": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1510": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "1511": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "POP",
      "path": "23"
    },
    "1512": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1513": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "1514": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "POP",
      "path": "23"
    },
    "1515": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1516": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "1517": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1518": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "1519": {
      "fn": "Registry.getLending",
      "offset": [
        18556,
        19333
      ],
      "op": "POP",
      "path": "23"
    },
    "1520": {
      "fn": "Registry.getLending",
      "jump": "o",
      "offset": [
        18556,
        19333
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1521": {
      "fn": "Registry.setRentFee",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1522": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1524": {
      "fn": "Registry.setRentFee",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "23"
    },
    "1534": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "23"
    },
    "1535": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "23"
    },
    "1536": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x61B"
    },
    "1539": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1540": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1542": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1543": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1551": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1552": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1554": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "23"
    },
    "1555": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1558": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1559": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x46AF"
    },
    "1562": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1563": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1564": {
      "fn": "Registry.setRentFee",
      "offset": [
        27814,
        27819
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 7,
      "value": "0x2710"
    },
    "1567": {
      "fn": "Registry.setRentFee",
      "offset": [
        27801,
        27811
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1568": {
      "branch": 128,
      "fn": "Registry.setRentFee",
      "offset": [
        27801,
        27819
      ],
      "op": "LT",
      "path": "23"
    },
    "1569": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x66C"
    },
    "1572": {
      "branch": 128,
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1573": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1575": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1584": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1589": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1590": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "ADD",
      "path": "23"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A66656520657863656564732031303070637400000000000000"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1643": {
      "op": "JUMP"
    },
    "1644": {
      "fn": "Registry.setRentFee",
      "offset": [
        27793,
        27849
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1645": {
      "fn": "Registry.setRentFee",
      "offset": [
        27859,
        27866
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 8,
      "value": "0x6"
    },
    "1647": {
      "fn": "Registry.setRentFee",
      "offset": [
        27859,
        27879
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "1648": {
      "fn": "Registry.setRentFee",
      "jump": "o",
      "offset": [
        27724,
        27886
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1649": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1650": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1652": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1653": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1655": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "23"
    },
    "1656": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1657": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x694"
    },
    "1660": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1661": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1663": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1672": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1673": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1675": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "23"
    },
    "1676": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1679": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1680": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4688"
    },
    "1683": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1684": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1685": {
      "fn": "Registry.claimRent",
      "offset": [
        5638,
        5873
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 9,
      "value": "0x44A"
    },
    "1688": {
      "fn": "Registry.claimRent",
      "offset": [
        5662,
        5677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16A8"
    },
    "1691": {
      "fn": "Registry.claimRent",
      "offset": [
        5691,
        5863
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x445"
    },
    "1694": {
      "fn": "Registry.claimRent",
      "offset": [
        5729,
        5740
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1695": {
      "fn": "Registry.claimRent",
      "offset": [
        5758,
        5768
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1696": {
      "fn": "Registry.claimRent",
      "offset": [
        5786,
        5793
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1697": {
      "fn": "Registry.claimRent",
      "offset": [
        5811,
        5821
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1698": {
      "fn": "Registry.claimRent",
      "offset": [
        5839,
        5849
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1699": {
      "fn": "Registry.claimRent",
      "offset": [
        5691,
        5711
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD18"
    },
    "1702": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5691,
        5863
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1703": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1704": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1706": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1707": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1709": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "23"
    },
    "1710": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1711": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6CA"
    },
    "1714": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1715": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1717": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1726": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1727": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1729": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "23"
    },
    "1730": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1733": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1734": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4688"
    },
    "1737": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1738": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1739": {
      "fn": "Registry.stopLend",
      "offset": [
        4048,
        4288
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 10,
      "value": "0x708"
    },
    "1742": {
      "fn": "Registry.stopLend",
      "offset": [
        4072,
        4086
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AA9"
    },
    "1745": {
      "fn": "Registry.stopLend",
      "offset": [
        4100,
        4278
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x445"
    },
    "1748": {
      "fn": "Registry.stopLend",
      "offset": [
        4138,
        4149
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1749": {
      "fn": "Registry.stopLend",
      "offset": [
        4167,
        4177
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1750": {
      "fn": "Registry.stopLend",
      "offset": [
        4195,
        4202
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1751": {
      "fn": "Registry.stopLend",
      "offset": [
        4220,
        4230
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1752": {
      "fn": "Registry.stopLend",
      "offset": [
        4262,
        4263
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1754": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1756": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1757": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1758": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1759": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1760": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1761": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1762": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1764": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MUL",
      "path": "23"
    },
    "1765": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1767": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "23"
    },
    "1768": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1769": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "23"
    },
    "1770": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1772": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1773": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1774": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1775": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x702"
    },
    "1778": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1779": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1780": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1782": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "23"
    },
    "1783": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1785": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1786": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MUL",
      "path": "23"
    },
    "1787": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1788": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1789": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1790": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "1791": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "23"
    },
    "1792": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1795": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "POP",
      "path": "23"
    },
    "1796": {
      "fn": "Registry.stopLend",
      "offset": [
        4100,
        4120
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD18"
    },
    "1799": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        4100,
        4278
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1800": {
      "fn": "Registry.stopLend",
      "offset": [
        4048,
        4288
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1801": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "23"
    },
    "1802": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "23"
    },
    "1803": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "23"
    },
    "1804": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "23"
    },
    "1805": {
      "fn": "Registry.stopLend",
      "jump": "o",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1806": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1807": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1809": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1810": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1812": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "23"
    },
    "1813": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1814": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x731"
    },
    "1817": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1818": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1820": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1829": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1830": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1832": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "23"
    },
    "1833": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "1836": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1837": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4688"
    },
    "1840": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1841": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1842": {
      "fn": "Registry.rent",
      "offset": [
        4601,
        4859
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 11,
      "value": "0x745"
    },
    "1845": {
      "fn": "Registry.rent",
      "offset": [
        4625,
        4635
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E76"
    },
    "1848": {
      "fn": "Registry.rent",
      "offset": [
        4649,
        4849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x445"
    },
    "1851": {
      "fn": "Registry.rent",
      "offset": [
        4685,
        4696
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1852": {
      "fn": "Registry.rent",
      "offset": [
        4714,
        4724
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1853": {
      "fn": "Registry.rent",
      "offset": [
        4742,
        4749
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1854": {
      "fn": "Registry.rent",
      "offset": [
        4767,
        4777
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1855": {
      "fn": "Registry.rent",
      "offset": [
        4795,
        4807
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1856": {
      "fn": "Registry.rent",
      "offset": [
        4825,
        4835
      ],
      "op": "DUP9",
      "path": "23"
    },
    "1857": {
      "fn": "Registry.rent",
      "offset": [
        4649,
        4667
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25F8"
    },
    "1860": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4649,
        4849
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1861": {
      "fn": "Registry.rent",
      "offset": [
        4601,
        4859
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1862": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "23"
    },
    "1863": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "23"
    },
    "1864": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "23"
    },
    "1865": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "23"
    },
    "1866": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "23"
    },
    "1867": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "23"
    },
    "1868": {
      "fn": "Registry.rent",
      "jump": "o",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1869": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1870": {
      "fn": "Registry.getRenting",
      "offset": [
        19506,
        19513
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1872": {
      "fn": "Registry.getRenting",
      "offset": [
        19527,
        19533
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1873": {
      "fn": "Registry.getRenting",
      "offset": [
        19547,
        19552
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1875": {
      "fn": "Registry.getRenting",
      "offset": [
        19566,
        19572
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1876": {
      "fn": "Registry.getRenting",
      "offset": [
        19597,
        19615
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1878": {
      "fn": "Registry.getRenting",
      "offset": [
        19658,
        19668
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1879": {
      "fn": "Registry.getRenting",
      "offset": [
        19670,
        19677
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1880": {
      "fn": "Registry.getRenting",
      "offset": [
        19679,
        19689
      ],
      "op": "DUP8",
      "path": "23"
    },
    "1881": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1883": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1884": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1886": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "ADD",
      "path": "23"
    },
    "1887": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x76A"
    },
    "1890": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1891": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1892": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1893": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1894": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "1897": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19641,
        19690
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1898": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1899": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1901": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1902": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1903": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1904": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1905": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "SUB",
      "path": "23"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1908": {
      "op": "NOT"
    },
    "1909": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "ADD",
      "path": "23"
    },
    "1910": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1911": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1912": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1913": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1914": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1915": {
      "fn": "Registry.getRenting",
      "offset": [
        19618,
        19700
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1916": {
      "fn": "Registry.getRenting",
      "offset": [
        19618,
        19700
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1917": {
      "fn": "Registry.getRenting",
      "offset": [
        19641,
        19690
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1919": {
      "fn": "Registry.getRenting",
      "offset": [
        19618,
        19700
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1920": {
      "fn": "Registry.getRenting",
      "offset": [
        19618,
        19700
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1921": {
      "fn": "Registry.getRenting",
      "offset": [
        19618,
        19700
      ],
      "op": "ADD",
      "path": "23"
    },
    "1922": {
      "fn": "Registry.getRenting",
      "offset": [
        19618,
        19700
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1923": {
      "fn": "Registry.getRenting",
      "offset": [
        19710,
        19743
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1925": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1926": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1927": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1928": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19754
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "1930": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1931": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1932": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1933": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1934": {
      "fn": "Registry.getRenting",
      "offset": [
        19746,
        19766
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1935": {
      "fn": "Registry.getRenting",
      "offset": [
        19797,
        19818
      ],
      "op": "SLOAD",
      "path": "23",
      "statement": 12
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "Registry.getRenting",
      "offset": [
        19797,
        19818
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1945": {
      "fn": "Registry.getRenting",
      "offset": [
        19797,
        19818
      ],
      "op": "AND",
      "path": "23"
    },
    "1946": {
      "fn": "Registry.getRenting",
      "offset": [
        19797,
        19818
      ],
      "op": "SWAP10",
      "path": "23"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "fn": "Registry.getRenting",
      "offset": [
        19832,
        19850
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1953": {
      "fn": "Registry.getRenting",
      "offset": [
        19832,
        19850
      ],
      "op": "DIV",
      "path": "23"
    },
    "1954": {
      "fn": "Registry.getRenting",
      "offset": [
        19832,
        19850
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "1957": {
      "fn": "Registry.getRenting",
      "offset": [
        19832,
        19850
      ],
      "op": "AND",
      "path": "23"
    },
    "1958": {
      "fn": "Registry.getRenting",
      "offset": [
        19832,
        19850
      ],
      "op": "SWAP10",
      "path": "23"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "fn": "Registry.getRenting",
      "offset": [
        19864,
        19884
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1966": {
      "fn": "Registry.getRenting",
      "offset": [
        19864,
        19884
      ],
      "op": "DIV",
      "path": "23"
    },
    "1967": {
      "fn": "Registry.getRenting",
      "offset": [
        19864,
        19884
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1969": {
      "fn": "Registry.getRenting",
      "offset": [
        19864,
        19884
      ],
      "op": "AND",
      "path": "23"
    },
    "1970": {
      "fn": "Registry.getRenting",
      "offset": [
        19864,
        19884
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "fn": "Registry.getRenting",
      "offset": [
        19898,
        19914
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1978": {
      "fn": "Registry.getRenting",
      "offset": [
        19898,
        19914
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1979": {
      "fn": "Registry.getRenting",
      "offset": [
        19898,
        19914
      ],
      "op": "DIV",
      "path": "23"
    },
    "1980": {
      "fn": "Registry.getRenting",
      "offset": [
        19898,
        19914
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "1985": {
      "fn": "Registry.getRenting",
      "offset": [
        19898,
        19914
      ],
      "op": "AND",
      "path": "23"
    },
    "1986": {
      "fn": "Registry.getRenting",
      "offset": [
        19898,
        19914
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "fn": "Registry.getRenting",
      "offset": [
        19339,
        19931
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "fn": "Registry.getRenting",
      "jump": "o",
      "offset": [
        19339,
        19931
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1995": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11773,
        13268
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1996": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11862,
        11869
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1997": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11862,
        11869
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11875,
        11877
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11875,
        11883
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2002": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11875,
        11883
      ],
      "op": "ADD",
      "path": "23"
    },
    "2003": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11875,
        11883
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11871,
        11872
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2005": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11871,
        11883
      ],
      "op": "LT",
      "path": "23"
    },
    "2006": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "2010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11904,
        11929
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2013": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        11999
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12010
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2016": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12010
      ],
      "op": "ADD",
      "path": "23"
    },
    "2017": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12010
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2018": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12011,
        12013
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2019": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12011,
        12018
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2021": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12011,
        12018
      ],
      "op": "ADD",
      "path": "23"
    },
    "2022": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12011,
        12018
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2023": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2025": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2026": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "LT",
      "path": "23"
    },
    "2027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7F6"
    },
    "2030": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7F6"
    },
    "2034": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2037": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11997,
        12019
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2038": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2039": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "MUL",
      "path": "23"
    },
    "2042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2044": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "ADD",
      "path": "23"
    },
    "2045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "ADD",
      "path": "23"
    },
    "2046": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11997,
        12019
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2047": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12043
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12051
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12051
      ],
      "op": "ADD",
      "path": "23"
    },
    "2051": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12051
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2052": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12052,
        12053
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2053": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2054": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2055": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2056": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "LT",
      "path": "23"
    },
    "2057": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x814"
    },
    "2060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2061": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x814"
    },
    "2064": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2067": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12041,
        12054
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2068": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2069": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2071": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "MUL",
      "path": "23"
    },
    "2072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2074": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "ADD",
      "path": "23"
    },
    "2075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "ADD",
      "path": "23"
    },
    "2076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12041,
        12054
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12078
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2078": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12088
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2081": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12088
      ],
      "op": "ADD",
      "path": "23"
    },
    "2082": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12088
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12089,
        12090
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2086": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2087": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "LT",
      "path": "23"
    },
    "2088": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x833"
    },
    "2091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x833"
    },
    "2095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2098": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12076,
        12091
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2099": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2100": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2102": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "MUL",
      "path": "23"
    },
    "2103": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "ADD",
      "path": "23"
    },
    "2106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "ADD",
      "path": "23"
    },
    "2107": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12076,
        12091
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2108": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2111": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "ADD",
      "path": "23"
    },
    "2114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x84D"
    },
    "2117": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2118": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2119": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "2124": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11959,
        12109
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2129": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2131": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2132": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SUB",
      "path": "23"
    },
    "2134": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SUB",
      "path": "23"
    },
    "2135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2136": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2140": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11959,
        12109
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2141": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11932,
        12123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2142": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11932,
        12123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2143": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11932,
        12123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2144": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11932,
        12123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2146": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11932,
        12123
      ],
      "op": "ADD",
      "path": "23"
    },
    "2147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11932,
        12123
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2148": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11904,
        12123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2149": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11904,
        12123
      ],
      "op": "POP",
      "path": "23"
    },
    "2150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12137,
        12162
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2152": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12232
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12243
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12243
      ],
      "op": "ADD",
      "path": "23"
    },
    "2156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12243
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2157": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12244,
        12246
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2158": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12244,
        12251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12244,
        12251
      ],
      "op": "ADD",
      "path": "23"
    },
    "2161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12244,
        12251
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2162": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2163": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2164": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2165": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "LT",
      "path": "23"
    },
    "2166": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x881"
    },
    "2169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x881"
    },
    "2173": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2176": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12230,
        12252
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2177": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2178": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "MUL",
      "path": "23"
    },
    "2181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2183": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "ADD",
      "path": "23"
    },
    "2184": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "ADD",
      "path": "23"
    },
    "2185": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12230,
        12252
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2186": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12276
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12284
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12284
      ],
      "op": "ADD",
      "path": "23"
    },
    "2190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12284
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2191": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12285,
        12286
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2192": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2193": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2194": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "LT",
      "path": "23"
    },
    "2196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x89F"
    },
    "2199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x89F"
    },
    "2203": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2206": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12274,
        12287
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2210": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "MUL",
      "path": "23"
    },
    "2211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2213": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "ADD",
      "path": "23"
    },
    "2214": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "ADD",
      "path": "23"
    },
    "2215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12274,
        12287
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2216": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12311
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2217": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12321
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x120"
    },
    "2220": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12321
      ],
      "op": "ADD",
      "path": "23"
    },
    "2221": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12321
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2222": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12322,
        12323
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2225": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "LT",
      "path": "23"
    },
    "2227": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8BE"
    },
    "2230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2231": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8BE"
    },
    "2234": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2237": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12309,
        12324
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2238": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2239": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2241": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "MUL",
      "path": "23"
    },
    "2242": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2244": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "ADD",
      "path": "23"
    },
    "2245": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "ADD",
      "path": "23"
    },
    "2246": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12309,
        12324
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2247": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2249": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2250": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2252": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "ADD",
      "path": "23"
    },
    "2253": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8D8"
    },
    "2256": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2257": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2258": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2259": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2260": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "2263": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12192,
        12342
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2264": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2267": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2271": {
      "op": "NOT"
    },
    "2272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2274": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "SUB",
      "path": "23"
    },
    "2275": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "ADD",
      "path": "23"
    },
    "2276": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2277": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2278": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2279": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2280": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2281": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2282": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2283": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2285": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2286": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2287": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "ADD",
      "path": "23"
    },
    "2288": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2289": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12370,
        12403
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2292": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12414
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "2296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2297": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2298": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2299": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2300": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2301": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2302": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2303": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12491
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "2306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2307": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2308": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2310": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12483,
        12510
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "2312": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 13,
      "value": "0xE0"
    },
    "2314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "2318": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2319": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2320": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2321": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2322": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12165,
        12356
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2325": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2326": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D9"
    },
    "2329": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2330": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2331": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12406,
        12433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2332": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2333": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12192,
        12342
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2334": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2336": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2337": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2339": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2340": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "GT",
      "path": "23"
    },
    "2341": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2342": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "2345": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2346": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "2349": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2352": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2353": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2354": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2356": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2357": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "GT",
      "path": "23"
    },
    "2358": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2359": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x942"
    },
    "2362": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2363": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x942"
    },
    "2366": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2369": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2370": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2371": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2372": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2373": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2374": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2386": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2387": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DIV",
      "path": "23"
    },
    "2388": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2389": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2391": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2392": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2393": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2394": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2402": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DIV",
      "path": "23"
    },
    "2403": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2404": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2405": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2407": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2408": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2409": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "SUB"
    },
    "2418": {
      "op": "NOT"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2425": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DIV",
      "path": "23"
    },
    "2426": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "2428": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SHL",
      "path": "23"
    },
    "2429": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2430": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2432": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2433": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2434": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2435": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2444": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DIV",
      "path": "23"
    },
    "2445": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2446": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2447": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2449": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2450": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2451": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2458": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DIV",
      "path": "23"
    },
    "2459": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2460": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "2462": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2463": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2464": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2465": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "2467": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2468": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2469": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ADD",
      "path": "23"
    },
    "2470": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2477": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2478": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DIV",
      "path": "23"
    },
    "2479": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "AND",
      "path": "23"
    },
    "2480": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2482": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2483": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "GT",
      "path": "23"
    },
    "2484": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2485": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9C0"
    },
    "2488": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2489": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9C0"
    },
    "2492": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2495": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2496": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2497": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "2499": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2500": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "GT",
      "path": "23"
    },
    "2501": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2502": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D1"
    },
    "2505": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2506": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x9D1"
    },
    "2509": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2512": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2513": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2514": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2515": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x271A"
    },
    "2520": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2521": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12524,
        12548
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2522": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 14,
      "value": "0x40"
    },
    "2524": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2525": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2526": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2528": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2529": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "ADD",
      "path": "23"
    },
    "2530": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2531": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2532": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2533": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2543": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "AND",
      "path": "23"
    },
    "2544": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2545": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2550": {
      "op": "SHL"
    },
    "2551": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2552": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DIV",
      "path": "23"
    },
    "2553": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2555": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "AND",
      "path": "23"
    },
    "2556": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2558": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2559": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "ADD",
      "path": "23"
    },
    "2560": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2567": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DIV",
      "path": "23"
    },
    "2568": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2573": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "AND",
      "path": "23"
    },
    "2574": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2575": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2576": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "ADD",
      "path": "23"
    },
    "2577": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2578": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2579": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2580": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2587": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2588": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DIV",
      "path": "23"
    },
    "2589": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "2592": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "AND",
      "path": "23"
    },
    "2593": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2595": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2596": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "ADD",
      "path": "23"
    },
    "2597": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2598": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA30"
    },
    "2601": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2602": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12590,
        12600
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2603": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12602,
        12617
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "2604": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12580
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x279D"
    },
    "2607": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12562,
        12618
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2608": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12562,
        12618
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2609": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12678,
        12697
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 15
    },
    "2610": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12678,
        12697
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2611": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12678,
        12697
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2613": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12678,
        12697
      ],
      "op": "AND",
      "path": "23"
    },
    "2614": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12678,
        12697
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2616": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2617": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "GT",
      "path": "23"
    },
    "2618": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2619": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA46"
    },
    "2622": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2623": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA46"
    },
    "2626": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2629": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12657,
        12697
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2630": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2631": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12659
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2632": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12671
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2634": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12671
      ],
      "op": "ADD",
      "path": "23"
    },
    "2635": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12671
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2636": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12672,
        12673
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2637": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2638": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2639": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2640": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "LT",
      "path": "23"
    },
    "2641": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA5C"
    },
    "2644": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2645": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA5C"
    },
    "2648": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "2651": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12657,
        12674
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2652": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2653": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2655": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "MUL",
      "path": "23"
    },
    "2656": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2658": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "ADD",
      "path": "23"
    },
    "2659": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "ADD",
      "path": "23"
    },
    "2660": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12674
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2661": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2663": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2664": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "GT",
      "path": "23"
    },
    "2665": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2666": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA75"
    },
    "2669": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2670": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA75"
    },
    "2673": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2676": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12657,
        12697
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2677": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2678": {
      "branch": 129,
      "fn": "Registry.handleStopRent",
      "offset": [
        12657,
        12697
      ],
      "op": "EQ",
      "path": "23"
    },
    "2679": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA92"
    },
    "2682": {
      "branch": 129,
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2683": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2685": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2694": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2695": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2697": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "ADD",
      "path": "23"
    },
    "2698": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "2701": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2702": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45B9"
    },
    "2705": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12632,
        12758
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2706": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12632,
        12758
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2707": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 16
    },
    "2708": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2709": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12815
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2710": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12815
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2715": {
      "op": "SHL"
    },
    "2716": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2717": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2718": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "DIV",
      "path": "23"
    },
    "2719": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "2722": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2723": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2724": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12819,
        12837
      ],
      "op": "AND",
      "path": "23"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2729": {
      "op": "SHL"
    },
    "2730": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12815
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2731": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12815
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2732": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12815
      ],
      "op": "DIV",
      "path": "23"
    },
    "2733": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12815
      ],
      "op": "AND",
      "path": "23"
    },
    "2734": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12837
      ],
      "op": "GT",
      "path": "23"
    },
    "2735": {
      "branch": 130,
      "fn": "Registry.handleStopRent",
      "offset": [
        12797,
        12837
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2736": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAF3"
    },
    "2739": {
      "branch": 130,
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2740": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2742": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2749": {
      "op": "SHL"
    },
    "2750": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2751": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2754": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2756": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2757": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "ADD",
      "path": "23"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2763": {
      "op": "DUP3"
    },
    "2764": {
      "op": "ADD"
    },
    "2765": {
      "op": "MSTORE"
    },
    "2766": {
      "op": "PUSH21",
      "value": "0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2790": {
      "op": "SHL"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2793": {
      "op": "DUP3"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "2802": {
      "op": "JUMP"
    },
    "2803": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12772,
        12892
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2804": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12956,
        12972
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2805": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12956,
        12972
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2806": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12906,
        12935
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2808": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12906,
        12935
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2809": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12938,
        12972
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB0F"
    },
    "2812": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12938,
        12972
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12956,
        12972
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2819": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12956,
        12972
      ],
      "op": "DIV",
      "path": "23"
    },
    "2820": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12956,
        12972
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2825": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12956,
        12972
      ],
      "op": "AND",
      "path": "23"
    },
    "2826": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12938,
        12953
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "2827": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12938,
        12972
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "2830": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12938,
        12972
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2831": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12938,
        12972
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2832": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 17,
      "value": "0x40"
    },
    "2834": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2835": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2836": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "2838": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2839": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2840": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2841": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2842": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2843": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2844": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2845": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12906,
        12972
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2846": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12906,
        12972
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC30"
    },
    "2851": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2852": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13005,
        13012
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2853": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13005,
        13012
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2854": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2855": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2856": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2858": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "2859": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2861": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2862": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "GT",
      "path": "23"
    },
    "2863": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2864": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB3B"
    },
    "2867": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2868": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB3B"
    },
    "2871": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2874": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2875": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2876": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2878": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2879": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "GT",
      "path": "23"
    },
    "2880": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2881": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB4C"
    },
    "2884": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2885": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB4C"
    },
    "2888": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "2891": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2892": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2893": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2894": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2895": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2896": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2903": {
      "op": "SHL"
    },
    "2904": {
      "op": "SUB"
    },
    "2905": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "2908": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2909": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "2910": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "2911": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2913": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2914": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2915": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2916": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2924": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "2925": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2926": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "2927": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2929": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2930": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2931": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "SUB"
    },
    "2940": {
      "op": "NOT"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2945": {
      "op": "SHL"
    },
    "2946": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2947": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "2948": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "2950": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SHL",
      "path": "23"
    },
    "2951": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "2952": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2954": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2955": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2956": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2957": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2964": {
      "op": "SHL"
    },
    "2965": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2966": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "2967": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2968": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "2969": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2971": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2972": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2973": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2980": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "2981": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "2982": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "2984": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2985": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2986": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2987": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "2989": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2990": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2991": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "2992": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "3001": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "3002": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "3004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3005": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "GT",
      "path": "23"
    },
    "3006": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBCA"
    },
    "3010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBCA"
    },
    "3014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "3017": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3018": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3019": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "3021": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3022": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "GT",
      "path": "23"
    },
    "3023": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBDB"
    },
    "3027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3028": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBDB"
    },
    "3031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "3034": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3035": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3036": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3037": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3043": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "3045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3046": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "3047": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3049": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "3061": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3062": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3069": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "3070": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "3072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "3073": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "3077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3082": {
      "op": "SHL"
    },
    "3083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "3085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "3090": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "3091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3093": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "3094": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3096": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3097": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3104": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DIV",
      "path": "23"
    },
    "3106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "3109": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "AND",
      "path": "23"
    },
    "3110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3112": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "ADD",
      "path": "23"
    },
    "3114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3115": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13023,
        13044
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3116": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13004
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x284D"
    },
    "3119": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12986,
        13045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 18
    },
    "3122": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3123": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3127": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13067
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "3130": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3132": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3136": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13086
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3139": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3148": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3149": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "DIV",
      "path": "23"
    },
    "3150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3151": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "AND",
      "path": "23"
    },
    "3152": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13102
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1C"
    },
    "3155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13102
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC66"
    },
    "3159": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13106,
        13124
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3168": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "DIV",
      "path": "23"
    },
    "3169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "AND",
      "path": "23"
    },
    "3170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x472C"
    },
    "3173": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        13059,
        13124
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3174": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3175": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3176": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "POP",
      "path": "23"
    },
    "3177": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "EXP",
      "path": "23"
    },
    "3181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3182": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3183": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3184": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "3187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "MUL",
      "path": "23"
    },
    "3188": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "NOT",
      "path": "23"
    },
    "3189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "AND",
      "path": "23"
    },
    "3190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3191": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3192": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "3195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "AND",
      "path": "23"
    },
    "3196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "MUL",
      "path": "23"
    },
    "3197": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "OR",
      "path": "23"
    },
    "3198": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13059,
        13124
      ],
      "op": "POP",
      "path": "23"
    },
    "3201": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13164
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 19
    },
    "3202": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13174
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "3205": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13174
      ],
      "op": "ADD",
      "path": "23"
    },
    "3206": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13174
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13175,
        13176
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3209": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3210": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "LT",
      "path": "23"
    },
    "3212": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC97"
    },
    "3215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3216": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC97"
    },
    "3219": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "3222": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        13162,
        13177
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "MUL",
      "path": "23"
    },
    "3227": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3229": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "ADD",
      "path": "23"
    },
    "3230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "ADD",
      "path": "23"
    },
    "3231": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13162,
        13177
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3232": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D"
    },
    "3265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13186,
        13201
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "3266": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3269": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCDA"
    },
    "3272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3274": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3279": {
      "op": "SWAP2"
    },
    "3280": {
      "op": "SWAP1"
    },
    "3281": {
      "op": "SWAP2"
    },
    "3282": {
      "op": "AND"
    },
    "3283": {
      "op": "DUP2"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "SWAP1"
    },
    "3289": {
      "op": "JUMP"
    },
    "3290": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3295": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "SUB",
      "path": "23"
    },
    "3297": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3298": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13143,
        13203
      ],
      "op": "LOG2",
      "path": "23"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 20,
      "value": "0x0"
    },
    "3304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3305": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3307": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13232
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "3309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3312": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13224,
        13251
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13217,
        13251
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13217,
        13251
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "op": "NOT"
    },
    "3327": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13217,
        13251
      ],
      "op": "AND",
      "path": "23"
    },
    "3328": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13217,
        13251
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3329": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13217,
        13251
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3330": {
      "op": "POP"
    },
    "3331": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 21
    },
    "3332": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD0C"
    },
    "3335": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3336": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "3339": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11885,
        11888
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3340": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3341": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3342": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "POP",
      "path": "23"
    },
    "3343": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11885,
        11888
      ],
      "op": "POP",
      "path": "23"
    },
    "3344": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7CE"
    },
    "3347": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3348": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3349": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11845,
        13262
      ],
      "op": "POP",
      "path": "23"
    },
    "3350": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11773,
        13268
      ],
      "op": "POP",
      "path": "23"
    },
    "3351": {
      "fn": "Registry.handleStopRent",
      "jump": "o",
      "offset": [
        11773,
        13268
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3352": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21864,
        22673
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3353": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22119,
        22137
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD20"
    },
    "3356": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22119,
        22137
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3AD7"
    },
    "3359": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        22119,
        22137
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3360": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22119,
        22137
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3361": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 22,
      "value": "0x40"
    },
    "3363": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3364": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3365": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A0"
    },
    "3368": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3369": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3371": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3372": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3373": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22183,
        22184
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3375": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3376": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3377": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3379": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3380": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22205,
        22206
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "3382": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3383": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3384": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3386": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3387": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22233,
        22244
      ],
      "op": "DUP8",
      "path": "23"
    },
    "3388": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3389": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3390": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3392": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3393": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22270,
        22280
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3394": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3395": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3396": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3398": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3399": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22303,
        22310
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3400": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3401": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3402": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3404": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3405": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22350,
        22351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "op": "SUB"
    },
    "3415": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3416": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "GT",
      "path": "23"
    },
    "3417": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3418": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD65"
    },
    "3421": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3422": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD65"
    },
    "3425": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4959"
    },
    "3428": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        22336,
        22352
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3429": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3430": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3432": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3433": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3434": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3435": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3436": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3437": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3438": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3440": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "MUL",
      "path": "23"
    },
    "3441": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3443": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "ADD",
      "path": "23"
    },
    "3444": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3445": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "ADD",
      "path": "23"
    },
    "3446": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3448": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3449": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3450": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3451": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD8E"
    },
    "3454": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3455": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3456": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3458": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "ADD",
      "path": "23"
    },
    "3459": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3461": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3462": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "MUL",
      "path": "23"
    },
    "3463": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3464": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "3465": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3466": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "3467": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "ADD",
      "path": "23"
    },
    "3468": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22336,
        22352
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3473": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3474": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3476": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3477": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22549,
        22550
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3479": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3481": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3482": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3483": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3484": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3485": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3486": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3487": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3489": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "MUL",
      "path": "23"
    },
    "3490": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3492": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "ADD",
      "path": "23"
    },
    "3493": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3494": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "ADD",
      "path": "23"
    },
    "3495": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3497": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3498": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3499": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3500": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDBF"
    },
    "3503": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3504": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3505": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3507": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "ADD",
      "path": "23"
    },
    "3508": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3510": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3511": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "MUL",
      "path": "23"
    },
    "3512": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3513": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "3514": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3515": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "3516": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "ADD",
      "path": "23"
    },
    "3517": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22537,
        22551
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3522": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3523": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3525": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3526": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22594,
        22595
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3528": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3530": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3531": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3532": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3533": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3534": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3535": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3536": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3538": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "MUL",
      "path": "23"
    },
    "3539": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3541": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "ADD",
      "path": "23"
    },
    "3542": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3543": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "ADD",
      "path": "23"
    },
    "3544": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3546": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3547": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3548": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3549": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDF0"
    },
    "3552": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3553": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3554": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3556": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "ADD",
      "path": "23"
    },
    "3557": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3559": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3560": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "MUL",
      "path": "23"
    },
    "3561": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3562": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "3563": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3564": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "3565": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "ADD",
      "path": "23"
    },
    "3566": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22581,
        22596
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3571": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3572": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3574": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3575": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3576": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3577": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3578": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3579": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3581": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3582": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3583": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3584": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3585": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3586": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3588": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3591": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3593": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3594": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3595": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3596": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3597": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3598": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3599": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3601": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "MUL",
      "path": "23"
    },
    "3602": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3604": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "ADD",
      "path": "23"
    },
    "3605": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3606": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "ADD",
      "path": "23"
    },
    "3607": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3609": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3610": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3611": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3612": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE2F"
    },
    "3615": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3616": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3617": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3619": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "ADD",
      "path": "23"
    },
    "3620": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3622": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3623": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "MUL",
      "path": "23"
    },
    "3624": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3625": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "3626": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3627": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "3628": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "ADD",
      "path": "23"
    },
    "3629": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22450,
        22464
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3634": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3635": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3637": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3638": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22504,
        22505
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3640": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3642": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3643": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3644": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3645": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3646": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3647": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3648": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3650": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "MUL",
      "path": "23"
    },
    "3651": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3653": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "ADD",
      "path": "23"
    },
    "3654": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3655": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "ADD",
      "path": "23"
    },
    "3656": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3658": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3659": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3660": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3661": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE60"
    },
    "3664": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3665": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3666": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3668": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "ADD",
      "path": "23"
    },
    "3669": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3671": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3672": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "MUL",
      "path": "23"
    },
    "3673": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3674": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "3675": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3676": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "3677": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "ADD",
      "path": "23"
    },
    "3678": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3679": {
      "op": "POP"
    },
    "3680": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22490,
        22506
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3681": {
      "op": "POP"
    },
    "3682": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3683": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3684": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3686": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "ADD",
      "path": "23"
    },
    "3687": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22653,
        22654
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3689": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3691": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3692": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3693": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3694": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3695": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3696": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3697": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3699": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "MUL",
      "path": "23"
    },
    "3700": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3702": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "ADD",
      "path": "23"
    },
    "3703": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3704": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "ADD",
      "path": "23"
    },
    "3705": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3707": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3708": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3709": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3710": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE91"
    },
    "3713": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3714": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3715": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3717": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "ADD",
      "path": "23"
    },
    "3718": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3720": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3721": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "MUL",
      "path": "23"
    },
    "3722": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3723": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "3724": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3725": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "3726": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "ADD",
      "path": "23"
    },
    "3727": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22624,
        22655
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3732": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22154,
        22666
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3733": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22149,
        22666
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "3734": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21864,
        22673
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "fn": "Registry.createActionCallData",
      "jump": "o",
      "offset": [
        21864,
        22673
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3742": {
      "fn": "Registry.bundleCall",
      "offset": [
        14686,
        15295
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3743": {
      "fn": "Registry.bundleCall",
      "offset": [
        14852,
        14853
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 23,
      "value": "0x0"
    },
    "3745": {
      "fn": "Registry.bundleCall",
      "offset": [
        14829,
        14831
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3746": {
      "fn": "Registry.bundleCall",
      "offset": [
        14829,
        14842
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3748": {
      "fn": "Registry.bundleCall",
      "offset": [
        14829,
        14842
      ],
      "op": "ADD",
      "path": "23"
    },
    "3749": {
      "fn": "Registry.bundleCall",
      "offset": [
        14829,
        14842
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3750": {
      "fn": "Registry.bundleCall",
      "offset": [
        14829,
        14849
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3751": {
      "branch": 131,
      "fn": "Registry.bundleCall",
      "offset": [
        14829,
        14853
      ],
      "op": "GT",
      "path": "23"
    },
    "3752": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEE4"
    },
    "3755": {
      "branch": 131,
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3756": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3758": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3767": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3770": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3772": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3773": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "ADD",
      "path": "23"
    },
    "3774": {
      "op": "MSTORE"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3779": {
      "op": "DUP3"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "MSTORE"
    },
    "3782": {
      "op": "PUSH14",
      "value": "0x52654E46543A3A6E6F206E667473"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3799": {
      "op": "SHL"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3802": {
      "op": "DUP3"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "3811": {
      "op": "JUMP"
    },
    "3812": {
      "fn": "Registry.bundleCall",
      "offset": [
        14821,
        14872
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3813": {
      "fn": "Registry.bundleCall",
      "offset": [
        14901,
        14903
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3814": {
      "fn": "Registry.bundleCall",
      "offset": [
        14901,
        14914
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3816": {
      "fn": "Registry.bundleCall",
      "offset": [
        14901,
        14914
      ],
      "op": "ADD",
      "path": "23"
    },
    "3817": {
      "fn": "Registry.bundleCall",
      "offset": [
        14901,
        14914
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3818": {
      "fn": "Registry.bundleCall",
      "offset": [
        14901,
        14921
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3819": {
      "fn": "Registry.bundleCall",
      "offset": [
        14889,
        14891
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3820": {
      "fn": "Registry.bundleCall",
      "offset": [
        14889,
        14897
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3822": {
      "fn": "Registry.bundleCall",
      "offset": [
        14889,
        14897
      ],
      "op": "ADD",
      "path": "23"
    },
    "3823": {
      "fn": "Registry.bundleCall",
      "offset": [
        14889,
        14897
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3824": {
      "fn": "Registry.bundleCall",
      "offset": [
        14889,
        14921
      ],
      "op": "EQ",
      "path": "23"
    },
    "3825": {
      "fn": "Registry.bundleCall",
      "offset": [
        14882,
        15268
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFC6"
    },
    "3828": {
      "fn": "Registry.bundleCall",
      "offset": [
        14882,
        15268
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3829": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        14987
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3830": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        14998
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3832": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        14998
      ],
      "op": "ADD",
      "path": "23"
    },
    "3833": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        14998
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3834": {
      "fn": "Registry.bundleCall",
      "offset": [
        14999,
        15001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3835": {
      "fn": "Registry.bundleCall",
      "offset": [
        14999,
        15007
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3837": {
      "fn": "Registry.bundleCall",
      "offset": [
        14999,
        15007
      ],
      "op": "ADD",
      "path": "23"
    },
    "3838": {
      "fn": "Registry.bundleCall",
      "offset": [
        14999,
        15007
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3839": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3840": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3841": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3842": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "LT",
      "path": "23"
    },
    "3843": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF0E"
    },
    "3846": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3847": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF0E"
    },
    "3850": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "3853": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14985,
        15008
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3854": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3855": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3857": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "MUL",
      "path": "23"
    },
    "3858": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3860": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "ADD",
      "path": "23"
    },
    "3861": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "ADD",
      "path": "23"
    },
    "3862": {
      "fn": "Registry.bundleCall",
      "offset": [
        14985,
        15008
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3869": {
      "op": "SHL"
    },
    "3870": {
      "op": "SUB"
    },
    "3871": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        15008
      ],
      "op": "AND",
      "path": "23"
    },
    "3872": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14961
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3873": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14972
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3875": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14972
      ],
      "op": "ADD",
      "path": "23"
    },
    "3876": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14972
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3877": {
      "fn": "Registry.bundleCall",
      "offset": [
        14973,
        14975
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3878": {
      "fn": "Registry.bundleCall",
      "offset": [
        14973,
        14980
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3880": {
      "fn": "Registry.bundleCall",
      "offset": [
        14973,
        14980
      ],
      "op": "ADD",
      "path": "23"
    },
    "3881": {
      "fn": "Registry.bundleCall",
      "offset": [
        14973,
        14980
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3882": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3883": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3884": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3885": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "LT",
      "path": "23"
    },
    "3886": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF39"
    },
    "3889": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3890": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF39"
    },
    "3893": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "3896": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14959,
        14981
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3897": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3898": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3900": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "MUL",
      "path": "23"
    },
    "3901": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3903": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "ADD",
      "path": "23"
    },
    "3904": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "ADD",
      "path": "23"
    },
    "3905": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        14981
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "op": "SUB"
    },
    "3914": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        15008
      ],
      "op": "AND",
      "path": "23"
    },
    "3915": {
      "fn": "Registry.bundleCall",
      "offset": [
        14959,
        15008
      ],
      "op": "EQ",
      "path": "23"
    },
    "3916": {
      "fn": "Registry.bundleCall",
      "offset": [
        14958,
        15086
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3917": {
      "fn": "Registry.bundleCall",
      "offset": [
        14958,
        15086
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3918": {
      "fn": "Registry.bundleCall",
      "offset": [
        14958,
        15086
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF89"
    },
    "3921": {
      "fn": "Registry.bundleCall",
      "offset": [
        14958,
        15086
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3922": {
      "op": "POP"
    },
    "3923": {
      "fn": "Registry.bundleCall",
      "offset": [
        15058,
        15085
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "3925": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15032
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3926": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15044
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3928": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15044
      ],
      "op": "ADD",
      "path": "23"
    },
    "3929": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15044
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3930": {
      "fn": "Registry.bundleCall",
      "offset": [
        15045,
        15047
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3931": {
      "fn": "Registry.bundleCall",
      "offset": [
        15045,
        15053
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3933": {
      "fn": "Registry.bundleCall",
      "offset": [
        15045,
        15053
      ],
      "op": "ADD",
      "path": "23"
    },
    "3934": {
      "fn": "Registry.bundleCall",
      "offset": [
        15045,
        15053
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3935": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3936": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3937": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3938": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "LT",
      "path": "23"
    },
    "3939": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF6E"
    },
    "3942": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3943": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF6E"
    },
    "3946": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "3949": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15030,
        15054
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3950": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3951": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3953": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "MUL",
      "path": "23"
    },
    "3954": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3956": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "ADD",
      "path": "23"
    },
    "3957": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "ADD",
      "path": "23"
    },
    "3958": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15054
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3959": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "3961": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3962": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "GT",
      "path": "23"
    },
    "3963": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3964": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF87"
    },
    "3967": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3968": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF87"
    },
    "3971": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "3974": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15030,
        15085
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3975": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3976": {
      "fn": "Registry.bundleCall",
      "offset": [
        15030,
        15085
      ],
      "op": "EQ",
      "path": "23"
    },
    "3977": {
      "fn": "Registry.bundleCall",
      "offset": [
        14958,
        15086
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3978": {
      "fn": "Registry.bundleCall",
      "offset": [
        14937,
        15258
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3979": {
      "fn": "Registry.bundleCall",
      "offset": [
        14937,
        15258
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFA6"
    },
    "3982": {
      "fn": "Registry.bundleCall",
      "offset": [
        14937,
        15258
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3983": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15127
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 24,
      "value": "0x20"
    },
    "3985": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15127
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3986": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15127
      ],
      "op": "ADD",
      "path": "23"
    },
    "3987": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3988": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3989": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3990": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF9E"
    },
    "3993": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3994": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "3997": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15119,
        15129
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3998": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3999": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4000": {
      "fn": "Registry.bundleCall",
      "offset": [
        15119,
        15129
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "fn": "Registry.bundleCall",
      "offset": [
        14882,
        15268
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEE4"
    },
    "4005": {
      "fn": "Registry.bundleCall",
      "offset": [
        14882,
        15268
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4006": {
      "fn": "Registry.bundleCall",
      "offset": [
        14937,
        15258
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4007": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15179
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 25,
      "value": "0xFB3"
    },
    "4010": {
      "fn": "Registry.bundleCall",
      "offset": [
        15176,
        15178
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4011": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15175
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4012": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15179
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "4017": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15179
      ],
      "op": "AND",
      "path": "23"
    },
    "4018": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15168,
        15179
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4019": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15179
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4020": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 26,
      "value": "0x20"
    },
    "4022": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4023": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "ADD",
      "path": "23"
    },
    "4024": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4025": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4026": {
      "fn": "Registry.bundleCall",
      "offset": [
        15197,
        15215
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4027": {
      "fn": "Registry.bundleCall",
      "offset": [
        15197,
        15215
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4028": {
      "fn": "Registry.bundleCall",
      "offset": [
        15197,
        15215
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4029": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4030": {
      "fn": "Registry.bundleCall",
      "offset": [
        15233,
        15243
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 27,
      "value": "0xF9E"
    },
    "4033": {
      "fn": "Registry.bundleCall",
      "offset": [
        15207,
        15215
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4034": {
      "fn": "Registry.bundleCall",
      "offset": [
        15233,
        15243
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "4037": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15233,
        15243
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4038": {
      "fn": "Registry.bundleCall",
      "offset": [
        14882,
        15268
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4039": {
      "fn": "Registry.bundleCall",
      "offset": [
        15277,
        15288
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 28,
      "value": "0xD14"
    },
    "4042": {
      "fn": "Registry.bundleCall",
      "offset": [
        15285,
        15287
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4043": {
      "fn": "Registry.bundleCall",
      "offset": [
        15277,
        15284
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4044": {
      "fn": "Registry.bundleCall",
      "offset": [
        15277,
        15288
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "4049": {
      "fn": "Registry.bundleCall",
      "offset": [
        15277,
        15288
      ],
      "op": "AND",
      "path": "23"
    },
    "4050": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15277,
        15288
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4051": {
      "fn": "Registry.handleLend",
      "offset": [
        6068,
        7763
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4052": {
      "fn": "Registry.handleLend",
      "offset": [
        6153,
        6160
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4053": {
      "fn": "Registry.handleLend",
      "offset": [
        6153,
        6160
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4054": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4055": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6168
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4056": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4058": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "ADD",
      "path": "23"
    },
    "4059": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4060": {
      "fn": "Registry.handleLend",
      "offset": [
        6162,
        6163
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4061": {
      "fn": "Registry.handleLend",
      "offset": [
        6162,
        6174
      ],
      "op": "LT",
      "path": "23"
    },
    "4062": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4063": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1537"
    },
    "4066": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4067": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6218
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 29,
      "value": "0xFEC"
    },
    "4070": {
      "fn": "Registry.handleLend",
      "offset": [
        6212,
        6214
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4071": {
      "fn": "Registry.handleLend",
      "offset": [
        6216,
        6217
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4072": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6211
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AF2"
    },
    "4075": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6195,
        6218
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4076": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6218
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4077": {
      "fn": "Registry.handleLend",
      "offset": [
        6232,
        6250
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4079": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6320
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4080": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "4082": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "ADD",
      "path": "23"
    },
    "4083": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4084": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6334
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4085": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4087": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "ADD",
      "path": "23"
    },
    "4088": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4089": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4090": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4091": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4092": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "LT",
      "path": "23"
    },
    "4093": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1008"
    },
    "4096": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4097": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1008"
    },
    "4100": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4103": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4104": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4105": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4107": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MUL",
      "path": "23"
    },
    "4108": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4110": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "ADD",
      "path": "23"
    },
    "4111": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "ADD",
      "path": "23"
    },
    "4112": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4113": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6364
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4114": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "4116": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "ADD",
      "path": "23"
    },
    "4117": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4118": {
      "fn": "Registry.handleLend",
      "offset": [
        6373,
        6374
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4119": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4120": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4121": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4122": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "LT",
      "path": "23"
    },
    "4123": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1026"
    },
    "4126": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4127": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1026"
    },
    "4130": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4133": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4134": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4135": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4137": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MUL",
      "path": "23"
    },
    "4138": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4140": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "ADD",
      "path": "23"
    },
    "4141": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "ADD",
      "path": "23"
    },
    "4142": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4143": {
      "fn": "Registry.handleLend",
      "offset": [
        6397,
        6406
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4145": {
      "fn": "Registry.handleLend",
      "offset": [
        6397,
        6406
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4146": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4148": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4149": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4151": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "ADD",
      "path": "23"
    },
    "4152": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1043"
    },
    "4155": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4156": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4157": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4158": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4159": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "4162": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6280,
        6424
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4163": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4164": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4166": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4167": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4170": {
      "op": "NOT"
    },
    "4171": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4172": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4173": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SUB",
      "path": "23"
    },
    "4174": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "ADD",
      "path": "23"
    },
    "4175": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4176": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4177": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4178": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4179": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4180": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4181": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4182": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4184": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4185": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4186": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "ADD",
      "path": "23"
    },
    "4187": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4188": {
      "fn": "Registry.handleLend",
      "offset": [
        6452,
        6485
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4190": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4191": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4192": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4193": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6496
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "4195": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4196": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4197": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4198": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4199": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4200": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4201": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4202": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 30,
      "value": "0xE0"
    },
    "4204": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4205": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4206": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4207": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4208": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4209": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4210": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4211": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4212": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4213": {
      "op": "POP"
    },
    "4214": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4215": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4216": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x113B"
    },
    "4219": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4220": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4221": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4222": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4223": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4224": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4226": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4227": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4229": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4230": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "23"
    },
    "4231": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4232": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1093"
    },
    "4235": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4236": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1093"
    },
    "4239": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4242": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4243": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4244": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4246": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4247": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "23"
    },
    "4248": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4249": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10A4"
    },
    "4252": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4253": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10A4"
    },
    "4256": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4259": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4260": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4261": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4262": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4263": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4264": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "op": "SUB"
    },
    "4273": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4276": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4277": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "23"
    },
    "4278": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4279": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4281": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4282": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4283": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4284": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4292": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "23"
    },
    "4293": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4294": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4295": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4297": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4298": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4299": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4306": {
      "op": "SHL"
    },
    "4307": {
      "op": "SUB"
    },
    "4308": {
      "op": "NOT"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4313": {
      "op": "SHL"
    },
    "4314": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4315": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "23"
    },
    "4316": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4318": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SHL",
      "path": "23"
    },
    "4319": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4320": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "4322": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4323": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4324": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4325": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4332": {
      "op": "SHL"
    },
    "4333": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4334": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "23"
    },
    "4335": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4336": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4337": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "4339": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4340": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4341": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4346": {
      "op": "SHL"
    },
    "4347": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4348": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "23"
    },
    "4349": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4350": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "4352": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4353": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4354": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4355": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "4357": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4358": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4359": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "23"
    },
    "4360": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4365": {
      "op": "SHL"
    },
    "4366": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4367": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4368": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "23"
    },
    "4369": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "23"
    },
    "4370": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4372": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4373": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "23"
    },
    "4374": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4375": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1122"
    },
    "4378": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4379": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1122"
    },
    "4382": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4385": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4386": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4387": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4389": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4390": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "23"
    },
    "4391": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4392": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1133"
    },
    "4395": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4396": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1133"
    },
    "4399": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4402": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4403": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4404": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4405": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4406": {
      "op": "POP"
    },
    "4407": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6534
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C68"
    },
    "4410": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4411": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4412": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6606
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 31,
      "value": "0x1173"
    },
    "4415": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6588
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4416": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180"
    },
    "4419": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "ADD",
      "path": "23"
    },
    "4420": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4421": {
      "fn": "Registry.handleLend",
      "offset": [
        6602,
        6603
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4422": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4423": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4424": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4425": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "LT",
      "path": "23"
    },
    "4426": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1155"
    },
    "4429": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4430": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1155"
    },
    "4433": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4436": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4437": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4438": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4440": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MUL",
      "path": "23"
    },
    "4441": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4443": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "ADD",
      "path": "23"
    },
    "4444": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "ADD",
      "path": "23"
    },
    "4445": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4446": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4448": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4449": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "GT",
      "path": "23"
    },
    "4450": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4451": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x116E"
    },
    "4454": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4455": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x116E"
    },
    "4458": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4461": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4462": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4463": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6579
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D21"
    },
    "4466": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6557,
        6606
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4467": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6606
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4468": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4470": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6630
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4471": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6635
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4472": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4474": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "ADD",
      "path": "23"
    },
    "4475": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4476": {
      "fn": "Registry.handleLend",
      "offset": [
        6648,
        6649
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4477": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4478": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4479": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4480": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "LT",
      "path": "23"
    },
    "4481": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118C"
    },
    "4484": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4485": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x118C"
    },
    "4488": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4491": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4492": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4493": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4495": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MUL",
      "path": "23"
    },
    "4496": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4498": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "ADD",
      "path": "23"
    },
    "4499": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "ADD",
      "path": "23"
    },
    "4500": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4501": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4503": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4504": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "GT",
      "path": "23"
    },
    "4505": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4506": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11A5"
    },
    "4509": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4510": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11A5"
    },
    "4513": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4516": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4517": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4518": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "EQ",
      "path": "23"
    },
    "4519": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6680
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4520": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6680
      ],
      "op": "POP",
      "path": "23"
    },
    "4521": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 32,
      "value": "0x40"
    },
    "4523": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4524": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4525": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4527": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4528": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4530": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4531": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4532": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6768
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4533": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4535": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "ADD",
      "path": "23"
    },
    "4536": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4537": {
      "fn": "Registry.handleLend",
      "offset": [
        6781,
        6782
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4538": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4539": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4540": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4541": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "LT",
      "path": "23"
    },
    "4542": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11C9"
    },
    "4545": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4546": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11C9"
    },
    "4549": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4552": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4553": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4554": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4556": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MUL",
      "path": "23"
    },
    "4557": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4559": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "ADD",
      "path": "23"
    },
    "4560": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "ADD",
      "path": "23"
    },
    "4561": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4562": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4564": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4565": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "GT",
      "path": "23"
    },
    "4566": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4567": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E2"
    },
    "4570": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4571": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11E2"
    },
    "4574": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4577": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4578": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4579": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4580": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4581": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4583": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4584": {
      "fn": "Registry.handleLend",
      "offset": [
        6824,
        6834
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "op": "SUB"
    },
    "4593": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4594": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4595": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4596": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4598": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4599": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6872
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4600": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "4602": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "ADD",
      "path": "23"
    },
    "4603": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4604": {
      "fn": "Registry.handleLend",
      "offset": [
        6889,
        6890
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4605": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4606": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4607": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4608": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "LT",
      "path": "23"
    },
    "4609": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x120C"
    },
    "4612": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4613": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x120C"
    },
    "4616": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4619": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4620": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4621": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4623": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MUL",
      "path": "23"
    },
    "4624": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4626": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "ADD",
      "path": "23"
    },
    "4627": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "ADD",
      "path": "23"
    },
    "4628": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4629": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4631": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4632": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4633": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4634": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4636": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4637": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6927
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4638": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4640": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "ADD",
      "path": "23"
    },
    "4641": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4642": {
      "fn": "Registry.handleLend",
      "offset": [
        6943,
        6944
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4643": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4644": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4645": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4646": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "LT",
      "path": "23"
    },
    "4647": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1232"
    },
    "4650": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4651": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1232"
    },
    "4654": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4657": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4658": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4659": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4661": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MUL",
      "path": "23"
    },
    "4662": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4664": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "ADD",
      "path": "23"
    },
    "4665": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "ADD",
      "path": "23"
    },
    "4666": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "op": "SUB"
    },
    "4675": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "NOT",
      "path": "23"
    },
    "4676": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4677": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4678": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4679": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4681": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4682": {
      "branch": 132,
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        6980
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4683": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1271"
    },
    "4686": {
      "branch": 132,
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4687": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        6995
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4688": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7006
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "4690": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7006
      ],
      "op": "ADD",
      "path": "23"
    },
    "4691": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7006
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4692": {
      "fn": "Registry.handleLend",
      "offset": [
        7007,
        7008
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4693": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4694": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4695": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4696": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "LT",
      "path": "23"
    },
    "4697": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1264"
    },
    "4700": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4701": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1264"
    },
    "4704": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4707": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4708": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4709": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4711": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "MUL",
      "path": "23"
    },
    "4712": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4714": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "ADD",
      "path": "23"
    },
    "4715": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "ADD",
      "path": "23"
    },
    "4716": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4717": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1274"
    },
    "4720": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4721": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4722": {
      "fn": "Registry.handleLend",
      "offset": [
        6983,
        6984
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4724": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4725": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4727": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4728": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4729": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4730": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4732": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4733": {
      "branch": 133,
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7050
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4734": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12A4"
    },
    "4737": {
      "branch": 133,
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4738": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7065
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4739": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7076
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "4741": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7076
      ],
      "op": "ADD",
      "path": "23"
    },
    "4742": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7076
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4743": {
      "fn": "Registry.handleLend",
      "offset": [
        7077,
        7078
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4744": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4745": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4746": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4747": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "LT",
      "path": "23"
    },
    "4748": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1297"
    },
    "4751": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4752": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1297"
    },
    "4755": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4758": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7063,
        7079
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4759": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4760": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4762": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "MUL",
      "path": "23"
    },
    "4763": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4765": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "ADD",
      "path": "23"
    },
    "4766": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "ADD",
      "path": "23"
    },
    "4767": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4768": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12A7"
    },
    "4771": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4772": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4773": {
      "fn": "Registry.handleLend",
      "offset": [
        7053,
        7054
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4775": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4776": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4778": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4779": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "4782": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4783": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4784": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4785": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4787": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4788": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7114
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4789": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7127
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180"
    },
    "4792": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7127
      ],
      "op": "ADD",
      "path": "23"
    },
    "4793": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7127
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4794": {
      "fn": "Registry.handleLend",
      "offset": [
        7128,
        7129
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4795": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4796": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4797": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4798": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "LT",
      "path": "23"
    },
    "4799": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12CA"
    },
    "4802": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4803": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12CA"
    },
    "4806": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "4809": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7112,
        7130
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4810": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4811": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4813": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "MUL",
      "path": "23"
    },
    "4814": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4816": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "ADD",
      "path": "23"
    },
    "4817": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "ADD",
      "path": "23"
    },
    "4818": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4819": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "4821": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4822": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "GT",
      "path": "23"
    },
    "4823": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4824": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12E3"
    },
    "4827": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4828": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x12E3"
    },
    "4831": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4834": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4835": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4836": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4837": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4838": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4840": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4841": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4842": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4843": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6702
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "4845": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4847": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4848": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4850": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4851": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4852": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4853": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4854": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4855": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4856": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4857": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4860": {
      "op": "NOT"
    },
    "4861": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4862": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "4864": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4865": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4866": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4867": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "GT",
      "path": "23"
    },
    "4868": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4869": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1310"
    },
    "4872": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4873": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1310"
    },
    "4876": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "4879": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4880": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4881": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "4882": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "4883": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4884": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "4885": {
      "op": "POP"
    },
    "4886": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4888": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4889": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4890": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4891": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4892": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4893": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4895": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4896": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4897": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4898": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "4900": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4901": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4902": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4903": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "4905": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4906": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4907": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4908": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "4910": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP8",
      "path": "23"
    },
    "4911": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "4912": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4920": {
      "op": "SHL"
    },
    "4921": {
      "op": "SUB"
    },
    "4922": {
      "op": "NOT"
    },
    "4923": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4924": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4925": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4926": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "op": "SUB"
    },
    "4937": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4938": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "4939": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4940": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "4941": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4942": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "4943": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4948": {
      "op": "SHL"
    },
    "4949": {
      "op": "NOT"
    },
    "4950": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4951": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4952": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4953": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4954": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4959": {
      "op": "SHL"
    },
    "4960": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "4962": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4963": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4964": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4965": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4966": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4967": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4968": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "4969": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4970": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4971": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4972": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "4973": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "NOT"
    },
    "4984": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4989": {
      "op": "SHL"
    },
    "4990": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4992": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4993": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4994": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4995": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SHR",
      "path": "23"
    },
    "4996": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4997": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4998": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4999": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "5000": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "op": "NOT"
    },
    "5007": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "5008": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5013": {
      "op": "SHL"
    },
    "5014": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "5017": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5018": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5019": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "5020": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "5021": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "op": "NOT"
    },
    "5029": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5030": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5035": {
      "op": "SHL"
    },
    "5036": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5037": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5038": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5039": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "5040": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5041": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5042": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5043": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "5044": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5045": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5046": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "5047": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5048": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5049": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "5051": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5052": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "23"
    },
    "5053": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5054": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5055": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5056": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5057": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "op": "NOT"
    },
    "5065": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5066": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5067": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5072": {
      "op": "SHL"
    },
    "5073": {
      "op": "NOT"
    },
    "5074": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5075": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5076": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "23"
    },
    "5077": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5082": {
      "op": "SHL"
    },
    "5083": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5084": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "5086": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5087": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "GT",
      "path": "23"
    },
    "5088": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5089": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13EC"
    },
    "5092": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5093": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13EC"
    },
    "5096": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "5099": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5100": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5101": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "23"
    },
    "5102": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "23"
    },
    "5103": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5104": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5105": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "POP",
      "path": "23"
    },
    "5106": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5107": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "POP",
      "path": "23"
    },
    "5108": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "POP",
      "path": "23"
    },
    "5109": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7289
      ],
      "op": "DUP5",
      "path": "23",
      "statement": 33
    },
    "5110": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7297
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "5112": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7297
      ],
      "op": "ADD",
      "path": "23"
    },
    "5113": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7297
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5114": {
      "fn": "Registry.handleLend",
      "offset": [
        7298,
        7299
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5115": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5116": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5117": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5118": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "LT",
      "path": "23"
    },
    "5119": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140A"
    },
    "5122": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5123": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140A"
    },
    "5126": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5129": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7287,
        7300
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5130": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5131": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5133": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "MUL",
      "path": "23"
    },
    "5134": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5136": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "ADD",
      "path": "23"
    },
    "5137": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "ADD",
      "path": "23"
    },
    "5138": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5139": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7249
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5140": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7260
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5142": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7260
      ],
      "op": "ADD",
      "path": "23"
    },
    "5143": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7260
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5144": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7263
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5145": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7268
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5147": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7268
      ],
      "op": "ADD",
      "path": "23"
    },
    "5148": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7268
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5149": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5150": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5151": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5152": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "LT",
      "path": "23"
    },
    "5153": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x142C"
    },
    "5156": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5157": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x142C"
    },
    "5160": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5163": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7247,
        7269
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5164": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5165": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5167": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "MUL",
      "path": "23"
    },
    "5168": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5170": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "ADD",
      "path": "23"
    },
    "5171": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "ADD",
      "path": "23"
    },
    "5172": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5179": {
      "op": "SHL"
    },
    "5180": {
      "op": "SUB"
    },
    "5181": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "AND",
      "path": "23"
    },
    "5182": {
      "fn": "Registry.handleLend",
      "offset": [
        7219,
        7229
      ],
      "op": "CALLER",
      "path": "23"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5189": {
      "op": "SHL"
    },
    "5190": {
      "op": "SUB"
    },
    "5191": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "AND",
      "path": "23"
    },
    "5192": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x46E173C7568BB4F093E16923381DCBA2A6B48F9CC9E688867965731218500AD3"
    },
    "5225": {
      "fn": "Registry.handleLend",
      "offset": [
        7196,
        7201
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5226": {
      "fn": "Registry.handleLend",
      "offset": [
        7318,
        7327
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "5228": {
      "fn": "Registry.handleLend",
      "offset": [
        7318,
        7327
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5229": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7347
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5230": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7363
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "5232": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7363
      ],
      "op": "ADD",
      "path": "23"
    },
    "5233": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7363
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5234": {
      "fn": "Registry.handleLend",
      "offset": [
        7364,
        7365
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5235": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5236": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5237": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5238": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "LT",
      "path": "23"
    },
    "5239": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1482"
    },
    "5242": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5243": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1482"
    },
    "5246": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5249": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7345,
        7366
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5250": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5251": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5253": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "MUL",
      "path": "23"
    },
    "5254": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5256": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "ADD",
      "path": "23"
    },
    "5257": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "ADD",
      "path": "23"
    },
    "5258": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5259": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7386
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5260": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7401
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "5262": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7401
      ],
      "op": "ADD",
      "path": "23"
    },
    "5263": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7401
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5264": {
      "fn": "Registry.handleLend",
      "offset": [
        7402,
        7403
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5265": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5266": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5267": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5268": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "LT",
      "path": "23"
    },
    "5269": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14A0"
    },
    "5272": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5273": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14A0"
    },
    "5276": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5279": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7384,
        7404
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5280": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5281": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5283": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "MUL",
      "path": "23"
    },
    "5284": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5286": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "ADD",
      "path": "23"
    },
    "5287": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "ADD",
      "path": "23"
    },
    "5288": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5289": {
      "branch": 134,
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7427
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5290": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D0"
    },
    "5293": {
      "branch": 134,
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5294": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7442
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5295": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "5297": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7453
      ],
      "op": "ADD",
      "path": "23"
    },
    "5298": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7453
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5299": {
      "fn": "Registry.handleLend",
      "offset": [
        7454,
        7455
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5300": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5301": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5302": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5303": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "LT",
      "path": "23"
    },
    "5304": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14C3"
    },
    "5307": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5308": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14C3"
    },
    "5311": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5314": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7440,
        7456
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5315": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5316": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5318": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "MUL",
      "path": "23"
    },
    "5319": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5321": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "ADD",
      "path": "23"
    },
    "5322": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "ADD",
      "path": "23"
    },
    "5323": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5324": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14D3"
    },
    "5327": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5328": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5329": {
      "fn": "Registry.handleLend",
      "offset": [
        7430,
        7431
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "5331": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5332": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7477
      ],
      "op": "DUP14",
      "path": "23"
    },
    "5333": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7490
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180"
    },
    "5336": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7490
      ],
      "op": "ADD",
      "path": "23"
    },
    "5337": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7490
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5338": {
      "fn": "Registry.handleLend",
      "offset": [
        7491,
        7492
      ],
      "op": "DUP14",
      "path": "23"
    },
    "5339": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5340": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5341": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5342": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "LT",
      "path": "23"
    },
    "5343": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14EA"
    },
    "5346": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5347": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14EA"
    },
    "5350": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5353": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7475,
        7493
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5354": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5355": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5357": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "MUL",
      "path": "23"
    },
    "5358": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5360": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "ADD",
      "path": "23"
    },
    "5361": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "ADD",
      "path": "23"
    },
    "5362": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5363": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5365": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5366": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1504"
    },
    "5369": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "5370": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5371": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "5372": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5373": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5374": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5375": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5376": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4526"
    },
    "5379": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7164,
        7507
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5380": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5381": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5383": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5384": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5385": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5386": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SUB",
      "path": "23"
    },
    "5387": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5388": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "LOG4",
      "path": "23"
    },
    "5389": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7530
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 34,
      "value": "0x3"
    },
    "5391": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5392": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5393": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5394": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7530
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5396": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x151C"
    },
    "5399": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5400": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "5403": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7521,
        7532
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5404": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5405": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5406": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5407": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "POP",
      "path": "23"
    },
    "5408": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5409": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "POP",
      "path": "23"
    },
    "5410": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7543
      ],
      "op": "POP",
      "path": "23"
    },
    "5411": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7543
      ],
      "op": "POP",
      "path": "23"
    },
    "5412": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7543
      ],
      "op": "POP",
      "path": "23"
    },
    "5413": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 35
    },
    "5414": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5415": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x152F"
    },
    "5418": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5419": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "5422": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6176,
        6179
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5423": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5424": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5425": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "POP",
      "path": "23"
    },
    "5426": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "POP",
      "path": "23"
    },
    "5427": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFD6"
    },
    "5430": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5431": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5432": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "POP",
      "path": "23"
    },
    "5433": {
      "fn": "Registry.handleLend",
      "offset": [
        7552,
        7756
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 36,
      "value": "0x1575"
    },
    "5436": {
      "fn": "Registry.handleLend",
      "offset": [
        7578,
        7580
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5437": {
      "fn": "Registry.handleLend",
      "offset": [
        7594,
        7604
      ],
      "op": "CALLER",
      "path": "23"
    },
    "5438": {
      "fn": "Registry.handleLend",
      "offset": [
        7626,
        7630
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "5439": {
      "fn": "Registry.handleLend",
      "offset": [
        7645,
        7687
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1557"
    },
    "5442": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7656
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5443": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "5445": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7664
      ],
      "op": "ADD",
      "path": "23"
    },
    "5446": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7664
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5447": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7668
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5448": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7673
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5450": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7673
      ],
      "op": "ADD",
      "path": "23"
    },
    "5451": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7673
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5452": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7677
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5453": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7683
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5455": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7683
      ],
      "op": "ADD",
      "path": "23"
    },
    "5456": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7683
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5457": {
      "fn": "Registry.handleLend",
      "offset": [
        7685,
        7686
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5459": {
      "fn": "Registry.handleLend",
      "offset": [
        7645,
        7653
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D74"
    },
    "5462": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7645,
        7687
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5463": {
      "fn": "Registry.handleLend",
      "offset": [
        7645,
        7687
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5464": {
      "fn": "Registry.handleLend",
      "offset": [
        7701,
        7746
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1570"
    },
    "5467": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7712
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5468": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7723
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "5470": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7723
      ],
      "op": "ADD",
      "path": "23"
    },
    "5471": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7723
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5472": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7727
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5473": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5475": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7732
      ],
      "op": "ADD",
      "path": "23"
    },
    "5476": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7732
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5477": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7736
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5478": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7742
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5480": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7742
      ],
      "op": "ADD",
      "path": "23"
    },
    "5481": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7742
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5482": {
      "fn": "Registry.handleLend",
      "offset": [
        7744,
        7745
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5484": {
      "fn": "Registry.handleLend",
      "offset": [
        7701,
        7709
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D74"
    },
    "5487": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7701,
        7746
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5488": {
      "fn": "Registry.handleLend",
      "offset": [
        7701,
        7746
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5489": {
      "fn": "Registry.handleLend",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E33"
    },
    "5492": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7552,
        7756
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5493": {
      "fn": "Registry.handleLend",
      "offset": [
        7552,
        7756
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5494": {
      "fn": "Registry.handleLend",
      "offset": [
        6068,
        7763
      ],
      "op": "POP",
      "path": "23"
    },
    "5495": {
      "fn": "Registry.handleLend",
      "jump": "o",
      "offset": [
        6068,
        7763
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5496": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20119,
        21010
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5497": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20469,
        20487
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1580"
    },
    "5500": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20469,
        20487
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3AD7"
    },
    "5503": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20469,
        20487
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5504": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20469,
        20487
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5505": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 37,
      "value": "0x40"
    },
    "5507": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5508": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5509": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A0"
    },
    "5512": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5513": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5515": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5516": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5517": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20533,
        20534
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5519": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5520": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5521": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5523": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5524": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20555,
        20556
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "5526": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5527": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5528": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5530": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5531": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20583,
        20594
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5532": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5533": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5534": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5536": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5537": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20620,
        20630
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5538": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5539": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5540": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5542": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5543": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20653,
        20660
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5544": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5545": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5546": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5548": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5549": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20686,
        20696
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5550": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5551": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5552": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5554": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5555": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20893,
        20908
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5556": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5557": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5558": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5560": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5561": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20938,
        20952
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5562": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5563": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5564": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5566": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5567": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20735,
        20736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5575": {
      "op": "SHL"
    },
    "5576": {
      "op": "SUB"
    },
    "5577": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5578": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "GT",
      "path": "23"
    },
    "5579": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5580": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15D7"
    },
    "5583": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5584": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15D7"
    },
    "5587": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4959"
    },
    "5590": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20721,
        20737
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5591": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5592": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5594": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5595": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5596": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5597": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5598": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5599": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5600": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5602": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "MUL",
      "path": "23"
    },
    "5603": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5605": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "ADD",
      "path": "23"
    },
    "5606": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5607": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "ADD",
      "path": "23"
    },
    "5608": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5610": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5611": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5612": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5613": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1600"
    },
    "5616": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5617": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5618": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5620": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "ADD",
      "path": "23"
    },
    "5621": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5623": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5624": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "MUL",
      "path": "23"
    },
    "5625": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5626": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "5627": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5628": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "5629": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "ADD",
      "path": "23"
    },
    "5630": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20721,
        20737
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5633": {
      "op": "POP"
    },
    "5634": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5635": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5636": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5638": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5639": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20776,
        20777
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5641": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5643": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5644": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5645": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5646": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5647": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5648": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5649": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5651": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "MUL",
      "path": "23"
    },
    "5652": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5654": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "ADD",
      "path": "23"
    },
    "5655": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5656": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "ADD",
      "path": "23"
    },
    "5657": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5659": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5660": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5661": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5662": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1631"
    },
    "5665": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5666": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5667": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5669": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "ADD",
      "path": "23"
    },
    "5670": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5672": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5673": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "MUL",
      "path": "23"
    },
    "5674": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5675": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "5676": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5677": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "5678": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "ADD",
      "path": "23"
    },
    "5679": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20762,
        20778
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5684": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5685": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5687": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5688": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20818,
        20819
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5690": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5692": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5693": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5694": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5695": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5696": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5697": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5698": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5700": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "MUL",
      "path": "23"
    },
    "5701": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5703": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "ADD",
      "path": "23"
    },
    "5704": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5705": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "ADD",
      "path": "23"
    },
    "5706": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5708": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5709": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5710": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5711": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1662"
    },
    "5714": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5715": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5716": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5718": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "ADD",
      "path": "23"
    },
    "5719": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5721": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5722": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "MUL",
      "path": "23"
    },
    "5723": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5724": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "5725": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5726": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "5727": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "ADD",
      "path": "23"
    },
    "5728": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5729": {
      "op": "POP"
    },
    "5730": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20806,
        20820
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5733": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5734": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5736": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5737": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20860,
        20861
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5739": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5741": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5742": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5743": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5744": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5745": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5746": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5747": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5749": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "MUL",
      "path": "23"
    },
    "5750": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5752": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "ADD",
      "path": "23"
    },
    "5753": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5754": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "ADD",
      "path": "23"
    },
    "5755": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5757": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5758": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5759": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5760": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1693"
    },
    "5763": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5764": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5765": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5767": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "ADD",
      "path": "23"
    },
    "5768": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5770": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5771": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "MUL",
      "path": "23"
    },
    "5772": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5773": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "5774": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5775": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "5776": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "ADD",
      "path": "23"
    },
    "5777": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20846,
        20862
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5782": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5783": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5785": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "ADD",
      "path": "23"
    },
    "5786": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5787": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5788": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5789": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20504,
        21003
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5790": {
      "op": "POP"
    },
    "5791": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20499,
        21003
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "5792": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20119,
        21010
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5793": {
      "op": "POP"
    },
    "5794": {
      "op": "POP"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "op": "POP"
    },
    "5797": {
      "op": "POP"
    },
    "5798": {
      "op": "POP"
    },
    "5799": {
      "fn": "Registry.createLendCallData",
      "jump": "o",
      "offset": [
        20119,
        21010
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5800": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13274,
        14498
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5801": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13354,
        13361
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5802": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13354,
        13361
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5803": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13337,
        14492
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5804": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13367,
        13369
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5805": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13367,
        13375
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5807": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13367,
        13375
      ],
      "op": "ADD",
      "path": "23"
    },
    "5808": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13367,
        13375
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5809": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13363,
        13364
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5810": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13363,
        13375
      ],
      "op": "LT",
      "path": "23"
    },
    "5811": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13337,
        14492
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5812": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13337,
        14492
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "5815": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13337,
        14492
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5816": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13396,
        13421
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5818": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13491
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5819": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13502
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5821": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13502
      ],
      "op": "ADD",
      "path": "23"
    },
    "5822": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13502
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5823": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13503,
        13505
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5824": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13503,
        13510
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5826": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13503,
        13510
      ],
      "op": "ADD",
      "path": "23"
    },
    "5827": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13503,
        13510
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5828": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5829": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5830": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5831": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "LT",
      "path": "23"
    },
    "5832": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16D3"
    },
    "5835": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5836": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16D3"
    },
    "5839": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5842": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13489,
        13511
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5843": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5844": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5846": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "MUL",
      "path": "23"
    },
    "5847": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5849": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "ADD",
      "path": "23"
    },
    "5850": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "ADD",
      "path": "23"
    },
    "5851": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13489,
        13511
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5852": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13535
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5853": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13543
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "5855": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13543
      ],
      "op": "ADD",
      "path": "23"
    },
    "5856": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13543
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5857": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13544,
        13545
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5858": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5859": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5860": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5861": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "LT",
      "path": "23"
    },
    "5862": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16F1"
    },
    "5865": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5866": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16F1"
    },
    "5869": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5872": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13533,
        13546
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5873": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5874": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5876": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "MUL",
      "path": "23"
    },
    "5877": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5879": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "ADD",
      "path": "23"
    },
    "5880": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "ADD",
      "path": "23"
    },
    "5881": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13533,
        13546
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5882": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13570
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5883": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13580
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "5886": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13580
      ],
      "op": "ADD",
      "path": "23"
    },
    "5887": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13580
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5888": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13581,
        13582
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5889": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5890": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5891": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5892": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "LT",
      "path": "23"
    },
    "5893": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1710"
    },
    "5896": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5897": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1710"
    },
    "5900": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5903": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13568,
        13583
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5904": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5905": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5907": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "MUL",
      "path": "23"
    },
    "5908": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5910": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "ADD",
      "path": "23"
    },
    "5911": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "ADD",
      "path": "23"
    },
    "5912": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13568,
        13583
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5913": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5915": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5916": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5918": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "ADD",
      "path": "23"
    },
    "5919": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x172A"
    },
    "5922": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5923": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5924": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5925": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5926": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "5929": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13451,
        13601
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5930": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5931": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5933": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5934": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5936": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5937": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5938": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SUB",
      "path": "23"
    },
    "5939": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SUB",
      "path": "23"
    },
    "5940": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5941": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5942": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5943": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5945": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13451,
        13601
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5946": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13424,
        13615
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5947": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13424,
        13615
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5948": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13424,
        13615
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5949": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13424,
        13615
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5951": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13424,
        13615
      ],
      "op": "ADD",
      "path": "23"
    },
    "5952": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13424,
        13615
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5953": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13396,
        13615
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5954": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13396,
        13615
      ],
      "op": "POP",
      "path": "23"
    },
    "5955": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13629,
        13654
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5957": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13724
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5958": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13735
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5960": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13735
      ],
      "op": "ADD",
      "path": "23"
    },
    "5961": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13735
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5962": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13736,
        13738
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5963": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13736,
        13743
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5965": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13736,
        13743
      ],
      "op": "ADD",
      "path": "23"
    },
    "5966": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13736,
        13743
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5967": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5968": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5969": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5970": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "LT",
      "path": "23"
    },
    "5971": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x175E"
    },
    "5974": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5975": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x175E"
    },
    "5978": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "5981": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13722,
        13744
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5982": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5983": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5985": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "MUL",
      "path": "23"
    },
    "5986": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5988": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "ADD",
      "path": "23"
    },
    "5989": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "ADD",
      "path": "23"
    },
    "5990": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13722,
        13744
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5991": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13768
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5992": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13776
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "5994": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13776
      ],
      "op": "ADD",
      "path": "23"
    },
    "5995": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13776
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5996": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13777,
        13778
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5997": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5998": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5999": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6000": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "LT",
      "path": "23"
    },
    "6001": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x177C"
    },
    "6004": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6005": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x177C"
    },
    "6008": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "6011": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13766,
        13779
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6012": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6013": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6015": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "MUL",
      "path": "23"
    },
    "6016": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6018": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "ADD",
      "path": "23"
    },
    "6019": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "ADD",
      "path": "23"
    },
    "6020": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13766,
        13779
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6021": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13803
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6022": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13813
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x120"
    },
    "6025": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13813
      ],
      "op": "ADD",
      "path": "23"
    },
    "6026": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13813
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6027": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13814,
        13815
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6028": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6029": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6030": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6031": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "LT",
      "path": "23"
    },
    "6032": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x179B"
    },
    "6035": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6036": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x179B"
    },
    "6039": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "6042": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13801,
        13816
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6043": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6044": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6046": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "MUL",
      "path": "23"
    },
    "6047": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6049": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "ADD",
      "path": "23"
    },
    "6050": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "ADD",
      "path": "23"
    },
    "6051": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13801,
        13816
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6052": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6054": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6055": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6057": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "ADD",
      "path": "23"
    },
    "6058": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17B5"
    },
    "6061": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6062": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6063": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6064": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6065": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "6068": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13684,
        13834
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6069": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6070": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6072": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6073": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6076": {
      "op": "NOT"
    },
    "6077": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6078": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6079": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "SUB",
      "path": "23"
    },
    "6080": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "ADD",
      "path": "23"
    },
    "6081": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6082": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6083": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6084": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6085": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6086": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6087": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6088": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6090": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6091": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6092": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "ADD",
      "path": "23"
    },
    "6093": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6094": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13862,
        13895
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6096": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6097": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6098": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6099": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13906
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "6101": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6102": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6103": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6104": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6105": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6106": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6107": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6108": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6109": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        13983
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "6111": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6112": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6113": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6114": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6115": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6116": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13975,
        14002
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6117": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 38,
      "value": "0xE0"
    },
    "6119": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6120": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "ADD",
      "path": "23"
    },
    "6121": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6122": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6123": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6124": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6125": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6126": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6127": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13657,
        13848
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6130": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6131": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180E"
    },
    "6134": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6135": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6136": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13898,
        13925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6137": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6138": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13684,
        13834
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6139": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6141": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "AND",
      "path": "23"
    },
    "6142": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6144": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6145": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "GT",
      "path": "23"
    },
    "6146": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6147": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "6150": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6151": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "6154": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "6157": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14016,
        14040
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6158": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14016,
        14040
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6159": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 39,
      "value": "0x40"
    },
    "6161": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6162": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6163": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "6165": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6166": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "ADD",
      "path": "23"
    },
    "6167": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6168": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6169": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6170": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6177": {
      "op": "SHL"
    },
    "6178": {
      "op": "SUB"
    },
    "6179": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6180": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "AND",
      "path": "23"
    },
    "6181": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6182": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6187": {
      "op": "SHL"
    },
    "6188": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6189": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DIV",
      "path": "23"
    },
    "6190": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6192": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "AND",
      "path": "23"
    },
    "6193": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6195": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6196": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "ADD",
      "path": "23"
    },
    "6197": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6204": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DIV",
      "path": "23"
    },
    "6205": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "6210": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "AND",
      "path": "23"
    },
    "6211": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6212": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6213": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "ADD",
      "path": "23"
    },
    "6214": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6215": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6216": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6217": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6222": {
      "op": "SHL"
    },
    "6223": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6224": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6225": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DIV",
      "path": "23"
    },
    "6226": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "6229": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "AND",
      "path": "23"
    },
    "6230": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "6232": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6233": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "ADD",
      "path": "23"
    },
    "6234": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6235": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1863"
    },
    "6238": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6239": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14069
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FB4"
    },
    "6242": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14054,
        14078
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6243": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14054,
        14078
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6244": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 40,
      "value": "0x40"
    },
    "6246": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6247": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6248": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "6250": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6251": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "ADD",
      "path": "23"
    },
    "6252": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6253": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6254": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6255": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "SUB"
    },
    "6264": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6265": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "AND",
      "path": "23"
    },
    "6266": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6267": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6272": {
      "op": "SHL"
    },
    "6273": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6274": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DIV",
      "path": "23"
    },
    "6275": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6277": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "AND",
      "path": "23"
    },
    "6278": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6280": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6281": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "ADD",
      "path": "23"
    },
    "6282": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6287": {
      "op": "SHL"
    },
    "6288": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6289": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DIV",
      "path": "23"
    },
    "6290": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "6295": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "AND",
      "path": "23"
    },
    "6296": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6297": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6298": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "ADD",
      "path": "23"
    },
    "6299": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6300": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6301": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6302": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6309": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6310": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DIV",
      "path": "23"
    },
    "6311": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "6314": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "AND",
      "path": "23"
    },
    "6315": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "6317": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6318": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "ADD",
      "path": "23"
    },
    "6319": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6320": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18B9"
    },
    "6323": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6324": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14119,
        14134
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "6325": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x303A"
    },
    "6328": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14092,
        14135
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6329": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14092,
        14135
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6330": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 41,
      "value": "0x40"
    },
    "6332": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6333": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6334": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "6336": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6337": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6338": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6339": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6340": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6341": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6342": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6343": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19D7"
    },
    "6346": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6347": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6348": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14172,
        14179
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6349": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14172,
        14179
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6350": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6351": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6352": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6354": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6355": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6357": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6358": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "GT",
      "path": "23"
    },
    "6359": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6360": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18E3"
    },
    "6363": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6364": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18E3"
    },
    "6367": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "6370": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6371": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6372": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6374": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6375": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "GT",
      "path": "23"
    },
    "6376": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6377": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18F4"
    },
    "6380": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6381": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18F4"
    },
    "6384": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "6387": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6388": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6389": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6390": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6391": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6392": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6399": {
      "op": "SHL"
    },
    "6400": {
      "op": "SUB"
    },
    "6401": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "6404": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6405": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6406": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6407": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6409": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6410": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6411": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6412": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6418": {
      "op": "SHL"
    },
    "6419": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6420": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6421": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6422": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6423": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6425": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6426": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6427": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6434": {
      "op": "SHL"
    },
    "6435": {
      "op": "SUB"
    },
    "6436": {
      "op": "NOT"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6441": {
      "op": "SHL"
    },
    "6442": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6443": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6444": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "6446": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SHL",
      "path": "23"
    },
    "6447": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6448": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "6450": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6451": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6452": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6453": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6460": {
      "op": "SHL"
    },
    "6461": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6462": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6463": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6464": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6465": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "6467": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6468": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6469": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6474": {
      "op": "SHL"
    },
    "6475": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6476": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6477": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6478": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "6480": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6481": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6482": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6483": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "6485": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6486": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6487": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6488": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6493": {
      "op": "SHL"
    },
    "6494": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6495": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6496": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6497": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6498": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "6500": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6501": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "GT",
      "path": "23"
    },
    "6502": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6503": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1972"
    },
    "6506": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6507": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1972"
    },
    "6510": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "6513": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6514": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6515": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "6517": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6518": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "GT",
      "path": "23"
    },
    "6519": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6520": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1983"
    },
    "6523": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6524": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1983"
    },
    "6527": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "6530": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6531": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6532": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6533": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6534": {
      "op": "POP"
    },
    "6535": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6537": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6538": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6539": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "6541": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6542": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6543": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6544": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6545": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6546": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "op": "SUB"
    },
    "6555": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6556": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6557": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6558": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6563": {
      "op": "SHL"
    },
    "6564": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6565": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6566": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "6568": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6569": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6571": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6572": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6573": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6578": {
      "op": "SHL"
    },
    "6579": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6580": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6581": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "6586": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6587": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6588": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6589": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6590": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6591": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6592": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6593": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6600": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6601": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DIV",
      "path": "23"
    },
    "6602": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "6605": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "AND",
      "path": "23"
    },
    "6606": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "6608": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6609": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "ADD",
      "path": "23"
    },
    "6610": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6611": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14171
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3090"
    },
    "6614": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6615": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14149,
        14189
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6616": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14249
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 42
    },
    "6617": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14259
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x120"
    },
    "6620": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14259
      ],
      "op": "ADD",
      "path": "23"
    },
    "6621": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14259
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6622": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14260,
        14261
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6623": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6624": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6625": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6626": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "LT",
      "path": "23"
    },
    "6627": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19EE"
    },
    "6630": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6631": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19EE"
    },
    "6634": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "6637": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14247,
        14262
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6638": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6639": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6641": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "MUL",
      "path": "23"
    },
    "6642": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6644": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "ADD",
      "path": "23"
    },
    "6645": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "ADD",
      "path": "23"
    },
    "6646": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14247,
        14262
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6647": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94"
    },
    "6680": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14287,
        14302
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "6681": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6683": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6684": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A31"
    },
    "6687": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6688": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6689": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6694": {
      "op": "SWAP2"
    },
    "6695": {
      "op": "SWAP1"
    },
    "6696": {
      "op": "SWAP2"
    },
    "6697": {
      "op": "AND"
    },
    "6698": {
      "op": "DUP2"
    },
    "6699": {
      "op": "MSTORE"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6702": {
      "op": "ADD"
    },
    "6703": {
      "op": "SWAP1"
    },
    "6704": {
      "op": "JUMP"
    },
    "6705": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6706": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6708": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6709": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6710": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6711": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "SUB",
      "path": "23"
    },
    "6712": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6713": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14317
      ],
      "op": "LOG2",
      "path": "23"
    },
    "6714": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 43
    },
    "6715": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6716": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14396
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6717": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14396
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6718": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14433
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A5C"
    },
    "6721": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6722": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6729": {
      "op": "SHL"
    },
    "6730": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6731": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6732": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "DIV",
      "path": "23"
    },
    "6733": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6734": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "AND",
      "path": "23"
    },
    "6735": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6740": {
      "op": "SHL"
    },
    "6741": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14396
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6742": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14396
      ],
      "op": "DIV",
      "path": "23"
    },
    "6743": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14396
      ],
      "op": "AND",
      "path": "23"
    },
    "6744": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14433
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x472C"
    },
    "6747": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14373,
        14433
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6748": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14373,
        14433
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6749": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6750": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6751": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "6754": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6755": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6756": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6757": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "AND",
      "path": "23"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6762": {
      "op": "SHL"
    },
    "6763": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "MUL",
      "path": "23"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "op": "NOT"
    },
    "6771": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6772": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6773": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "AND",
      "path": "23"
    },
    "6774": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "OR",
      "path": "23"
    },
    "6775": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6776": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6777": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14433
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "6778": {
      "op": "POP"
    },
    "6779": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14331,
        14354
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6781": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "SWAP1",
      "path": "23",
      "statement": 44
    },
    "6782": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6783": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6784": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14462
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "6786": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6788": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6789": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6791": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6792": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14454,
        14481
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6793": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14447,
        14481
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6794": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14447,
        14481
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6801": {
      "op": "SHL"
    },
    "6802": {
      "op": "SUB"
    },
    "6803": {
      "op": "NOT"
    },
    "6804": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14447,
        14481
      ],
      "op": "AND",
      "path": "23"
    },
    "6805": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14447,
        14481
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6806": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14447,
        14481
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "6807": {
      "op": "POP"
    },
    "6808": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 45
    },
    "6809": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AA1"
    },
    "6812": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6813": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "6816": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13377,
        13380
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6817": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6818": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6819": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "POP",
      "path": "23"
    },
    "6820": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13377,
        13380
      ],
      "op": "POP",
      "path": "23"
    },
    "6821": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13337,
        14492
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16AB"
    },
    "6824": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13337,
        14492
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6825": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7769,
        9259
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6826": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7897,
        7904
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6827": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7897,
        7904
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6828": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6830": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6831": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "ADD",
      "path": "23"
    },
    "6832": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6833": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7869
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6835": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7869
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6836": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1ABC"
    },
    "6839": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6840": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "6843": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7886,
        7904
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6844": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6851": {
      "op": "SHL"
    },
    "6852": {
      "op": "SUB"
    },
    "6853": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6854": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "GT",
      "path": "23"
    },
    "6855": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6856": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AD3"
    },
    "6859": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6860": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AD3"
    },
    "6863": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4959"
    },
    "6866": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6867": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6868": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6870": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6871": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6872": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6873": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6874": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6875": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6876": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6878": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MUL",
      "path": "23"
    },
    "6879": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6881": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "23"
    },
    "6882": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6883": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "23"
    },
    "6884": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6886": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6887": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6888": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6889": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AFC"
    },
    "6892": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6893": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6894": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6896": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "23"
    },
    "6897": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6899": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6900": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MUL",
      "path": "23"
    },
    "6901": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6902": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "6903": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6904": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "6905": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "23"
    },
    "6906": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6907": {
      "op": "POP"
    },
    "6908": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8004,
        8011
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6911": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8004,
        8011
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6912": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6913": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7905
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6914": {
      "op": "POP"
    },
    "6915": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7915,
        7948
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6917": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7915,
        7948
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6918": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6919": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8019
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6920": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8025
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6922": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8025
      ],
      "op": "ADD",
      "path": "23"
    },
    "6923": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8025
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6924": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8013,
        8014
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6925": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8013,
        8025
      ],
      "op": "LT",
      "path": "23"
    },
    "6926": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6927": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E3E"
    },
    "6930": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6931": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8046,
        8071
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6933": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8141
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6934": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8152
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "6936": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8152
      ],
      "op": "ADD",
      "path": "23"
    },
    "6937": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8152
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6938": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8155
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6939": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8160
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6941": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8160
      ],
      "op": "ADD",
      "path": "23"
    },
    "6942": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8160
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6943": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6944": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6945": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6946": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "LT",
      "path": "23"
    },
    "6947": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B2E"
    },
    "6950": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6951": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B2E"
    },
    "6954": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "6957": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6958": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6959": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6961": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "MUL",
      "path": "23"
    },
    "6962": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6964": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "ADD",
      "path": "23"
    },
    "6965": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "ADD",
      "path": "23"
    },
    "6966": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6967": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8185
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6968": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "6970": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8193
      ],
      "op": "ADD",
      "path": "23"
    },
    "6971": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8193
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6972": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8194,
        8195
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6973": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6974": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6975": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6976": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "LT",
      "path": "23"
    },
    "6977": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B4C"
    },
    "6980": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6981": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B4C"
    },
    "6984": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "6987": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8183,
        8196
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6988": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6989": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6991": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "MUL",
      "path": "23"
    },
    "6992": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6994": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "ADD",
      "path": "23"
    },
    "6995": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "ADD",
      "path": "23"
    },
    "6996": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6997": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8220
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6998": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "7001": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "23"
    },
    "7002": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8230
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7003": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8231,
        8232
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7004": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7005": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7006": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7007": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "LT",
      "path": "23"
    },
    "7008": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B6B"
    },
    "7011": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7012": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B6B"
    },
    "7015": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7018": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8218,
        8233
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7019": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7020": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7022": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "MUL",
      "path": "23"
    },
    "7023": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7025": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "ADD",
      "path": "23"
    },
    "7026": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "ADD",
      "path": "23"
    },
    "7027": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7028": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7030": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7031": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7033": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "ADD",
      "path": "23"
    },
    "7034": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B85"
    },
    "7037": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "7038": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7039": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7040": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7041": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "7044": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8101,
        8251
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7045": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7046": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7048": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7049": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7052": {
      "op": "NOT"
    },
    "7053": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7054": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7055": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SUB",
      "path": "23"
    },
    "7056": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "ADD",
      "path": "23"
    },
    "7057": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7058": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7059": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7060": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7061": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7062": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7063": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7064": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7066": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7067": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7068": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "ADD",
      "path": "23"
    },
    "7069": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "7070": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8279,
        8302
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7072": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7073": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7074": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7075": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8313
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "7077": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7078": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "7079": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7080": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7081": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "7082": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 46
    },
    "7083": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7084": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7085": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7086": {
      "op": "POP"
    },
    "7087": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7088": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "7090": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "AND",
      "path": "23"
    },
    "7091": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "7093": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7094": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "GT",
      "path": "23"
    },
    "7095": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7096": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BC3"
    },
    "7099": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7100": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BC3"
    },
    "7103": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7106": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7107": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7108": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8373
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7109": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8385
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7111": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8385
      ],
      "op": "ADD",
      "path": "23"
    },
    "7112": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8385
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7113": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8386,
        8387
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7114": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7115": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7116": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7117": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "LT",
      "path": "23"
    },
    "7118": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BD9"
    },
    "7121": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7122": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BD9"
    },
    "7125": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7128": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8371,
        8388
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7129": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7130": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7132": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "MUL",
      "path": "23"
    },
    "7133": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7135": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "ADD",
      "path": "23"
    },
    "7136": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "ADD",
      "path": "23"
    },
    "7137": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7138": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "7140": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7141": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "GT",
      "path": "23"
    },
    "7142": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7143": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BF2"
    },
    "7146": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7147": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BF2"
    },
    "7150": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7153": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7154": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7155": {
      "branch": 135,
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "EQ",
      "path": "23"
    },
    "7156": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C0F"
    },
    "7159": {
      "branch": 135,
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7160": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7162": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7169": {
      "op": "SHL"
    },
    "7170": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7171": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7172": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7174": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "ADD",
      "path": "23"
    },
    "7175": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "7178": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7179": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45B9"
    },
    "7182": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8346,
        8472
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7183": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7184": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 47
    },
    "7185": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7190": {
      "op": "SHL"
    },
    "7191": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7192": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "DIV",
      "path": "23"
    },
    "7193": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "7196": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7197": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7198": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "AND",
      "path": "23"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7203": {
      "op": "SHL"
    },
    "7204": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7205": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7206": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "DIV",
      "path": "23"
    },
    "7207": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "AND",
      "path": "23"
    },
    "7208": {
      "branch": 136,
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8645
      ],
      "op": "EQ",
      "path": "23"
    },
    "7209": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C6D"
    },
    "7212": {
      "branch": 136,
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7213": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7215": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7222": {
      "op": "SHL"
    },
    "7223": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7224": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7227": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7229": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7230": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "ADD",
      "path": "23"
    },
    "7231": {
      "op": "MSTORE"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7236": {
      "op": "DUP3"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "MSTORE"
    },
    "7239": {
      "op": "PUSH22",
      "value": "0x14995391950E8E9858DD1A5D995B1E481C995B9D1959"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7264": {
      "op": "SHL"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "MSTORE"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7272": {
      "op": "ADD"
    },
    "7273": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "7276": {
      "op": "JUMP"
    },
    "7277": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7278": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 48,
      "value": "0x40"
    },
    "7280": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7281": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7282": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "7284": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7285": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "ADD",
      "path": "23"
    },
    "7286": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7287": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7288": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7289": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7290": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7291": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C97"
    },
    "7294": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7295": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7296": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8731,
        8738
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7297": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8731,
        8738
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7298": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7299": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7300": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "7302": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "AND",
      "path": "23"
    },
    "7303": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "7305": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7306": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "GT",
      "path": "23"
    },
    "7307": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7308": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "7311": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7312": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "7315": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7318": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8715,
        8739
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7319": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7320": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 49,
      "value": "0x40"
    },
    "7322": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7323": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7324": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "7326": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7327": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7328": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7329": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7330": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7331": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7332": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7333": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D6A"
    },
    "7336": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7337": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7338": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8771,
        8778
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7339": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8771,
        8778
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7340": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7341": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7342": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "7344": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7345": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "7347": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7348": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "23"
    },
    "7349": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7350": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CC1"
    },
    "7353": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7354": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CC1"
    },
    "7357": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7360": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7361": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7362": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "7364": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7365": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "23"
    },
    "7366": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7367": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CD2"
    },
    "7370": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7371": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CD2"
    },
    "7374": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7377": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7378": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7379": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7380": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7381": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7382": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7389": {
      "op": "SHL"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "7394": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7395": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "23"
    },
    "7396": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7397": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7399": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7400": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7401": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7402": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7408": {
      "op": "SHL"
    },
    "7409": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7410": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "23"
    },
    "7411": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7412": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7413": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7415": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7416": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7417": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7424": {
      "op": "SHL"
    },
    "7425": {
      "op": "SUB"
    },
    "7426": {
      "op": "NOT"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7431": {
      "op": "SHL"
    },
    "7432": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7433": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "23"
    },
    "7434": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "7436": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SHL",
      "path": "23"
    },
    "7437": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7438": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "7440": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7441": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7442": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7443": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7450": {
      "op": "SHL"
    },
    "7451": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7452": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "23"
    },
    "7453": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7454": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7455": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "7457": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP6",
      "path": "23"
    },
    "7458": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7459": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7464": {
      "op": "SHL"
    },
    "7465": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7466": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "23"
    },
    "7467": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7468": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "7470": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7471": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7472": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7473": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "7475": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7476": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7477": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "23"
    },
    "7478": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7483": {
      "op": "SHL"
    },
    "7484": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7485": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7486": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "23"
    },
    "7487": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "23"
    },
    "7488": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "7490": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7491": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "23"
    },
    "7492": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7493": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D50"
    },
    "7496": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7497": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D50"
    },
    "7500": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7503": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7504": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7505": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "7507": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7508": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "23"
    },
    "7509": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7510": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D61"
    },
    "7513": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7514": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D61"
    },
    "7517": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "7520": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7521": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7522": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7523": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7524": {
      "op": "POP"
    },
    "7525": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8780,
        8790
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7526": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8770
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3242"
    },
    "7529": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7530": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7531": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 50
    },
    "7532": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7533": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8821,
        8828
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7534": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8821,
        8828
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7541": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7542": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "DIV",
      "path": "23"
    },
    "7543": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "7546": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "AND",
      "path": "23"
    },
    "7547": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7548": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8816
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7549": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8816
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7550": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D87"
    },
    "7553": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7554": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8818
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7555": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "7558": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8817,
        8828
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7559": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7560": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7561": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7562": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7563": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "LT",
      "path": "23"
    },
    "7564": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D97"
    },
    "7567": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7568": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D97"
    },
    "7571": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7574": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8805,
        8829
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7575": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7576": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7578": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7579": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7580": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "MUL",
      "path": "23"
    },
    "7581": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7582": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7583": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7584": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "ADD",
      "path": "23"
    },
    "7585": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "ADD",
      "path": "23"
    },
    "7586": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8850
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7587": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 51
    },
    "7588": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7589": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "7592": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 52
    },
    "7593": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "ADD",
      "path": "23"
    },
    "7594": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7595": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7596": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7597": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "7599": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7600": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7601": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "AND",
      "path": "23"
    },
    "7602": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "7603": {
      "op": "POP"
    },
    "7604": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7605": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8948,
        8949
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7606": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8948,
        8949
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7607": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7608": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "LT",
      "path": "23"
    },
    "7609": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DC4"
    },
    "7612": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7613": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DC4"
    },
    "7616": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7619": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8935,
        8950
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7620": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7621": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7623": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "MUL",
      "path": "23"
    },
    "7624": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7626": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "ADD",
      "path": "23"
    },
    "7627": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "ADD",
      "path": "23"
    },
    "7628": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7629": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xD0234BC8DD7E933F60CBC1E90FC139A8A9683AF1CB92743607DAFB9DFB70059B"
    },
    "7662": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8959,
        8974
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "7663": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7665": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7666": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E07"
    },
    "7669": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7670": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7671": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7676": {
      "op": "SWAP2"
    },
    "7677": {
      "op": "SWAP1"
    },
    "7678": {
      "op": "SWAP2"
    },
    "7679": {
      "op": "AND"
    },
    "7680": {
      "op": "DUP2"
    },
    "7681": {
      "op": "MSTORE"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "SWAP1"
    },
    "7686": {
      "op": "JUMP"
    },
    "7687": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7688": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7690": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7691": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7692": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7693": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SUB",
      "path": "23"
    },
    "7694": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7695": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "LOG2",
      "path": "23"
    },
    "7696": {
      "op": "POP"
    },
    "7697": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 53,
      "value": "0x0"
    },
    "7699": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7700": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7701": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7702": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9005
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "7704": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7706": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7707": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7709": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7710": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "7711": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7712": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7719": {
      "op": "SHL"
    },
    "7720": {
      "op": "SUB"
    },
    "7721": {
      "op": "NOT"
    },
    "7722": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "AND",
      "path": "23"
    },
    "7723": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7724": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "7725": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 54
    },
    "7726": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E36"
    },
    "7729": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7730": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "7733": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8027,
        8030
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7734": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7735": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7736": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "POP",
      "path": "23"
    },
    "7737": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "POP",
      "path": "23"
    },
    "7738": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B06"
    },
    "7741": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7742": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7743": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "POP",
      "path": "23"
    },
    "7744": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9044,
        9252
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 55,
      "value": "0x1E71"
    },
    "7747": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9070,
        9072
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7748": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9094,
        9098
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "7749": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9113,
        9123
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7750": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9137,
        9179
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E5E"
    },
    "7753": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9148
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7754": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9156
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "7756": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9156
      ],
      "op": "ADD",
      "path": "23"
    },
    "7757": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9156
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7758": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9160
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7759": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9165
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7761": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9165
      ],
      "op": "ADD",
      "path": "23"
    },
    "7762": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9165
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7763": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9169
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7764": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9175
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7766": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9175
      ],
      "op": "ADD",
      "path": "23"
    },
    "7767": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9175
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7768": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9177,
        9178
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7770": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9137,
        9145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D74"
    },
    "7773": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        9137,
        9179
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7774": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9137,
        9179
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7775": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9215,
        9222
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7776": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9215,
        9222
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7777": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7779": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7780": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "ADD",
      "path": "23"
    },
    "7781": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7782": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9193,
        9242
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1570"
    },
    "7785": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9193,
        9242
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7786": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9202,
        9213
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7787": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9202,
        9213
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7788": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9215,
        9222
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7789": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9193,
        9201
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D74"
    },
    "7792": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        9193,
        9242
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7793": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9044,
        9252
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7794": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7831,
        9259
      ],
      "op": "POP",
      "path": "23"
    },
    "7795": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7831,
        9259
      ],
      "op": "POP",
      "path": "23"
    },
    "7796": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7769,
        9259
      ],
      "op": "POP",
      "path": "23"
    },
    "7797": {
      "fn": "Registry.handleStopLend",
      "jump": "o",
      "offset": [
        7769,
        9259
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7798": {
      "fn": "Registry.handleRent",
      "offset": [
        9265,
        11767
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7799": {
      "fn": "Registry.handleRent",
      "offset": [
        9350,
        9357
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7800": {
      "fn": "Registry.handleRent",
      "offset": [
        9350,
        9357
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7801": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11761
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7802": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9365
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7803": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9371
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7805": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9371
      ],
      "op": "ADD",
      "path": "23"
    },
    "7806": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9371
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7807": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9360
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7808": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9371
      ],
      "op": "LT",
      "path": "23"
    },
    "7809": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11761
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7810": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11761
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "7813": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11761
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7814": {
      "fn": "Registry.handleRent",
      "offset": [
        9392,
        9417
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7816": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9487
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7817": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9498
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "7819": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9498
      ],
      "op": "ADD",
      "path": "23"
    },
    "7820": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9498
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7821": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9501
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7822": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9506
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7824": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9506
      ],
      "op": "ADD",
      "path": "23"
    },
    "7825": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9506
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7826": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7827": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7828": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7829": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "LT",
      "path": "23"
    },
    "7830": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EA1"
    },
    "7833": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7834": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EA1"
    },
    "7837": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7840": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9485,
        9507
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7841": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7842": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7844": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "MUL",
      "path": "23"
    },
    "7845": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7847": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "ADD",
      "path": "23"
    },
    "7848": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "ADD",
      "path": "23"
    },
    "7849": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7850": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9531
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7851": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "7853": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9539
      ],
      "op": "ADD",
      "path": "23"
    },
    "7854": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9539
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7855": {
      "fn": "Registry.handleRent",
      "offset": [
        9540,
        9541
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7856": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7857": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7858": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7859": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "LT",
      "path": "23"
    },
    "7860": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EBF"
    },
    "7863": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7864": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EBF"
    },
    "7867": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7870": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9529,
        9542
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7871": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7872": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7874": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "MUL",
      "path": "23"
    },
    "7875": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7877": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "ADD",
      "path": "23"
    },
    "7878": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "ADD",
      "path": "23"
    },
    "7879": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7880": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9566
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7881": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9576
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "7884": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9576
      ],
      "op": "ADD",
      "path": "23"
    },
    "7885": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9576
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7886": {
      "fn": "Registry.handleRent",
      "offset": [
        9577,
        9578
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7887": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7888": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7889": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7890": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "LT",
      "path": "23"
    },
    "7891": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EDE"
    },
    "7894": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7895": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EDE"
    },
    "7898": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7901": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9564,
        9579
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7902": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7903": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7905": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "MUL",
      "path": "23"
    },
    "7906": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7908": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "ADD",
      "path": "23"
    },
    "7909": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "ADD",
      "path": "23"
    },
    "7910": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7911": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7913": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7914": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7916": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "ADD",
      "path": "23"
    },
    "7917": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EF8"
    },
    "7920": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "7921": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7922": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7923": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7924": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "7927": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9447,
        9597
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7928": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7929": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7931": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7932": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7934": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7935": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7936": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SUB",
      "path": "23"
    },
    "7937": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SUB",
      "path": "23"
    },
    "7938": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7939": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7940": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7941": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7943": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7944": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7945": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7946": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7947": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7949": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "ADD",
      "path": "23"
    },
    "7950": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "7951": {
      "fn": "Registry.handleRent",
      "offset": [
        9392,
        9611
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7952": {
      "fn": "Registry.handleRent",
      "offset": [
        9392,
        9611
      ],
      "op": "POP",
      "path": "23"
    },
    "7953": {
      "fn": "Registry.handleRent",
      "offset": [
        9625,
        9650
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7955": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9720
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7956": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9731
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "7958": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9731
      ],
      "op": "ADD",
      "path": "23"
    },
    "7959": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9731
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7960": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9734
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7961": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9739
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7963": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9739
      ],
      "op": "ADD",
      "path": "23"
    },
    "7964": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9739
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7965": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7966": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7967": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7968": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "LT",
      "path": "23"
    },
    "7969": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F2C"
    },
    "7972": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7973": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F2C"
    },
    "7976": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "7979": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9718,
        9740
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7980": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7981": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7983": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "MUL",
      "path": "23"
    },
    "7984": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7986": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "ADD",
      "path": "23"
    },
    "7987": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "ADD",
      "path": "23"
    },
    "7988": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7989": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9764
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7990": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9772
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "7992": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9772
      ],
      "op": "ADD",
      "path": "23"
    },
    "7993": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9772
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7994": {
      "fn": "Registry.handleRent",
      "offset": [
        9773,
        9774
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7995": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7996": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7997": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7998": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "LT",
      "path": "23"
    },
    "7999": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F4A"
    },
    "8002": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8003": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F4A"
    },
    "8006": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "8009": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9762,
        9775
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8010": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8011": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8013": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "MUL",
      "path": "23"
    },
    "8014": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8016": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "ADD",
      "path": "23"
    },
    "8017": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "ADD",
      "path": "23"
    },
    "8018": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8019": {
      "fn": "Registry.handleRent",
      "offset": [
        9797,
        9806
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8021": {
      "fn": "Registry.handleRent",
      "offset": [
        9797,
        9806
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8022": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8024": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8025": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8027": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "ADD",
      "path": "23"
    },
    "8028": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F67"
    },
    "8031": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "8032": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8033": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8034": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8035": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4485"
    },
    "8038": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9680,
        9824
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8039": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8040": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8042": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8043": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8046": {
      "op": "NOT"
    },
    "8047": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8048": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8049": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SUB",
      "path": "23"
    },
    "8050": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "ADD",
      "path": "23"
    },
    "8051": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8052": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8053": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8054": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8055": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8056": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8057": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8058": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8060": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8061": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8062": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "ADD",
      "path": "23"
    },
    "8063": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8064": {
      "fn": "Registry.handleRent",
      "offset": [
        9852,
        9885
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8066": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8067": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8068": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8069": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "8071": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8072": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8073": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8074": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8075": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8076": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8077": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8078": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8079": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9973
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "8081": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8082": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "8083": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8084": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8085": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8086": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8087": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 56,
      "value": "0xE0"
    },
    "8089": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "DUP6",
      "path": "23"
    },
    "8090": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "ADD",
      "path": "23"
    },
    "8091": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8092": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "8093": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8094": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8095": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8096": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8097": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "8098": {
      "op": "POP"
    },
    "8099": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8100": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8101": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FC0"
    },
    "8104": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8105": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8106": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8107": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8108": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8109": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8111": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "AND",
      "path": "23"
    },
    "8112": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "8114": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8115": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "GT",
      "path": "23"
    },
    "8116": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8117": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "8120": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8121": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x931"
    },
    "8124": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8127": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10006,
        10030
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8128": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8129": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 57,
      "value": "0x40"
    },
    "8131": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8132": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8133": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "8135": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8136": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "23"
    },
    "8137": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8138": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8139": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8140": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8147": {
      "op": "SHL"
    },
    "8148": {
      "op": "SUB"
    },
    "8149": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8150": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "23"
    },
    "8151": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8152": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8157": {
      "op": "SHL"
    },
    "8158": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8159": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DIV",
      "path": "23"
    },
    "8160": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8162": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "23"
    },
    "8163": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8165": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8166": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "23"
    },
    "8167": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8172": {
      "op": "SHL"
    },
    "8173": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8174": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DIV",
      "path": "23"
    },
    "8175": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "8180": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "23"
    },
    "8181": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8182": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8183": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "23"
    },
    "8184": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8185": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8186": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8187": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "8192": {
      "op": "SHL"
    },
    "8193": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8194": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8195": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DIV",
      "path": "23"
    },
    "8196": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "8199": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "23"
    },
    "8200": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "8202": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8203": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "23"
    },
    "8204": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8205": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2015"
    },
    "8208": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8209": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10056
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x329B"
    },
    "8212": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10044,
        10065
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8213": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8214": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 58,
      "value": "0x40"
    },
    "8216": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8217": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8218": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "8220": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8221": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8222": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8223": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8224": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8225": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8226": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8227": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20EA"
    },
    "8230": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8231": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8232": {
      "fn": "Registry.handleRent",
      "offset": [
        10096,
        10103
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8233": {
      "fn": "Registry.handleRent",
      "offset": [
        10096,
        10103
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8234": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8235": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8236": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8238": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8239": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "8241": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8242": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "23"
    },
    "8243": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8244": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x203F"
    },
    "8247": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8248": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x203F"
    },
    "8251": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8254": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8255": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8256": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "8258": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8259": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "23"
    },
    "8260": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8261": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2050"
    },
    "8264": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8265": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2050"
    },
    "8268": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8271": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8272": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8273": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8274": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8275": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8276": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8283": {
      "op": "SHL"
    },
    "8284": {
      "op": "SUB"
    },
    "8285": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "8288": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8289": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "23"
    },
    "8290": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8291": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8293": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8294": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8295": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8296": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8302": {
      "op": "SHL"
    },
    "8303": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8304": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "23"
    },
    "8305": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8306": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8307": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8309": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8310": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8311": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8318": {
      "op": "SHL"
    },
    "8319": {
      "op": "SUB"
    },
    "8320": {
      "op": "NOT"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8325": {
      "op": "SHL"
    },
    "8326": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8327": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "23"
    },
    "8328": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "8330": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SHL",
      "path": "23"
    },
    "8331": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8332": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "8334": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8335": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8336": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8337": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8344": {
      "op": "SHL"
    },
    "8345": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8346": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "23"
    },
    "8347": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8348": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8349": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "8351": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP6",
      "path": "23"
    },
    "8352": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8353": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8358": {
      "op": "SHL"
    },
    "8359": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8360": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "23"
    },
    "8361": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8362": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "8364": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8365": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8366": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8367": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "8369": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8370": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8371": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "23"
    },
    "8372": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8377": {
      "op": "SHL"
    },
    "8378": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8379": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8380": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "23"
    },
    "8381": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "23"
    },
    "8382": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "8384": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8385": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "23"
    },
    "8386": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8387": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20CE"
    },
    "8390": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8391": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20CE"
    },
    "8394": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8397": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8398": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8399": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "8401": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8402": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "23"
    },
    "8403": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8404": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20DF"
    },
    "8407": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8408": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20DF"
    },
    "8411": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8414": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8415": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8416": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8417": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8418": {
      "op": "POP"
    },
    "8419": {
      "fn": "Registry.handleRent",
      "offset": [
        10105,
        10107
      ],
      "op": "DUP8",
      "path": "23"
    },
    "8420": {
      "fn": "Registry.handleRent",
      "offset": [
        10109,
        10110
      ],
      "op": "DUP8",
      "path": "23"
    },
    "8421": {
      "fn": "Registry.handleRent",
      "offset": [
        10112,
        10122
      ],
      "op": "CALLER",
      "path": "23"
    },
    "8422": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10095
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x334E"
    },
    "8425": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8426": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8427": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 59
    },
    "8428": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8429": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8431": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "AND",
      "path": "23"
    },
    "8432": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "8434": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8435": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "GT",
      "path": "23"
    },
    "8436": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8437": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2100"
    },
    "8440": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8441": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2100"
    },
    "8444": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8447": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8448": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8449": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10164
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8450": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8452": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10176
      ],
      "op": "ADD",
      "path": "23"
    },
    "8453": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10176
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8454": {
      "fn": "Registry.handleRent",
      "offset": [
        10177,
        10178
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8455": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8456": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8457": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8458": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "LT",
      "path": "23"
    },
    "8459": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2116"
    },
    "8462": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8463": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2116"
    },
    "8466": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "8469": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10162,
        10179
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8470": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8471": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8473": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "MUL",
      "path": "23"
    },
    "8474": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8476": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "ADD",
      "path": "23"
    },
    "8477": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "ADD",
      "path": "23"
    },
    "8478": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8479": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "8481": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8482": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "GT",
      "path": "23"
    },
    "8483": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8484": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x212F"
    },
    "8487": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8488": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x212F"
    },
    "8491": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8494": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8495": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8496": {
      "branch": 137,
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "EQ",
      "path": "23"
    },
    "8497": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x214C"
    },
    "8500": {
      "branch": 137,
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8501": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8503": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8510": {
      "op": "SHL"
    },
    "8511": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8512": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8513": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8515": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "ADD",
      "path": "23"
    },
    "8516": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "8519": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8520": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45B9"
    },
    "8523": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10137,
        10263
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8524": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8525": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 60
    },
    "8526": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8527": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x160"
    },
    "8530": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "DUP8",
      "path": "23"
    },
    "8531": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "ADD",
      "path": "23"
    },
    "8532": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8533": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8534": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8539": {
      "op": "SHL"
    },
    "8540": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8541": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8542": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "DIV",
      "path": "23"
    },
    "8543": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "8546": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "AND",
      "path": "23"
    },
    "8547": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8548": {
      "fn": "Registry.handleRent",
      "offset": [
        10316,
        10317
      ],
      "op": "DUP8",
      "path": "23"
    },
    "8549": {
      "fn": "Registry.handleRent",
      "offset": [
        10316,
        10317
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8550": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8551": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "LT",
      "path": "23"
    },
    "8552": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2173"
    },
    "8555": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8556": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2173"
    },
    "8559": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "8562": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10302,
        10318
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8563": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8564": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8566": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "MUL",
      "path": "23"
    },
    "8567": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8569": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "ADD",
      "path": "23"
    },
    "8570": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "ADD",
      "path": "23"
    },
    "8571": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8572": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10345
      ],
      "op": "GT",
      "path": "23"
    },
    "8573": {
      "branch": 138,
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10345
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8574": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21C9"
    },
    "8577": {
      "branch": 138,
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8578": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8580": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8587": {
      "op": "SHL"
    },
    "8588": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8589": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8592": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8594": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8595": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "ADD",
      "path": "23"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8601": {
      "op": "DUP3"
    },
    "8602": {
      "op": "ADD"
    },
    "8603": {
      "op": "MSTORE"
    },
    "8604": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8639": {
      "op": "DUP3"
    },
    "8640": {
      "op": "ADD"
    },
    "8641": {
      "op": "MSTORE"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8644": {
      "op": "ADD"
    },
    "8645": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "8648": {
      "op": "JUMP"
    },
    "8649": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8650": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8651": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8652": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10439
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8654": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10439
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8659": {
      "op": "SHL"
    },
    "8660": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8661": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "DIV",
      "path": "23"
    },
    "8662": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8664": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "AND",
      "path": "23"
    },
    "8665": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "8667": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8668": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "GT",
      "path": "23"
    },
    "8669": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8670": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21E9"
    },
    "8673": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8674": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21E9"
    },
    "8677": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "8680": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10442,
        10469
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8681": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8682": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10503
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8684": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8685": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8686": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8688": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8689": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8696": {
      "op": "SHL"
    },
    "8697": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8698": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8701": {
      "op": "DUP5"
    },
    "8702": {
      "op": "AND"
    },
    "8703": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8705": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8706": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "23"
    },
    "8707": {
      "op": "MSTORE"
    },
    "8708": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10469
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "8709": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10469
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "8710": {
      "op": "POP"
    },
    "8711": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10503
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8712": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10503
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8719": {
      "op": "SHL"
    },
    "8720": {
      "op": "SUB"
    },
    "8721": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8722": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8723": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "AND",
      "path": "23"
    },
    "8724": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8725": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10530
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC6EE427F"
    },
    "8730": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10530
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8733": {
      "op": "ADD"
    },
    "8734": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8736": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8738": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8739": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8740": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8741": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SUB",
      "path": "23"
    },
    "8742": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8743": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8744": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8745": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "8746": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8747": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8748": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8749": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2235"
    },
    "8752": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8753": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8755": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8756": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8757": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8758": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8759": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "GAS",
      "path": "23"
    },
    "8760": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "8761": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8762": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8763": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8764": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2249"
    },
    "8767": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8768": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "8769": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8771": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8772": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "8773": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "8774": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8776": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8777": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8778": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8779": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8780": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8781": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8782": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8784": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8785": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "8786": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "8788": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "NOT",
      "path": "23"
    },
    "8789": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "8791": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8792": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "23"
    },
    "8793": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "AND",
      "path": "23"
    },
    "8794": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8795": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "23"
    },
    "8796": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8797": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8799": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8800": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8801": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8802": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "23"
    },
    "8803": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8804": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x226D"
    },
    "8807": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8808": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8809": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E5E"
    },
    "8812": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8813": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8814": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10546
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8815": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10546
      ],
      "op": "POP",
      "path": "23"
    },
    "8816": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10576
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8818": {
      "fn": "Registry.handleRent",
      "offset": [
        10585,
        10597
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8825": {
      "op": "SHL"
    },
    "8826": {
      "op": "SUB"
    },
    "8827": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10607
      ],
      "op": "AND",
      "path": "23"
    },
    "8828": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10607
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "8833": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8835": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8836": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8837": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "8842": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "AND",
      "path": "23"
    },
    "8843": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "8845": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SHL",
      "path": "23"
    },
    "8846": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8847": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8848": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8850": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "23"
    },
    "8851": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8853": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8855": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8856": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8857": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8858": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SUB",
      "path": "23"
    },
    "8859": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8860": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8861": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8862": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "8863": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8864": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8865": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8866": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22AA"
    },
    "8869": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8870": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8872": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8873": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8874": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8875": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "23"
    },
    "8876": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "GAS",
      "path": "23"
    },
    "8877": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "8878": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8879": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8880": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8881": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22BE"
    },
    "8884": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8885": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "8886": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8888": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8889": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "8890": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "8891": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8893": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8894": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8895": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "23"
    },
    "8896": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "23"
    },
    "8897": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "23"
    },
    "8898": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "23"
    },
    "8899": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8901": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8902": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "8903": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "8905": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "NOT",
      "path": "23"
    },
    "8906": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "8908": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8909": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "23"
    },
    "8910": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "AND",
      "path": "23"
    },
    "8911": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8912": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "23"
    },
    "8913": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8914": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8916": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8917": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "23"
    },
    "8918": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8919": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "23"
    },
    "8920": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8921": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E2"
    },
    "8924": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8925": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8926": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x442D"
    },
    "8929": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8930": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8931": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "8933": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "AND",
      "path": "23"
    },
    "8934": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8935": {
      "op": "POP"
    },
    "8936": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10654
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8938": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10669
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22F4"
    },
    "8941": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8942": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10659
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "8944": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10669
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47CF"
    },
    "8947": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10657,
        10669
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8948": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10669
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8949": {
      "fn": "Registry.handleRent",
      "offset": [
        10799,
        10821
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8950": {
      "fn": "Registry.handleRent",
      "offset": [
        10799,
        10821
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8951": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10669
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8952": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10669
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8953": {
      "op": "POP"
    },
    "8954": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10704
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8956": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10704
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8957": {
      "fn": "Registry.handleRent",
      "offset": [
        10787,
        10829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2310"
    },
    "8960": {
      "fn": "Registry.handleRent",
      "offset": [
        10787,
        10829
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8965": {
      "op": "SHL"
    },
    "8966": {
      "fn": "Registry.handleRent",
      "offset": [
        10799,
        10821
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8967": {
      "fn": "Registry.handleRent",
      "offset": [
        10799,
        10821
      ],
      "op": "DIV",
      "path": "23"
    },
    "8968": {
      "fn": "Registry.handleRent",
      "offset": [
        10799,
        10821
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "8970": {
      "fn": "Registry.handleRent",
      "offset": [
        10799,
        10821
      ],
      "op": "SHL",
      "path": "23"
    },
    "8971": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10669
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8972": {
      "fn": "Registry.handleRent",
      "offset": [
        10787,
        10798
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34C2"
    },
    "8975": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10787,
        10829
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8976": {
      "fn": "Registry.handleRent",
      "offset": [
        10787,
        10829
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8977": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10748
      ],
      "op": "DUP12",
      "path": "23"
    },
    "8978": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10761
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "8981": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10761
      ],
      "op": "ADD",
      "path": "23"
    },
    "8982": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10761
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8983": {
      "fn": "Registry.handleRent",
      "offset": [
        10762,
        10763
      ],
      "op": "DUP12",
      "path": "23"
    },
    "8984": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8985": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8986": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8987": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "LT",
      "path": "23"
    },
    "8988": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2327"
    },
    "8991": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8992": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2327"
    },
    "8995": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "8998": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10746,
        10764
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8999": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9000": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9002": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "MUL",
      "path": "23"
    },
    "9003": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9005": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "ADD",
      "path": "23"
    },
    "9006": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "ADD",
      "path": "23"
    },
    "9007": {
      "fn": "Registry.handleRent",
      "offset": [
        10746,
        10764
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9008": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "9010": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "AND",
      "path": "23"
    },
    "9011": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10709
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9012": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10720
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x160"
    },
    "9015": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10720
      ],
      "op": "ADD",
      "path": "23"
    },
    "9016": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10720
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9017": {
      "fn": "Registry.handleRent",
      "offset": [
        10721,
        10722
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9018": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9019": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9020": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9021": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "LT",
      "path": "23"
    },
    "9022": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2349"
    },
    "9025": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9026": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2349"
    },
    "9029": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9032": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10707,
        10723
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9033": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9034": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9036": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "MUL",
      "path": "23"
    },
    "9037": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9039": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "ADD",
      "path": "23"
    },
    "9040": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "ADD",
      "path": "23"
    },
    "9041": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10723
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9042": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x235B"
    },
    "9045": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9046": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9047": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "9050": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10707,
        10764
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9051": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10764
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9052": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2365"
    },
    "9055": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10829
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9056": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10829
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9057": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10829
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "9060": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10707,
        10829
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9061": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10829
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9062": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10829
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9063": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10829
      ],
      "op": "POP",
      "path": "23"
    },
    "9064": {
      "fn": "Registry.handleRent",
      "offset": [
        10867,
        10868
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 61,
      "value": "0x0"
    },
    "9066": {
      "fn": "Registry.handleRent",
      "offset": [
        10855,
        10864
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9067": {
      "branch": 139,
      "fn": "Registry.handleRent",
      "offset": [
        10855,
        10868
      ],
      "op": "GT",
      "path": "23"
    },
    "9068": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2387"
    },
    "9071": {
      "branch": 139,
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9072": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9074": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9081": {
      "op": "SHL"
    },
    "9082": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9083": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9084": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9086": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "ADD",
      "path": "23"
    },
    "9087": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "9090": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9091": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4627"
    },
    "9094": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10847,
        10898
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9095": {
      "fn": "Registry.handleRent",
      "offset": [
        10847,
        10898
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9096": {
      "fn": "Registry.handleRent",
      "offset": [
        10916,
        11068
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 62,
      "value": "0x239C"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9105": {
      "op": "SHL"
    },
    "9106": {
      "op": "SUB"
    },
    "9107": {
      "fn": "Registry.handleRent",
      "offset": [
        10916,
        10952
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9108": {
      "fn": "Registry.handleRent",
      "offset": [
        10916,
        10952
      ],
      "op": "AND",
      "path": "23"
    },
    "9109": {
      "fn": "Registry.handleRent",
      "offset": [
        10974,
        10984
      ],
      "op": "CALLER",
      "path": "23"
    },
    "9110": {
      "fn": "Registry.handleRent",
      "offset": [
        11014,
        11018
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "9111": {
      "fn": "Registry.handleRent",
      "offset": [
        11041,
        11050
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9112": {
      "fn": "Registry.handleRent",
      "offset": [
        10916,
        10952
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3551"
    },
    "9115": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10916,
        11068
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9116": {
      "fn": "Registry.handleRent",
      "offset": [
        10916,
        11068
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9117": {
      "fn": "Registry.handleRent",
      "offset": [
        10623,
        11083
      ],
      "op": "POP",
      "path": "23"
    },
    "9118": {
      "fn": "Registry.handleRent",
      "offset": [
        10623,
        11083
      ],
      "op": "POP",
      "path": "23"
    },
    "9119": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 63,
      "value": "0x40"
    },
    "9121": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9122": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9123": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "9125": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9126": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9128": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9129": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9130": {
      "fn": "Registry.handleRent",
      "offset": [
        11185,
        11195
      ],
      "op": "CALLER",
      "path": "23"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9137": {
      "op": "SHL"
    },
    "9138": {
      "op": "SUB"
    },
    "9139": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9140": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9141": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9142": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9144": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9145": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11283
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9146": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11296
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "9149": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11296
      ],
      "op": "ADD",
      "path": "23"
    },
    "9150": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11296
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9151": {
      "fn": "Registry.handleRent",
      "offset": [
        11297,
        11298
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9152": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9153": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9154": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9155": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "LT",
      "path": "23"
    },
    "9156": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23CF"
    },
    "9159": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9160": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23CF"
    },
    "9163": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9166": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11281,
        11299
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9167": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9168": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9170": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "MUL",
      "path": "23"
    },
    "9171": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9173": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "ADD",
      "path": "23"
    },
    "9174": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "ADD",
      "path": "23"
    },
    "9175": {
      "fn": "Registry.handleRent",
      "offset": [
        11281,
        11299
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9176": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "9178": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9179": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9180": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9181": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9183": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9184": {
      "fn": "Registry.handleRent",
      "offset": [
        11334,
        11349
      ],
      "op": "TIMESTAMP",
      "path": "23"
    },
    "9185": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "9190": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9191": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9192": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9193": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9195": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9196": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11234
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9197": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11245
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x160"
    },
    "9200": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11245
      ],
      "op": "ADD",
      "path": "23"
    },
    "9201": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11245
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9202": {
      "fn": "Registry.handleRent",
      "offset": [
        11246,
        11247
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9203": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9204": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9205": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9206": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "LT",
      "path": "23"
    },
    "9207": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2402"
    },
    "9210": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9211": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2402"
    },
    "9214": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9217": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11232,
        11248
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9218": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9219": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9221": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9222": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9223": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "MUL",
      "path": "23"
    },
    "9224": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9225": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9226": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9227": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "ADD",
      "path": "23"
    },
    "9228": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9229": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "ADD",
      "path": "23"
    },
    "9230": {
      "fn": "Registry.handleRent",
      "offset": [
        11232,
        11248
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9231": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "9233": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9234": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9235": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9236": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9237": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9238": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9239": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9241": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9242": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9243": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9244": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11104
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "9246": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9247": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9248": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9250": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9251": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9252": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9253": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11123
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9254": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9255": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9256": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9257": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9258": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9259": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9260": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9261": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9262": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9263": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9264": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9265": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9266": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "9268": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9269": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9270": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "ADD",
      "path": "23"
    },
    "9271": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9272": {
      "fn": "Registry.handleRent",
      "offset": [
        11126,
        11365
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "9275": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9280": {
      "op": "SHL"
    },
    "9281": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MUL",
      "path": "23"
    },
    "9282": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9287": {
      "op": "SHL"
    },
    "9288": {
      "op": "NOT"
    },
    "9289": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "9294": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9295": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "9296": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9301": {
      "op": "SHL"
    },
    "9302": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MUL",
      "path": "23"
    },
    "9303": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9304": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9305": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9306": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9307": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "9314": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9316": {
      "op": "SHL"
    },
    "9317": {
      "op": "NOT"
    },
    "9318": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9319": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9320": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "9321": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9326": {
      "op": "SHL"
    },
    "9327": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "MUL",
      "path": "23"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9332": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9334": {
      "op": "SHL"
    },
    "9335": {
      "op": "SUB"
    },
    "9336": {
      "op": "NOT"
    },
    "9337": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9338": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9339": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9346": {
      "op": "SHL"
    },
    "9347": {
      "op": "SUB"
    },
    "9348": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9349": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9350": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9351": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "OR",
      "path": "23"
    },
    "9352": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9353": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9354": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9355": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "OR",
      "path": "23"
    },
    "9356": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "AND",
      "path": "23"
    },
    "9357": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9358": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9359": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9360": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "OR",
      "path": "23"
    },
    "9361": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9362": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9363": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9364": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "OR",
      "path": "23"
    },
    "9365": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9366": {
      "fn": "Registry.handleRent",
      "offset": [
        11096,
        11365
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "9367": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11462
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 64,
      "value": "0x160"
    },
    "9370": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11462
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9371": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11462
      ],
      "op": "ADD",
      "path": "23"
    },
    "9372": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11462
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9373": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9374": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9375": {
      "fn": "Registry.handleRent",
      "offset": [
        11463,
        11464
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9376": {
      "fn": "Registry.handleRent",
      "offset": [
        11463,
        11464
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9377": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9378": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "LT",
      "path": "23"
    },
    "9379": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24AE"
    },
    "9382": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9383": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24AE"
    },
    "9386": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9389": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11449,
        11465
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9390": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9391": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9393": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "MUL",
      "path": "23"
    },
    "9394": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9396": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "ADD",
      "path": "23"
    },
    "9397": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "ADD",
      "path": "23"
    },
    "9398": {
      "fn": "Registry.handleRent",
      "offset": [
        11449,
        11465
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9399": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "9401": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "AND",
      "path": "23"
    },
    "9402": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11387
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "9404": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9406": {
      "fn": "Registry.handleRent",
      "offset": [
        11388,
        11405
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9407": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9408": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9409": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9411": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "ADD",
      "path": "23"
    },
    "9412": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9413": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9414": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9415": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9417": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "ADD",
      "path": "23"
    },
    "9418": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9420": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11406
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9421": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11422
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9423": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11422
      ],
      "op": "ADD",
      "path": "23"
    },
    "9424": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11422
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1C"
    },
    "9426": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9427": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9428": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9429": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9430": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9431": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9432": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "9435": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "EXP",
      "path": "23"
    },
    "9436": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9437": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DIV",
      "path": "23"
    },
    "9438": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "9441": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "AND",
      "path": "23"
    },
    "9442": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24EB"
    },
    "9445": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9446": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9447": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4896"
    },
    "9450": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11379,
        11479
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9451": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9452": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9453": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "POP",
      "path": "23"
    },
    "9454": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "9457": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "EXP",
      "path": "23"
    },
    "9458": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9459": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9460": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9461": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "9464": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "MUL",
      "path": "23"
    },
    "9465": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "NOT",
      "path": "23"
    },
    "9466": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "AND",
      "path": "23"
    },
    "9467": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9468": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9469": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "9472": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "AND",
      "path": "23"
    },
    "9473": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "MUL",
      "path": "23"
    },
    "9474": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "OR",
      "path": "23"
    },
    "9475": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9476": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "9477": {
      "fn": "Registry.handleRent",
      "offset": [
        11379,
        11479
      ],
      "op": "POP",
      "path": "23"
    },
    "9478": {
      "fn": "Registry.handleRent",
      "offset": [
        11591,
        11600
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 65,
      "value": "0x4"
    },
    "9480": {
      "fn": "Registry.handleRent",
      "offset": [
        11591,
        11600
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9481": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11560
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9482": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11570
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "9485": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11570
      ],
      "op": "ADD",
      "path": "23"
    },
    "9486": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11570
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9487": {
      "fn": "Registry.handleRent",
      "offset": [
        11571,
        11572
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9488": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9489": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9490": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9491": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "LT",
      "path": "23"
    },
    "9492": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x251F"
    },
    "9495": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9496": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x251F"
    },
    "9499": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9502": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11558,
        11573
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9503": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9504": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9506": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "MUL",
      "path": "23"
    },
    "9507": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9509": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "ADD",
      "path": "23"
    },
    "9510": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "ADD",
      "path": "23"
    },
    "9511": {
      "fn": "Registry.handleRent",
      "offset": [
        11558,
        11573
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9512": {
      "fn": "Registry.handleRent",
      "offset": [
        11530,
        11540
      ],
      "op": "CALLER",
      "path": "23"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9519": {
      "op": "SHL"
    },
    "9520": {
      "op": "SUB"
    },
    "9521": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "AND",
      "path": "23"
    },
    "9522": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631"
    },
    "9555": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11626
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9556": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11637
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x160"
    },
    "9559": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11637
      ],
      "op": "ADD",
      "path": "23"
    },
    "9560": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11637
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9561": {
      "fn": "Registry.handleRent",
      "offset": [
        11638,
        11639
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9562": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9563": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9564": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9565": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "LT",
      "path": "23"
    },
    "9566": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2569"
    },
    "9569": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9570": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2569"
    },
    "9573": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9576": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11624,
        11640
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9577": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9578": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9580": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "MUL",
      "path": "23"
    },
    "9581": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9583": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "ADD",
      "path": "23"
    },
    "9584": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "ADD",
      "path": "23"
    },
    "9585": {
      "fn": "Registry.handleRent",
      "offset": [
        11624,
        11640
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9586": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11661
      ],
      "op": "DUP14",
      "path": "23"
    },
    "9587": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11674
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "9590": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11674
      ],
      "op": "ADD",
      "path": "23"
    },
    "9591": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11674
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9592": {
      "fn": "Registry.handleRent",
      "offset": [
        11675,
        11676
      ],
      "op": "DUP14",
      "path": "23"
    },
    "9593": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9594": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9595": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9596": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "LT",
      "path": "23"
    },
    "9597": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2588"
    },
    "9600": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9601": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2588"
    },
    "9604": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "9607": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11659,
        11677
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9608": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9609": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9611": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9612": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9613": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "MUL",
      "path": "23"
    },
    "9614": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9615": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9616": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9617": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "ADD",
      "path": "23"
    },
    "9618": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9619": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "ADD",
      "path": "23"
    },
    "9620": {
      "fn": "Registry.handleRent",
      "offset": [
        11659,
        11677
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9621": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9622": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9623": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9625": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9626": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9629": {
      "op": "SWAP6"
    },
    "9630": {
      "op": "DUP7"
    },
    "9631": {
      "op": "AND"
    },
    "9632": {
      "op": "DUP2"
    },
    "9633": {
      "op": "MSTORE"
    },
    "9634": {
      "op": "SWAP5"
    },
    "9635": {
      "op": "SWAP1"
    },
    "9636": {
      "op": "SWAP3"
    },
    "9637": {
      "op": "AND"
    },
    "9638": {
      "op": "SWAP3"
    },
    "9639": {
      "op": "DUP5"
    },
    "9640": {
      "op": "ADD"
    },
    "9641": {
      "op": "SWAP3"
    },
    "9642": {
      "op": "SWAP1"
    },
    "9643": {
      "op": "SWAP3"
    },
    "9644": {
      "op": "MSTORE"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9649": {
      "op": "SHL"
    },
    "9650": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9651": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9652": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "DIV",
      "path": "23"
    },
    "9653": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "9658": {
      "fn": "Registry.handleRent",
      "offset": [
        11695,
        11711
      ],
      "op": "AND",
      "path": "23"
    },
    "9659": {
      "op": "SWAP1"
    },
    "9660": {
      "op": "DUP3"
    },
    "9661": {
      "op": "ADD"
    },
    "9662": {
      "op": "MSTORE"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9665": {
      "op": "ADD"
    },
    "9666": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9668": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9669": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9670": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9671": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "SUB",
      "path": "23"
    },
    "9672": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9673": {
      "fn": "Registry.handleRent",
      "offset": [
        11498,
        11725
      ],
      "op": "LOG4",
      "path": "23"
    },
    "9674": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11748
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 66,
      "value": "0x4"
    },
    "9676": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9677": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9678": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9679": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9681": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25D9"
    },
    "9684": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9685": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "9688": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11739,
        11750
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9689": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9690": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9691": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9692": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "POP",
      "path": "23"
    },
    "9693": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "9694": {
      "fn": "Registry.handleRent",
      "offset": [
        11739,
        11750
      ],
      "op": "POP",
      "path": "23"
    },
    "9695": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9696": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9697": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9698": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9699": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9700": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9701": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11761
      ],
      "op": "POP",
      "path": "23"
    },
    "9702": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 67
    },
    "9703": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9704": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25F0"
    },
    "9707": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9708": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "9711": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9373,
        9376
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9712": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9713": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9714": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "POP",
      "path": "23"
    },
    "9715": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "POP",
      "path": "23"
    },
    "9716": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11761
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E79"
    },
    "9719": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11761
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9720": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21016,
        21858
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9721": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21306,
        21324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2600"
    },
    "9724": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21306,
        21324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3AD7"
    },
    "9727": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21306,
        21324
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9728": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21306,
        21324
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9729": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 68,
      "value": "0x40"
    },
    "9731": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9732": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9733": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A0"
    },
    "9736": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9737": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9739": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9740": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9741": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21370,
        21371
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9743": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9744": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9745": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9747": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9748": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21392,
        21393
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9750": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9751": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9752": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9754": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9755": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21420,
        21431
      ],
      "op": "DUP9",
      "path": "23"
    },
    "9756": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9757": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9758": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9760": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9761": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21457,
        21467
      ],
      "op": "DUP8",
      "path": "23"
    },
    "9762": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9763": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9764": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9766": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9767": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21490,
        21497
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9768": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9769": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9770": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9772": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9773": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21537,
        21538
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9781": {
      "op": "SHL"
    },
    "9782": {
      "op": "SUB"
    },
    "9783": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9784": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "GT",
      "path": "23"
    },
    "9785": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9786": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2645"
    },
    "9789": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9790": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2645"
    },
    "9793": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4959"
    },
    "9796": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21523,
        21539
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9797": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9798": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9800": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9801": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9802": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9803": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9804": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9805": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9806": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9808": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "MUL",
      "path": "23"
    },
    "9809": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9811": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "ADD",
      "path": "23"
    },
    "9812": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9813": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "ADD",
      "path": "23"
    },
    "9814": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9816": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9817": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9818": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9819": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x266E"
    },
    "9822": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9823": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9824": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9826": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "ADD",
      "path": "23"
    },
    "9827": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9829": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9830": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "MUL",
      "path": "23"
    },
    "9831": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9832": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "9833": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9834": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "9835": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "ADD",
      "path": "23"
    },
    "9836": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9837": {
      "op": "POP"
    },
    "9838": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21523,
        21539
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9839": {
      "op": "POP"
    },
    "9840": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9841": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9842": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9844": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9845": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21734,
        21735
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9847": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9849": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9850": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9851": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9852": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9853": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9854": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9855": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9857": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "MUL",
      "path": "23"
    },
    "9858": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9860": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "ADD",
      "path": "23"
    },
    "9861": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9862": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "ADD",
      "path": "23"
    },
    "9863": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9865": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9866": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9867": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9868": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269F"
    },
    "9871": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9872": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9873": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9875": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "ADD",
      "path": "23"
    },
    "9876": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9878": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9879": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "MUL",
      "path": "23"
    },
    "9880": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9881": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "9882": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9883": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "9884": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "ADD",
      "path": "23"
    },
    "9885": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9886": {
      "op": "POP"
    },
    "9887": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21722,
        21736
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9888": {
      "op": "POP"
    },
    "9889": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9890": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9891": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9893": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9894": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21779,
        21780
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9896": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9898": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9899": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9900": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9901": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9902": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9903": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9904": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9906": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "MUL",
      "path": "23"
    },
    "9907": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9909": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "ADD",
      "path": "23"
    },
    "9910": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9911": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "ADD",
      "path": "23"
    },
    "9912": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9914": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9915": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9916": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9917": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26D0"
    },
    "9920": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9921": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9922": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9924": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "ADD",
      "path": "23"
    },
    "9925": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9927": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9928": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "MUL",
      "path": "23"
    },
    "9929": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9930": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "9931": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9932": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "9933": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "ADD",
      "path": "23"
    },
    "9934": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9935": {
      "op": "POP"
    },
    "9936": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21766,
        21781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9937": {
      "op": "POP"
    },
    "9938": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9939": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9940": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9942": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9943": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9944": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9945": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9946": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9947": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9948": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9949": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9951": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9952": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9955": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9956": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9957": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9958": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9959": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9960": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "ADD",
      "path": "23"
    },
    "9961": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9962": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21599,
        21615
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9963": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9964": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9965": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9966": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9967": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9968": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9969": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9970": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "9972": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9973": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9974": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9975": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9976": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9977": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9978": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "9980": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9981": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "9982": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9983": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9984": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9985": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9986": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9987": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9988": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9989": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9990": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9991": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9992": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9993": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "ADD",
      "path": "23"
    },
    "9994": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9995": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9996": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21809,
        21840
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9997": {
      "op": "POP"
    },
    "9998": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "10000": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10001": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10002": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "ADD",
      "path": "23"
    },
    "10003": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21341,
        21851
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10004": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21336,
        21851
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10005": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21336,
        21851
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10006": {
      "op": "POP"
    },
    "10007": {
      "op": "POP"
    },
    "10008": {
      "op": "POP"
    },
    "10009": {
      "fn": "Registry.createRentCallData",
      "jump": "o",
      "offset": [
        21016,
        21858
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10010": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24313,
        24580
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10011": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24385,
        24427
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 69,
      "value": "0x2727"
    },
    "10014": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24405,
        24412
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10015": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24405,
        24426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10017": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24405,
        24426
      ],
      "op": "ADD",
      "path": "23"
    },
    "10018": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24405,
        24426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10019": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24385,
        24404
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35BC"
    },
    "10022": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24385,
        24427
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10023": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24385,
        24427
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10024": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24445,
        24468
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 70,
      "value": "0x40"
    },
    "10026": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24445,
        24468
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10027": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24445,
        24468
      ],
      "op": "ADD",
      "path": "23"
    },
    "10028": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24445,
        24468
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10029": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24445,
        24473
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "10031": {
      "branch": 140,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24445,
        24473
      ],
      "op": "AND",
      "path": "23"
    },
    "10032": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2772"
    },
    "10035": {
      "branch": 140,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10036": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10038": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10045": {
      "op": "SHL"
    },
    "10046": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10047": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10050": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10052": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10053": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "ADD",
      "path": "23"
    },
    "10054": {
      "op": "MSTORE"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10059": {
      "op": "DUP3"
    },
    "10060": {
      "op": "ADD"
    },
    "10061": {
      "op": "MSTORE"
    },
    "10062": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A6475726174696F6E207A65726F"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10085": {
      "op": "SHL"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10088": {
      "op": "DUP3"
    },
    "10089": {
      "op": "ADD"
    },
    "10090": {
      "op": "MSTORE"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10093": {
      "op": "ADD"
    },
    "10094": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "10097": {
      "op": "JUMP"
    },
    "10098": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24437,
        24498
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10099": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24516,
        24538
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 71,
      "value": "0x60"
    },
    "10101": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24516,
        24538
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10102": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24516,
        24538
      ],
      "op": "ADD",
      "path": "23"
    },
    "10103": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24516,
        24538
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10110": {
      "op": "SHL"
    },
    "10111": {
      "op": "SUB"
    },
    "10112": {
      "op": "NOT"
    },
    "10113": {
      "branch": 141,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24516,
        24543
      ],
      "op": "AND",
      "path": "23"
    },
    "10114": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "10117": {
      "branch": 141,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10118": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10120": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10121": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10127": {
      "op": "SHL"
    },
    "10128": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10129": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10130": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10132": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "ADD",
      "path": "23"
    },
    "10133": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "10136": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10137": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24508,
        24573
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4627"
    },
    "10140": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24508,
        24573
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10141": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26101,
        26442
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10142": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26282,
        26291
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 72
    },
    "10143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10149": {
      "op": "SHL"
    },
    "10150": {
      "op": "SUB"
    },
    "10151": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26291
      ],
      "op": "AND",
      "path": "23"
    },
    "10152": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26264
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10153": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26278
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10155": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26278
      ],
      "op": "ADD",
      "path": "23"
    },
    "10156": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26278
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10163": {
      "op": "SHL"
    },
    "10164": {
      "op": "SUB"
    },
    "10165": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26291
      ],
      "op": "AND",
      "path": "23"
    },
    "10166": {
      "branch": 142,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26257,
        26291
      ],
      "op": "EQ",
      "path": "23"
    },
    "10167": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27F6"
    },
    "10170": {
      "branch": 142,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10171": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10173": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10180": {
      "op": "SHL"
    },
    "10181": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10182": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10185": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10187": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10188": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "ADD",
      "path": "23"
    },
    "10189": {
      "op": "MSTORE"
    },
    "10190": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10194": {
      "op": "DUP3"
    },
    "10195": {
      "op": "ADD"
    },
    "10196": {
      "op": "MSTORE"
    },
    "10197": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103932B73A32B9"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10217": {
      "op": "SHL"
    },
    "10218": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10220": {
      "op": "DUP3"
    },
    "10221": {
      "op": "ADD"
    },
    "10222": {
      "op": "MSTORE"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10225": {
      "op": "ADD"
    },
    "10226": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "10229": {
      "op": "JUMP"
    },
    "10230": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26249,
        26313
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10231": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26345,
        26386
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 73,
      "value": "0x2800"
    },
    "10234": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26362,
        26369
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10235": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26371,
        26385
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10236": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26345,
        26361
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3608"
    },
    "10239": {
      "fn": "Registry.ensureIsReturnable",
      "jump": "i",
      "offset": [
        26345,
        26386
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10240": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26345,
        26386
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10241": {
      "branch": 143,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26344,
        26386
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10242": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E71"
    },
    "10245": {
      "branch": 143,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10246": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10248": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10255": {
      "op": "SHL"
    },
    "10256": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10257": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10260": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10262": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10263": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "ADD",
      "path": "23"
    },
    "10264": {
      "op": "MSTORE"
    },
    "10265": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10269": {
      "op": "DUP3"
    },
    "10270": {
      "op": "ADD"
    },
    "10271": {
      "op": "MSTORE"
    },
    "10272": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A706173742072657475726E2064617465000000000000000000"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10307": {
      "op": "DUP3"
    },
    "10308": {
      "op": "ADD"
    },
    "10309": {
      "op": "MSTORE"
    },
    "10310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10312": {
      "op": "ADD"
    },
    "10313": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26323,
        26435
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "10316": {
      "op": "JUMP"
    },
    "10317": {
      "fn": "Registry.distributePayments",
      "offset": [
        15665,
        16903
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10318": {
      "fn": "Registry.distributePayments",
      "offset": [
        15840,
        15860
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10320": {
      "fn": "Registry.distributePayments",
      "offset": [
        15869,
        15876
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10321": {
      "fn": "Registry.distributePayments",
      "offset": [
        15869,
        15889
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "10323": {
      "fn": "Registry.distributePayments",
      "offset": [
        15869,
        15889
      ],
      "op": "ADD",
      "path": "23"
    },
    "10324": {
      "fn": "Registry.distributePayments",
      "offset": [
        15869,
        15889
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10325": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "10327": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10328": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "GT",
      "path": "23"
    },
    "10329": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10330": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2865"
    },
    "10333": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10334": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2865"
    },
    "10337": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "10340": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15863,
        15890
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10341": {
      "fn": "Registry.distributePayments",
      "offset": [
        15863,
        15890
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10342": {
      "fn": "Registry.distributePayments",
      "offset": [
        15900,
        15916
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10344": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15927
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10345": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15927
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10346": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10348": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10349": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10356": {
      "op": "SHL"
    },
    "10357": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10358": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10361": {
      "op": "DUP5"
    },
    "10362": {
      "op": "AND"
    },
    "10363": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10365": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10366": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ADD",
      "path": "23"
    },
    "10367": {
      "op": "MSTORE"
    },
    "10368": {
      "fn": "Registry.distributePayments",
      "offset": [
        15840,
        15890
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10369": {
      "fn": "Registry.distributePayments",
      "offset": [
        15840,
        15890
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "10370": {
      "op": "POP"
    },
    "10371": {
      "fn": "Registry.distributePayments",
      "offset": [
        15900,
        15916
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10372": {
      "fn": "Registry.distributePayments",
      "offset": [
        15900,
        15916
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10379": {
      "op": "SHL"
    },
    "10380": {
      "op": "SUB"
    },
    "10381": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15927
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10382": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15927
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10383": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15927
      ],
      "op": "AND",
      "path": "23"
    },
    "10384": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15927
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10385": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15943
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC6EE427F"
    },
    "10390": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15943
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10393": {
      "op": "ADD"
    },
    "10394": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10396": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10398": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10399": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10400": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10401": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "SUB",
      "path": "23"
    },
    "10402": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10403": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10404": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10405": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "10406": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10407": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10408": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10409": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28B1"
    },
    "10412": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10413": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10415": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10416": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10417": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10418": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10419": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "GAS",
      "path": "23"
    },
    "10420": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "10421": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10422": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10423": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10424": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28C5"
    },
    "10427": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10428": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10429": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10431": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10432": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "10433": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10434": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10436": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10437": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10438": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10439": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10440": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10441": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10442": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10444": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10445": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10446": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "10448": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "NOT",
      "path": "23"
    },
    "10449": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "10451": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10452": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ADD",
      "path": "23"
    },
    "10453": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "AND",
      "path": "23"
    },
    "10454": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10455": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ADD",
      "path": "23"
    },
    "10456": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10457": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10459": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10460": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10461": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10462": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "ADD",
      "path": "23"
    },
    "10463": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10464": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x28E9"
    },
    "10467": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10468": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10469": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E5E"
    },
    "10472": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15919,
        15959
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10473": {
      "fn": "Registry.distributePayments",
      "offset": [
        15919,
        15959
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10474": {
      "fn": "Registry.distributePayments",
      "offset": [
        15900,
        15959
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10475": {
      "fn": "Registry.distributePayments",
      "offset": [
        15900,
        15959
      ],
      "op": "POP",
      "path": "23"
    },
    "10476": {
      "fn": "Registry.distributePayments",
      "offset": [
        15969,
        15985
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10478": {
      "fn": "Registry.distributePayments",
      "offset": [
        15994,
        16002
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10485": {
      "op": "SHL"
    },
    "10486": {
      "op": "SUB"
    },
    "10487": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16012
      ],
      "op": "AND",
      "path": "23"
    },
    "10488": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16012
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "10493": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10495": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10496": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10497": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "10502": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "AND",
      "path": "23"
    },
    "10503": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "10505": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "SHL",
      "path": "23"
    },
    "10506": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10507": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10508": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10510": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ADD",
      "path": "23"
    },
    "10511": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10513": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10515": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10516": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10517": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10518": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "SUB",
      "path": "23"
    },
    "10519": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10520": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10521": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10522": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "10523": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10524": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10525": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10526": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2926"
    },
    "10529": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10530": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10532": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10533": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10534": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10535": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "POP",
      "path": "23"
    },
    "10536": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "GAS",
      "path": "23"
    },
    "10537": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "10538": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10539": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10540": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10541": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x293A"
    },
    "10544": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10545": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10546": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10548": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10549": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "10550": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10551": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10553": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10554": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10555": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "POP",
      "path": "23"
    },
    "10556": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "POP",
      "path": "23"
    },
    "10557": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "POP",
      "path": "23"
    },
    "10558": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "POP",
      "path": "23"
    },
    "10559": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10561": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10562": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "10563": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "10565": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "NOT",
      "path": "23"
    },
    "10566": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "10568": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10569": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ADD",
      "path": "23"
    },
    "10570": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "AND",
      "path": "23"
    },
    "10571": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10572": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ADD",
      "path": "23"
    },
    "10573": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10574": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10576": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10577": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "POP",
      "path": "23"
    },
    "10578": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10579": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "ADD",
      "path": "23"
    },
    "10580": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10581": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x295E"
    },
    "10584": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10585": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10586": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x442D"
    },
    "10589": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15988,
        16014
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10590": {
      "fn": "Registry.distributePayments",
      "offset": [
        15988,
        16014
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10591": {
      "fn": "Registry.distributePayments",
      "offset": [
        15969,
        16014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "10593": {
      "fn": "Registry.distributePayments",
      "offset": [
        15969,
        16014
      ],
      "op": "AND",
      "path": "23"
    },
    "10594": {
      "fn": "Registry.distributePayments",
      "offset": [
        15969,
        16014
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10595": {
      "op": "POP"
    },
    "10596": {
      "fn": "Registry.distributePayments",
      "offset": [
        16024,
        16037
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10598": {
      "fn": "Registry.distributePayments",
      "offset": [
        16040,
        16052
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2970"
    },
    "10601": {
      "fn": "Registry.distributePayments",
      "offset": [
        15969,
        16014
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10602": {
      "fn": "Registry.distributePayments",
      "offset": [
        16040,
        16042
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "10604": {
      "fn": "Registry.distributePayments",
      "offset": [
        16040,
        16052
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47CF"
    },
    "10607": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16040,
        16052
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10608": {
      "fn": "Registry.distributePayments",
      "offset": [
        16040,
        16052
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10609": {
      "fn": "Registry.distributePayments",
      "offset": [
        16024,
        16052
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10610": {
      "fn": "Registry.distributePayments",
      "offset": [
        16024,
        16052
      ],
      "op": "POP",
      "path": "23"
    },
    "10611": {
      "fn": "Registry.distributePayments",
      "offset": [
        16062,
        16079
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10613": {
      "fn": "Registry.distributePayments",
      "offset": [
        16082,
        16124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2982"
    },
    "10616": {
      "fn": "Registry.distributePayments",
      "offset": [
        16094,
        16101
      ],
      "op": "DUP9",
      "path": "23"
    },
    "10617": {
      "fn": "Registry.distributePayments",
      "offset": [
        16094,
        16116
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "10619": {
      "fn": "Registry.distributePayments",
      "offset": [
        16094,
        16116
      ],
      "op": "ADD",
      "path": "23"
    },
    "10620": {
      "fn": "Registry.distributePayments",
      "offset": [
        16094,
        16116
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10621": {
      "fn": "Registry.distributePayments",
      "offset": [
        16118,
        16123
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10622": {
      "fn": "Registry.distributePayments",
      "offset": [
        16082,
        16093
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34C2"
    },
    "10625": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16082,
        16124
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10626": {
      "fn": "Registry.distributePayments",
      "offset": [
        16082,
        16124
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10627": {
      "fn": "Registry.distributePayments",
      "offset": [
        16062,
        16124
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10628": {
      "fn": "Registry.distributePayments",
      "offset": [
        16062,
        16124
      ],
      "op": "POP",
      "path": "23"
    },
    "10629": {
      "fn": "Registry.distributePayments",
      "offset": [
        16134,
        16156
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10631": {
      "fn": "Registry.distributePayments",
      "offset": [
        16216,
        16223
      ],
      "op": "DUP8",
      "path": "23"
    },
    "10632": {
      "fn": "Registry.distributePayments",
      "offset": [
        16216,
        16236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10634": {
      "fn": "Registry.distributePayments",
      "offset": [
        16216,
        16236
      ],
      "op": "ADD",
      "path": "23"
    },
    "10635": {
      "fn": "Registry.distributePayments",
      "offset": [
        16216,
        16236
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10636": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "10638": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "AND",
      "path": "23"
    },
    "10639": {
      "fn": "Registry.distributePayments",
      "offset": [
        16192,
        16201
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10640": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16166
      ],
      "op": "DUP10",
      "path": "23"
    },
    "10641": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16177
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "10643": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16177
      ],
      "op": "ADD",
      "path": "23"
    },
    "10644": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16177
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10645": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "10648": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "AND",
      "path": "23"
    },
    "10649": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29A2"
    },
    "10652": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10653": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10654": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "10657": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16159,
        16201
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10658": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16201
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10659": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29AC"
    },
    "10662": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10663": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10664": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "10667": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16159,
        16236
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10668": {
      "fn": "Registry.distributePayments",
      "offset": [
        16159,
        16236
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10669": {
      "fn": "Registry.distributePayments",
      "offset": [
        16134,
        16236
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10670": {
      "op": "POP"
    },
    "10671": {
      "fn": "Registry.distributePayments",
      "offset": [
        16246,
        16267
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10673": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0x15180"
    },
    "10677": {
      "fn": "Registry.distributePayments",
      "offset": [
        16271,
        16304
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29BE"
    },
    "10680": {
      "fn": "Registry.distributePayments",
      "offset": [
        16295,
        16304
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10681": {
      "fn": "Registry.distributePayments",
      "offset": [
        16271,
        16292
      ],
      "op": "DUP11",
      "path": "23"
    },
    "10682": {
      "fn": "Registry.distributePayments",
      "offset": [
        16271,
        16304
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "10685": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16271,
        16304
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10686": {
      "fn": "Registry.distributePayments",
      "offset": [
        16271,
        16304
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10687": {
      "fn": "Registry.distributePayments",
      "offset": [
        16270,
        16334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C8"
    },
    "10690": {
      "fn": "Registry.distributePayments",
      "offset": [
        16270,
        16334
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10691": {
      "fn": "Registry.distributePayments",
      "offset": [
        16270,
        16334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10692": {
      "fn": "Registry.distributePayments",
      "offset": [
        16270,
        16334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x476A"
    },
    "10695": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16270,
        16334
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10696": {
      "fn": "Registry.distributePayments",
      "offset": [
        16270,
        16334
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10697": {
      "fn": "Registry.distributePayments",
      "offset": [
        16246,
        16334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10698": {
      "fn": "Registry.distributePayments",
      "offset": [
        16246,
        16334
      ],
      "op": "POP",
      "path": "23"
    },
    "10699": {
      "fn": "Registry.distributePayments",
      "offset": [
        16369,
        16370
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 74,
      "value": "0x0"
    },
    "10701": {
      "fn": "Registry.distributePayments",
      "offset": [
        16352,
        16366
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10702": {
      "branch": 144,
      "fn": "Registry.distributePayments",
      "offset": [
        16352,
        16370
      ],
      "op": "GT",
      "path": "23"
    },
    "10703": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A26"
    },
    "10706": {
      "branch": 144,
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10707": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10709": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10716": {
      "op": "SHL"
    },
    "10717": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10718": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10721": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10723": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10724": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "ADD",
      "path": "23"
    },
    "10725": {
      "op": "MSTORE"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10730": {
      "op": "DUP3"
    },
    "10731": {
      "op": "ADD"
    },
    "10732": {
      "op": "MSTORE"
    },
    "10733": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A"
    },
    "10766": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10768": {
      "op": "DUP3"
    },
    "10769": {
      "op": "ADD"
    },
    "10770": {
      "op": "MSTORE"
    },
    "10771": {
      "op": "PUSH3",
      "value": "0x65726F"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "10777": {
      "op": "SHL"
    },
    "10778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10780": {
      "op": "DUP3"
    },
    "10781": {
      "op": "ADD"
    },
    "10782": {
      "op": "MSTORE"
    },
    "10783": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10785": {
      "op": "ADD"
    },
    "10786": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "10789": {
      "op": "JUMP"
    },
    "10790": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16410
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10791": {
      "fn": "Registry.distributePayments",
      "offset": [
        16444,
        16445
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 75,
      "value": "0x0"
    },
    "10793": {
      "fn": "Registry.distributePayments",
      "offset": [
        16428,
        16441
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10794": {
      "branch": 145,
      "fn": "Registry.distributePayments",
      "offset": [
        16428,
        16445
      ],
      "op": "GT",
      "path": "23"
    },
    "10795": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A76"
    },
    "10798": {
      "branch": 145,
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10799": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10801": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10802": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10808": {
      "op": "SHL"
    },
    "10809": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10810": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10813": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10815": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10816": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "ADD",
      "path": "23"
    },
    "10817": {
      "op": "MSTORE"
    },
    "10818": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10822": {
      "op": "DUP3"
    },
    "10823": {
      "op": "ADD"
    },
    "10824": {
      "op": "MSTORE"
    },
    "10825": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10860": {
      "op": "DUP3"
    },
    "10861": {
      "op": "ADD"
    },
    "10862": {
      "op": "MSTORE"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10865": {
      "op": "ADD"
    },
    "10866": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "10869": {
      "op": "JUMP"
    },
    "10870": {
      "fn": "Registry.distributePayments",
      "offset": [
        16420,
        16479
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10871": {
      "fn": "Registry.distributePayments",
      "offset": [
        16489,
        16510
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10873": {
      "fn": "Registry.distributePayments",
      "offset": [
        16513,
        16543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A82"
    },
    "10876": {
      "fn": "Registry.distributePayments",
      "offset": [
        16530,
        16543
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10877": {
      "fn": "Registry.distributePayments",
      "offset": [
        16513,
        16527
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10878": {
      "fn": "Registry.distributePayments",
      "offset": [
        16513,
        16543
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "10881": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16513,
        16543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10882": {
      "fn": "Registry.distributePayments",
      "offset": [
        16513,
        16543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10883": {
      "fn": "Registry.distributePayments",
      "offset": [
        16489,
        16543
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10884": {
      "fn": "Registry.distributePayments",
      "offset": [
        16489,
        16543
      ],
      "op": "POP",
      "path": "23"
    },
    "10885": {
      "fn": "Registry.distributePayments",
      "offset": [
        16557,
        16564
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "10887": {
      "fn": "Registry.distributePayments",
      "offset": [
        16557,
        16564
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "10888": {
      "fn": "Registry.distributePayments",
      "offset": [
        16568,
        16569
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10890": {
      "branch": 146,
      "fn": "Registry.distributePayments",
      "offset": [
        16557,
        16569
      ],
      "op": "EQ",
      "path": "23"
    },
    "10891": {
      "fn": "Registry.distributePayments",
      "offset": [
        16553,
        16698
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AAE"
    },
    "10894": {
      "branch": 146,
      "fn": "Registry.distributePayments",
      "offset": [
        16553,
        16698
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10895": {
      "fn": "Registry.distributePayments",
      "offset": [
        16585,
        16601
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10897": {
      "fn": "Registry.distributePayments",
      "offset": [
        16604,
        16648
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A9E"
    },
    "10900": {
      "fn": "Registry.distributePayments",
      "offset": [
        16612,
        16625
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10901": {
      "fn": "Registry.distributePayments",
      "offset": [
        16627,
        16634
      ],
      "op": "DUP14",
      "path": "23"
    },
    "10902": {
      "fn": "Registry.distributePayments",
      "offset": [
        16627,
        16647
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "10904": {
      "fn": "Registry.distributePayments",
      "offset": [
        16627,
        16647
      ],
      "op": "ADD",
      "path": "23"
    },
    "10905": {
      "fn": "Registry.distributePayments",
      "offset": [
        16627,
        16647
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10906": {
      "fn": "Registry.distributePayments",
      "offset": [
        16604,
        16611
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3696"
    },
    "10909": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16604,
        16648
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10910": {
      "fn": "Registry.distributePayments",
      "offset": [
        16604,
        16648
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10911": {
      "fn": "Registry.distributePayments",
      "offset": [
        16585,
        16648
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10912": {
      "op": "POP"
    },
    "10913": {
      "fn": "Registry.distributePayments",
      "offset": [
        16662,
        16687
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 76,
      "value": "0x2AAA"
    },
    "10916": {
      "fn": "Registry.distributePayments",
      "offset": [
        16585,
        16648
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10917": {
      "fn": "Registry.distributePayments",
      "offset": [
        16662,
        16687
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10918": {
      "fn": "Registry.distributePayments",
      "offset": [
        16662,
        16687
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "10921": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16662,
        16687
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10922": {
      "fn": "Registry.distributePayments",
      "offset": [
        16662,
        16687
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10923": {
      "fn": "Registry.distributePayments",
      "offset": [
        16662,
        16687
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "10924": {
      "fn": "Registry.distributePayments",
      "offset": [
        16662,
        16687
      ],
      "op": "POP",
      "path": "23"
    },
    "10925": {
      "fn": "Registry.distributePayments",
      "offset": [
        16571,
        16698
      ],
      "op": "POP",
      "path": "23"
    },
    "10926": {
      "fn": "Registry.distributePayments",
      "offset": [
        16553,
        16698
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10927": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16757
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 77,
      "value": "0x20"
    },
    "10929": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16757
      ],
      "op": "DUP12",
      "path": "23"
    },
    "10930": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16757
      ],
      "op": "ADD",
      "path": "23"
    },
    "10931": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16757
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10932": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16773
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AC8"
    },
    "10935": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16773
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10942": {
      "op": "SHL"
    },
    "10943": {
      "op": "SUB"
    },
    "10944": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16735
      ],
      "op": "DUP10",
      "path": "23"
    },
    "10945": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16735
      ],
      "op": "AND",
      "path": "23"
    },
    "10946": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16735
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10947": {
      "fn": "Registry.distributePayments",
      "offset": [
        16759,
        16772
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10948": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16735
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3773"
    },
    "10951": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16707,
        16773
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10952": {
      "fn": "Registry.distributePayments",
      "offset": [
        16707,
        16773
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10953": {
      "fn": "Registry.distributePayments",
      "offset": [
        16787,
        16804
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10954": {
      "branch": 147,
      "fn": "Registry.distributePayments",
      "offset": [
        16787,
        16804
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10955": {
      "fn": "Registry.distributePayments",
      "offset": [
        16783,
        16897
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AE5"
    },
    "10958": {
      "branch": 147,
      "fn": "Registry.distributePayments",
      "offset": [
        16783,
        16897
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10959": {
      "fn": "Registry.distributePayments",
      "offset": [
        16849,
        16870
      ],
      "op": "DUP10",
      "path": "23",
      "statement": 78
    },
    "10960": {
      "fn": "Registry.distributePayments",
      "offset": [
        16849,
        16870
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10961": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AE5"
    },
    "10964": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16886
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10971": {
      "op": "SHL"
    },
    "10972": {
      "op": "SUB"
    },
    "10973": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16848
      ],
      "op": "DUP10",
      "path": "23"
    },
    "10974": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16848
      ],
      "op": "AND",
      "path": "23"
    },
    "10975": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16848
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10976": {
      "fn": "Registry.distributePayments",
      "offset": [
        16872,
        16885
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10977": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16848
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3773"
    },
    "10980": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16820,
        16886
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10981": {
      "fn": "Registry.distributePayments",
      "offset": [
        16820,
        16886
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10982": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10983": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10984": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10985": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10986": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10987": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10988": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10989": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10990": {
      "fn": "Registry.distributePayments",
      "offset": [
        15665,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10991": {
      "fn": "Registry.distributePayments",
      "offset": [
        15665,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10992": {
      "fn": "Registry.distributePayments",
      "offset": [
        15665,
        16903
      ],
      "op": "POP",
      "path": "23"
    },
    "10993": {
      "fn": "Registry.distributePayments",
      "jump": "o",
      "offset": [
        15665,
        16903
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10994": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25114,
        25564
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10995": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25221,
        25222
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 79,
      "value": "0x0"
    },
    "10997": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25204
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10998": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25215
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11000": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25215
      ],
      "op": "ADD",
      "path": "23"
    },
    "11001": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25215
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11002": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25217
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11003": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11004": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11005": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11006": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "LT",
      "path": "23"
    },
    "11007": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B0A"
    },
    "11010": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11011": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B0A"
    },
    "11014": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11017": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25202,
        25218
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11018": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11019": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11021": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "MUL",
      "path": "23"
    },
    "11022": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11024": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "ADD",
      "path": "23"
    },
    "11025": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "ADD",
      "path": "23"
    },
    "11026": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25218
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11027": {
      "branch": 148,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25202,
        25222
      ],
      "op": "GT",
      "path": "23"
    },
    "11028": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B5F"
    },
    "11031": {
      "branch": 148,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11032": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11034": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11041": {
      "op": "SHL"
    },
    "11042": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11043": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11046": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11048": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11049": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "ADD",
      "path": "23"
    },
    "11050": {
      "op": "MSTORE"
    },
    "11051": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11053": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11055": {
      "op": "DUP3"
    },
    "11056": {
      "op": "ADD"
    },
    "11057": {
      "op": "MSTORE"
    },
    "11058": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11093": {
      "op": "DUP3"
    },
    "11094": {
      "op": "ADD"
    },
    "11095": {
      "op": "MSTORE"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11098": {
      "op": "ADD"
    },
    "11099": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11102": {
      "op": "JUMP"
    },
    "11103": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25194,
        25253
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11104": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25291,
        25306
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 80,
      "value": "0xFF"
    },
    "11106": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25306
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11107": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25306
      ],
      "op": "AND",
      "path": "23"
    },
    "11108": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25273
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11109": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25284
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11111": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25284
      ],
      "op": "ADD",
      "path": "23"
    },
    "11112": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25284
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11113": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25285,
        25286
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11114": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11115": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11116": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11117": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "LT",
      "path": "23"
    },
    "11118": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B79"
    },
    "11121": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11122": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B79"
    },
    "11125": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11128": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25271,
        25287
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11129": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11130": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11132": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "MUL",
      "path": "23"
    },
    "11133": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11135": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "ADD",
      "path": "23"
    },
    "11136": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "ADD",
      "path": "23"
    },
    "11137": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25287
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11138": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25306
      ],
      "op": "GT",
      "path": "23"
    },
    "11139": {
      "branch": 149,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25271,
        25306
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11140": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B9F"
    },
    "11143": {
      "branch": 149,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11144": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11146": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11153": {
      "op": "SHL"
    },
    "11154": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11155": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11156": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11158": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "ADD",
      "path": "23"
    },
    "11159": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11162": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11163": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x465E"
    },
    "11166": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25263,
        25327
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11167": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25263,
        25327
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11168": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25369,
        25370
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 81,
      "value": "0x0"
    },
    "11170": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25347
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11171": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25363
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "11173": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25363
      ],
      "op": "ADD",
      "path": "23"
    },
    "11174": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25363
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11175": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25364,
        25365
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11176": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11177": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11178": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11179": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "LT",
      "path": "23"
    },
    "11180": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BB7"
    },
    "11183": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11184": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BB7"
    },
    "11187": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11190": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25345,
        25366
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11191": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11192": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11194": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "MUL",
      "path": "23"
    },
    "11195": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11197": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "ADD",
      "path": "23"
    },
    "11198": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "ADD",
      "path": "23"
    },
    "11199": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25366
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11200": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25370
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "11202": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25370
      ],
      "op": "AND",
      "path": "23"
    },
    "11203": {
      "branch": 150,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25345,
        25370
      ],
      "op": "GT",
      "path": "23"
    },
    "11204": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BDF"
    },
    "11207": {
      "branch": 150,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11208": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11210": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11211": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11217": {
      "op": "SHL"
    },
    "11218": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11219": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11220": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11222": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "ADD",
      "path": "23"
    },
    "11223": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11226": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11227": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45F0"
    },
    "11230": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25337,
        25398
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11231": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25337,
        25398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11232": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25441,
        25456
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 82,
      "value": "0xFF"
    },
    "11234": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25456
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11235": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25456
      ],
      "op": "AND",
      "path": "23"
    },
    "11236": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25418
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11237": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25434
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "11239": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25434
      ],
      "op": "ADD",
      "path": "23"
    },
    "11240": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25434
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11241": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25435,
        25436
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11242": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11243": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11244": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11245": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "LT",
      "path": "23"
    },
    "11246": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BF9"
    },
    "11249": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11250": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BF9"
    },
    "11253": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11256": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25416,
        25437
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11257": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11258": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11260": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "MUL",
      "path": "23"
    },
    "11261": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11263": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "ADD",
      "path": "23"
    },
    "11264": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "ADD",
      "path": "23"
    },
    "11265": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25437
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11266": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25456
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "11268": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25456
      ],
      "op": "AND",
      "path": "23"
    },
    "11269": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25456
      ],
      "op": "GT",
      "path": "23"
    },
    "11270": {
      "branch": 151,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25416,
        25456
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11271": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C22"
    },
    "11274": {
      "branch": 151,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11275": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11277": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11284": {
      "op": "SHL"
    },
    "11285": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11286": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11287": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11289": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "ADD",
      "path": "23"
    },
    "11290": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11293": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11294": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x465E"
    },
    "11297": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25408,
        25477
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11298": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25408,
        25477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11299": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25526,
        25527
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 83,
      "value": "0x0"
    },
    "11301": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25504
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11302": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25519
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11304": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25519
      ],
      "op": "ADD",
      "path": "23"
    },
    "11305": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25519
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11306": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25520,
        25521
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11307": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11308": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11309": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11310": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "LT",
      "path": "23"
    },
    "11311": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C3A"
    },
    "11314": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11315": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C3A"
    },
    "11318": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11321": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25502,
        25522
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11322": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11323": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11325": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "MUL",
      "path": "23"
    },
    "11326": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11328": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "ADD",
      "path": "23"
    },
    "11329": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "ADD",
      "path": "23"
    },
    "11330": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25502,
        25522
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11331": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25495,
        25523
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11333": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25495,
        25523
      ],
      "op": "SHR",
      "path": "23"
    },
    "11334": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25495,
        25527
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "11339": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25495,
        25527
      ],
      "op": "AND",
      "path": "23"
    },
    "11340": {
      "branch": 152,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25495,
        25527
      ],
      "op": "GT",
      "path": "23"
    },
    "11341": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "11344": {
      "branch": 152,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11345": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11347": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11354": {
      "op": "SHL"
    },
    "11355": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11356": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11357": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11359": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "ADD",
      "path": "23"
    },
    "11360": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11363": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11364": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25487,
        25557
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4627"
    },
    "11367": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25487,
        25557
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11368": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24041,
        24307
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11369": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24110,
        24149
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 84,
      "value": "0x2C75"
    },
    "11372": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24127,
        24134
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11373": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24127,
        24148
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11375": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24127,
        24148
      ],
      "op": "ADD",
      "path": "23"
    },
    "11376": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24127,
        24148
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11377": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24110,
        24126
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37A3"
    },
    "11380": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        24110,
        24149
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11381": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24110,
        24149
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11382": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24190
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 85,
      "value": "0x40"
    },
    "11384": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24190
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11385": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24190
      ],
      "op": "ADD",
      "path": "23"
    },
    "11386": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24190
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11387": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24195
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "11389": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24195
      ],
      "op": "AND",
      "path": "23"
    },
    "11390": {
      "branch": 153,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24167,
        24195
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11391": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CC5"
    },
    "11394": {
      "branch": 153,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11395": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11397": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11404": {
      "op": "SHL"
    },
    "11405": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11406": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11409": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11411": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11412": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "ADD",
      "path": "23"
    },
    "11413": {
      "op": "MSTORE"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11418": {
      "op": "DUP3"
    },
    "11419": {
      "op": "ADD"
    },
    "11420": {
      "op": "MSTORE"
    },
    "11421": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "11446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11448": {
      "op": "SHL"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11451": {
      "op": "DUP3"
    },
    "11452": {
      "op": "ADD"
    },
    "11453": {
      "op": "MSTORE"
    },
    "11454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11456": {
      "op": "ADD"
    },
    "11457": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11460": {
      "op": "JUMP"
    },
    "11461": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24159,
        24224
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11462": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24242,
        24264
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 86,
      "value": "0x60"
    },
    "11464": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24242,
        24264
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11465": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24242,
        24264
      ],
      "op": "ADD",
      "path": "23"
    },
    "11466": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24242,
        24264
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11473": {
      "op": "SHL"
    },
    "11474": {
      "op": "SUB"
    },
    "11475": {
      "op": "NOT"
    },
    "11476": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24242,
        24269
      ],
      "op": "AND",
      "path": "23"
    },
    "11477": {
      "branch": 154,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24242,
        24269
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11478": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "11481": {
      "branch": 154,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11482": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11484": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11491": {
      "op": "SHL"
    },
    "11492": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11493": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11496": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11498": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11499": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "ADD",
      "path": "23"
    },
    "11500": {
      "op": "MSTORE"
    },
    "11501": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11505": {
      "op": "DUP3"
    },
    "11506": {
      "op": "ADD"
    },
    "11507": {
      "op": "MSTORE"
    },
    "11508": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000"
    },
    "11541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11543": {
      "op": "DUP3"
    },
    "11544": {
      "op": "ADD"
    },
    "11545": {
      "op": "MSTORE"
    },
    "11546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11548": {
      "op": "ADD"
    },
    "11549": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24234,
        24300
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11552": {
      "op": "JUMP"
    },
    "11553": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26843,
        26972
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11554": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26935,
        26936
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 87,
      "value": "0x0"
    },
    "11556": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26923,
        26932
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11557": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26923,
        26936
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "11559": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26923,
        26936
      ],
      "op": "AND",
      "path": "23"
    },
    "11560": {
      "branch": 155,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26923,
        26936
      ],
      "op": "GT",
      "path": "23"
    },
    "11561": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "11564": {
      "branch": 155,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11565": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11567": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11574": {
      "op": "SHL"
    },
    "11575": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11576": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11579": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11581": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11582": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "ADD",
      "path": "23"
    },
    "11583": {
      "op": "MSTORE"
    },
    "11584": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11586": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11588": {
      "op": "DUP3"
    },
    "11589": {
      "op": "ADD"
    },
    "11590": {
      "op": "MSTORE"
    },
    "11591": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000"
    },
    "11624": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11626": {
      "op": "DUP3"
    },
    "11627": {
      "op": "ADD"
    },
    "11628": {
      "op": "MSTORE"
    },
    "11629": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11631": {
      "op": "ADD"
    },
    "11632": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26915,
        26965
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "11635": {
      "op": "JUMP"
    },
    "11636": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11637": {
      "fn": "Registry.sliceArr",
      "offset": [
        23415,
        23433
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "11639": {
      "fn": "Registry.sliceArr",
      "offset": [
        23463,
        23476
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 88,
      "value": "0x2D80"
    },
    "11642": {
      "fn": "Registry.sliceArr",
      "offset": [
        23470,
        23476
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11643": {
      "fn": "Registry.sliceArr",
      "offset": [
        23463,
        23467
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11644": {
      "fn": "Registry.sliceArr",
      "offset": [
        23463,
        23476
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "11647": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23463,
        23476
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11648": {
      "fn": "Registry.sliceArr",
      "offset": [
        23463,
        23476
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11655": {
      "op": "SHL"
    },
    "11656": {
      "op": "SUB"
    },
    "11657": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11658": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "GT",
      "path": "23"
    },
    "11659": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11660": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D97"
    },
    "11663": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11664": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D97"
    },
    "11667": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4959"
    },
    "11670": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23449,
        23477
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11671": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11672": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11674": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11675": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11676": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11677": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11678": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11679": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11680": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11682": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "MUL",
      "path": "23"
    },
    "11683": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11685": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "ADD",
      "path": "23"
    },
    "11686": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11687": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "ADD",
      "path": "23"
    },
    "11688": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11690": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11691": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11692": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11693": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC0"
    },
    "11696": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11697": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11698": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11700": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "ADD",
      "path": "23"
    },
    "11701": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11703": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11704": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "MUL",
      "path": "23"
    },
    "11705": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11706": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "11707": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11708": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "CALLDATACOPY",
      "path": "23"
    },
    "11709": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "ADD",
      "path": "23"
    },
    "11710": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11711": {
      "op": "POP"
    },
    "11712": {
      "fn": "Registry.sliceArr",
      "offset": [
        23449,
        23477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11713": {
      "op": "POP"
    },
    "11714": {
      "fn": "Registry.sliceArr",
      "offset": [
        23445,
        23477
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11715": {
      "op": "POP"
    },
    "11716": {
      "fn": "Registry.sliceArr",
      "offset": [
        23504,
        23510
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11717": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11718": {
      "fn": "Registry.sliceArr",
      "offset": [
        23516,
        23520
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11719": {
      "fn": "Registry.sliceArr",
      "offset": [
        23512,
        23513
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11720": {
      "fn": "Registry.sliceArr",
      "offset": [
        23512,
        23520
      ],
      "op": "LT",
      "path": "23"
    },
    "11721": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11722": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E2A"
    },
    "11725": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11726": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23560
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 89
    },
    "11727": {
      "fn": "Registry.sliceArr",
      "offset": [
        23561,
        23574
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DD8"
    },
    "11730": {
      "fn": "Registry.sliceArr",
      "offset": [
        23565,
        23574
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11731": {
      "fn": "Registry.sliceArr",
      "offset": [
        23561,
        23562
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11732": {
      "fn": "Registry.sliceArr",
      "offset": [
        23561,
        23574
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "11735": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23561,
        23574
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11736": {
      "fn": "Registry.sliceArr",
      "offset": [
        23561,
        23574
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11737": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11738": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11739": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11740": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "LT",
      "path": "23"
    },
    "11741": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DE8"
    },
    "11744": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11745": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DE8"
    },
    "11748": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11751": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23557,
        23575
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11752": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11753": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11755": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "MUL",
      "path": "23"
    },
    "11756": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11758": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "ADD",
      "path": "23"
    },
    "11759": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "ADD",
      "path": "23"
    },
    "11760": {
      "fn": "Registry.sliceArr",
      "offset": [
        23557,
        23575
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11761": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23542
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11762": {
      "fn": "Registry.sliceArr",
      "offset": [
        23547,
        23553
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11763": {
      "fn": "Registry.sliceArr",
      "offset": [
        23543,
        23544
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11764": {
      "fn": "Registry.sliceArr",
      "offset": [
        23543,
        23553
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DFD"
    },
    "11767": {
      "fn": "Registry.sliceArr",
      "offset": [
        23543,
        23553
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11768": {
      "fn": "Registry.sliceArr",
      "offset": [
        23543,
        23553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11769": {
      "fn": "Registry.sliceArr",
      "offset": [
        23543,
        23553
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "11772": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23543,
        23553
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11773": {
      "fn": "Registry.sliceArr",
      "offset": [
        23543,
        23553
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11774": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11775": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11776": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11777": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "LT",
      "path": "23"
    },
    "11778": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E0D"
    },
    "11781": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11782": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E0D"
    },
    "11785": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11788": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23541,
        23554
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11789": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11790": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11792": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11793": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11794": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "MUL",
      "path": "23"
    },
    "11795": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11796": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11797": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11798": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "ADD",
      "path": "23"
    },
    "11799": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23554
      ],
      "op": "ADD",
      "path": "23"
    },
    "11800": {
      "fn": "Registry.sliceArr",
      "offset": [
        23541,
        23575
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11801": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 90
    },
    "11802": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E22"
    },
    "11805": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11806": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48FC"
    },
    "11809": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23522,
        23525
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11810": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11811": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11812": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "POP",
      "path": "23"
    },
    "11813": {
      "fn": "Registry.sliceArr",
      "offset": [
        23522,
        23525
      ],
      "op": "POP",
      "path": "23"
    },
    "11814": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC5"
    },
    "11817": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11818": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11819": {
      "fn": "Registry.sliceArr",
      "offset": [
        23487,
        23586
      ],
      "op": "POP",
      "path": "23"
    },
    "11820": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11821": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11822": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "POP",
      "path": "23"
    },
    "11823": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "POP",
      "path": "23"
    },
    "11824": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "POP",
      "path": "23"
    },
    "11825": {
      "fn": "Registry.sliceArr",
      "offset": [
        23266,
        23592
      ],
      "op": "POP",
      "path": "23"
    },
    "11826": {
      "fn": "Registry.sliceArr",
      "jump": "o",
      "offset": [
        23266,
        23592
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11827": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17740,
        18368
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11828": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17958,
        17984
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11830": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17945
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11832": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17945
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11833": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17945
      ],
      "op": "ADD",
      "path": "23"
    },
    "11834": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17945
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11835": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17946,
        17953
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11836": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17946,
        17953
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11837": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11838": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11839": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11840": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "LT",
      "path": "23"
    },
    "11841": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E4C"
    },
    "11844": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11845": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E4C"
    },
    "11848": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11851": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17931,
        17954
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11852": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11853": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11855": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "MUL",
      "path": "23"
    },
    "11856": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11858": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "ADD",
      "path": "23"
    },
    "11859": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "ADD",
      "path": "23"
    },
    "11860": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17954
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11861": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "11863": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11864": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "GT",
      "path": "23"
    },
    "11865": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11866": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E65"
    },
    "11869": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11870": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E65"
    },
    "11873": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "11876": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17931,
        17984
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11877": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11878": {
      "branch": 156,
      "fn": "Registry.safeTransfer",
      "offset": [
        17931,
        17984
      ],
      "op": "EQ",
      "path": "23"
    },
    "11879": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17927,
        18362
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11880": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17927,
        18362
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F2B"
    },
    "11883": {
      "branch": 156,
      "fn": "Registry.safeTransfer",
      "offset": [
        17927,
        18362
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11884": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18021
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 91,
      "value": "0x60"
    },
    "11886": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18021
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11887": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18021
      ],
      "op": "ADD",
      "path": "23"
    },
    "11888": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18021
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11889": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18022,
        18029
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11890": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18022,
        18029
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11891": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11892": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11893": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11894": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "LT",
      "path": "23"
    },
    "11895": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E82"
    },
    "11898": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11899": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E82"
    },
    "11902": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11905": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18008,
        18030
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11906": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11907": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11909": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "MUL",
      "path": "23"
    },
    "11910": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11912": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "ADD",
      "path": "23"
    },
    "11913": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "ADD",
      "path": "23"
    },
    "11914": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18008,
        18030
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11921": {
      "op": "SHL"
    },
    "11922": {
      "op": "SUB"
    },
    "11923": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18044
      ],
      "op": "AND",
      "path": "23"
    },
    "11924": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18044
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x23B872DD"
    },
    "11929": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18062,
        18066
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11930": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18084,
        18086
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11931": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18106
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11932": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18114
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "11934": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18114
      ],
      "op": "ADD",
      "path": "23"
    },
    "11935": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18114
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11936": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18115,
        18117
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11937": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18115,
        18122
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11939": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18115,
        18122
      ],
      "op": "ADD",
      "path": "23"
    },
    "11940": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18115,
        18122
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11941": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11942": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11943": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11944": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "LT",
      "path": "23"
    },
    "11945": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2EB4"
    },
    "11948": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11949": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2EB4"
    },
    "11952": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "11955": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18104,
        18123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11956": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11957": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11959": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11960": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11961": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "MUL",
      "path": "23"
    },
    "11962": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11963": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11964": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11965": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "ADD",
      "path": "23"
    },
    "11966": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "ADD",
      "path": "23"
    },
    "11967": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18104,
        18123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11968": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11970": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11977": {
      "op": "SHL"
    },
    "11978": {
      "op": "SUB"
    },
    "11979": {
      "op": "NOT"
    },
    "11980": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11982": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11983": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11984": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "SHL",
      "path": "23"
    },
    "11985": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "AND",
      "path": "23"
    },
    "11986": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11987": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11994": {
      "op": "SHL"
    },
    "11995": {
      "op": "SUB"
    },
    "11996": {
      "op": "SWAP4"
    },
    "11997": {
      "op": "DUP5"
    },
    "11998": {
      "op": "AND"
    },
    "11999": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12001": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12002": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "ADD",
      "path": "23"
    },
    "12003": {
      "op": "MSTORE"
    },
    "12004": {
      "op": "SWAP3"
    },
    "12005": {
      "op": "SWAP1"
    },
    "12006": {
      "op": "SWAP2"
    },
    "12007": {
      "op": "AND"
    },
    "12008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12010": {
      "op": "DUP4"
    },
    "12011": {
      "op": "ADD"
    },
    "12012": {
      "op": "MSTORE"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12015": {
      "op": "DUP3"
    },
    "12016": {
      "op": "ADD"
    },
    "12017": {
      "op": "MSTORE"
    },
    "12018": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12020": {
      "op": "ADD"
    },
    "12021": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12023": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12025": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12026": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12027": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12028": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "SUB",
      "path": "23"
    },
    "12029": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12030": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12032": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12033": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12034": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12035": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12036": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12037": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12038": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F0E"
    },
    "12041": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12042": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12044": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12045": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12046": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12047": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "POP",
      "path": "23"
    },
    "12048": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "GAS",
      "path": "23"
    },
    "12049": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "CALL",
      "path": "23"
    },
    "12050": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12051": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12052": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12053": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F22"
    },
    "12056": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12057": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12058": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12060": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12061": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "12062": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12063": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12065": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12066": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12067": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "POP",
      "path": "23"
    },
    "12068": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "POP",
      "path": "23"
    },
    "12069": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "POP",
      "path": "23"
    },
    "12070": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18000,
        18137
      ],
      "op": "POP",
      "path": "23"
    },
    "12071": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17927,
        18362
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x44A"
    },
    "12074": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17927,
        18362
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12075": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17927,
        18362
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12076": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18190
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 92,
      "value": "0x60"
    },
    "12078": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18190
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12079": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18190
      ],
      "op": "ADD",
      "path": "23"
    },
    "12080": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18190
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12081": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18191,
        18198
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12082": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18191,
        18198
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12083": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12084": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12085": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12086": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "LT",
      "path": "23"
    },
    "12087": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F42"
    },
    "12090": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12091": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F42"
    },
    "12094": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "12097": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18177,
        18199
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12098": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12099": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12101": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "MUL",
      "path": "23"
    },
    "12102": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12104": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "ADD",
      "path": "23"
    },
    "12105": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "ADD",
      "path": "23"
    },
    "12106": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18177,
        18199
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12113": {
      "op": "SHL"
    },
    "12114": {
      "op": "SUB"
    },
    "12115": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18222
      ],
      "op": "AND",
      "path": "23"
    },
    "12116": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18222
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x2EB2C2D6"
    },
    "12121": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18240,
        18244
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12122": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18262,
        18264
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12123": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18282,
        18289
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12124": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18307,
        18317
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12125": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12127": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12128": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12129": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "12134": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "AND",
      "path": "23"
    },
    "12135": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "12137": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SHL",
      "path": "23"
    },
    "12138": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12139": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12140": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12142": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "ADD",
      "path": "23"
    },
    "12143": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F7B"
    },
    "12146": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12147": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12148": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12149": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12150": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12151": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x44CB"
    },
    "12154": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18168,
        18351
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12155": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12156": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12158": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12160": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12161": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12162": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12163": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "SUB",
      "path": "23"
    },
    "12164": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12165": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12167": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12168": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12169": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12170": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12171": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12172": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12173": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F95"
    },
    "12176": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12177": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12179": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12180": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12181": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12182": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "POP",
      "path": "23"
    },
    "12183": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "GAS",
      "path": "23"
    },
    "12184": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "CALL",
      "path": "23"
    },
    "12185": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12186": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12187": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12188": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FA9"
    },
    "12191": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12192": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12193": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12195": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12196": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "12197": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12198": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12200": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12201": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12202": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "POP",
      "path": "23"
    },
    "12203": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "POP",
      "path": "23"
    },
    "12204": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "POP",
      "path": "23"
    },
    "12205": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18168,
        18351
      ],
      "op": "POP",
      "path": "23"
    },
    "12206": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17740,
        18368
      ],
      "op": "POP",
      "path": "23"
    },
    "12207": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17740,
        18368
      ],
      "op": "POP",
      "path": "23"
    },
    "12208": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17740,
        18368
      ],
      "op": "POP",
      "path": "23"
    },
    "12209": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17740,
        18368
      ],
      "op": "POP",
      "path": "23"
    },
    "12210": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17740,
        18368
      ],
      "op": "POP",
      "path": "23"
    },
    "12211": {
      "fn": "Registry.safeTransfer",
      "jump": "o",
      "offset": [
        17740,
        18368
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12212": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24848,
        25108
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12213": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24940,
        24961
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 93
    },
    "12214": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24940,
        24961
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12215": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24920,
        24962
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FBF"
    },
    "12218": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24920,
        24962
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12219": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24920,
        24939
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35BC"
    },
    "12222": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24920,
        24962
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12223": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24920,
        24962
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12224": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24980,
        25000
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 94,
      "value": "0x20"
    },
    "12226": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24980,
        25000
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12227": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24980,
        25000
      ],
      "op": "ADD",
      "path": "23"
    },
    "12228": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24980,
        25000
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12229": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24980,
        25005
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "12231": {
      "branch": 157,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24980,
        25005
      ],
      "op": "AND",
      "path": "23"
    },
    "12232": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FE3"
    },
    "12235": {
      "branch": 157,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12236": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12238": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12245": {
      "op": "SHL"
    },
    "12246": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12247": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12248": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12250": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "ADD",
      "path": "23"
    },
    "12251": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "12254": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12255": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45F0"
    },
    "12258": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24972,
        25033
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12259": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24972,
        25033
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12260": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25051,
        25067
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 95,
      "value": "0x40"
    },
    "12262": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25051,
        25067
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12263": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25051,
        25067
      ],
      "op": "ADD",
      "path": "23"
    },
    "12264": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25051,
        25067
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12265": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25051,
        25072
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "12270": {
      "branch": 158,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25051,
        25072
      ],
      "op": "AND",
      "path": "23"
    },
    "12271": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "12274": {
      "branch": 158,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12275": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12277": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12284": {
      "op": "SHL"
    },
    "12285": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12286": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12289": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12291": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12292": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "ADD",
      "path": "23"
    },
    "12293": {
      "op": "MSTORE"
    },
    "12294": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "12296": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12298": {
      "op": "DUP3"
    },
    "12299": {
      "op": "ADD"
    },
    "12300": {
      "op": "MSTORE"
    },
    "12301": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000"
    },
    "12334": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12336": {
      "op": "DUP3"
    },
    "12337": {
      "op": "ADD"
    },
    "12338": {
      "op": "MSTORE"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12341": {
      "op": "ADD"
    },
    "12342": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        25043,
        25101
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "12345": {
      "op": "JUMP"
    },
    "12346": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26978,
        27232
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12347": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27129,
        27170
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 96,
      "value": "0x3044"
    },
    "12350": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27146,
        27153
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12351": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27155,
        27169
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12352": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27129,
        27145
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3608"
    },
    "12355": {
      "fn": "Registry.ensureIsClaimable",
      "jump": "i",
      "offset": [
        27129,
        27170
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12356": {
      "branch": 159,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27129,
        27170
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12357": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "12360": {
      "branch": 159,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12361": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12363": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12370": {
      "op": "SHL"
    },
    "12371": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12372": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12375": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12377": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12378": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "ADD",
      "path": "23"
    },
    "12379": {
      "op": "MSTORE"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12384": {
      "op": "DUP3"
    },
    "12385": {
      "op": "ADD"
    },
    "12386": {
      "op": "MSTORE"
    },
    "12387": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000"
    },
    "12420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12422": {
      "op": "DUP3"
    },
    "12423": {
      "op": "ADD"
    },
    "12424": {
      "op": "MSTORE"
    },
    "12425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12427": {
      "op": "ADD"
    },
    "12428": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27108,
        27225
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "12431": {
      "op": "JUMP"
    },
    "12432": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16909,
        17734
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12433": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17049,
        17069
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12435": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17078,
        17085
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12436": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17078,
        17098
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "12438": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17078,
        17098
      ],
      "op": "ADD",
      "path": "23"
    },
    "12439": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17078,
        17098
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12440": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "12442": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12443": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "GT",
      "path": "23"
    },
    "12444": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12445": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x30A8"
    },
    "12448": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12449": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x30A8"
    },
    "12452": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "12455": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17072,
        17099
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12456": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17072,
        17099
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12457": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17109,
        17127
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12459": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17144
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12460": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17144
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "12461": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12463": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12464": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12471": {
      "op": "SHL"
    },
    "12472": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12473": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12474": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12476": {
      "op": "DUP5"
    },
    "12477": {
      "op": "AND"
    },
    "12478": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12480": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12481": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ADD",
      "path": "23"
    },
    "12482": {
      "op": "MSTORE"
    },
    "12483": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17049,
        17099
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12484": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17049,
        17099
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12485": {
      "op": "POP"
    },
    "12486": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17109,
        17127
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12487": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17109,
        17127
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12494": {
      "op": "SHL"
    },
    "12495": {
      "op": "SUB"
    },
    "12496": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17144
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12497": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17144
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12498": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17144
      ],
      "op": "AND",
      "path": "23"
    },
    "12499": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17144
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12500": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17160
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC6EE427F"
    },
    "12505": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17160
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12508": {
      "op": "ADD"
    },
    "12509": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12511": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12513": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12514": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12515": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12516": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "SUB",
      "path": "23"
    },
    "12517": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12518": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP7",
      "path": "23"
    },
    "12519": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12520": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12521": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12522": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12523": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12524": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x30F4"
    },
    "12527": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12528": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12530": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12531": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12532": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12533": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "POP",
      "path": "23"
    },
    "12534": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "GAS",
      "path": "23"
    },
    "12535": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "12536": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12537": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12538": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12539": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3108"
    },
    "12542": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12543": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12544": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12546": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12547": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "12548": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12549": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12551": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12552": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12553": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "POP",
      "path": "23"
    },
    "12554": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "POP",
      "path": "23"
    },
    "12555": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "POP",
      "path": "23"
    },
    "12556": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "POP",
      "path": "23"
    },
    "12557": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12559": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12560": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12561": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "12563": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "NOT",
      "path": "23"
    },
    "12564": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "12566": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12567": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ADD",
      "path": "23"
    },
    "12568": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "AND",
      "path": "23"
    },
    "12569": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12570": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ADD",
      "path": "23"
    },
    "12571": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12572": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12574": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12575": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "POP",
      "path": "23"
    },
    "12576": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12577": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "ADD",
      "path": "23"
    },
    "12578": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12579": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x312C"
    },
    "12582": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12583": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12584": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E5E"
    },
    "12587": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17136,
        17176
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12588": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17136,
        17176
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12589": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17109,
        17177
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12590": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17109,
        17177
      ],
      "op": "POP",
      "path": "23"
    },
    "12591": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17203
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12593": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17212,
        17224
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12600": {
      "op": "SHL"
    },
    "12601": {
      "op": "SUB"
    },
    "12602": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17234
      ],
      "op": "AND",
      "path": "23"
    },
    "12603": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17234
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "12608": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12610": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12611": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12612": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "12617": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "AND",
      "path": "23"
    },
    "12618": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "12620": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "SHL",
      "path": "23"
    },
    "12621": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12622": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12623": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12625": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ADD",
      "path": "23"
    },
    "12626": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12628": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12630": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12631": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12632": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12633": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "SUB",
      "path": "23"
    },
    "12634": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12635": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP7",
      "path": "23"
    },
    "12636": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12637": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12638": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12639": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12640": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12641": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3169"
    },
    "12644": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12645": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12647": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12648": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12649": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12650": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "POP",
      "path": "23"
    },
    "12651": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "GAS",
      "path": "23"
    },
    "12652": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "12653": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12654": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12655": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12656": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x317D"
    },
    "12659": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12660": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12661": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12663": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12664": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "12665": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12666": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12668": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12669": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12670": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "POP",
      "path": "23"
    },
    "12671": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "POP",
      "path": "23"
    },
    "12672": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "POP",
      "path": "23"
    },
    "12673": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "POP",
      "path": "23"
    },
    "12674": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12676": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12677": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12678": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "12680": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "NOT",
      "path": "23"
    },
    "12681": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "12683": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12684": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ADD",
      "path": "23"
    },
    "12685": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "AND",
      "path": "23"
    },
    "12686": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12687": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ADD",
      "path": "23"
    },
    "12688": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12689": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12691": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12692": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "POP",
      "path": "23"
    },
    "12693": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12694": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "ADD",
      "path": "23"
    },
    "12695": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12696": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31A1"
    },
    "12699": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12700": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12701": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x442D"
    },
    "12704": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17206,
        17236
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12705": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17206,
        17236
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12706": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17236
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "12708": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17236
      ],
      "op": "AND",
      "path": "23"
    },
    "12709": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17236
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12710": {
      "op": "POP"
    },
    "12711": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17246,
        17259
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12713": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17262,
        17274
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31B3"
    },
    "12716": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17187,
        17236
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12717": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17262,
        17264
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "12719": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17262,
        17274
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x47CF"
    },
    "12722": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17262,
        17274
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12723": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17262,
        17274
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12724": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17246,
        17274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12725": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17246,
        17274
      ],
      "op": "POP",
      "path": "23"
    },
    "12726": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17284,
        17301
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12728": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17304,
        17346
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31C5"
    },
    "12731": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17316,
        17323
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12732": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17316,
        17338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "12734": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17316,
        17338
      ],
      "op": "ADD",
      "path": "23"
    },
    "12735": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17316,
        17338
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12736": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17340,
        17345
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12737": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17304,
        17315
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34C2"
    },
    "12740": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17304,
        17346
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12741": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17304,
        17346
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12742": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17284,
        17346
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12743": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17284,
        17346
      ],
      "op": "POP",
      "path": "23"
    },
    "12744": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17356,
        17372
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12746": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17432,
        17439
      ],
      "op": "DUP7",
      "path": "23"
    },
    "12747": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17432,
        17452
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12749": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17432,
        17452
      ],
      "op": "ADD",
      "path": "23"
    },
    "12750": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17432,
        17452
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12751": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "12753": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "AND",
      "path": "23"
    },
    "12754": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17408,
        17417
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12755": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17382
      ],
      "op": "DUP9",
      "path": "23"
    },
    "12756": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17393
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "12758": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17393
      ],
      "op": "ADD",
      "path": "23"
    },
    "12759": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17393
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12760": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "12763": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "AND",
      "path": "23"
    },
    "12764": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31E5"
    },
    "12767": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12768": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12769": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "12772": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17375,
        17417
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12773": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17417
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12774": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31EF"
    },
    "12777": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12778": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12779": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "12782": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17375,
        17452
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12783": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17375,
        17452
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12784": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17356,
        17452
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12785": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17356,
        17452
      ],
      "op": "POP",
      "path": "23"
    },
    "12786": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17462,
        17478
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12788": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17496,
        17503
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "12790": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17496,
        17503
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "12791": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17507,
        17508
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12793": {
      "branch": 160,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17496,
        17508
      ],
      "op": "EQ",
      "path": "23"
    },
    "12794": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17492,
        17649
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x321E"
    },
    "12797": {
      "branch": 160,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17492,
        17649
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12798": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17535,
        17638
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 97,
      "value": "0x321B"
    },
    "12801": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17560,
        17568
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12802": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17609,
        17623
      ],
      "op": "DUP9",
      "path": "23"
    },
    "12803": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "12805": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "AND",
      "path": "23"
    },
    "12806": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "12808": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12809": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "GT",
      "path": "23"
    },
    "12810": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12811": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3216"
    },
    "12814": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12815": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3216"
    },
    "12818": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "12821": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17586,
        17624
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12822": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17586,
        17624
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12823": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17535,
        17542
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3696"
    },
    "12826": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17535,
        17638
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12827": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17535,
        17638
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12828": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17524,
        17638
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12829": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17524,
        17638
      ],
      "op": "POP",
      "path": "23"
    },
    "12830": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17492,
        17649
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12831": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17684,
        17705
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 98,
      "value": "0x20"
    },
    "12833": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17684,
        17705
      ],
      "op": "DUP10",
      "path": "23"
    },
    "12834": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17684,
        17705
      ],
      "op": "ADD",
      "path": "23"
    },
    "12835": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17684,
        17705
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12836": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17727
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FA9"
    },
    "12839": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17727
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12840": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17707,
        17726
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3231"
    },
    "12843": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17718,
        17726
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12844": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17707,
        17715
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12845": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17707,
        17726
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "12848": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17707,
        17726
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12849": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17707,
        17726
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12856": {
      "op": "SHL"
    },
    "12857": {
      "op": "SUB"
    },
    "12858": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17683
      ],
      "op": "DUP10",
      "path": "23"
    },
    "12859": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17683
      ],
      "op": "AND",
      "path": "23"
    },
    "12860": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17683
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12861": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17727
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12862": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17658,
        17683
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3773"
    },
    "12865": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17658,
        17727
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12866": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26448,
        26632
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12867": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26594,
        26603
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 99
    },
    "12868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12874": {
      "op": "SHL"
    },
    "12875": {
      "op": "SUB"
    },
    "12876": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26603
      ],
      "op": "AND",
      "path": "23"
    },
    "12877": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26576
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12878": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26590
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "12880": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26590
      ],
      "op": "ADD",
      "path": "23"
    },
    "12881": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26590
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12888": {
      "op": "SHL"
    },
    "12889": {
      "op": "SUB"
    },
    "12890": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26603
      ],
      "op": "AND",
      "path": "23"
    },
    "12891": {
      "branch": 161,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26569,
        26603
      ],
      "op": "EQ",
      "path": "23"
    },
    "12892": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "12895": {
      "branch": 161,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12896": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12898": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12905": {
      "op": "SHL"
    },
    "12906": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12907": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12910": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12912": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12913": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "ADD",
      "path": "23"
    },
    "12914": {
      "op": "MSTORE"
    },
    "12915": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12917": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12919": {
      "op": "DUP3"
    },
    "12920": {
      "op": "ADD"
    },
    "12921": {
      "op": "MSTORE"
    },
    "12922": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103632B73232B9"
    },
    "12940": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "12942": {
      "op": "SHL"
    },
    "12943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12945": {
      "op": "DUP3"
    },
    "12946": {
      "op": "ADD"
    },
    "12947": {
      "op": "MSTORE"
    },
    "12948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12950": {
      "op": "ADD"
    },
    "12951": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26561,
        26625
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "12954": {
      "op": "JUMP"
    },
    "12955": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24586,
        24842
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12956": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24672,
        24693
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 100
    },
    "12957": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24672,
        24693
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12958": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24694
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x32A6"
    },
    "12961": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24694
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12962": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24671
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37A3"
    },
    "12965": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        24655,
        24694
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12966": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24694
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12967": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24732
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 101,
      "value": "0x20"
    },
    "12969": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12970": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24732
      ],
      "op": "ADD",
      "path": "23"
    },
    "12971": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24732
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12972": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24737
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "12974": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24737
      ],
      "op": "AND",
      "path": "23"
    },
    "12975": {
      "branch": 162,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24712,
        24737
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12976": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x32F6"
    },
    "12979": {
      "branch": 162,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12980": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12982": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12989": {
      "op": "SHL"
    },
    "12990": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12991": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12994": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12996": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12997": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "ADD",
      "path": "23"
    },
    "12998": {
      "op": "MSTORE"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13003": {
      "op": "DUP3"
    },
    "13004": {
      "op": "ADD"
    },
    "13005": {
      "op": "MSTORE"
    },
    "13006": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "13031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13033": {
      "op": "SHL"
    },
    "13034": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13036": {
      "op": "DUP3"
    },
    "13037": {
      "op": "ADD"
    },
    "13038": {
      "op": "MSTORE"
    },
    "13039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13041": {
      "op": "ADD"
    },
    "13042": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13045": {
      "op": "JUMP"
    },
    "13046": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24704,
        24766
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13047": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24800
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 102,
      "value": "0x40"
    },
    "13049": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24800
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13050": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24800
      ],
      "op": "ADD",
      "path": "23"
    },
    "13051": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24800
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13052": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24805
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "13057": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24805
      ],
      "op": "AND",
      "path": "23"
    },
    "13058": {
      "branch": 163,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24784,
        24805
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "13059": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "13062": {
      "branch": 163,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13063": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13065": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13072": {
      "op": "SHL"
    },
    "13073": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13074": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13077": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13079": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13080": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "ADD",
      "path": "23"
    },
    "13081": {
      "op": "MSTORE"
    },
    "13082": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13086": {
      "op": "DUP3"
    },
    "13087": {
      "op": "ADD"
    },
    "13088": {
      "op": "MSTORE"
    },
    "13089": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000"
    },
    "13122": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13124": {
      "op": "DUP3"
    },
    "13125": {
      "op": "ADD"
    },
    "13126": {
      "op": "MSTORE"
    },
    "13127": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13129": {
      "op": "ADD"
    },
    "13130": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24776,
        24835
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13133": {
      "op": "JUMP"
    },
    "13134": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25570,
        26095
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13135": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25752,
        25759
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 103
    },
    "13136": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25752,
        25773
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13138": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25752,
        25773
      ],
      "op": "ADD",
      "path": "23"
    },
    "13139": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25752,
        25773
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13146": {
      "op": "SHL"
    },
    "13147": {
      "op": "SUB"
    },
    "13148": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25739,
        25773
      ],
      "op": "AND",
      "path": "23"
    },
    "13149": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25739,
        25748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13156": {
      "op": "SHL"
    },
    "13157": {
      "op": "SUB"
    },
    "13158": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25739,
        25773
      ],
      "op": "AND",
      "path": "23"
    },
    "13159": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25739,
        25773
      ],
      "op": "EQ",
      "path": "23"
    },
    "13160": {
      "branch": 164,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25739,
        25773
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "13161": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33B4"
    },
    "13164": {
      "branch": 164,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13165": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13167": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13168": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13174": {
      "op": "SHL"
    },
    "13175": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13176": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13179": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13181": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13182": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "ADD",
      "path": "23"
    },
    "13183": {
      "op": "MSTORE"
    },
    "13184": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13188": {
      "op": "DUP3"
    },
    "13189": {
      "op": "ADD"
    },
    "13190": {
      "op": "MSTORE"
    },
    "13191": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000"
    },
    "13224": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13226": {
      "op": "DUP3"
    },
    "13227": {
      "op": "ADD"
    },
    "13228": {
      "op": "MSTORE"
    },
    "13229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13231": {
      "op": "ADD"
    },
    "13232": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13235": {
      "op": "JUMP"
    },
    "13236": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25731,
        25802
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13237": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25842,
        25857
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 104,
      "value": "0xFF"
    },
    "13239": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25857
      ],
      "op": "DUP1",
      "path": "23"
    },
    "13240": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25857
      ],
      "op": "AND",
      "path": "23"
    },
    "13241": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25822
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13242": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25835
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "13245": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25835
      ],
      "op": "ADD",
      "path": "23"
    },
    "13246": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25835
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13247": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25836,
        25837
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13248": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13249": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13250": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13251": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "LT",
      "path": "23"
    },
    "13252": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33CF"
    },
    "13255": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13256": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33CF"
    },
    "13259": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "13262": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25820,
        25838
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13263": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13264": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13266": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "MUL",
      "path": "23"
    },
    "13267": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13269": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "ADD",
      "path": "23"
    },
    "13270": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "ADD",
      "path": "23"
    },
    "13271": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25838
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13272": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25857
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "13274": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25857
      ],
      "op": "AND",
      "path": "23"
    },
    "13275": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25857
      ],
      "op": "GT",
      "path": "23"
    },
    "13276": {
      "branch": 165,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25820,
        25857
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "13277": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x33F8"
    },
    "13280": {
      "branch": 165,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13281": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13283": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13284": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13288": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13290": {
      "op": "SHL"
    },
    "13291": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13292": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13293": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13295": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "ADD",
      "path": "23"
    },
    "13296": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13299": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13300": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x465E"
    },
    "13303": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25812,
        25878
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13304": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25812,
        25878
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13305": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25917,
        25918
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 105,
      "value": "0x0"
    },
    "13307": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25898
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13308": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25911
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "13311": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25911
      ],
      "op": "ADD",
      "path": "23"
    },
    "13312": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25911
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13313": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25912,
        25913
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13314": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13315": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13316": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13317": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "LT",
      "path": "23"
    },
    "13318": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3411"
    },
    "13321": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13322": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3411"
    },
    "13325": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "13328": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25896,
        25914
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13329": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13330": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13332": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "MUL",
      "path": "23"
    },
    "13333": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13335": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "ADD",
      "path": "23"
    },
    "13336": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "ADD",
      "path": "23"
    },
    "13337": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25914
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13338": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25918
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "13340": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25918
      ],
      "op": "AND",
      "path": "23"
    },
    "13341": {
      "branch": 166,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25896,
        25918
      ],
      "op": "GT",
      "path": "23"
    },
    "13342": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3439"
    },
    "13345": {
      "branch": 166,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13346": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13348": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13355": {
      "op": "SHL"
    },
    "13356": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13357": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13358": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13360": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "ADD",
      "path": "23"
    },
    "13361": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13364": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13365": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x45F0"
    },
    "13368": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25888,
        25946
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13369": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25888,
        25946
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13370": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25999,
        26006
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 106
    },
    "13371": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25999,
        26022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13373": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25999,
        26022
      ],
      "op": "ADD",
      "path": "23"
    },
    "13374": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25999,
        26022
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13375": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        26022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "13377": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        26022
      ],
      "op": "AND",
      "path": "23"
    },
    "13378": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25979
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13379": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25992
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x140"
    },
    "13382": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25992
      ],
      "op": "ADD",
      "path": "23"
    },
    "13383": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25992
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13384": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25993,
        25994
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13385": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13386": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13387": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13388": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "LT",
      "path": "23"
    },
    "13389": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3458"
    },
    "13392": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13393": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3458"
    },
    "13396": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4943"
    },
    "13399": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25977,
        25995
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13400": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13401": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13403": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "MUL",
      "path": "23"
    },
    "13404": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13406": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "ADD",
      "path": "23"
    },
    "13407": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "ADD",
      "path": "23"
    },
    "13408": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        25995
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13409": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        26022
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "13411": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        26022
      ],
      "op": "AND",
      "path": "23"
    },
    "13412": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        26022
      ],
      "op": "GT",
      "path": "23"
    },
    "13413": {
      "branch": 167,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25977,
        26022
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "13414": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x708"
    },
    "13417": {
      "branch": 167,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13418": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13420": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13421": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13425": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13427": {
      "op": "SHL"
    },
    "13428": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13429": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13432": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13434": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13435": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "ADD",
      "path": "23"
    },
    "13436": {
      "op": "MSTORE"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "13439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13441": {
      "op": "DUP3"
    },
    "13442": {
      "op": "ADD"
    },
    "13443": {
      "op": "MSTORE"
    },
    "13444": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C"
    },
    "13477": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13479": {
      "op": "DUP3"
    },
    "13480": {
      "op": "ADD"
    },
    "13481": {
      "op": "MSTORE"
    },
    "13482": {
      "op": "PUSH8",
      "value": "0xDEEECAC840DAC2F"
    },
    "13491": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "13493": {
      "op": "SHL"
    },
    "13494": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13496": {
      "op": "DUP3"
    },
    "13497": {
      "op": "ADD"
    },
    "13498": {
      "op": "MSTORE"
    },
    "13499": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13501": {
      "op": "ADD"
    },
    "13502": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25956,
        26088
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13505": {
      "op": "JUMP"
    },
    "13506": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22679,
        23260
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13507": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22775,
        22782
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13509": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22798,
        22835
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 107,
      "value": "0x34CE"
    },
    "13512": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22822,
        22827
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13513": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22829,
        22834
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13514": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22798,
        22821
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37FA"
    },
    "13517": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22798,
        22835
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13518": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22798,
        22835
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13519": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22860,
        22881
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF0"
    },
    "13521": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22860,
        22881
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13522": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22860,
        22881
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13523": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22860,
        22881
      ],
      "op": "SHR",
      "path": "23"
    },
    "13524": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22908,
        22935
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "13527": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22908,
        22935
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "13529": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22908,
        22935
      ],
      "op": "DUP6",
      "path": "23"
    },
    "13530": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22908,
        22935
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13531": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22908,
        22935
      ],
      "op": "SHR",
      "path": "23"
    },
    "13532": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22908,
        22935
      ],
      "op": "AND",
      "path": "23"
    },
    "13533": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22845,
        22857
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13535": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22968,
        22981
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x34EA"
    },
    "13538": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22976,
        22981
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "13541": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22968,
        22973
      ],
      "op": "DUP7",
      "path": "23"
    },
    "13542": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22968,
        22981
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x476A"
    },
    "13545": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22968,
        22981
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13546": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22968,
        22981
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13547": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22945,
        22981
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13548": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22945,
        22981
      ],
      "op": "POP",
      "path": "23"
    },
    "13549": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23003,
        23007
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x270F"
    },
    "13552": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22995,
        23000
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13553": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22995,
        23007
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "13556": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22995,
        23007
      ],
      "op": "AND",
      "path": "23"
    },
    "13557": {
      "branch": 168,
      "fn": "Registry.unpackPrice",
      "offset": [
        22995,
        23007
      ],
      "op": "GT",
      "path": "23"
    },
    "13558": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22991,
        23046
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "13559": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22991,
        23046
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3500"
    },
    "13562": {
      "branch": 168,
      "fn": "Registry.unpackPrice",
      "offset": [
        22991,
        23046
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13563": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23031,
        23035
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 108,
      "value": "0x270F"
    },
    "13566": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23023,
        23035
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "13567": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23023,
        23035
      ],
      "op": "POP",
      "path": "23"
    },
    "13568": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22991,
        23046
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13569": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23069,
        23073
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x270F"
    },
    "13572": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23059,
        23066
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13573": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23059,
        23073
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "13576": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23059,
        23073
      ],
      "op": "AND",
      "path": "23"
    },
    "13577": {
      "branch": 169,
      "fn": "Registry.unpackPrice",
      "offset": [
        23059,
        23073
      ],
      "op": "GT",
      "path": "23"
    },
    "13578": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23055,
        23114
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "13579": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23055,
        23114
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3514"
    },
    "13582": {
      "branch": 169,
      "fn": "Registry.unpackPrice",
      "offset": [
        23055,
        23114
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13583": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23099,
        23103
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 109,
      "value": "0x270F"
    },
    "13586": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23089,
        23103
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "13587": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23089,
        23103
      ],
      "op": "POP",
      "path": "23"
    },
    "13588": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23055,
        23114
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13589": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23123,
        23132
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13591": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23135,
        23148
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3524"
    },
    "13594": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23143,
        23148
      ],
      "op": "DUP7",
      "path": "23"
    },
    "13595": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23135,
        23148
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "13598": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23135,
        23148
      ],
      "op": "DUP7",
      "path": "23"
    },
    "13599": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23135,
        23148
      ],
      "op": "AND",
      "path": "23"
    },
    "13600": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23135,
        23148
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "13603": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23135,
        23148
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13604": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23135,
        23148
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13605": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23123,
        23148
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13606": {
      "op": "POP"
    },
    "13607": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23158,
        23167
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13609": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23170,
        23192
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3536"
    },
    "13612": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23180,
        23192
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13613": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23170,
        23192
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "13616": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23170,
        23192
      ],
      "op": "DUP7",
      "path": "23"
    },
    "13617": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23170,
        23192
      ],
      "op": "AND",
      "path": "23"
    },
    "13618": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23170,
        23192
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "13621": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23170,
        23192
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13622": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23170,
        23192
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13623": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23158,
        23192
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13624": {
      "op": "POP"
    },
    "13625": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23202,
        23219
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13627": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23222,
        23227
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3544"
    },
    "13630": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23158,
        23192
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13631": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23222,
        23223
      ],
      "op": "DUP5",
      "path": "23"
    },
    "13632": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23222,
        23227
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4752"
    },
    "13635": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23222,
        23227
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13636": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23222,
        23227
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13637": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23202,
        23227
      ],
      "op": "SWAP10",
      "path": "23"
    },
    "13638": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22679,
        23260
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "13639": {
      "op": "POP"
    },
    "13640": {
      "op": "POP"
    },
    "13641": {
      "op": "POP"
    },
    "13642": {
      "op": "POP"
    },
    "13643": {
      "op": "POP"
    },
    "13644": {
      "op": "POP"
    },
    "13645": {
      "op": "POP"
    },
    "13646": {
      "op": "POP"
    },
    "13647": {
      "op": "POP"
    },
    "13648": {
      "fn": "Registry.unpackPrice",
      "jump": "o",
      "offset": [
        22679,
        23260
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13649": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "13650": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 110,
      "value": "0x40"
    },
    "13652": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "13653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13659": {
      "op": "SHL"
    },
    "13660": {
      "op": "SUB"
    },
    "13661": {
      "op": "DUP1"
    },
    "13662": {
      "op": "DUP6"
    },
    "13663": {
      "op": "AND"
    },
    "13664": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "13666": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "10"
    },
    "13667": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "10"
    },
    "13668": {
      "op": "MSTORE"
    },
    "13669": {
      "op": "DUP4"
    },
    "13670": {
      "op": "AND"
    },
    "13671": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13673": {
      "op": "DUP3"
    },
    "13674": {
      "op": "ADD"
    },
    "13675": {
      "op": "MSTORE"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13678": {
      "op": "DUP2"
    },
    "13679": {
      "op": "ADD"
    },
    "13680": {
      "op": "DUP3"
    },
    "13681": {
      "op": "SWAP1"
    },
    "13682": {
      "op": "MSTORE"
    },
    "13683": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x708"
    },
    "13686": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13687": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "10"
    },
    "13688": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13689": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "13694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13696": {
      "op": "SHL"
    },
    "13697": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13698": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13700": {
      "op": "ADD"
    },
    "13701": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "13702": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "13704": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "10"
    },
    "13705": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13708": {
      "op": "NOT"
    },
    "13709": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "10"
    },
    "13710": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP5",
      "path": "10"
    },
    "13711": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SUB",
      "path": "10"
    },
    "13712": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "10"
    },
    "13713": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "10"
    },
    "13714": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "13715": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "13716": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13717": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "13718": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "13720": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "10"
    },
    "13721": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "10"
    },
    "13722": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "10"
    },
    "13723": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13728": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13730": {
      "op": "SHL"
    },
    "13731": {
      "op": "SUB"
    },
    "13732": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "10"
    },
    "13733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13739": {
      "op": "SHL"
    },
    "13740": {
      "op": "SUB"
    },
    "13741": {
      "op": "NOT"
    },
    "13742": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13743": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "13744": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "10"
    },
    "13745": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "13746": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13747": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "13748": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "OR",
      "path": "10"
    },
    "13749": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "13750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "13751": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "13752": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1002
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x388B"
    },
    "13755": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        983,
        1079
      ],
      "op": "JUMP",
      "path": "10"
    },
    "13756": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23780,
        23903
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13763": {
      "op": "SHL"
    },
    "13764": {
      "op": "SUB"
    },
    "13765": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23854,
        23872
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 111
    },
    "13766": {
      "branch": 170,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23854,
        23872
      ],
      "op": "AND",
      "path": "23"
    },
    "13767": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "13770": {
      "branch": 170,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13771": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13773": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13774": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13778": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13780": {
      "op": "SHL"
    },
    "13781": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13782": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13785": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13787": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13788": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "ADD",
      "path": "23"
    },
    "13789": {
      "op": "MSTORE"
    },
    "13790": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "13792": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13794": {
      "op": "DUP3"
    },
    "13795": {
      "op": "ADD"
    },
    "13796": {
      "op": "MSTORE"
    },
    "13797": {
      "op": "PUSH19",
      "value": "0x52654E46543A3A7A65726F2061646472657373"
    },
    "13817": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "13819": {
      "op": "SHL"
    },
    "13820": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13822": {
      "op": "DUP3"
    },
    "13823": {
      "op": "ADD"
    },
    "13824": {
      "op": "MSTORE"
    },
    "13825": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13827": {
      "op": "ADD"
    },
    "13828": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23846,
        23896
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13831": {
      "op": "JUMP"
    },
    "13832": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27238,
        27536
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13833": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27351,
        27355
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13835": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27389,
        27396
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 112
    },
    "13836": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27389,
        27405
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13838": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27389,
        27405
      ],
      "op": "ADD",
      "path": "23"
    },
    "13839": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27389,
        27405
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13840": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27379,
        27405
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "13845": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27379,
        27405
      ],
      "op": "AND",
      "path": "23"
    },
    "13846": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27379,
        27386
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13847": {
      "branch": 171,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27379,
        27405
      ],
      "op": "GT",
      "path": "23"
    },
    "13848": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3663"
    },
    "13851": {
      "branch": 171,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "13852": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13854": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13855": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13861": {
      "op": "SHL"
    },
    "13862": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "DUP2",
      "path": "23"
    },
    "13863": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "13864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13866": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "13868": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13869": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "ADD",
      "path": "23"
    },
    "13870": {
      "op": "MSTORE"
    },
    "13871": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13873": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13875": {
      "op": "DUP3"
    },
    "13876": {
      "op": "ADD"
    },
    "13877": {
      "op": "MSTORE"
    },
    "13878": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000"
    },
    "13911": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13913": {
      "op": "DUP3"
    },
    "13914": {
      "op": "ADD"
    },
    "13915": {
      "op": "MSTORE"
    },
    "13916": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13918": {
      "op": "ADD"
    },
    "13919": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "13922": {
      "op": "JUMP"
    },
    "13923": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27371,
        27434
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13924": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0x15180"
    },
    "13928": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27499
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 113
    },
    "13929": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27512
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "13931": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27512
      ],
      "op": "ADD",
      "path": "23"
    },
    "13932": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27512
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13933": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "13935": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "AND",
      "path": "23"
    },
    "13936": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3679"
    },
    "13939": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "13940": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13941": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "13944": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27492,
        27529
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13945": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27492,
        27529
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13946": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27473,
        27489
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "13948": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27473,
        27489
      ],
      "op": "DUP5",
      "path": "23"
    },
    "13949": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27473,
        27489
      ],
      "op": "ADD",
      "path": "23"
    },
    "13950": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27473,
        27489
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "13951": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27489
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x368E"
    },
    "13954": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27489
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13955": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27489
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "13960": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27489
      ],
      "op": "AND",
      "path": "23"
    },
    "13961": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27470
      ],
      "op": "DUP5",
      "path": "23"
    },
    "13962": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27489
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48B9"
    },
    "13965": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27463,
        27489
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13966": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27489
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13967": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27529
      ],
      "op": "GT",
      "path": "23"
    },
    "13968": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27463,
        27529
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "13969": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27238,
        27536
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "13970": {
      "op": "POP"
    },
    "13971": {
      "op": "POP"
    },
    "13972": {
      "op": "POP"
    },
    "13973": {
      "fn": "Registry.isPastReturnDate",
      "jump": "o",
      "offset": [
        27238,
        27536
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13974": {
      "fn": "Registry.takeFee",
      "offset": [
        15301,
        15659
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13975": {
      "fn": "Registry.takeFee",
      "offset": [
        15405,
        15416
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13977": {
      "fn": "Registry.takeFee",
      "offset": [
        15448,
        15455
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 114,
      "value": "0x6"
    },
    "13979": {
      "fn": "Registry.takeFee",
      "offset": [
        15448,
        15455
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "13980": {
      "fn": "Registry.takeFee",
      "offset": [
        15438,
        15445
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13981": {
      "fn": "Registry.takeFee",
      "offset": [
        15438,
        15455
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36A6"
    },
    "13984": {
      "fn": "Registry.takeFee",
      "offset": [
        15438,
        15455
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "13985": {
      "fn": "Registry.takeFee",
      "offset": [
        15438,
        15455
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13986": {
      "fn": "Registry.takeFee",
      "offset": [
        15438,
        15455
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4877"
    },
    "13989": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15438,
        15455
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13990": {
      "fn": "Registry.takeFee",
      "offset": [
        15438,
        15455
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13991": {
      "fn": "Registry.takeFee",
      "offset": [
        15432,
        15455
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13992": {
      "op": "POP"
    },
    "13993": {
      "fn": "Registry.takeFee",
      "offset": [
        15465,
        15477
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 115,
      "value": "0x36B4"
    },
    "13996": {
      "fn": "Registry.takeFee",
      "offset": [
        15472,
        15477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "13999": {
      "fn": "Registry.takeFee",
      "offset": [
        15432,
        15455
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14000": {
      "fn": "Registry.takeFee",
      "offset": [
        15465,
        15477
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x476A"
    },
    "14003": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15465,
        15477
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14004": {
      "fn": "Registry.takeFee",
      "offset": [
        15465,
        15477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14005": {
      "fn": "Registry.takeFee",
      "offset": [
        15465,
        15477
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14006": {
      "fn": "Registry.takeFee",
      "offset": [
        15465,
        15477
      ],
      "op": "POP",
      "path": "23"
    },
    "14007": {
      "fn": "Registry.takeFee",
      "offset": [
        15487,
        15507
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14009": {
      "fn": "Registry.takeFee",
      "offset": [
        15516,
        15528
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14010": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "14012": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14013": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "GT",
      "path": "23"
    },
    "14014": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14015": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36CA"
    },
    "14018": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14019": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x36CA"
    },
    "14022": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x492D"
    },
    "14025": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15510,
        15529
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14026": {
      "fn": "Registry.takeFee",
      "offset": [
        15510,
        15529
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14027": {
      "fn": "Registry.takeFee",
      "offset": [
        15539,
        15553
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14029": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15570
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14030": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15570
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "14031": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14033": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14034": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "14039": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14041": {
      "op": "SHL"
    },
    "14042": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14043": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14044": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14046": {
      "op": "DUP5"
    },
    "14047": {
      "op": "AND"
    },
    "14048": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14050": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14051": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ADD",
      "path": "23"
    },
    "14052": {
      "op": "MSTORE"
    },
    "14053": {
      "fn": "Registry.takeFee",
      "offset": [
        15487,
        15529
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "14054": {
      "fn": "Registry.takeFee",
      "offset": [
        15487,
        15529
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "14055": {
      "op": "POP"
    },
    "14056": {
      "fn": "Registry.takeFee",
      "offset": [
        15539,
        15553
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14057": {
      "fn": "Registry.takeFee",
      "offset": [
        15539,
        15553
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14064": {
      "op": "SHL"
    },
    "14065": {
      "op": "SUB"
    },
    "14066": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15570
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14067": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15570
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14068": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15570
      ],
      "op": "AND",
      "path": "23"
    },
    "14069": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15570
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14070": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15586
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC6EE427F"
    },
    "14075": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15586
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14078": {
      "op": "ADD"
    },
    "14079": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "14081": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14083": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14084": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14085": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP4",
      "path": "23"
    },
    "14086": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "SUB",
      "path": "23"
    },
    "14087": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14088": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP7",
      "path": "23"
    },
    "14089": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14090": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "14091": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14092": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14093": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14094": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3716"
    },
    "14097": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14098": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14100": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14101": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "REVERT",
      "path": "23"
    },
    "14102": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14103": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "POP",
      "path": "23"
    },
    "14104": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "GAS",
      "path": "23"
    },
    "14105": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "14106": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14107": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14108": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14109": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x372A"
    },
    "14112": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14113": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "14114": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14116": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14117": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "14118": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "14119": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14121": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "REVERT",
      "path": "23"
    },
    "14122": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14123": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "POP",
      "path": "23"
    },
    "14124": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "POP",
      "path": "23"
    },
    "14125": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "POP",
      "path": "23"
    },
    "14126": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "POP",
      "path": "23"
    },
    "14127": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14129": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14130": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "14131": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "14133": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "NOT",
      "path": "23"
    },
    "14134": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "14136": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14137": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ADD",
      "path": "23"
    },
    "14138": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "AND",
      "path": "23"
    },
    "14139": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14140": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ADD",
      "path": "23"
    },
    "14141": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14142": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14144": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14145": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "POP",
      "path": "23"
    },
    "14146": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14147": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "ADD",
      "path": "23"
    },
    "14148": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14149": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x374E"
    },
    "14152": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14153": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14154": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E5E"
    },
    "14157": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15562,
        15602
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14158": {
      "fn": "Registry.takeFee",
      "offset": [
        15562,
        15602
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14159": {
      "fn": "Registry.takeFee",
      "offset": [
        15635,
        15646
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 116,
      "value": "0x2"
    },
    "14161": {
      "fn": "Registry.takeFee",
      "offset": [
        15635,
        15646
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "14162": {
      "fn": "Registry.takeFee",
      "offset": [
        15539,
        15603
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14163": {
      "fn": "Registry.takeFee",
      "offset": [
        15539,
        15603
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14164": {
      "op": "POP"
    },
    "14165": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15652
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x376B"
    },
    "14168": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15652
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14175": {
      "op": "SHL"
    },
    "14176": {
      "op": "SUB"
    },
    "14177": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15634
      ],
      "op": "DUP1",
      "path": "23"
    },
    "14178": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15634
      ],
      "op": "DUP5",
      "path": "23"
    },
    "14179": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15634
      ],
      "op": "AND",
      "path": "23"
    },
    "14180": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15634
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14181": {
      "fn": "Registry.takeFee",
      "offset": [
        15635,
        15646
      ],
      "op": "AND",
      "path": "23"
    },
    "14182": {
      "fn": "Registry.takeFee",
      "offset": [
        15648,
        15651
      ],
      "op": "DUP6",
      "path": "23"
    },
    "14183": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15634
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3773"
    },
    "14186": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15613,
        15652
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14187": {
      "fn": "Registry.takeFee",
      "offset": [
        15613,
        15652
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14188": {
      "fn": "Registry.takeFee",
      "offset": [
        15422,
        15659
      ],
      "op": "POP",
      "path": "23"
    },
    "14189": {
      "fn": "Registry.takeFee",
      "offset": [
        15422,
        15659
      ],
      "op": "POP",
      "path": "23"
    },
    "14190": {
      "fn": "Registry.takeFee",
      "offset": [
        15301,
        15659
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "14191": {
      "fn": "Registry.takeFee",
      "offset": [
        15301,
        15659
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14192": {
      "fn": "Registry.takeFee",
      "offset": [
        15301,
        15659
      ],
      "op": "POP",
      "path": "23"
    },
    "14193": {
      "fn": "Registry.takeFee",
      "offset": [
        15301,
        15659
      ],
      "op": "POP",
      "path": "23"
    },
    "14194": {
      "fn": "Registry.takeFee",
      "jump": "o",
      "offset": [
        15301,
        15659
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14195": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "14196": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 117,
      "value": "0x40"
    },
    "14198": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "14199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14205": {
      "op": "SHL"
    },
    "14206": {
      "op": "SUB"
    },
    "14207": {
      "op": "DUP4"
    },
    "14208": {
      "op": "AND"
    },
    "14209": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "14211": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "10"
    },
    "14212": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "10"
    },
    "14213": {
      "op": "MSTORE"
    },
    "14214": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14216": {
      "op": "DUP2"
    },
    "14217": {
      "op": "ADD"
    },
    "14218": {
      "op": "DUP3"
    },
    "14219": {
      "op": "SWAP1"
    },
    "14220": {
      "op": "MSTORE"
    },
    "14221": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E71"
    },
    "14224": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14225": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "10"
    },
    "14226": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14227": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "14232": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14234": {
      "op": "SHL"
    },
    "14235": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14238": {
      "op": "ADD"
    },
    "14239": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3585"
    },
    "14242": {
      "op": "JUMP"
    },
    "14243": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23909,
        24035
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14250": {
      "op": "SHL"
    },
    "14251": {
      "op": "SUB"
    },
    "14252": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23980,
        23998
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 118
    },
    "14253": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23980,
        23998
      ],
      "op": "AND",
      "path": "23"
    },
    "14254": {
      "branch": 172,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23980,
        23998
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14255": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1575"
    },
    "14258": {
      "branch": 172,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14259": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14261": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14268": {
      "op": "SHL"
    },
    "14269": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14270": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14273": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14275": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14276": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "ADD",
      "path": "23"
    },
    "14277": {
      "op": "MSTORE"
    },
    "14278": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14282": {
      "op": "DUP3"
    },
    "14283": {
      "op": "ADD"
    },
    "14284": {
      "op": "MSTORE"
    },
    "14285": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000"
    },
    "14318": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14320": {
      "op": "DUP3"
    },
    "14321": {
      "op": "ADD"
    },
    "14322": {
      "op": "MSTORE"
    },
    "14323": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14325": {
      "op": "ADD"
    },
    "14326": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23972,
        24028
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "14329": {
      "op": "JUMP"
    },
    "14330": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26638,
        26837
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14331": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26731,
        26744
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 119,
      "value": "0xE0"
    },
    "14333": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26731,
        26744
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14334": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26731,
        26744
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14335": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26731,
        26744
      ],
      "op": "SHR",
      "path": "23"
    },
    "14336": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3842"
    },
    "14339": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14340": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14342": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14349": {
      "op": "SHL"
    },
    "14350": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14351": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14354": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14356": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14357": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "ADD",
      "path": "23"
    },
    "14358": {
      "op": "MSTORE"
    },
    "14359": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14363": {
      "op": "DUP3"
    },
    "14364": {
      "op": "ADD"
    },
    "14365": {
      "op": "MSTORE"
    },
    "14366": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207072696365"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14389": {
      "op": "SHL"
    },
    "14390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14392": {
      "op": "DUP3"
    },
    "14393": {
      "op": "ADD"
    },
    "14394": {
      "op": "MSTORE"
    },
    "14395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14397": {
      "op": "ADD"
    },
    "14398": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "14401": {
      "op": "JUMP"
    },
    "14402": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26723,
        26773
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14403": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26800,
        26805
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 120,
      "value": "0x2710"
    },
    "14406": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26791,
        26796
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14407": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26791,
        26805
      ],
      "op": "LT",
      "path": "23"
    },
    "14408": {
      "branch": 173,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26791,
        26805
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14409": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD14"
    },
    "14412": {
      "branch": 173,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14413": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14415": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14422": {
      "op": "SHL"
    },
    "14423": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14424": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14427": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14429": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14430": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "ADD",
      "path": "23"
    },
    "14431": {
      "op": "MSTORE"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14436": {
      "op": "DUP3"
    },
    "14437": {
      "op": "ADD"
    },
    "14438": {
      "op": "MSTORE"
    },
    "14439": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207363616C65"
    },
    "14460": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14462": {
      "op": "SHL"
    },
    "14463": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14465": {
      "op": "DUP3"
    },
    "14466": {
      "op": "ADD"
    },
    "14467": {
      "op": "MSTORE"
    },
    "14468": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14470": {
      "op": "ADD"
    },
    "14471": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26783,
        26830
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x429"
    },
    "14474": {
      "op": "JUMP"
    },
    "14475": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "14476": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14478": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38E0"
    },
    "14481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "10"
    },
    "14482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "14484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "14485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "10"
    },
    "14486": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "14488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "10"
    },
    "14489": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "14491": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "14492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "10"
    },
    "14493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "14495": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "10"
    },
    "14496": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "14497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "14499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "10"
    },
    "14500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "14533": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "10"
    },
    "14534": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "14535": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "10"
    },
    "14536": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "10"
    },
    "14537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14543": {
      "op": "SHL"
    },
    "14544": {
      "op": "SUB"
    },
    "14545": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "10"
    },
    "14546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x395D"
    },
    "14549": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14550": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "14551": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "14552": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14553": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "14558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "10"
    },
    "14559": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "10"
    },
    "14560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "14561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "10"
    },
    "14562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "14563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14564": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "14565": {
      "op": "POP"
    },
    "14566": {
      "branch": 177,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "14567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E71"
    },
    "14570": {
      "branch": 177,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "14571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 121
    },
    "14572": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "10"
    },
    "14573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "14575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "10"
    },
    "14576": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "14578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "10"
    },
    "14579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "10"
    },
    "14580": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14581": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38FE"
    },
    "14584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "14585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43DC"
    },
    "14589": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "10"
    },
    "14590": {
      "branch": 178,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "14591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E71"
    },
    "14594": {
      "branch": 178,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "14595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "14597": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "14598": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14602": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14604": {
      "op": "SHL"
    },
    "14605": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "10"
    },
    "14606": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "14607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14609": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "14611": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "10"
    },
    "14612": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "10"
    },
    "14613": {
      "op": "MSTORE"
    },
    "14614": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "14616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14618": {
      "op": "DUP3"
    },
    "14619": {
      "op": "ADD"
    },
    "14620": {
      "op": "MSTORE"
    },
    "14621": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "14654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14656": {
      "op": "DUP3"
    },
    "14657": {
      "op": "ADD"
    },
    "14658": {
      "op": "MSTORE"
    },
    "14659": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "14670": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "14672": {
      "op": "SHL"
    },
    "14673": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14675": {
      "op": "DUP3"
    },
    "14676": {
      "op": "ADD"
    },
    "14677": {
      "op": "MSTORE"
    },
    "14678": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14680": {
      "op": "ADD"
    },
    "14681": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x429"
    },
    "14684": {
      "op": "JUMP"
    },
    "14685": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14686": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "14688": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 122,
      "value": "0x396C"
    },
    "14691": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14692": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14693": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14695": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14696": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3976"
    },
    "14699": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14700": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14701": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14702": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "18"
    },
    "14703": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14704": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "14705": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14706": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "18"
    },
    "14707": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "18"
    },
    "14708": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "18"
    },
    "14709": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "14713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 123
    },
    "14714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "18"
    },
    "14715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "18"
    },
    "14716": {
      "branch": 174,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "14717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x39D7"
    },
    "14720": {
      "branch": 174,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14730": {
      "op": "SHL"
    },
    "14731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "18"
    },
    "14739": {
      "op": "MSTORE"
    },
    "14740": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14744": {
      "op": "DUP3"
    },
    "14745": {
      "op": "ADD"
    },
    "14746": {
      "op": "MSTORE"
    },
    "14747": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14782": {
      "op": "DUP3"
    },
    "14783": {
      "op": "ADD"
    },
    "14784": {
      "op": "MSTORE"
    },
    "14785": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "14792": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "14794": {
      "op": "SHL"
    },
    "14795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14797": {
      "op": "DUP3"
    },
    "14798": {
      "op": "ADD"
    },
    "14799": {
      "op": "MSTORE"
    },
    "14800": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14802": {
      "op": "ADD"
    },
    "14803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x429"
    },
    "14806": {
      "op": "JUMP"
    },
    "14807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14808": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14809": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "14810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 124,
      "value": "0x3A25"
    },
    "14813": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14814": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14816": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14823": {
      "op": "SHL"
    },
    "14824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14828": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "14830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14831": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "18"
    },
    "14832": {
      "op": "MSTORE"
    },
    "14833": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "14835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14837": {
      "op": "DUP3"
    },
    "14838": {
      "op": "ADD"
    },
    "14839": {
      "op": "MSTORE"
    },
    "14840": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "14873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14875": {
      "op": "DUP3"
    },
    "14876": {
      "op": "ADD"
    },
    "14877": {
      "op": "MSTORE"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14880": {
      "op": "ADD"
    },
    "14881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x429"
    },
    "14884": {
      "op": "JUMP"
    },
    "14885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14896": {
      "op": "SHL"
    },
    "14897": {
      "op": "SUB"
    },
    "14898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "18"
    },
    "14899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A41"
    },
    "14907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "14909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x44AF"
    },
    "14912": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "18"
    },
    "14921": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "18"
    },
    "14922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "18"
    },
    "14924": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "18"
    },
    "14925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "18"
    },
    "14926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "18"
    },
    "14927": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "14928": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "18"
    },
    "14933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "18"
    },
    "14936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "18"
    },
    "14937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A7E"
    },
    "14940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "14941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "14944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "14948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "18"
    },
    "14949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "14951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "18"
    },
    "14953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "18"
    },
    "14954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "18"
    },
    "14956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "14958": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14960": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "14962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "14963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "14967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "18"
    },
    "14968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "18"
    },
    "14969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "14970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A83"
    },
    "14973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "14977": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14981": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14982": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "14984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "18"
    },
    "14985": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 125,
      "value": "0x3A93"
    },
    "14988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14989": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "18"
    },
    "14990": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "18"
    },
    "14991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A9E"
    },
    "14994": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "18"
    },
    "14995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "14996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "14997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "14998": {
      "op": "POP"
    },
    "14999": {
      "op": "POP"
    },
    "15000": {
      "op": "POP"
    },
    "15001": {
      "op": "POP"
    },
    "15002": {
      "op": "POP"
    },
    "15003": {
      "op": "POP"
    },
    "15004": {
      "op": "POP"
    },
    "15005": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15006": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15007": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "15009": {
      "branch": 175,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15010": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15011": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AAD"
    },
    "15014": {
      "branch": 175,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15015": {
      "op": "POP"
    },
    "15016": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 126
    },
    "15017": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x396F"
    },
    "15020": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15021": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15022": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15023": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15024": {
      "branch": 176,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "15025": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3ABD"
    },
    "15028": {
      "branch": 176,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15029": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15030": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15031": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15032": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15033": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "15035": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "18"
    },
    "15036": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15037": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15038": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 127
    },
    "15039": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "15041": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "15042": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15046": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15048": {
      "op": "SHL"
    },
    "15049": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15050": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "15051": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "15053": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "18"
    },
    "15054": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x429"
    },
    "15057": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15058": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15059": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4586"
    },
    "15062": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15063": {
      "op": "JUMPDEST"
    },
    "15064": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15066": {
      "op": "MLOAD"
    },
    "15067": {
      "op": "DUP1"
    },
    "15068": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "15071": {
      "op": "ADD"
    },
    "15072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15074": {
      "op": "MSTORE"
    },
    "15075": {
      "op": "DUP1"
    },
    "15076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15078": {
      "op": "DUP2"
    },
    "15079": {
      "op": "MSTORE"
    },
    "15080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15082": {
      "op": "ADD"
    },
    "15083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15085": {
      "op": "DUP2"
    },
    "15086": {
      "op": "MSTORE"
    },
    "15087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15089": {
      "op": "ADD"
    },
    "15090": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15092": {
      "op": "DUP2"
    },
    "15093": {
      "op": "MSTORE"
    },
    "15094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15096": {
      "op": "ADD"
    },
    "15097": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15099": {
      "op": "DUP2"
    },
    "15100": {
      "op": "MSTORE"
    },
    "15101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15103": {
      "op": "ADD"
    },
    "15104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15106": {
      "op": "DUP2"
    },
    "15107": {
      "op": "MSTORE"
    },
    "15108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15110": {
      "op": "ADD"
    },
    "15111": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15113": {
      "op": "DUP2"
    },
    "15114": {
      "op": "MSTORE"
    },
    "15115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15117": {
      "op": "ADD"
    },
    "15118": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15120": {
      "op": "DUP2"
    },
    "15121": {
      "op": "MSTORE"
    },
    "15122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15124": {
      "op": "ADD"
    },
    "15125": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15127": {
      "op": "DUP2"
    },
    "15128": {
      "op": "MSTORE"
    },
    "15129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15131": {
      "op": "ADD"
    },
    "15132": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15134": {
      "op": "DUP2"
    },
    "15135": {
      "op": "MSTORE"
    },
    "15136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15138": {
      "op": "ADD"
    },
    "15139": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15141": {
      "op": "DUP2"
    },
    "15142": {
      "op": "MSTORE"
    },
    "15143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15145": {
      "op": "ADD"
    },
    "15146": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15148": {
      "op": "DUP2"
    },
    "15149": {
      "op": "MSTORE"
    },
    "15150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15152": {
      "op": "ADD"
    },
    "15153": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15155": {
      "op": "DUP2"
    },
    "15156": {
      "op": "MSTORE"
    },
    "15157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15159": {
      "op": "ADD"
    },
    "15160": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15162": {
      "op": "DUP2"
    },
    "15163": {
      "op": "MSTORE"
    },
    "15164": {
      "op": "POP"
    },
    "15165": {
      "op": "SWAP1"
    },
    "15166": {
      "jump": "o",
      "op": "JUMP"
    },
    "15167": {
      "op": "JUMPDEST"
    },
    "15168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15170": {
      "op": "DUP3"
    },
    "15171": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15173": {
      "op": "DUP4"
    },
    "15174": {
      "op": "ADD"
    },
    "15175": {
      "op": "SLT"
    },
    "15176": {
      "op": "PUSH2",
      "value": "0x3B50"
    },
    "15179": {
      "op": "JUMPI"
    },
    "15180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15182": {
      "op": "DUP1"
    },
    "15183": {
      "op": "REVERT"
    },
    "15184": {
      "op": "JUMPDEST"
    },
    "15185": {
      "op": "DUP2"
    },
    "15186": {
      "op": "CALLDATALOAD"
    },
    "15187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15189": {
      "op": "PUSH2",
      "value": "0x3B65"
    },
    "15192": {
      "op": "PUSH2",
      "value": "0x3B60"
    },
    "15195": {
      "op": "DUP4"
    },
    "15196": {
      "op": "PUSH2",
      "value": "0x4709"
    },
    "15199": {
      "jump": "i",
      "op": "JUMP"
    },
    "15200": {
      "op": "JUMPDEST"
    },
    "15201": {
      "op": "PUSH2",
      "value": "0x46D9"
    },
    "15204": {
      "jump": "i",
      "op": "JUMP"
    },
    "15205": {
      "op": "JUMPDEST"
    },
    "15206": {
      "op": "DUP1"
    },
    "15207": {
      "op": "DUP4"
    },
    "15208": {
      "op": "DUP3"
    },
    "15209": {
      "op": "MSTORE"
    },
    "15210": {
      "op": "DUP3"
    },
    "15211": {
      "op": "DUP3"
    },
    "15212": {
      "op": "ADD"
    },
    "15213": {
      "op": "SWAP2"
    },
    "15214": {
      "op": "POP"
    },
    "15215": {
      "op": "DUP3"
    },
    "15216": {
      "op": "DUP7"
    },
    "15217": {
      "op": "ADD"
    },
    "15218": {
      "op": "DUP8"
    },
    "15219": {
      "op": "DUP5"
    },
    "15220": {
      "op": "DUP7"
    },
    "15221": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15223": {
      "op": "SHL"
    },
    "15224": {
      "op": "DUP10"
    },
    "15225": {
      "op": "ADD"
    },
    "15226": {
      "op": "ADD"
    },
    "15227": {
      "op": "GT"
    },
    "15228": {
      "op": "ISZERO"
    },
    "15229": {
      "op": "PUSH2",
      "value": "0x3B85"
    },
    "15232": {
      "op": "JUMPI"
    },
    "15233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15235": {
      "op": "DUP1"
    },
    "15236": {
      "op": "REVERT"
    },
    "15237": {
      "op": "JUMPDEST"
    },
    "15238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15240": {
      "op": "JUMPDEST"
    },
    "15241": {
      "op": "DUP6"
    },
    "15242": {
      "op": "DUP2"
    },
    "15243": {
      "op": "LT"
    },
    "15244": {
      "op": "ISZERO"
    },
    "15245": {
      "op": "PUSH2",
      "value": "0x3BAD"
    },
    "15248": {
      "op": "JUMPI"
    },
    "15249": {
      "op": "DUP2"
    },
    "15250": {
      "op": "CALLDATALOAD"
    },
    "15251": {
      "op": "PUSH2",
      "value": "0x3B9B"
    },
    "15254": {
      "op": "DUP2"
    },
    "15255": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "15258": {
      "jump": "i",
      "op": "JUMP"
    },
    "15259": {
      "op": "JUMPDEST"
    },
    "15260": {
      "op": "DUP5"
    },
    "15261": {
      "op": "MSTORE"
    },
    "15262": {
      "op": "SWAP3"
    },
    "15263": {
      "op": "DUP5"
    },
    "15264": {
      "op": "ADD"
    },
    "15265": {
      "op": "SWAP3"
    },
    "15266": {
      "op": "SWAP1"
    },
    "15267": {
      "op": "DUP5"
    },
    "15268": {
      "op": "ADD"
    },
    "15269": {
      "op": "SWAP1"
    },
    "15270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15272": {
      "op": "ADD"
    },
    "15273": {
      "op": "PUSH2",
      "value": "0x3B88"
    },
    "15276": {
      "op": "JUMP"
    },
    "15277": {
      "op": "JUMPDEST"
    },
    "15278": {
      "op": "POP"
    },
    "15279": {
      "op": "SWAP1"
    },
    "15280": {
      "op": "SWAP8"
    },
    "15281": {
      "op": "SWAP7"
    },
    "15282": {
      "op": "POP"
    },
    "15283": {
      "op": "POP"
    },
    "15284": {
      "op": "POP"
    },
    "15285": {
      "op": "POP"
    },
    "15286": {
      "op": "POP"
    },
    "15287": {
      "op": "POP"
    },
    "15288": {
      "op": "POP"
    },
    "15289": {
      "jump": "o",
      "op": "JUMP"
    },
    "15290": {
      "op": "JUMPDEST"
    },
    "15291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15293": {
      "op": "DUP3"
    },
    "15294": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15296": {
      "op": "DUP4"
    },
    "15297": {
      "op": "ADD"
    },
    "15298": {
      "op": "SLT"
    },
    "15299": {
      "op": "PUSH2",
      "value": "0x3BCB"
    },
    "15302": {
      "op": "JUMPI"
    },
    "15303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15305": {
      "op": "DUP1"
    },
    "15306": {
      "op": "REVERT"
    },
    "15307": {
      "op": "JUMPDEST"
    },
    "15308": {
      "op": "DUP2"
    },
    "15309": {
      "op": "CALLDATALOAD"
    },
    "15310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15312": {
      "op": "PUSH2",
      "value": "0x3BDB"
    },
    "15315": {
      "op": "PUSH2",
      "value": "0x3B60"
    },
    "15318": {
      "op": "DUP4"
    },
    "15319": {
      "op": "PUSH2",
      "value": "0x4709"
    },
    "15322": {
      "jump": "i",
      "op": "JUMP"
    },
    "15323": {
      "op": "JUMPDEST"
    },
    "15324": {
      "op": "DUP1"
    },
    "15325": {
      "op": "DUP4"
    },
    "15326": {
      "op": "DUP3"
    },
    "15327": {
      "op": "MSTORE"
    },
    "15328": {
      "op": "DUP3"
    },
    "15329": {
      "op": "DUP3"
    },
    "15330": {
      "op": "ADD"
    },
    "15331": {
      "op": "SWAP2"
    },
    "15332": {
      "op": "POP"
    },
    "15333": {
      "op": "DUP3"
    },
    "15334": {
      "op": "DUP7"
    },
    "15335": {
      "op": "ADD"
    },
    "15336": {
      "op": "DUP8"
    },
    "15337": {
      "op": "DUP5"
    },
    "15338": {
      "op": "DUP7"
    },
    "15339": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15341": {
      "op": "SHL"
    },
    "15342": {
      "op": "DUP10"
    },
    "15343": {
      "op": "ADD"
    },
    "15344": {
      "op": "ADD"
    },
    "15345": {
      "op": "GT"
    },
    "15346": {
      "op": "ISZERO"
    },
    "15347": {
      "op": "PUSH2",
      "value": "0x3BFB"
    },
    "15350": {
      "op": "JUMPI"
    },
    "15351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15353": {
      "op": "DUP1"
    },
    "15354": {
      "op": "REVERT"
    },
    "15355": {
      "op": "JUMPDEST"
    },
    "15356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15358": {
      "op": "JUMPDEST"
    },
    "15359": {
      "op": "DUP6"
    },
    "15360": {
      "op": "DUP2"
    },
    "15361": {
      "op": "LT"
    },
    "15362": {
      "op": "ISZERO"
    },
    "15363": {
      "op": "PUSH2",
      "value": "0x3BAD"
    },
    "15366": {
      "op": "JUMPI"
    },
    "15367": {
      "op": "PUSH2",
      "value": "0x3C0F"
    },
    "15370": {
      "op": "DUP3"
    },
    "15371": {
      "op": "PUSH2",
      "value": "0x3DD2"
    },
    "15374": {
      "jump": "i",
      "op": "JUMP"
    },
    "15375": {
      "op": "JUMPDEST"
    },
    "15376": {
      "op": "DUP5"
    },
    "15377": {
      "op": "MSTORE"
    },
    "15378": {
      "op": "SWAP3"
    },
    "15379": {
      "op": "DUP5"
    },
    "15380": {
      "op": "ADD"
    },
    "15381": {
      "op": "SWAP3"
    },
    "15382": {
      "op": "SWAP1"
    },
    "15383": {
      "op": "DUP5"
    },
    "15384": {
      "op": "ADD"
    },
    "15385": {
      "op": "SWAP1"
    },
    "15386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15388": {
      "op": "ADD"
    },
    "15389": {
      "op": "PUSH2",
      "value": "0x3BFE"
    },
    "15392": {
      "op": "JUMP"
    },
    "15393": {
      "op": "JUMPDEST"
    },
    "15394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15396": {
      "op": "DUP3"
    },
    "15397": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15399": {
      "op": "DUP4"
    },
    "15400": {
      "op": "ADD"
    },
    "15401": {
      "op": "SLT"
    },
    "15402": {
      "op": "PUSH2",
      "value": "0x3C32"
    },
    "15405": {
      "op": "JUMPI"
    },
    "15406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15408": {
      "op": "DUP1"
    },
    "15409": {
      "op": "REVERT"
    },
    "15410": {
      "op": "JUMPDEST"
    },
    "15411": {
      "op": "DUP2"
    },
    "15412": {
      "op": "CALLDATALOAD"
    },
    "15413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15415": {
      "op": "PUSH2",
      "value": "0x3C42"
    },
    "15418": {
      "op": "PUSH2",
      "value": "0x3B60"
    },
    "15421": {
      "op": "DUP4"
    },
    "15422": {
      "op": "PUSH2",
      "value": "0x4709"
    },
    "15425": {
      "jump": "i",
      "op": "JUMP"
    },
    "15426": {
      "op": "JUMPDEST"
    },
    "15427": {
      "op": "DUP1"
    },
    "15428": {
      "op": "DUP4"
    },
    "15429": {
      "op": "DUP3"
    },
    "15430": {
      "op": "MSTORE"
    },
    "15431": {
      "op": "DUP3"
    },
    "15432": {
      "op": "DUP3"
    },
    "15433": {
      "op": "ADD"
    },
    "15434": {
      "op": "SWAP2"
    },
    "15435": {
      "op": "POP"
    },
    "15436": {
      "op": "DUP3"
    },
    "15437": {
      "op": "DUP7"
    },
    "15438": {
      "op": "ADD"
    },
    "15439": {
      "op": "DUP8"
    },
    "15440": {
      "op": "DUP5"
    },
    "15441": {
      "op": "DUP7"
    },
    "15442": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15444": {
      "op": "SHL"
    },
    "15445": {
      "op": "DUP10"
    },
    "15446": {
      "op": "ADD"
    },
    "15447": {
      "op": "ADD"
    },
    "15448": {
      "op": "GT"
    },
    "15449": {
      "op": "ISZERO"
    },
    "15450": {
      "op": "PUSH2",
      "value": "0x3C62"
    },
    "15453": {
      "op": "JUMPI"
    },
    "15454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15456": {
      "op": "DUP1"
    },
    "15457": {
      "op": "REVERT"
    },
    "15458": {
      "op": "JUMPDEST"
    },
    "15459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15461": {
      "op": "DUP1"
    },
    "15462": {
      "op": "JUMPDEST"
    },
    "15463": {
      "op": "DUP7"
    },
    "15464": {
      "op": "DUP2"
    },
    "15465": {
      "op": "LT"
    },
    "15466": {
      "op": "ISZERO"
    },
    "15467": {
      "op": "PUSH2",
      "value": "0x3C8E"
    },
    "15470": {
      "op": "JUMPI"
    },
    "15471": {
      "op": "DUP3"
    },
    "15472": {
      "op": "CALLDATALOAD"
    },
    "15473": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15475": {
      "op": "DUP2"
    },
    "15476": {
      "op": "LT"
    },
    "15477": {
      "op": "PUSH2",
      "value": "0x3C7C"
    },
    "15480": {
      "op": "JUMPI"
    },
    "15481": {
      "op": "DUP3"
    },
    "15482": {
      "op": "DUP4"
    },
    "15483": {
      "op": "REVERT"
    },
    "15484": {
      "op": "JUMPDEST"
    },
    "15485": {
      "op": "DUP6"
    },
    "15486": {
      "op": "MSTORE"
    },
    "15487": {
      "op": "SWAP4"
    },
    "15488": {
      "op": "DUP6"
    },
    "15489": {
      "op": "ADD"
    },
    "15490": {
      "op": "SWAP4"
    },
    "15491": {
      "op": "SWAP2"
    },
    "15492": {
      "op": "DUP6"
    },
    "15493": {
      "op": "ADD"
    },
    "15494": {
      "op": "SWAP2"
    },
    "15495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15497": {
      "op": "ADD"
    },
    "15498": {
      "op": "PUSH2",
      "value": "0x3C66"
    },
    "15501": {
      "op": "JUMP"
    },
    "15502": {
      "op": "JUMPDEST"
    },
    "15503": {
      "op": "POP"
    },
    "15504": {
      "op": "SWAP2"
    },
    "15505": {
      "op": "SWAP9"
    },
    "15506": {
      "op": "SWAP8"
    },
    "15507": {
      "op": "POP"
    },
    "15508": {
      "op": "POP"
    },
    "15509": {
      "op": "POP"
    },
    "15510": {
      "op": "POP"
    },
    "15511": {
      "op": "POP"
    },
    "15512": {
      "op": "POP"
    },
    "15513": {
      "op": "POP"
    },
    "15514": {
      "op": "POP"
    },
    "15515": {
      "jump": "o",
      "op": "JUMP"
    },
    "15516": {
      "op": "JUMPDEST"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15519": {
      "op": "DUP3"
    },
    "15520": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15522": {
      "op": "DUP4"
    },
    "15523": {
      "op": "ADD"
    },
    "15524": {
      "op": "SLT"
    },
    "15525": {
      "op": "PUSH2",
      "value": "0x3CAD"
    },
    "15528": {
      "op": "JUMPI"
    },
    "15529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15531": {
      "op": "DUP1"
    },
    "15532": {
      "op": "REVERT"
    },
    "15533": {
      "op": "JUMPDEST"
    },
    "15534": {
      "op": "DUP2"
    },
    "15535": {
      "op": "CALLDATALOAD"
    },
    "15536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15538": {
      "op": "PUSH2",
      "value": "0x3CBD"
    },
    "15541": {
      "op": "PUSH2",
      "value": "0x3B60"
    },
    "15544": {
      "op": "DUP4"
    },
    "15545": {
      "op": "PUSH2",
      "value": "0x4709"
    },
    "15548": {
      "jump": "i",
      "op": "JUMP"
    },
    "15549": {
      "op": "JUMPDEST"
    },
    "15550": {
      "op": "DUP1"
    },
    "15551": {
      "op": "DUP4"
    },
    "15552": {
      "op": "DUP3"
    },
    "15553": {
      "op": "MSTORE"
    },
    "15554": {
      "op": "DUP3"
    },
    "15555": {
      "op": "DUP3"
    },
    "15556": {
      "op": "ADD"
    },
    "15557": {
      "op": "SWAP2"
    },
    "15558": {
      "op": "POP"
    },
    "15559": {
      "op": "DUP3"
    },
    "15560": {
      "op": "DUP7"
    },
    "15561": {
      "op": "ADD"
    },
    "15562": {
      "op": "DUP8"
    },
    "15563": {
      "op": "DUP5"
    },
    "15564": {
      "op": "DUP7"
    },
    "15565": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15567": {
      "op": "SHL"
    },
    "15568": {
      "op": "DUP10"
    },
    "15569": {
      "op": "ADD"
    },
    "15570": {
      "op": "ADD"
    },
    "15571": {
      "op": "GT"
    },
    "15572": {
      "op": "ISZERO"
    },
    "15573": {
      "op": "PUSH2",
      "value": "0x3CDD"
    },
    "15576": {
      "op": "JUMPI"
    },
    "15577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15579": {
      "op": "DUP1"
    },
    "15580": {
      "op": "REVERT"
    },
    "15581": {
      "op": "JUMPDEST"
    },
    "15582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15584": {
      "op": "DUP1"
    },
    "15585": {
      "op": "JUMPDEST"
    },
    "15586": {
      "op": "DUP7"
    },
    "15587": {
      "op": "DUP2"
    },
    "15588": {
      "op": "LT"
    },
    "15589": {
      "op": "ISZERO"
    },
    "15590": {
      "op": "PUSH2",
      "value": "0x3C8E"
    },
    "15593": {
      "op": "JUMPI"
    },
    "15594": {
      "op": "DUP3"
    },
    "15595": {
      "op": "CALLDATALOAD"
    },
    "15596": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15598": {
      "op": "DUP2"
    },
    "15599": {
      "op": "LT"
    },
    "15600": {
      "op": "PUSH2",
      "value": "0x3CF7"
    },
    "15603": {
      "op": "JUMPI"
    },
    "15604": {
      "op": "DUP3"
    },
    "15605": {
      "op": "DUP4"
    },
    "15606": {
      "op": "REVERT"
    },
    "15607": {
      "op": "JUMPDEST"
    },
    "15608": {
      "op": "DUP6"
    },
    "15609": {
      "op": "MSTORE"
    },
    "15610": {
      "op": "SWAP4"
    },
    "15611": {
      "op": "DUP6"
    },
    "15612": {
      "op": "ADD"
    },
    "15613": {
      "op": "SWAP4"
    },
    "15614": {
      "op": "SWAP2"
    },
    "15615": {
      "op": "DUP6"
    },
    "15616": {
      "op": "ADD"
    },
    "15617": {
      "op": "SWAP2"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15620": {
      "op": "ADD"
    },
    "15621": {
      "op": "PUSH2",
      "value": "0x3CE1"
    },
    "15624": {
      "op": "JUMP"
    },
    "15625": {
      "op": "JUMPDEST"
    },
    "15626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15628": {
      "op": "DUP3"
    },
    "15629": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15631": {
      "op": "DUP4"
    },
    "15632": {
      "op": "ADD"
    },
    "15633": {
      "op": "SLT"
    },
    "15634": {
      "op": "PUSH2",
      "value": "0x3D1A"
    },
    "15637": {
      "op": "JUMPI"
    },
    "15638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15640": {
      "op": "DUP1"
    },
    "15641": {
      "op": "REVERT"
    },
    "15642": {
      "op": "JUMPDEST"
    },
    "15643": {
      "op": "DUP2"
    },
    "15644": {
      "op": "CALLDATALOAD"
    },
    "15645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15647": {
      "op": "PUSH2",
      "value": "0x3D2A"
    },
    "15650": {
      "op": "PUSH2",
      "value": "0x3B60"
    },
    "15653": {
      "op": "DUP4"
    },
    "15654": {
      "op": "PUSH2",
      "value": "0x4709"
    },
    "15657": {
      "jump": "i",
      "op": "JUMP"
    },
    "15658": {
      "op": "JUMPDEST"
    },
    "15659": {
      "op": "DUP1"
    },
    "15660": {
      "op": "DUP4"
    },
    "15661": {
      "op": "DUP3"
    },
    "15662": {
      "op": "MSTORE"
    },
    "15663": {
      "op": "DUP3"
    },
    "15664": {
      "op": "DUP3"
    },
    "15665": {
      "op": "ADD"
    },
    "15666": {
      "op": "SWAP2"
    },
    "15667": {
      "op": "POP"
    },
    "15668": {
      "op": "DUP3"
    },
    "15669": {
      "op": "DUP7"
    },
    "15670": {
      "op": "ADD"
    },
    "15671": {
      "op": "DUP8"
    },
    "15672": {
      "op": "DUP5"
    },
    "15673": {
      "op": "DUP7"
    },
    "15674": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15676": {
      "op": "SHL"
    },
    "15677": {
      "op": "DUP10"
    },
    "15678": {
      "op": "ADD"
    },
    "15679": {
      "op": "ADD"
    },
    "15680": {
      "op": "GT"
    },
    "15681": {
      "op": "ISZERO"
    },
    "15682": {
      "op": "PUSH2",
      "value": "0x3D4A"
    },
    "15685": {
      "op": "JUMPI"
    },
    "15686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15688": {
      "op": "DUP1"
    },
    "15689": {
      "op": "REVERT"
    },
    "15690": {
      "op": "JUMPDEST"
    },
    "15691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15693": {
      "op": "JUMPDEST"
    },
    "15694": {
      "op": "DUP6"
    },
    "15695": {
      "op": "DUP2"
    },
    "15696": {
      "op": "LT"
    },
    "15697": {
      "op": "ISZERO"
    },
    "15698": {
      "op": "PUSH2",
      "value": "0x3BAD"
    },
    "15701": {
      "op": "JUMPI"
    },
    "15702": {
      "op": "DUP2"
    },
    "15703": {
      "op": "CALLDATALOAD"
    },
    "15704": {
      "op": "DUP5"
    },
    "15705": {
      "op": "MSTORE"
    },
    "15706": {
      "op": "SWAP3"
    },
    "15707": {
      "op": "DUP5"
    },
    "15708": {
      "op": "ADD"
    },
    "15709": {
      "op": "SWAP3"
    },
    "15710": {
      "op": "SWAP1"
    },
    "15711": {
      "op": "DUP5"
    },
    "15712": {
      "op": "ADD"
    },
    "15713": {
      "op": "SWAP1"
    },
    "15714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15716": {
      "op": "ADD"
    },
    "15717": {
      "op": "PUSH2",
      "value": "0x3D4D"
    },
    "15720": {
      "op": "JUMP"
    },
    "15721": {
      "op": "JUMPDEST"
    },
    "15722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15724": {
      "op": "DUP3"
    },
    "15725": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15727": {
      "op": "DUP4"
    },
    "15728": {
      "op": "ADD"
    },
    "15729": {
      "op": "SLT"
    },
    "15730": {
      "op": "PUSH2",
      "value": "0x3D7A"
    },
    "15733": {
      "op": "JUMPI"
    },
    "15734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15736": {
      "op": "DUP1"
    },
    "15737": {
      "op": "REVERT"
    },
    "15738": {
      "op": "JUMPDEST"
    },
    "15739": {
      "op": "DUP2"
    },
    "15740": {
      "op": "CALLDATALOAD"
    },
    "15741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15743": {
      "op": "PUSH2",
      "value": "0x3D8A"
    },
    "15746": {
      "op": "PUSH2",
      "value": "0x3B60"
    },
    "15749": {
      "op": "DUP4"
    },
    "15750": {
      "op": "PUSH2",
      "value": "0x4709"
    },
    "15753": {
      "jump": "i",
      "op": "JUMP"
    },
    "15754": {
      "op": "JUMPDEST"
    },
    "15755": {
      "op": "DUP1"
    },
    "15756": {
      "op": "DUP4"
    },
    "15757": {
      "op": "DUP3"
    },
    "15758": {
      "op": "MSTORE"
    },
    "15759": {
      "op": "DUP3"
    },
    "15760": {
      "op": "DUP3"
    },
    "15761": {
      "op": "ADD"
    },
    "15762": {
      "op": "SWAP2"
    },
    "15763": {
      "op": "POP"
    },
    "15764": {
      "op": "DUP3"
    },
    "15765": {
      "op": "DUP7"
    },
    "15766": {
      "op": "ADD"
    },
    "15767": {
      "op": "DUP8"
    },
    "15768": {
      "op": "DUP5"
    },
    "15769": {
      "op": "DUP7"
    },
    "15770": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15772": {
      "op": "SHL"
    },
    "15773": {
      "op": "DUP10"
    },
    "15774": {
      "op": "ADD"
    },
    "15775": {
      "op": "ADD"
    },
    "15776": {
      "op": "GT"
    },
    "15777": {
      "op": "ISZERO"
    },
    "15778": {
      "op": "PUSH2",
      "value": "0x3DAA"
    },
    "15781": {
      "op": "JUMPI"
    },
    "15782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15784": {
      "op": "DUP1"
    },
    "15785": {
      "op": "REVERT"
    },
    "15786": {
      "op": "JUMPDEST"
    },
    "15787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15789": {
      "op": "JUMPDEST"
    },
    "15790": {
      "op": "DUP6"
    },
    "15791": {
      "op": "DUP2"
    },
    "15792": {
      "op": "LT"
    },
    "15793": {
      "op": "ISZERO"
    },
    "15794": {
      "op": "PUSH2",
      "value": "0x3BAD"
    },
    "15797": {
      "op": "JUMPI"
    },
    "15798": {
      "op": "DUP2"
    },
    "15799": {
      "op": "CALLDATALOAD"
    },
    "15800": {
      "op": "PUSH2",
      "value": "0x3DC0"
    },
    "15803": {
      "op": "DUP2"
    },
    "15804": {
      "op": "PUSH2",
      "value": "0x4992"
    },
    "15807": {
      "jump": "i",
      "op": "JUMP"
    },
    "15808": {
      "op": "JUMPDEST"
    },
    "15809": {
      "op": "DUP5"
    },
    "15810": {
      "op": "MSTORE"
    },
    "15811": {
      "op": "SWAP3"
    },
    "15812": {
      "op": "DUP5"
    },
    "15813": {
      "op": "ADD"
    },
    "15814": {
      "op": "SWAP3"
    },
    "15815": {
      "op": "SWAP1"
    },
    "15816": {
      "op": "DUP5"
    },
    "15817": {
      "op": "ADD"
    },
    "15818": {
      "op": "SWAP1"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15821": {
      "op": "ADD"
    },
    "15822": {
      "op": "PUSH2",
      "value": "0x3DAD"
    },
    "15825": {
      "op": "JUMP"
    },
    "15826": {
      "op": "JUMPDEST"
    },
    "15827": {
      "op": "DUP1"
    },
    "15828": {
      "op": "CALLDATALOAD"
    },
    "15829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15835": {
      "op": "SHL"
    },
    "15836": {
      "op": "SUB"
    },
    "15837": {
      "op": "NOT"
    },
    "15838": {
      "op": "DUP2"
    },
    "15839": {
      "op": "AND"
    },
    "15840": {
      "op": "DUP2"
    },
    "15841": {
      "op": "EQ"
    },
    "15842": {
      "op": "PUSH2",
      "value": "0x3DEA"
    },
    "15845": {
      "op": "JUMPI"
    },
    "15846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15848": {
      "op": "DUP1"
    },
    "15849": {
      "op": "REVERT"
    },
    "15850": {
      "op": "JUMPDEST"
    },
    "15851": {
      "op": "SWAP2"
    },
    "15852": {
      "op": "SWAP1"
    },
    "15853": {
      "op": "POP"
    },
    "15854": {
      "jump": "o",
      "op": "JUMP"
    },
    "15855": {
      "op": "JUMPDEST"
    },
    "15856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15858": {
      "op": "DUP3"
    },
    "15859": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15861": {
      "op": "DUP4"
    },
    "15862": {
      "op": "ADD"
    },
    "15863": {
      "op": "SLT"
    },
    "15864": {
      "op": "PUSH2",
      "value": "0x3E00"
    },
    "15867": {
      "op": "JUMPI"
    },
    "15868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15870": {
      "op": "DUP1"
    },
    "15871": {
      "op": "REVERT"
    },
    "15872": {
      "op": "JUMPDEST"
    },
    "15873": {
      "op": "DUP2"
    },
    "15874": {
      "op": "CALLDATALOAD"
    },
    "15875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15881": {
      "op": "SHL"
    },
    "15882": {
      "op": "SUB"
    },
    "15883": {
      "op": "DUP2"
    },
    "15884": {
      "op": "GT"
    },
    "15885": {
      "op": "ISZERO"
    },
    "15886": {
      "op": "PUSH2",
      "value": "0x3E19"
    },
    "15889": {
      "op": "JUMPI"
    },
    "15890": {
      "op": "PUSH2",
      "value": "0x3E19"
    },
    "15893": {
      "op": "PUSH2",
      "value": "0x4959"
    },
    "15896": {
      "jump": "i",
      "op": "JUMP"
    },
    "15897": {
      "op": "JUMPDEST"
    },
    "15898": {
      "op": "PUSH2",
      "value": "0x3E2C"
    },
    "15901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15903": {
      "op": "DUP3"
    },
    "15904": {
      "op": "ADD"
    },
    "15905": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15907": {
      "op": "NOT"
    },
    "15908": {
      "op": "AND"
    },
    "15909": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15911": {
      "op": "ADD"
    },
    "15912": {
      "op": "PUSH2",
      "value": "0x46D9"
    },
    "15915": {
      "jump": "i",
      "op": "JUMP"
    },
    "15916": {
      "op": "JUMPDEST"
    },
    "15917": {
      "op": "DUP2"
    },
    "15918": {
      "op": "DUP2"
    },
    "15919": {
      "op": "MSTORE"
    },
    "15920": {
      "op": "DUP5"
    },
    "15921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15923": {
      "op": "DUP4"
    },
    "15924": {
      "op": "DUP7"
    },
    "15925": {
      "op": "ADD"
    },
    "15926": {
      "op": "ADD"
    },
    "15927": {
      "op": "GT"
    },
    "15928": {
      "op": "ISZERO"
    },
    "15929": {
      "op": "PUSH2",
      "value": "0x3E41"
    },
    "15932": {
      "op": "JUMPI"
    },
    "15933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15935": {
      "op": "DUP1"
    },
    "15936": {
      "op": "REVERT"
    },
    "15937": {
      "op": "JUMPDEST"
    },
    "15938": {
      "op": "DUP2"
    },
    "15939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15941": {
      "op": "DUP6"
    },
    "15942": {
      "op": "ADD"
    },
    "15943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15945": {
      "op": "DUP4"
    },
    "15946": {
      "op": "ADD"
    },
    "15947": {
      "op": "CALLDATACOPY"
    },
    "15948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15950": {
      "op": "SWAP2"
    },
    "15951": {
      "op": "DUP2"
    },
    "15952": {
      "op": "ADD"
    },
    "15953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15955": {
      "op": "ADD"
    },
    "15956": {
      "op": "SWAP2"
    },
    "15957": {
      "op": "SWAP1"
    },
    "15958": {
      "op": "SWAP2"
    },
    "15959": {
      "op": "MSTORE"
    },
    "15960": {
      "op": "SWAP4"
    },
    "15961": {
      "op": "SWAP3"
    },
    "15962": {
      "op": "POP"
    },
    "15963": {
      "op": "POP"
    },
    "15964": {
      "op": "POP"
    },
    "15965": {
      "jump": "o",
      "op": "JUMP"
    },
    "15966": {
      "op": "JUMPDEST"
    },
    "15967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15971": {
      "op": "DUP3"
    },
    "15972": {
      "op": "DUP5"
    },
    "15973": {
      "op": "SUB"
    },
    "15974": {
      "op": "SLT"
    },
    "15975": {
      "op": "ISZERO"
    },
    "15976": {
      "op": "PUSH2",
      "value": "0x3E70"
    },
    "15979": {
      "op": "JUMPI"
    },
    "15980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15982": {
      "op": "DUP1"
    },
    "15983": {
      "op": "REVERT"
    },
    "15984": {
      "op": "JUMPDEST"
    },
    "15985": {
      "op": "DUP2"
    },
    "15986": {
      "op": "MLOAD"
    },
    "15987": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "15990": {
      "op": "DUP2"
    },
    "15991": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "15994": {
      "jump": "i",
      "op": "JUMP"
    },
    "15995": {
      "op": "JUMPDEST"
    },
    "15996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16000": {
      "op": "DUP3"
    },
    "16001": {
      "op": "DUP5"
    },
    "16002": {
      "op": "SUB"
    },
    "16003": {
      "op": "SLT"
    },
    "16004": {
      "op": "ISZERO"
    },
    "16005": {
      "op": "PUSH2",
      "value": "0x3E8D"
    },
    "16008": {
      "op": "JUMPI"
    },
    "16009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16011": {
      "op": "DUP1"
    },
    "16012": {
      "op": "REVERT"
    },
    "16013": {
      "op": "JUMPDEST"
    },
    "16014": {
      "op": "DUP2"
    },
    "16015": {
      "op": "CALLDATALOAD"
    },
    "16016": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "16019": {
      "op": "DUP2"
    },
    "16020": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16023": {
      "jump": "i",
      "op": "JUMP"
    },
    "16024": {
      "op": "JUMPDEST"
    },
    "16025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16027": {
      "op": "DUP1"
    },
    "16028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16030": {
      "op": "DUP1"
    },
    "16031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16035": {
      "op": "DUP7"
    },
    "16036": {
      "op": "DUP9"
    },
    "16037": {
      "op": "SUB"
    },
    "16038": {
      "op": "SLT"
    },
    "16039": {
      "op": "ISZERO"
    },
    "16040": {
      "op": "PUSH2",
      "value": "0x3EB0"
    },
    "16043": {
      "op": "JUMPI"
    },
    "16044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16046": {
      "op": "DUP1"
    },
    "16047": {
      "op": "REVERT"
    },
    "16048": {
      "op": "JUMPDEST"
    },
    "16049": {
      "op": "DUP6"
    },
    "16050": {
      "op": "CALLDATALOAD"
    },
    "16051": {
      "op": "PUSH2",
      "value": "0x3EBB"
    },
    "16054": {
      "op": "DUP2"
    },
    "16055": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16058": {
      "jump": "i",
      "op": "JUMP"
    },
    "16059": {
      "op": "JUMPDEST"
    },
    "16060": {
      "op": "SWAP5"
    },
    "16061": {
      "op": "POP"
    },
    "16062": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16064": {
      "op": "DUP7"
    },
    "16065": {
      "op": "ADD"
    },
    "16066": {
      "op": "CALLDATALOAD"
    },
    "16067": {
      "op": "PUSH2",
      "value": "0x3ECB"
    },
    "16070": {
      "op": "DUP2"
    },
    "16071": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16074": {
      "jump": "i",
      "op": "JUMP"
    },
    "16075": {
      "op": "JUMPDEST"
    },
    "16076": {
      "op": "SWAP4"
    },
    "16077": {
      "op": "POP"
    },
    "16078": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16080": {
      "op": "DUP7"
    },
    "16081": {
      "op": "ADD"
    },
    "16082": {
      "op": "CALLDATALOAD"
    },
    "16083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16087": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16089": {
      "op": "SHL"
    },
    "16090": {
      "op": "SUB"
    },
    "16091": {
      "op": "DUP1"
    },
    "16092": {
      "op": "DUP3"
    },
    "16093": {
      "op": "GT"
    },
    "16094": {
      "op": "ISZERO"
    },
    "16095": {
      "op": "PUSH2",
      "value": "0x3EE7"
    },
    "16098": {
      "op": "JUMPI"
    },
    "16099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16101": {
      "op": "DUP1"
    },
    "16102": {
      "op": "REVERT"
    },
    "16103": {
      "op": "JUMPDEST"
    },
    "16104": {
      "op": "PUSH2",
      "value": "0x3EF3"
    },
    "16107": {
      "op": "DUP10"
    },
    "16108": {
      "op": "DUP4"
    },
    "16109": {
      "op": "DUP11"
    },
    "16110": {
      "op": "ADD"
    },
    "16111": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16114": {
      "jump": "i",
      "op": "JUMP"
    },
    "16115": {
      "op": "JUMPDEST"
    },
    "16116": {
      "op": "SWAP5"
    },
    "16117": {
      "op": "POP"
    },
    "16118": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16120": {
      "op": "DUP9"
    },
    "16121": {
      "op": "ADD"
    },
    "16122": {
      "op": "CALLDATALOAD"
    },
    "16123": {
      "op": "SWAP2"
    },
    "16124": {
      "op": "POP"
    },
    "16125": {
      "op": "DUP1"
    },
    "16126": {
      "op": "DUP3"
    },
    "16127": {
      "op": "GT"
    },
    "16128": {
      "op": "ISZERO"
    },
    "16129": {
      "op": "PUSH2",
      "value": "0x3F09"
    },
    "16132": {
      "op": "JUMPI"
    },
    "16133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16135": {
      "op": "DUP1"
    },
    "16136": {
      "op": "REVERT"
    },
    "16137": {
      "op": "JUMPDEST"
    },
    "16138": {
      "op": "PUSH2",
      "value": "0x3F15"
    },
    "16141": {
      "op": "DUP10"
    },
    "16142": {
      "op": "DUP4"
    },
    "16143": {
      "op": "DUP11"
    },
    "16144": {
      "op": "ADD"
    },
    "16145": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16148": {
      "jump": "i",
      "op": "JUMP"
    },
    "16149": {
      "op": "JUMPDEST"
    },
    "16150": {
      "op": "SWAP4"
    },
    "16151": {
      "op": "POP"
    },
    "16152": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16154": {
      "op": "DUP9"
    },
    "16155": {
      "op": "ADD"
    },
    "16156": {
      "op": "CALLDATALOAD"
    },
    "16157": {
      "op": "SWAP2"
    },
    "16158": {
      "op": "POP"
    },
    "16159": {
      "op": "DUP1"
    },
    "16160": {
      "op": "DUP3"
    },
    "16161": {
      "op": "GT"
    },
    "16162": {
      "op": "ISZERO"
    },
    "16163": {
      "op": "PUSH2",
      "value": "0x3F2B"
    },
    "16166": {
      "op": "JUMPI"
    },
    "16167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16169": {
      "op": "DUP1"
    },
    "16170": {
      "op": "REVERT"
    },
    "16171": {
      "op": "JUMPDEST"
    },
    "16172": {
      "op": "POP"
    },
    "16173": {
      "op": "PUSH2",
      "value": "0x3F38"
    },
    "16176": {
      "op": "DUP9"
    },
    "16177": {
      "op": "DUP3"
    },
    "16178": {
      "op": "DUP10"
    },
    "16179": {
      "op": "ADD"
    },
    "16180": {
      "op": "PUSH2",
      "value": "0x3DEF"
    },
    "16183": {
      "jump": "i",
      "op": "JUMP"
    },
    "16184": {
      "op": "JUMPDEST"
    },
    "16185": {
      "op": "SWAP2"
    },
    "16186": {
      "op": "POP"
    },
    "16187": {
      "op": "POP"
    },
    "16188": {
      "op": "SWAP3"
    },
    "16189": {
      "op": "SWAP6"
    },
    "16190": {
      "op": "POP"
    },
    "16191": {
      "op": "SWAP3"
    },
    "16192": {
      "op": "SWAP6"
    },
    "16193": {
      "op": "SWAP1"
    },
    "16194": {
      "op": "SWAP4"
    },
    "16195": {
      "op": "POP"
    },
    "16196": {
      "jump": "o",
      "op": "JUMP"
    },
    "16197": {
      "op": "JUMPDEST"
    },
    "16198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16200": {
      "op": "DUP1"
    },
    "16201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16203": {
      "op": "DUP1"
    },
    "16204": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16206": {
      "op": "DUP6"
    },
    "16207": {
      "op": "DUP8"
    },
    "16208": {
      "op": "SUB"
    },
    "16209": {
      "op": "SLT"
    },
    "16210": {
      "op": "ISZERO"
    },
    "16211": {
      "op": "PUSH2",
      "value": "0x3F5B"
    },
    "16214": {
      "op": "JUMPI"
    },
    "16215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16217": {
      "op": "DUP1"
    },
    "16218": {
      "op": "REVERT"
    },
    "16219": {
      "op": "JUMPDEST"
    },
    "16220": {
      "op": "DUP5"
    },
    "16221": {
      "op": "CALLDATALOAD"
    },
    "16222": {
      "op": "PUSH2",
      "value": "0x3F66"
    },
    "16225": {
      "op": "DUP2"
    },
    "16226": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16229": {
      "jump": "i",
      "op": "JUMP"
    },
    "16230": {
      "op": "JUMPDEST"
    },
    "16231": {
      "op": "SWAP4"
    },
    "16232": {
      "op": "POP"
    },
    "16233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16235": {
      "op": "DUP6"
    },
    "16236": {
      "op": "ADD"
    },
    "16237": {
      "op": "CALLDATALOAD"
    },
    "16238": {
      "op": "PUSH2",
      "value": "0x3F76"
    },
    "16241": {
      "op": "DUP2"
    },
    "16242": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16245": {
      "jump": "i",
      "op": "JUMP"
    },
    "16246": {
      "op": "JUMPDEST"
    },
    "16247": {
      "op": "SWAP3"
    },
    "16248": {
      "op": "POP"
    },
    "16249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16251": {
      "op": "DUP6"
    },
    "16252": {
      "op": "ADD"
    },
    "16253": {
      "op": "CALLDATALOAD"
    },
    "16254": {
      "op": "SWAP2"
    },
    "16255": {
      "op": "POP"
    },
    "16256": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16258": {
      "op": "DUP6"
    },
    "16259": {
      "op": "ADD"
    },
    "16260": {
      "op": "CALLDATALOAD"
    },
    "16261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16267": {
      "op": "SHL"
    },
    "16268": {
      "op": "SUB"
    },
    "16269": {
      "op": "DUP2"
    },
    "16270": {
      "op": "GT"
    },
    "16271": {
      "op": "ISZERO"
    },
    "16272": {
      "op": "PUSH2",
      "value": "0x3F98"
    },
    "16275": {
      "op": "JUMPI"
    },
    "16276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16278": {
      "op": "DUP1"
    },
    "16279": {
      "op": "REVERT"
    },
    "16280": {
      "op": "JUMPDEST"
    },
    "16281": {
      "op": "PUSH2",
      "value": "0x3FA4"
    },
    "16284": {
      "op": "DUP8"
    },
    "16285": {
      "op": "DUP3"
    },
    "16286": {
      "op": "DUP9"
    },
    "16287": {
      "op": "ADD"
    },
    "16288": {
      "op": "PUSH2",
      "value": "0x3DEF"
    },
    "16291": {
      "jump": "i",
      "op": "JUMP"
    },
    "16292": {
      "op": "JUMPDEST"
    },
    "16293": {
      "op": "SWAP2"
    },
    "16294": {
      "op": "POP"
    },
    "16295": {
      "op": "POP"
    },
    "16296": {
      "op": "SWAP3"
    },
    "16297": {
      "op": "SWAP6"
    },
    "16298": {
      "op": "SWAP2"
    },
    "16299": {
      "op": "SWAP5"
    },
    "16300": {
      "op": "POP"
    },
    "16301": {
      "op": "SWAP3"
    },
    "16302": {
      "op": "POP"
    },
    "16303": {
      "jump": "o",
      "op": "JUMP"
    },
    "16304": {
      "op": "JUMPDEST"
    },
    "16305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16307": {
      "op": "DUP1"
    },
    "16308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16310": {
      "op": "DUP1"
    },
    "16311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16315": {
      "op": "DUP7"
    },
    "16316": {
      "op": "DUP9"
    },
    "16317": {
      "op": "SUB"
    },
    "16318": {
      "op": "SLT"
    },
    "16319": {
      "op": "ISZERO"
    },
    "16320": {
      "op": "PUSH2",
      "value": "0x3FC8"
    },
    "16323": {
      "op": "JUMPI"
    },
    "16324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16326": {
      "op": "DUP1"
    },
    "16327": {
      "op": "REVERT"
    },
    "16328": {
      "op": "JUMPDEST"
    },
    "16329": {
      "op": "DUP6"
    },
    "16330": {
      "op": "CALLDATALOAD"
    },
    "16331": {
      "op": "PUSH2",
      "value": "0x3FD3"
    },
    "16334": {
      "op": "DUP2"
    },
    "16335": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16338": {
      "jump": "i",
      "op": "JUMP"
    },
    "16339": {
      "op": "JUMPDEST"
    },
    "16340": {
      "op": "SWAP5"
    },
    "16341": {
      "op": "POP"
    },
    "16342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16344": {
      "op": "DUP7"
    },
    "16345": {
      "op": "ADD"
    },
    "16346": {
      "op": "CALLDATALOAD"
    },
    "16347": {
      "op": "PUSH2",
      "value": "0x3FE3"
    },
    "16350": {
      "op": "DUP2"
    },
    "16351": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16354": {
      "jump": "i",
      "op": "JUMP"
    },
    "16355": {
      "op": "JUMPDEST"
    },
    "16356": {
      "op": "SWAP4"
    },
    "16357": {
      "op": "POP"
    },
    "16358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16360": {
      "op": "DUP7"
    },
    "16361": {
      "op": "ADD"
    },
    "16362": {
      "op": "CALLDATALOAD"
    },
    "16363": {
      "op": "SWAP3"
    },
    "16364": {
      "op": "POP"
    },
    "16365": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16367": {
      "op": "DUP7"
    },
    "16368": {
      "op": "ADD"
    },
    "16369": {
      "op": "CALLDATALOAD"
    },
    "16370": {
      "op": "SWAP2"
    },
    "16371": {
      "op": "POP"
    },
    "16372": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16374": {
      "op": "DUP7"
    },
    "16375": {
      "op": "ADD"
    },
    "16376": {
      "op": "CALLDATALOAD"
    },
    "16377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16381": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16383": {
      "op": "SHL"
    },
    "16384": {
      "op": "SUB"
    },
    "16385": {
      "op": "DUP2"
    },
    "16386": {
      "op": "GT"
    },
    "16387": {
      "op": "ISZERO"
    },
    "16388": {
      "op": "PUSH2",
      "value": "0x400C"
    },
    "16391": {
      "op": "JUMPI"
    },
    "16392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16394": {
      "op": "DUP1"
    },
    "16395": {
      "op": "REVERT"
    },
    "16396": {
      "op": "JUMPDEST"
    },
    "16397": {
      "op": "PUSH2",
      "value": "0x3F38"
    },
    "16400": {
      "op": "DUP9"
    },
    "16401": {
      "op": "DUP3"
    },
    "16402": {
      "op": "DUP10"
    },
    "16403": {
      "op": "ADD"
    },
    "16404": {
      "op": "PUSH2",
      "value": "0x3DEF"
    },
    "16407": {
      "jump": "i",
      "op": "JUMP"
    },
    "16408": {
      "op": "JUMPDEST"
    },
    "16409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16411": {
      "op": "DUP1"
    },
    "16412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16414": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16416": {
      "op": "DUP5"
    },
    "16417": {
      "op": "DUP7"
    },
    "16418": {
      "op": "SUB"
    },
    "16419": {
      "op": "SLT"
    },
    "16420": {
      "op": "ISZERO"
    },
    "16421": {
      "op": "PUSH2",
      "value": "0x402D"
    },
    "16424": {
      "op": "JUMPI"
    },
    "16425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16427": {
      "op": "DUP1"
    },
    "16428": {
      "op": "REVERT"
    },
    "16429": {
      "op": "JUMPDEST"
    },
    "16430": {
      "op": "DUP4"
    },
    "16431": {
      "op": "CALLDATALOAD"
    },
    "16432": {
      "op": "PUSH2",
      "value": "0x4038"
    },
    "16435": {
      "op": "DUP2"
    },
    "16436": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "16439": {
      "jump": "i",
      "op": "JUMP"
    },
    "16440": {
      "op": "JUMPDEST"
    },
    "16441": {
      "op": "SWAP6"
    },
    "16442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16444": {
      "op": "DUP6"
    },
    "16445": {
      "op": "ADD"
    },
    "16446": {
      "op": "CALLDATALOAD"
    },
    "16447": {
      "op": "SWAP6"
    },
    "16448": {
      "op": "POP"
    },
    "16449": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16451": {
      "op": "SWAP1"
    },
    "16452": {
      "op": "SWAP5"
    },
    "16453": {
      "op": "ADD"
    },
    "16454": {
      "op": "CALLDATALOAD"
    },
    "16455": {
      "op": "SWAP4"
    },
    "16456": {
      "op": "SWAP3"
    },
    "16457": {
      "op": "POP"
    },
    "16458": {
      "op": "POP"
    },
    "16459": {
      "op": "POP"
    },
    "16460": {
      "jump": "o",
      "op": "JUMP"
    },
    "16461": {
      "op": "JUMPDEST"
    },
    "16462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16464": {
      "op": "DUP1"
    },
    "16465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16467": {
      "op": "DUP1"
    },
    "16468": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16470": {
      "op": "DUP6"
    },
    "16471": {
      "op": "DUP8"
    },
    "16472": {
      "op": "SUB"
    },
    "16473": {
      "op": "SLT"
    },
    "16474": {
      "op": "ISZERO"
    },
    "16475": {
      "op": "PUSH2",
      "value": "0x4063"
    },
    "16478": {
      "op": "JUMPI"
    },
    "16479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16481": {
      "op": "DUP1"
    },
    "16482": {
      "op": "REVERT"
    },
    "16483": {
      "op": "JUMPDEST"
    },
    "16484": {
      "op": "DUP5"
    },
    "16485": {
      "op": "CALLDATALOAD"
    },
    "16486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16492": {
      "op": "SHL"
    },
    "16493": {
      "op": "SUB"
    },
    "16494": {
      "op": "DUP1"
    },
    "16495": {
      "op": "DUP3"
    },
    "16496": {
      "op": "GT"
    },
    "16497": {
      "op": "ISZERO"
    },
    "16498": {
      "op": "PUSH2",
      "value": "0x407A"
    },
    "16501": {
      "op": "JUMPI"
    },
    "16502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16504": {
      "op": "DUP1"
    },
    "16505": {
      "op": "REVERT"
    },
    "16506": {
      "op": "JUMPDEST"
    },
    "16507": {
      "op": "PUSH2",
      "value": "0x4086"
    },
    "16510": {
      "op": "DUP9"
    },
    "16511": {
      "op": "DUP4"
    },
    "16512": {
      "op": "DUP10"
    },
    "16513": {
      "op": "ADD"
    },
    "16514": {
      "op": "PUSH2",
      "value": "0x3C21"
    },
    "16517": {
      "jump": "i",
      "op": "JUMP"
    },
    "16518": {
      "op": "JUMPDEST"
    },
    "16519": {
      "op": "SWAP6"
    },
    "16520": {
      "op": "POP"
    },
    "16521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16523": {
      "op": "DUP8"
    },
    "16524": {
      "op": "ADD"
    },
    "16525": {
      "op": "CALLDATALOAD"
    },
    "16526": {
      "op": "SWAP2"
    },
    "16527": {
      "op": "POP"
    },
    "16528": {
      "op": "DUP1"
    },
    "16529": {
      "op": "DUP3"
    },
    "16530": {
      "op": "GT"
    },
    "16531": {
      "op": "ISZERO"
    },
    "16532": {
      "op": "PUSH2",
      "value": "0x409C"
    },
    "16535": {
      "op": "JUMPI"
    },
    "16536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16538": {
      "op": "DUP1"
    },
    "16539": {
      "op": "REVERT"
    },
    "16540": {
      "op": "JUMPDEST"
    },
    "16541": {
      "op": "PUSH2",
      "value": "0x40A8"
    },
    "16544": {
      "op": "DUP9"
    },
    "16545": {
      "op": "DUP4"
    },
    "16546": {
      "op": "DUP10"
    },
    "16547": {
      "op": "ADD"
    },
    "16548": {
      "op": "PUSH2",
      "value": "0x3B3F"
    },
    "16551": {
      "jump": "i",
      "op": "JUMP"
    },
    "16552": {
      "op": "JUMPDEST"
    },
    "16553": {
      "op": "SWAP5"
    },
    "16554": {
      "op": "POP"
    },
    "16555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16557": {
      "op": "DUP8"
    },
    "16558": {
      "op": "ADD"
    },
    "16559": {
      "op": "CALLDATALOAD"
    },
    "16560": {
      "op": "SWAP2"
    },
    "16561": {
      "op": "POP"
    },
    "16562": {
      "op": "DUP1"
    },
    "16563": {
      "op": "DUP3"
    },
    "16564": {
      "op": "GT"
    },
    "16565": {
      "op": "ISZERO"
    },
    "16566": {
      "op": "PUSH2",
      "value": "0x40BE"
    },
    "16569": {
      "op": "JUMPI"
    },
    "16570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16572": {
      "op": "DUP1"
    },
    "16573": {
      "op": "REVERT"
    },
    "16574": {
      "op": "JUMPDEST"
    },
    "16575": {
      "op": "PUSH2",
      "value": "0x40CA"
    },
    "16578": {
      "op": "DUP9"
    },
    "16579": {
      "op": "DUP4"
    },
    "16580": {
      "op": "DUP10"
    },
    "16581": {
      "op": "ADD"
    },
    "16582": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16585": {
      "jump": "i",
      "op": "JUMP"
    },
    "16586": {
      "op": "JUMPDEST"
    },
    "16587": {
      "op": "SWAP4"
    },
    "16588": {
      "op": "POP"
    },
    "16589": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16591": {
      "op": "DUP8"
    },
    "16592": {
      "op": "ADD"
    },
    "16593": {
      "op": "CALLDATALOAD"
    },
    "16594": {
      "op": "SWAP2"
    },
    "16595": {
      "op": "POP"
    },
    "16596": {
      "op": "DUP1"
    },
    "16597": {
      "op": "DUP3"
    },
    "16598": {
      "op": "GT"
    },
    "16599": {
      "op": "ISZERO"
    },
    "16600": {
      "op": "PUSH2",
      "value": "0x40E0"
    },
    "16603": {
      "op": "JUMPI"
    },
    "16604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16606": {
      "op": "DUP1"
    },
    "16607": {
      "op": "REVERT"
    },
    "16608": {
      "op": "JUMPDEST"
    },
    "16609": {
      "op": "POP"
    },
    "16610": {
      "op": "PUSH2",
      "value": "0x3FA4"
    },
    "16613": {
      "op": "DUP8"
    },
    "16614": {
      "op": "DUP3"
    },
    "16615": {
      "op": "DUP9"
    },
    "16616": {
      "op": "ADD"
    },
    "16617": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16620": {
      "jump": "i",
      "op": "JUMP"
    },
    "16621": {
      "op": "JUMPDEST"
    },
    "16622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16624": {
      "op": "DUP1"
    },
    "16625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16627": {
      "op": "DUP1"
    },
    "16628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16632": {
      "op": "DUP7"
    },
    "16633": {
      "op": "DUP9"
    },
    "16634": {
      "op": "SUB"
    },
    "16635": {
      "op": "SLT"
    },
    "16636": {
      "op": "ISZERO"
    },
    "16637": {
      "op": "PUSH2",
      "value": "0x4105"
    },
    "16640": {
      "op": "JUMPI"
    },
    "16641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16643": {
      "op": "DUP1"
    },
    "16644": {
      "op": "REVERT"
    },
    "16645": {
      "op": "JUMPDEST"
    },
    "16646": {
      "op": "DUP6"
    },
    "16647": {
      "op": "CALLDATALOAD"
    },
    "16648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16652": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16654": {
      "op": "SHL"
    },
    "16655": {
      "op": "SUB"
    },
    "16656": {
      "op": "DUP1"
    },
    "16657": {
      "op": "DUP3"
    },
    "16658": {
      "op": "GT"
    },
    "16659": {
      "op": "ISZERO"
    },
    "16660": {
      "op": "PUSH2",
      "value": "0x411C"
    },
    "16663": {
      "op": "JUMPI"
    },
    "16664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16666": {
      "op": "DUP1"
    },
    "16667": {
      "op": "REVERT"
    },
    "16668": {
      "op": "JUMPDEST"
    },
    "16669": {
      "op": "PUSH2",
      "value": "0x4128"
    },
    "16672": {
      "op": "DUP10"
    },
    "16673": {
      "op": "DUP4"
    },
    "16674": {
      "op": "DUP11"
    },
    "16675": {
      "op": "ADD"
    },
    "16676": {
      "op": "PUSH2",
      "value": "0x3C21"
    },
    "16679": {
      "jump": "i",
      "op": "JUMP"
    },
    "16680": {
      "op": "JUMPDEST"
    },
    "16681": {
      "op": "SWAP7"
    },
    "16682": {
      "op": "POP"
    },
    "16683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16685": {
      "op": "DUP9"
    },
    "16686": {
      "op": "ADD"
    },
    "16687": {
      "op": "CALLDATALOAD"
    },
    "16688": {
      "op": "SWAP2"
    },
    "16689": {
      "op": "POP"
    },
    "16690": {
      "op": "DUP1"
    },
    "16691": {
      "op": "DUP3"
    },
    "16692": {
      "op": "GT"
    },
    "16693": {
      "op": "ISZERO"
    },
    "16694": {
      "op": "PUSH2",
      "value": "0x413E"
    },
    "16697": {
      "op": "JUMPI"
    },
    "16698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16700": {
      "op": "DUP1"
    },
    "16701": {
      "op": "REVERT"
    },
    "16702": {
      "op": "JUMPDEST"
    },
    "16703": {
      "op": "PUSH2",
      "value": "0x414A"
    },
    "16706": {
      "op": "DUP10"
    },
    "16707": {
      "op": "DUP4"
    },
    "16708": {
      "op": "DUP11"
    },
    "16709": {
      "op": "ADD"
    },
    "16710": {
      "op": "PUSH2",
      "value": "0x3B3F"
    },
    "16713": {
      "jump": "i",
      "op": "JUMP"
    },
    "16714": {
      "op": "JUMPDEST"
    },
    "16715": {
      "op": "SWAP6"
    },
    "16716": {
      "op": "POP"
    },
    "16717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16719": {
      "op": "DUP9"
    },
    "16720": {
      "op": "ADD"
    },
    "16721": {
      "op": "CALLDATALOAD"
    },
    "16722": {
      "op": "SWAP2"
    },
    "16723": {
      "op": "POP"
    },
    "16724": {
      "op": "DUP1"
    },
    "16725": {
      "op": "DUP3"
    },
    "16726": {
      "op": "GT"
    },
    "16727": {
      "op": "ISZERO"
    },
    "16728": {
      "op": "PUSH2",
      "value": "0x4160"
    },
    "16731": {
      "op": "JUMPI"
    },
    "16732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16734": {
      "op": "DUP1"
    },
    "16735": {
      "op": "REVERT"
    },
    "16736": {
      "op": "JUMPDEST"
    },
    "16737": {
      "op": "PUSH2",
      "value": "0x416C"
    },
    "16740": {
      "op": "DUP10"
    },
    "16741": {
      "op": "DUP4"
    },
    "16742": {
      "op": "DUP11"
    },
    "16743": {
      "op": "ADD"
    },
    "16744": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16747": {
      "jump": "i",
      "op": "JUMP"
    },
    "16748": {
      "op": "JUMPDEST"
    },
    "16749": {
      "op": "SWAP5"
    },
    "16750": {
      "op": "POP"
    },
    "16751": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16753": {
      "op": "DUP9"
    },
    "16754": {
      "op": "ADD"
    },
    "16755": {
      "op": "CALLDATALOAD"
    },
    "16756": {
      "op": "SWAP2"
    },
    "16757": {
      "op": "POP"
    },
    "16758": {
      "op": "DUP1"
    },
    "16759": {
      "op": "DUP3"
    },
    "16760": {
      "op": "GT"
    },
    "16761": {
      "op": "ISZERO"
    },
    "16762": {
      "op": "PUSH2",
      "value": "0x4182"
    },
    "16765": {
      "op": "JUMPI"
    },
    "16766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16768": {
      "op": "DUP1"
    },
    "16769": {
      "op": "REVERT"
    },
    "16770": {
      "op": "JUMPDEST"
    },
    "16771": {
      "op": "PUSH2",
      "value": "0x418E"
    },
    "16774": {
      "op": "DUP10"
    },
    "16775": {
      "op": "DUP4"
    },
    "16776": {
      "op": "DUP11"
    },
    "16777": {
      "op": "ADD"
    },
    "16778": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16781": {
      "jump": "i",
      "op": "JUMP"
    },
    "16782": {
      "op": "JUMPDEST"
    },
    "16783": {
      "op": "SWAP4"
    },
    "16784": {
      "op": "POP"
    },
    "16785": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16787": {
      "op": "DUP9"
    },
    "16788": {
      "op": "ADD"
    },
    "16789": {
      "op": "CALLDATALOAD"
    },
    "16790": {
      "op": "SWAP2"
    },
    "16791": {
      "op": "POP"
    },
    "16792": {
      "op": "DUP1"
    },
    "16793": {
      "op": "DUP3"
    },
    "16794": {
      "op": "GT"
    },
    "16795": {
      "op": "ISZERO"
    },
    "16796": {
      "op": "PUSH2",
      "value": "0x41A4"
    },
    "16799": {
      "op": "JUMPI"
    },
    "16800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16802": {
      "op": "DUP1"
    },
    "16803": {
      "op": "REVERT"
    },
    "16804": {
      "op": "JUMPDEST"
    },
    "16805": {
      "op": "POP"
    },
    "16806": {
      "op": "PUSH2",
      "value": "0x3F38"
    },
    "16809": {
      "op": "DUP9"
    },
    "16810": {
      "op": "DUP3"
    },
    "16811": {
      "op": "DUP10"
    },
    "16812": {
      "op": "ADD"
    },
    "16813": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16816": {
      "jump": "i",
      "op": "JUMP"
    },
    "16817": {
      "op": "JUMPDEST"
    },
    "16818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16820": {
      "op": "DUP1"
    },
    "16821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16823": {
      "op": "DUP1"
    },
    "16824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16826": {
      "op": "DUP1"
    },
    "16827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16831": {
      "op": "DUP9"
    },
    "16832": {
      "op": "DUP11"
    },
    "16833": {
      "op": "SUB"
    },
    "16834": {
      "op": "SLT"
    },
    "16835": {
      "op": "ISZERO"
    },
    "16836": {
      "op": "PUSH2",
      "value": "0x41CC"
    },
    "16839": {
      "op": "JUMPI"
    },
    "16840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16842": {
      "op": "DUP1"
    },
    "16843": {
      "op": "REVERT"
    },
    "16844": {
      "op": "JUMPDEST"
    },
    "16845": {
      "op": "DUP8"
    },
    "16846": {
      "op": "CALLDATALOAD"
    },
    "16847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16853": {
      "op": "SHL"
    },
    "16854": {
      "op": "SUB"
    },
    "16855": {
      "op": "DUP1"
    },
    "16856": {
      "op": "DUP3"
    },
    "16857": {
      "op": "GT"
    },
    "16858": {
      "op": "ISZERO"
    },
    "16859": {
      "op": "PUSH2",
      "value": "0x41E3"
    },
    "16862": {
      "op": "JUMPI"
    },
    "16863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16865": {
      "op": "DUP1"
    },
    "16866": {
      "op": "REVERT"
    },
    "16867": {
      "op": "JUMPDEST"
    },
    "16868": {
      "op": "PUSH2",
      "value": "0x41EF"
    },
    "16871": {
      "op": "DUP12"
    },
    "16872": {
      "op": "DUP4"
    },
    "16873": {
      "op": "DUP13"
    },
    "16874": {
      "op": "ADD"
    },
    "16875": {
      "op": "PUSH2",
      "value": "0x3C21"
    },
    "16878": {
      "jump": "i",
      "op": "JUMP"
    },
    "16879": {
      "op": "JUMPDEST"
    },
    "16880": {
      "op": "SWAP9"
    },
    "16881": {
      "op": "POP"
    },
    "16882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16884": {
      "op": "DUP11"
    },
    "16885": {
      "op": "ADD"
    },
    "16886": {
      "op": "CALLDATALOAD"
    },
    "16887": {
      "op": "SWAP2"
    },
    "16888": {
      "op": "POP"
    },
    "16889": {
      "op": "DUP1"
    },
    "16890": {
      "op": "DUP3"
    },
    "16891": {
      "op": "GT"
    },
    "16892": {
      "op": "ISZERO"
    },
    "16893": {
      "op": "PUSH2",
      "value": "0x4205"
    },
    "16896": {
      "op": "JUMPI"
    },
    "16897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16899": {
      "op": "DUP1"
    },
    "16900": {
      "op": "REVERT"
    },
    "16901": {
      "op": "JUMPDEST"
    },
    "16902": {
      "op": "PUSH2",
      "value": "0x4211"
    },
    "16905": {
      "op": "DUP12"
    },
    "16906": {
      "op": "DUP4"
    },
    "16907": {
      "op": "DUP13"
    },
    "16908": {
      "op": "ADD"
    },
    "16909": {
      "op": "PUSH2",
      "value": "0x3B3F"
    },
    "16912": {
      "jump": "i",
      "op": "JUMP"
    },
    "16913": {
      "op": "JUMPDEST"
    },
    "16914": {
      "op": "SWAP8"
    },
    "16915": {
      "op": "POP"
    },
    "16916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16918": {
      "op": "DUP11"
    },
    "16919": {
      "op": "ADD"
    },
    "16920": {
      "op": "CALLDATALOAD"
    },
    "16921": {
      "op": "SWAP2"
    },
    "16922": {
      "op": "POP"
    },
    "16923": {
      "op": "DUP1"
    },
    "16924": {
      "op": "DUP3"
    },
    "16925": {
      "op": "GT"
    },
    "16926": {
      "op": "ISZERO"
    },
    "16927": {
      "op": "PUSH2",
      "value": "0x4227"
    },
    "16930": {
      "op": "JUMPI"
    },
    "16931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16933": {
      "op": "DUP1"
    },
    "16934": {
      "op": "REVERT"
    },
    "16935": {
      "op": "JUMPDEST"
    },
    "16936": {
      "op": "PUSH2",
      "value": "0x4233"
    },
    "16939": {
      "op": "DUP12"
    },
    "16940": {
      "op": "DUP4"
    },
    "16941": {
      "op": "DUP13"
    },
    "16942": {
      "op": "ADD"
    },
    "16943": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16946": {
      "jump": "i",
      "op": "JUMP"
    },
    "16947": {
      "op": "JUMPDEST"
    },
    "16948": {
      "op": "SWAP7"
    },
    "16949": {
      "op": "POP"
    },
    "16950": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16952": {
      "op": "DUP11"
    },
    "16953": {
      "op": "ADD"
    },
    "16954": {
      "op": "CALLDATALOAD"
    },
    "16955": {
      "op": "SWAP2"
    },
    "16956": {
      "op": "POP"
    },
    "16957": {
      "op": "DUP1"
    },
    "16958": {
      "op": "DUP3"
    },
    "16959": {
      "op": "GT"
    },
    "16960": {
      "op": "ISZERO"
    },
    "16961": {
      "op": "PUSH2",
      "value": "0x4249"
    },
    "16964": {
      "op": "JUMPI"
    },
    "16965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16967": {
      "op": "DUP1"
    },
    "16968": {
      "op": "REVERT"
    },
    "16969": {
      "op": "JUMPDEST"
    },
    "16970": {
      "op": "PUSH2",
      "value": "0x4255"
    },
    "16973": {
      "op": "DUP12"
    },
    "16974": {
      "op": "DUP4"
    },
    "16975": {
      "op": "DUP13"
    },
    "16976": {
      "op": "ADD"
    },
    "16977": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "16980": {
      "jump": "i",
      "op": "JUMP"
    },
    "16981": {
      "op": "JUMPDEST"
    },
    "16982": {
      "op": "SWAP6"
    },
    "16983": {
      "op": "POP"
    },
    "16984": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16986": {
      "op": "DUP11"
    },
    "16987": {
      "op": "ADD"
    },
    "16988": {
      "op": "CALLDATALOAD"
    },
    "16989": {
      "op": "SWAP2"
    },
    "16990": {
      "op": "POP"
    },
    "16991": {
      "op": "DUP1"
    },
    "16992": {
      "op": "DUP3"
    },
    "16993": {
      "op": "GT"
    },
    "16994": {
      "op": "ISZERO"
    },
    "16995": {
      "op": "PUSH2",
      "value": "0x426B"
    },
    "16998": {
      "op": "JUMPI"
    },
    "16999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17001": {
      "op": "DUP1"
    },
    "17002": {
      "op": "REVERT"
    },
    "17003": {
      "op": "JUMPDEST"
    },
    "17004": {
      "op": "PUSH2",
      "value": "0x4277"
    },
    "17007": {
      "op": "DUP12"
    },
    "17008": {
      "op": "DUP4"
    },
    "17009": {
      "op": "DUP13"
    },
    "17010": {
      "op": "ADD"
    },
    "17011": {
      "op": "PUSH2",
      "value": "0x3D69"
    },
    "17014": {
      "jump": "i",
      "op": "JUMP"
    },
    "17015": {
      "op": "JUMPDEST"
    },
    "17016": {
      "op": "SWAP5"
    },
    "17017": {
      "op": "POP"
    },
    "17018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17020": {
      "op": "DUP11"
    },
    "17021": {
      "op": "ADD"
    },
    "17022": {
      "op": "CALLDATALOAD"
    },
    "17023": {
      "op": "SWAP2"
    },
    "17024": {
      "op": "POP"
    },
    "17025": {
      "op": "DUP1"
    },
    "17026": {
      "op": "DUP3"
    },
    "17027": {
      "op": "GT"
    },
    "17028": {
      "op": "ISZERO"
    },
    "17029": {
      "op": "PUSH2",
      "value": "0x428D"
    },
    "17032": {
      "op": "JUMPI"
    },
    "17033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17035": {
      "op": "DUP1"
    },
    "17036": {
      "op": "REVERT"
    },
    "17037": {
      "op": "JUMPDEST"
    },
    "17038": {
      "op": "PUSH2",
      "value": "0x4299"
    },
    "17041": {
      "op": "DUP12"
    },
    "17042": {
      "op": "DUP4"
    },
    "17043": {
      "op": "DUP13"
    },
    "17044": {
      "op": "ADD"
    },
    "17045": {
      "op": "PUSH2",
      "value": "0x3BBA"
    },
    "17048": {
      "jump": "i",
      "op": "JUMP"
    },
    "17049": {
      "op": "JUMPDEST"
    },
    "17050": {
      "op": "SWAP4"
    },
    "17051": {
      "op": "POP"
    },
    "17052": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17054": {
      "op": "DUP11"
    },
    "17055": {
      "op": "ADD"
    },
    "17056": {
      "op": "CALLDATALOAD"
    },
    "17057": {
      "op": "SWAP2"
    },
    "17058": {
      "op": "POP"
    },
    "17059": {
      "op": "DUP1"
    },
    "17060": {
      "op": "DUP3"
    },
    "17061": {
      "op": "GT"
    },
    "17062": {
      "op": "ISZERO"
    },
    "17063": {
      "op": "PUSH2",
      "value": "0x42AF"
    },
    "17066": {
      "op": "JUMPI"
    },
    "17067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17069": {
      "op": "DUP1"
    },
    "17070": {
      "op": "REVERT"
    },
    "17071": {
      "op": "JUMPDEST"
    },
    "17072": {
      "op": "POP"
    },
    "17073": {
      "op": "PUSH2",
      "value": "0x42BC"
    },
    "17076": {
      "op": "DUP11"
    },
    "17077": {
      "op": "DUP3"
    },
    "17078": {
      "op": "DUP12"
    },
    "17079": {
      "op": "ADD"
    },
    "17080": {
      "op": "PUSH2",
      "value": "0x3C9C"
    },
    "17083": {
      "jump": "i",
      "op": "JUMP"
    },
    "17084": {
      "op": "JUMPDEST"
    },
    "17085": {
      "op": "SWAP2"
    },
    "17086": {
      "op": "POP"
    },
    "17087": {
      "op": "POP"
    },
    "17088": {
      "op": "SWAP3"
    },
    "17089": {
      "op": "SWAP6"
    },
    "17090": {
      "op": "SWAP9"
    },
    "17091": {
      "op": "SWAP2"
    },
    "17092": {
      "op": "SWAP5"
    },
    "17093": {
      "op": "SWAP8"
    },
    "17094": {
      "op": "POP"
    },
    "17095": {
      "op": "SWAP3"
    },
    "17096": {
      "op": "SWAP6"
    },
    "17097": {
      "op": "POP"
    },
    "17098": {
      "jump": "o",
      "op": "JUMP"
    },
    "17099": {
      "op": "JUMPDEST"
    },
    "17100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17102": {
      "op": "DUP1"
    },
    "17103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17105": {
      "op": "DUP1"
    },
    "17106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17108": {
      "op": "DUP1"
    },
    "17109": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17111": {
      "op": "DUP8"
    },
    "17112": {
      "op": "DUP10"
    },
    "17113": {
      "op": "SUB"
    },
    "17114": {
      "op": "SLT"
    },
    "17115": {
      "op": "ISZERO"
    },
    "17116": {
      "op": "PUSH2",
      "value": "0x42E4"
    },
    "17119": {
      "op": "JUMPI"
    },
    "17120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17122": {
      "op": "DUP1"
    },
    "17123": {
      "op": "REVERT"
    },
    "17124": {
      "op": "JUMPDEST"
    },
    "17125": {
      "op": "DUP7"
    },
    "17126": {
      "op": "CALLDATALOAD"
    },
    "17127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17133": {
      "op": "SHL"
    },
    "17134": {
      "op": "SUB"
    },
    "17135": {
      "op": "DUP1"
    },
    "17136": {
      "op": "DUP3"
    },
    "17137": {
      "op": "GT"
    },
    "17138": {
      "op": "ISZERO"
    },
    "17139": {
      "op": "PUSH2",
      "value": "0x42FB"
    },
    "17142": {
      "op": "JUMPI"
    },
    "17143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17145": {
      "op": "DUP1"
    },
    "17146": {
      "op": "REVERT"
    },
    "17147": {
      "op": "JUMPDEST"
    },
    "17148": {
      "op": "PUSH2",
      "value": "0x4307"
    },
    "17151": {
      "op": "DUP11"
    },
    "17152": {
      "op": "DUP4"
    },
    "17153": {
      "op": "DUP12"
    },
    "17154": {
      "op": "ADD"
    },
    "17155": {
      "op": "PUSH2",
      "value": "0x3C21"
    },
    "17158": {
      "jump": "i",
      "op": "JUMP"
    },
    "17159": {
      "op": "JUMPDEST"
    },
    "17160": {
      "op": "SWAP8"
    },
    "17161": {
      "op": "POP"
    },
    "17162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17164": {
      "op": "DUP10"
    },
    "17165": {
      "op": "ADD"
    },
    "17166": {
      "op": "CALLDATALOAD"
    },
    "17167": {
      "op": "SWAP2"
    },
    "17168": {
      "op": "POP"
    },
    "17169": {
      "op": "DUP1"
    },
    "17170": {
      "op": "DUP3"
    },
    "17171": {
      "op": "GT"
    },
    "17172": {
      "op": "ISZERO"
    },
    "17173": {
      "op": "PUSH2",
      "value": "0x431D"
    },
    "17176": {
      "op": "JUMPI"
    },
    "17177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17179": {
      "op": "DUP1"
    },
    "17180": {
      "op": "REVERT"
    },
    "17181": {
      "op": "JUMPDEST"
    },
    "17182": {
      "op": "PUSH2",
      "value": "0x4329"
    },
    "17185": {
      "op": "DUP11"
    },
    "17186": {
      "op": "DUP4"
    },
    "17187": {
      "op": "DUP12"
    },
    "17188": {
      "op": "ADD"
    },
    "17189": {
      "op": "PUSH2",
      "value": "0x3B3F"
    },
    "17192": {
      "jump": "i",
      "op": "JUMP"
    },
    "17193": {
      "op": "JUMPDEST"
    },
    "17194": {
      "op": "SWAP7"
    },
    "17195": {
      "op": "POP"
    },
    "17196": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17198": {
      "op": "DUP10"
    },
    "17199": {
      "op": "ADD"
    },
    "17200": {
      "op": "CALLDATALOAD"
    },
    "17201": {
      "op": "SWAP2"
    },
    "17202": {
      "op": "POP"
    },
    "17203": {
      "op": "DUP1"
    },
    "17204": {
      "op": "DUP3"
    },
    "17205": {
      "op": "GT"
    },
    "17206": {
      "op": "ISZERO"
    },
    "17207": {
      "op": "PUSH2",
      "value": "0x433F"
    },
    "17210": {
      "op": "JUMPI"
    },
    "17211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17213": {
      "op": "DUP1"
    },
    "17214": {
      "op": "REVERT"
    },
    "17215": {
      "op": "JUMPDEST"
    },
    "17216": {
      "op": "PUSH2",
      "value": "0x434B"
    },
    "17219": {
      "op": "DUP11"
    },
    "17220": {
      "op": "DUP4"
    },
    "17221": {
      "op": "DUP12"
    },
    "17222": {
      "op": "ADD"
    },
    "17223": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "17226": {
      "jump": "i",
      "op": "JUMP"
    },
    "17227": {
      "op": "JUMPDEST"
    },
    "17228": {
      "op": "SWAP6"
    },
    "17229": {
      "op": "POP"
    },
    "17230": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17232": {
      "op": "DUP10"
    },
    "17233": {
      "op": "ADD"
    },
    "17234": {
      "op": "CALLDATALOAD"
    },
    "17235": {
      "op": "SWAP2"
    },
    "17236": {
      "op": "POP"
    },
    "17237": {
      "op": "DUP1"
    },
    "17238": {
      "op": "DUP3"
    },
    "17239": {
      "op": "GT"
    },
    "17240": {
      "op": "ISZERO"
    },
    "17241": {
      "op": "PUSH2",
      "value": "0x4361"
    },
    "17244": {
      "op": "JUMPI"
    },
    "17245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17247": {
      "op": "DUP1"
    },
    "17248": {
      "op": "REVERT"
    },
    "17249": {
      "op": "JUMPDEST"
    },
    "17250": {
      "op": "PUSH2",
      "value": "0x436D"
    },
    "17253": {
      "op": "DUP11"
    },
    "17254": {
      "op": "DUP4"
    },
    "17255": {
      "op": "DUP12"
    },
    "17256": {
      "op": "ADD"
    },
    "17257": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "17260": {
      "jump": "i",
      "op": "JUMP"
    },
    "17261": {
      "op": "JUMPDEST"
    },
    "17262": {
      "op": "SWAP5"
    },
    "17263": {
      "op": "POP"
    },
    "17264": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17266": {
      "op": "DUP10"
    },
    "17267": {
      "op": "ADD"
    },
    "17268": {
      "op": "CALLDATALOAD"
    },
    "17269": {
      "op": "SWAP2"
    },
    "17270": {
      "op": "POP"
    },
    "17271": {
      "op": "DUP1"
    },
    "17272": {
      "op": "DUP3"
    },
    "17273": {
      "op": "GT"
    },
    "17274": {
      "op": "ISZERO"
    },
    "17275": {
      "op": "PUSH2",
      "value": "0x4383"
    },
    "17278": {
      "op": "JUMPI"
    },
    "17279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17281": {
      "op": "DUP1"
    },
    "17282": {
      "op": "REVERT"
    },
    "17283": {
      "op": "JUMPDEST"
    },
    "17284": {
      "op": "PUSH2",
      "value": "0x438F"
    },
    "17287": {
      "op": "DUP11"
    },
    "17288": {
      "op": "DUP4"
    },
    "17289": {
      "op": "DUP12"
    },
    "17290": {
      "op": "ADD"
    },
    "17291": {
      "op": "PUSH2",
      "value": "0x3D69"
    },
    "17294": {
      "jump": "i",
      "op": "JUMP"
    },
    "17295": {
      "op": "JUMPDEST"
    },
    "17296": {
      "op": "SWAP4"
    },
    "17297": {
      "op": "POP"
    },
    "17298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17300": {
      "op": "DUP10"
    },
    "17301": {
      "op": "ADD"
    },
    "17302": {
      "op": "CALLDATALOAD"
    },
    "17303": {
      "op": "SWAP2"
    },
    "17304": {
      "op": "POP"
    },
    "17305": {
      "op": "DUP1"
    },
    "17306": {
      "op": "DUP3"
    },
    "17307": {
      "op": "GT"
    },
    "17308": {
      "op": "ISZERO"
    },
    "17309": {
      "op": "PUSH2",
      "value": "0x43A5"
    },
    "17312": {
      "op": "JUMPI"
    },
    "17313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17315": {
      "op": "DUP1"
    },
    "17316": {
      "op": "REVERT"
    },
    "17317": {
      "op": "JUMPDEST"
    },
    "17318": {
      "op": "POP"
    },
    "17319": {
      "op": "PUSH2",
      "value": "0x43B2"
    },
    "17322": {
      "op": "DUP10"
    },
    "17323": {
      "op": "DUP3"
    },
    "17324": {
      "op": "DUP11"
    },
    "17325": {
      "op": "ADD"
    },
    "17326": {
      "op": "PUSH2",
      "value": "0x3D09"
    },
    "17329": {
      "jump": "i",
      "op": "JUMP"
    },
    "17330": {
      "op": "JUMPDEST"
    },
    "17331": {
      "op": "SWAP2"
    },
    "17332": {
      "op": "POP"
    },
    "17333": {
      "op": "POP"
    },
    "17334": {
      "op": "SWAP3"
    },
    "17335": {
      "op": "SWAP6"
    },
    "17336": {
      "op": "POP"
    },
    "17337": {
      "op": "SWAP3"
    },
    "17338": {
      "op": "SWAP6"
    },
    "17339": {
      "op": "POP"
    },
    "17340": {
      "op": "SWAP3"
    },
    "17341": {
      "op": "SWAP6"
    },
    "17342": {
      "jump": "o",
      "op": "JUMP"
    },
    "17343": {
      "op": "JUMPDEST"
    },
    "17344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17348": {
      "op": "DUP3"
    },
    "17349": {
      "op": "DUP5"
    },
    "17350": {
      "op": "SUB"
    },
    "17351": {
      "op": "SLT"
    },
    "17352": {
      "op": "ISZERO"
    },
    "17353": {
      "op": "PUSH2",
      "value": "0x43D1"
    },
    "17356": {
      "op": "JUMPI"
    },
    "17357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17359": {
      "op": "DUP1"
    },
    "17360": {
      "op": "REVERT"
    },
    "17361": {
      "op": "JUMPDEST"
    },
    "17362": {
      "op": "DUP2"
    },
    "17363": {
      "op": "CALLDATALOAD"
    },
    "17364": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "17367": {
      "op": "DUP2"
    },
    "17368": {
      "op": "PUSH2",
      "value": "0x4984"
    },
    "17371": {
      "jump": "i",
      "op": "JUMP"
    },
    "17372": {
      "op": "JUMPDEST"
    },
    "17373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17377": {
      "op": "DUP3"
    },
    "17378": {
      "op": "DUP5"
    },
    "17379": {
      "op": "SUB"
    },
    "17380": {
      "op": "SLT"
    },
    "17381": {
      "op": "ISZERO"
    },
    "17382": {
      "op": "PUSH2",
      "value": "0x43EE"
    },
    "17385": {
      "op": "JUMPI"
    },
    "17386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17388": {
      "op": "DUP1"
    },
    "17389": {
      "op": "REVERT"
    },
    "17390": {
      "op": "JUMPDEST"
    },
    "17391": {
      "op": "DUP2"
    },
    "17392": {
      "op": "MLOAD"
    },
    "17393": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "17396": {
      "op": "DUP2"
    },
    "17397": {
      "op": "PUSH2",
      "value": "0x4984"
    },
    "17400": {
      "jump": "i",
      "op": "JUMP"
    },
    "17401": {
      "op": "JUMPDEST"
    },
    "17402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17406": {
      "op": "DUP3"
    },
    "17407": {
      "op": "DUP5"
    },
    "17408": {
      "op": "SUB"
    },
    "17409": {
      "op": "SLT"
    },
    "17410": {
      "op": "ISZERO"
    },
    "17411": {
      "op": "PUSH2",
      "value": "0x440B"
    },
    "17414": {
      "op": "JUMPI"
    },
    "17415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17417": {
      "op": "DUP1"
    },
    "17418": {
      "op": "REVERT"
    },
    "17419": {
      "op": "JUMPDEST"
    },
    "17420": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "17423": {
      "op": "DUP3"
    },
    "17424": {
      "op": "PUSH2",
      "value": "0x3DD2"
    },
    "17427": {
      "jump": "i",
      "op": "JUMP"
    },
    "17428": {
      "op": "JUMPDEST"
    },
    "17429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17433": {
      "op": "DUP3"
    },
    "17434": {
      "op": "DUP5"
    },
    "17435": {
      "op": "SUB"
    },
    "17436": {
      "op": "SLT"
    },
    "17437": {
      "op": "ISZERO"
    },
    "17438": {
      "op": "PUSH2",
      "value": "0x4426"
    },
    "17441": {
      "op": "JUMPI"
    },
    "17442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17444": {
      "op": "DUP1"
    },
    "17445": {
      "op": "REVERT"
    },
    "17446": {
      "op": "JUMPDEST"
    },
    "17447": {
      "op": "POP"
    },
    "17448": {
      "op": "CALLDATALOAD"
    },
    "17449": {
      "op": "SWAP2"
    },
    "17450": {
      "op": "SWAP1"
    },
    "17451": {
      "op": "POP"
    },
    "17452": {
      "jump": "o",
      "op": "JUMP"
    },
    "17453": {
      "op": "JUMPDEST"
    },
    "17454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17458": {
      "op": "DUP3"
    },
    "17459": {
      "op": "DUP5"
    },
    "17460": {
      "op": "SUB"
    },
    "17461": {
      "op": "SLT"
    },
    "17462": {
      "op": "ISZERO"
    },
    "17463": {
      "op": "PUSH2",
      "value": "0x443F"
    },
    "17466": {
      "op": "JUMPI"
    },
    "17467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17469": {
      "op": "DUP1"
    },
    "17470": {
      "op": "REVERT"
    },
    "17471": {
      "op": "JUMPDEST"
    },
    "17472": {
      "op": "DUP2"
    },
    "17473": {
      "op": "MLOAD"
    },
    "17474": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "17477": {
      "op": "DUP2"
    },
    "17478": {
      "op": "PUSH2",
      "value": "0x4992"
    },
    "17481": {
      "jump": "i",
      "op": "JUMP"
    },
    "17482": {
      "op": "JUMPDEST"
    },
    "17483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17485": {
      "op": "DUP2"
    },
    "17486": {
      "op": "MLOAD"
    },
    "17487": {
      "op": "DUP1"
    },
    "17488": {
      "op": "DUP5"
    },
    "17489": {
      "op": "MSTORE"
    },
    "17490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17492": {
      "op": "DUP1"
    },
    "17493": {
      "op": "DUP6"
    },
    "17494": {
      "op": "ADD"
    },
    "17495": {
      "op": "SWAP5"
    },
    "17496": {
      "op": "POP"
    },
    "17497": {
      "op": "DUP1"
    },
    "17498": {
      "op": "DUP5"
    },
    "17499": {
      "op": "ADD"
    },
    "17500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17502": {
      "op": "JUMPDEST"
    },
    "17503": {
      "op": "DUP4"
    },
    "17504": {
      "op": "DUP2"
    },
    "17505": {
      "op": "LT"
    },
    "17506": {
      "op": "ISZERO"
    },
    "17507": {
      "op": "PUSH2",
      "value": "0x447A"
    },
    "17510": {
      "op": "JUMPI"
    },
    "17511": {
      "op": "DUP2"
    },
    "17512": {
      "op": "MLOAD"
    },
    "17513": {
      "op": "DUP8"
    },
    "17514": {
      "op": "MSTORE"
    },
    "17515": {
      "op": "SWAP6"
    },
    "17516": {
      "op": "DUP3"
    },
    "17517": {
      "op": "ADD"
    },
    "17518": {
      "op": "SWAP6"
    },
    "17519": {
      "op": "SWAP1"
    },
    "17520": {
      "op": "DUP3"
    },
    "17521": {
      "op": "ADD"
    },
    "17522": {
      "op": "SWAP1"
    },
    "17523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17525": {
      "op": "ADD"
    },
    "17526": {
      "op": "PUSH2",
      "value": "0x445E"
    },
    "17529": {
      "op": "JUMP"
    },
    "17530": {
      "op": "JUMPDEST"
    },
    "17531": {
      "op": "POP"
    },
    "17532": {
      "op": "SWAP5"
    },
    "17533": {
      "op": "SWAP6"
    },
    "17534": {
      "op": "SWAP5"
    },
    "17535": {
      "op": "POP"
    },
    "17536": {
      "op": "POP"
    },
    "17537": {
      "op": "POP"
    },
    "17538": {
      "op": "POP"
    },
    "17539": {
      "op": "POP"
    },
    "17540": {
      "jump": "o",
      "op": "JUMP"
    },
    "17541": {
      "op": "JUMPDEST"
    },
    "17542": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17544": {
      "op": "SWAP4"
    },
    "17545": {
      "op": "SWAP1"
    },
    "17546": {
      "op": "SWAP4"
    },
    "17547": {
      "op": "SHL"
    },
    "17548": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "17561": {
      "op": "NOT"
    },
    "17562": {
      "op": "AND"
    },
    "17563": {
      "op": "DUP4"
    },
    "17564": {
      "op": "MSTORE"
    },
    "17565": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17567": {
      "op": "DUP4"
    },
    "17568": {
      "op": "ADD"
    },
    "17569": {
      "op": "SWAP2"
    },
    "17570": {
      "op": "SWAP1"
    },
    "17571": {
      "op": "SWAP2"
    },
    "17572": {
      "op": "MSTORE"
    },
    "17573": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "17575": {
      "op": "DUP3"
    },
    "17576": {
      "op": "ADD"
    },
    "17577": {
      "op": "MSTORE"
    },
    "17578": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "17580": {
      "op": "ADD"
    },
    "17581": {
      "op": "SWAP1"
    },
    "17582": {
      "jump": "o",
      "op": "JUMP"
    },
    "17583": {
      "op": "JUMPDEST"
    },
    "17584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17586": {
      "op": "DUP3"
    },
    "17587": {
      "op": "MLOAD"
    },
    "17588": {
      "op": "PUSH2",
      "value": "0x44C1"
    },
    "17591": {
      "op": "DUP2"
    },
    "17592": {
      "op": "DUP5"
    },
    "17593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17595": {
      "op": "DUP8"
    },
    "17596": {
      "op": "ADD"
    },
    "17597": {
      "op": "PUSH2",
      "value": "0x48D0"
    },
    "17600": {
      "jump": "i",
      "op": "JUMP"
    },
    "17601": {
      "op": "JUMPDEST"
    },
    "17602": {
      "op": "SWAP2"
    },
    "17603": {
      "op": "SWAP1"
    },
    "17604": {
      "op": "SWAP2"
    },
    "17605": {
      "op": "ADD"
    },
    "17606": {
      "op": "SWAP3"
    },
    "17607": {
      "op": "SWAP2"
    },
    "17608": {
      "op": "POP"
    },
    "17609": {
      "op": "POP"
    },
    "17610": {
      "jump": "o",
      "op": "JUMP"
    },
    "17611": {
      "op": "JUMPDEST"
    },
    "17612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17618": {
      "op": "SHL"
    },
    "17619": {
      "op": "SUB"
    },
    "17620": {
      "op": "DUP6"
    },
    "17621": {
      "op": "DUP2"
    },
    "17622": {
      "op": "AND"
    },
    "17623": {
      "op": "DUP3"
    },
    "17624": {
      "op": "MSTORE"
    },
    "17625": {
      "op": "DUP5"
    },
    "17626": {
      "op": "AND"
    },
    "17627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17629": {
      "op": "DUP3"
    },
    "17630": {
      "op": "ADD"
    },
    "17631": {
      "op": "MSTORE"
    },
    "17632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17636": {
      "op": "DUP3"
    },
    "17637": {
      "op": "ADD"
    },
    "17638": {
      "op": "DUP2"
    },
    "17639": {
      "op": "SWAP1"
    },
    "17640": {
      "op": "MSTORE"
    },
    "17641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17643": {
      "op": "SWAP1"
    },
    "17644": {
      "op": "PUSH2",
      "value": "0x44F7"
    },
    "17647": {
      "op": "SWAP1"
    },
    "17648": {
      "op": "DUP4"
    },
    "17649": {
      "op": "ADD"
    },
    "17650": {
      "op": "DUP6"
    },
    "17651": {
      "op": "PUSH2",
      "value": "0x444A"
    },
    "17654": {
      "jump": "i",
      "op": "JUMP"
    },
    "17655": {
      "op": "JUMPDEST"
    },
    "17656": {
      "op": "DUP3"
    },
    "17657": {
      "op": "DUP2"
    },
    "17658": {
      "op": "SUB"
    },
    "17659": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17661": {
      "op": "DUP5"
    },
    "17662": {
      "op": "ADD"
    },
    "17663": {
      "op": "MSTORE"
    },
    "17664": {
      "op": "PUSH2",
      "value": "0x4509"
    },
    "17667": {
      "op": "DUP2"
    },
    "17668": {
      "op": "DUP6"
    },
    "17669": {
      "op": "PUSH2",
      "value": "0x444A"
    },
    "17672": {
      "jump": "i",
      "op": "JUMP"
    },
    "17673": {
      "op": "JUMPDEST"
    },
    "17674": {
      "op": "DUP4"
    },
    "17675": {
      "op": "DUP2"
    },
    "17676": {
      "op": "SUB"
    },
    "17677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17679": {
      "op": "SWAP1"
    },
    "17680": {
      "op": "SWAP5"
    },
    "17681": {
      "op": "ADD"
    },
    "17682": {
      "op": "SWAP4"
    },
    "17683": {
      "op": "SWAP1"
    },
    "17684": {
      "op": "SWAP4"
    },
    "17685": {
      "op": "MSTORE"
    },
    "17686": {
      "op": "POP"
    },
    "17687": {
      "op": "POP"
    },
    "17688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17690": {
      "op": "DUP2"
    },
    "17691": {
      "op": "MSTORE"
    },
    "17692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17694": {
      "op": "ADD"
    },
    "17695": {
      "op": "SWAP5"
    },
    "17696": {
      "op": "SWAP4"
    },
    "17697": {
      "op": "POP"
    },
    "17698": {
      "op": "POP"
    },
    "17699": {
      "op": "POP"
    },
    "17700": {
      "op": "POP"
    },
    "17701": {
      "jump": "o",
      "op": "JUMP"
    },
    "17702": {
      "op": "JUMPDEST"
    },
    "17703": {
      "op": "DUP7"
    },
    "17704": {
      "op": "ISZERO"
    },
    "17705": {
      "op": "ISZERO"
    },
    "17706": {
      "op": "DUP2"
    },
    "17707": {
      "op": "MSTORE"
    },
    "17708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17710": {
      "op": "DUP2"
    },
    "17711": {
      "op": "ADD"
    },
    "17712": {
      "op": "DUP7"
    },
    "17713": {
      "op": "SWAP1"
    },
    "17714": {
      "op": "MSTORE"
    },
    "17715": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17717": {
      "op": "DUP6"
    },
    "17718": {
      "op": "DUP2"
    },
    "17719": {
      "op": "AND"
    },
    "17720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17722": {
      "op": "DUP4"
    },
    "17723": {
      "op": "ADD"
    },
    "17724": {
      "op": "MSTORE"
    },
    "17725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17731": {
      "op": "SHL"
    },
    "17732": {
      "op": "SUB"
    },
    "17733": {
      "op": "NOT"
    },
    "17734": {
      "op": "DUP6"
    },
    "17735": {
      "op": "AND"
    },
    "17736": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17738": {
      "op": "DUP4"
    },
    "17739": {
      "op": "ADD"
    },
    "17740": {
      "op": "MSTORE"
    },
    "17741": {
      "op": "DUP4"
    },
    "17742": {
      "op": "AND"
    },
    "17743": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17745": {
      "op": "DUP3"
    },
    "17746": {
      "op": "ADD"
    },
    "17747": {
      "op": "MSTORE"
    },
    "17748": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17750": {
      "op": "DUP2"
    },
    "17751": {
      "op": "ADD"
    },
    "17752": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17754": {
      "op": "DUP4"
    },
    "17755": {
      "op": "LT"
    },
    "17756": {
      "op": "PUSH2",
      "value": "0x4575"
    },
    "17759": {
      "op": "JUMPI"
    },
    "17760": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17765": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17767": {
      "op": "SHL"
    },
    "17768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17770": {
      "op": "MSTORE"
    },
    "17771": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "17773": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17775": {
      "op": "MSTORE"
    },
    "17776": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17780": {
      "op": "REVERT"
    },
    "17781": {
      "op": "JUMPDEST"
    },
    "17782": {
      "op": "DUP3"
    },
    "17783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17785": {
      "op": "DUP4"
    },
    "17786": {
      "op": "ADD"
    },
    "17787": {
      "op": "MSTORE"
    },
    "17788": {
      "op": "SWAP8"
    },
    "17789": {
      "op": "SWAP7"
    },
    "17790": {
      "op": "POP"
    },
    "17791": {
      "op": "POP"
    },
    "17792": {
      "op": "POP"
    },
    "17793": {
      "op": "POP"
    },
    "17794": {
      "op": "POP"
    },
    "17795": {
      "op": "POP"
    },
    "17796": {
      "op": "POP"
    },
    "17797": {
      "jump": "o",
      "op": "JUMP"
    },
    "17798": {
      "op": "JUMPDEST"
    },
    "17799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17801": {
      "op": "DUP2"
    },
    "17802": {
      "op": "MSTORE"
    },
    "17803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17805": {
      "op": "DUP3"
    },
    "17806": {
      "op": "MLOAD"
    },
    "17807": {
      "op": "DUP1"
    },
    "17808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17810": {
      "op": "DUP5"
    },
    "17811": {
      "op": "ADD"
    },
    "17812": {
      "op": "MSTORE"
    },
    "17813": {
      "op": "PUSH2",
      "value": "0x45A5"
    },
    "17816": {
      "op": "DUP2"
    },
    "17817": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17819": {
      "op": "DUP6"
    },
    "17820": {
      "op": "ADD"
    },
    "17821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17823": {
      "op": "DUP8"
    },
    "17824": {
      "op": "ADD"
    },
    "17825": {
      "op": "PUSH2",
      "value": "0x48D0"
    },
    "17828": {
      "jump": "i",
      "op": "JUMP"
    },
    "17829": {
      "op": "JUMPDEST"
    },
    "17830": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17832": {
      "op": "ADD"
    },
    "17833": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17835": {
      "op": "NOT"
    },
    "17836": {
      "op": "AND"
    },
    "17837": {
      "op": "SWAP2"
    },
    "17838": {
      "op": "SWAP1"
    },
    "17839": {
      "op": "SWAP2"
    },
    "17840": {
      "op": "ADD"
    },
    "17841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17843": {
      "op": "ADD"
    },
    "17844": {
      "op": "SWAP3"
    },
    "17845": {
      "op": "SWAP2"
    },
    "17846": {
      "op": "POP"
    },
    "17847": {
      "op": "POP"
    },
    "17848": {
      "jump": "o",
      "op": "JUMP"
    },
    "17849": {
      "op": "JUMPDEST"
    },
    "17850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17852": {
      "op": "DUP1"
    },
    "17853": {
      "op": "DUP3"
    },
    "17854": {
      "op": "MSTORE"
    },
    "17855": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "17857": {
      "op": "SWAP1"
    },
    "17858": {
      "op": "DUP3"
    },
    "17859": {
      "op": "ADD"
    },
    "17860": {
      "op": "MSTORE"
    },
    "17861": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000"
    },
    "17894": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17896": {
      "op": "DUP3"
    },
    "17897": {
      "op": "ADD"
    },
    "17898": {
      "op": "MSTORE"
    },
    "17899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17901": {
      "op": "ADD"
    },
    "17902": {
      "op": "SWAP1"
    },
    "17903": {
      "jump": "o",
      "op": "JUMP"
    },
    "17904": {
      "op": "JUMPDEST"
    },
    "17905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17907": {
      "op": "DUP1"
    },
    "17908": {
      "op": "DUP3"
    },
    "17909": {
      "op": "MSTORE"
    },
    "17910": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "17912": {
      "op": "SWAP1"
    },
    "17913": {
      "op": "DUP3"
    },
    "17914": {
      "op": "ADD"
    },
    "17915": {
      "op": "MSTORE"
    },
    "17916": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000"
    },
    "17949": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17951": {
      "op": "DUP3"
    },
    "17952": {
      "op": "ADD"
    },
    "17953": {
      "op": "MSTORE"
    },
    "17954": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17956": {
      "op": "ADD"
    },
    "17957": {
      "op": "SWAP1"
    },
    "17958": {
      "jump": "o",
      "op": "JUMP"
    },
    "17959": {
      "op": "JUMPDEST"
    },
    "17960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17962": {
      "op": "DUP1"
    },
    "17963": {
      "op": "DUP3"
    },
    "17964": {
      "op": "MSTORE"
    },
    "17965": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "17967": {
      "op": "SWAP1"
    },
    "17968": {
      "op": "DUP3"
    },
    "17969": {
      "op": "ADD"
    },
    "17970": {
      "op": "MSTORE"
    },
    "17971": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000"
    },
    "18004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18006": {
      "op": "DUP3"
    },
    "18007": {
      "op": "ADD"
    },
    "18008": {
      "op": "MSTORE"
    },
    "18009": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18011": {
      "op": "ADD"
    },
    "18012": {
      "op": "SWAP1"
    },
    "18013": {
      "jump": "o",
      "op": "JUMP"
    },
    "18014": {
      "op": "JUMPDEST"
    },
    "18015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18017": {
      "op": "DUP1"
    },
    "18018": {
      "op": "DUP3"
    },
    "18019": {
      "op": "MSTORE"
    },
    "18020": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "18022": {
      "op": "SWAP1"
    },
    "18023": {
      "op": "DUP3"
    },
    "18024": {
      "op": "ADD"
    },
    "18025": {
      "op": "MSTORE"
    },
    "18026": {
      "op": "PUSH16",
      "value": "0xA4CA9C8CA87474DCDEE840EAD2DCE87"
    },
    "18043": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "18045": {
      "op": "SHL"
    },
    "18046": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18048": {
      "op": "DUP3"
    },
    "18049": {
      "op": "ADD"
    },
    "18050": {
      "op": "MSTORE"
    },
    "18051": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18053": {
      "op": "ADD"
    },
    "18054": {
      "op": "SWAP1"
    },
    "18055": {
      "jump": "o",
      "op": "JUMP"
    },
    "18056": {
      "op": "JUMPDEST"
    },
    "18057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18059": {
      "op": "DUP1"
    },
    "18060": {
      "op": "DUP3"
    },
    "18061": {
      "op": "MSTORE"
    },
    "18062": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "18064": {
      "op": "SWAP1"
    },
    "18065": {
      "op": "DUP3"
    },
    "18066": {
      "op": "ADD"
    },
    "18067": {
      "op": "MSTORE"
    },
    "18068": {
      "op": "PUSH13",
      "value": "0x14995391950E8E9C185D5CD959"
    },
    "18082": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "18084": {
      "op": "SHL"
    },
    "18085": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18087": {
      "op": "DUP3"
    },
    "18088": {
      "op": "ADD"
    },
    "18089": {
      "op": "MSTORE"
    },
    "18090": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18092": {
      "op": "ADD"
    },
    "18093": {
      "op": "SWAP1"
    },
    "18094": {
      "jump": "o",
      "op": "JUMP"
    },
    "18095": {
      "op": "JUMPDEST"
    },
    "18096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18098": {
      "op": "DUP1"
    },
    "18099": {
      "op": "DUP3"
    },
    "18100": {
      "op": "MSTORE"
    },
    "18101": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "18103": {
      "op": "SWAP1"
    },
    "18104": {
      "op": "DUP3"
    },
    "18105": {
      "op": "ADD"
    },
    "18106": {
      "op": "MSTORE"
    },
    "18107": {
      "op": "PUSH16",
      "value": "0x2932A7232A1D1D3737BA1030B236B4B7"
    },
    "18124": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "18126": {
      "op": "SHL"
    },
    "18127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18129": {
      "op": "DUP3"
    },
    "18130": {
      "op": "ADD"
    },
    "18131": {
      "op": "MSTORE"
    },
    "18132": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18134": {
      "op": "ADD"
    },
    "18135": {
      "op": "SWAP1"
    },
    "18136": {
      "jump": "o",
      "op": "JUMP"
    },
    "18137": {
      "op": "JUMPDEST"
    },
    "18138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18140": {
      "op": "MLOAD"
    },
    "18141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18143": {
      "op": "DUP3"
    },
    "18144": {
      "op": "ADD"
    },
    "18145": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18147": {
      "op": "NOT"
    },
    "18148": {
      "op": "AND"
    },
    "18149": {
      "op": "DUP2"
    },
    "18150": {
      "op": "ADD"
    },
    "18151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18155": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18157": {
      "op": "SHL"
    },
    "18158": {
      "op": "SUB"
    },
    "18159": {
      "op": "DUP2"
    },
    "18160": {
      "op": "GT"
    },
    "18161": {
      "op": "DUP3"
    },
    "18162": {
      "op": "DUP3"
    },
    "18163": {
      "op": "LT"
    },
    "18164": {
      "op": "OR"
    },
    "18165": {
      "op": "ISZERO"
    },
    "18166": {
      "op": "PUSH2",
      "value": "0x4701"
    },
    "18169": {
      "op": "JUMPI"
    },
    "18170": {
      "op": "PUSH2",
      "value": "0x4701"
    },
    "18173": {
      "op": "PUSH2",
      "value": "0x4959"
    },
    "18176": {
      "jump": "i",
      "op": "JUMP"
    },
    "18177": {
      "op": "JUMPDEST"
    },
    "18178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18180": {
      "op": "MSTORE"
    },
    "18181": {
      "op": "SWAP2"
    },
    "18182": {
      "op": "SWAP1"
    },
    "18183": {
      "op": "POP"
    },
    "18184": {
      "jump": "o",
      "op": "JUMP"
    },
    "18185": {
      "op": "JUMPDEST"
    },
    "18186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18192": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18194": {
      "op": "SHL"
    },
    "18195": {
      "op": "SUB"
    },
    "18196": {
      "op": "DUP3"
    },
    "18197": {
      "op": "GT"
    },
    "18198": {
      "op": "ISZERO"
    },
    "18199": {
      "op": "PUSH2",
      "value": "0x4722"
    },
    "18202": {
      "op": "JUMPI"
    },
    "18203": {
      "op": "PUSH2",
      "value": "0x4722"
    },
    "18206": {
      "op": "PUSH2",
      "value": "0x4959"
    },
    "18209": {
      "jump": "i",
      "op": "JUMP"
    },
    "18210": {
      "op": "JUMPDEST"
    },
    "18211": {
      "op": "POP"
    },
    "18212": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18214": {
      "op": "SHL"
    },
    "18215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18217": {
      "op": "ADD"
    },
    "18218": {
      "op": "SWAP1"
    },
    "18219": {
      "jump": "o",
      "op": "JUMP"
    },
    "18220": {
      "op": "JUMPDEST"
    },
    "18221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18223": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18226": {
      "op": "DUP1"
    },
    "18227": {
      "op": "DUP4"
    },
    "18228": {
      "op": "AND"
    },
    "18229": {
      "op": "DUP2"
    },
    "18230": {
      "op": "DUP6"
    },
    "18231": {
      "op": "AND"
    },
    "18232": {
      "op": "DUP1"
    },
    "18233": {
      "op": "DUP4"
    },
    "18234": {
      "op": "SUB"
    },
    "18235": {
      "op": "DUP3"
    },
    "18236": {
      "op": "GT"
    },
    "18237": {
      "op": "ISZERO"
    },
    "18238": {
      "op": "PUSH2",
      "value": "0x4749"
    },
    "18241": {
      "op": "JUMPI"
    },
    "18242": {
      "op": "PUSH2",
      "value": "0x4749"
    },
    "18245": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18248": {
      "jump": "i",
      "op": "JUMP"
    },
    "18249": {
      "op": "JUMPDEST"
    },
    "18250": {
      "op": "ADD"
    },
    "18251": {
      "op": "SWAP5"
    },
    "18252": {
      "op": "SWAP4"
    },
    "18253": {
      "op": "POP"
    },
    "18254": {
      "op": "POP"
    },
    "18255": {
      "op": "POP"
    },
    "18256": {
      "op": "POP"
    },
    "18257": {
      "jump": "o",
      "op": "JUMP"
    },
    "18258": {
      "op": "JUMPDEST"
    },
    "18259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18261": {
      "op": "DUP3"
    },
    "18262": {
      "op": "NOT"
    },
    "18263": {
      "op": "DUP3"
    },
    "18264": {
      "op": "GT"
    },
    "18265": {
      "op": "ISZERO"
    },
    "18266": {
      "op": "PUSH2",
      "value": "0x4765"
    },
    "18269": {
      "op": "JUMPI"
    },
    "18270": {
      "op": "PUSH2",
      "value": "0x4765"
    },
    "18273": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18276": {
      "jump": "i",
      "op": "JUMP"
    },
    "18277": {
      "op": "JUMPDEST"
    },
    "18278": {
      "op": "POP"
    },
    "18279": {
      "op": "ADD"
    },
    "18280": {
      "op": "SWAP1"
    },
    "18281": {
      "jump": "o",
      "op": "JUMP"
    },
    "18282": {
      "op": "JUMPDEST"
    },
    "18283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18285": {
      "op": "DUP3"
    },
    "18286": {
      "op": "PUSH2",
      "value": "0x4787"
    },
    "18289": {
      "op": "JUMPI"
    },
    "18290": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18297": {
      "op": "SHL"
    },
    "18298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18300": {
      "op": "MSTORE"
    },
    "18301": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "18303": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18305": {
      "op": "MSTORE"
    },
    "18306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18310": {
      "op": "REVERT"
    },
    "18311": {
      "op": "JUMPDEST"
    },
    "18312": {
      "op": "POP"
    },
    "18313": {
      "op": "DIV"
    },
    "18314": {
      "op": "SWAP1"
    },
    "18315": {
      "jump": "o",
      "op": "JUMP"
    },
    "18316": {
      "op": "JUMPDEST"
    },
    "18317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18319": {
      "op": "DUP2"
    },
    "18320": {
      "op": "DUP2"
    },
    "18321": {
      "op": "JUMPDEST"
    },
    "18322": {
      "op": "DUP1"
    },
    "18323": {
      "op": "DUP6"
    },
    "18324": {
      "op": "GT"
    },
    "18325": {
      "op": "ISZERO"
    },
    "18326": {
      "op": "PUSH2",
      "value": "0x47C7"
    },
    "18329": {
      "op": "JUMPI"
    },
    "18330": {
      "op": "DUP2"
    },
    "18331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18333": {
      "op": "NOT"
    },
    "18334": {
      "op": "DIV"
    },
    "18335": {
      "op": "DUP3"
    },
    "18336": {
      "op": "GT"
    },
    "18337": {
      "op": "ISZERO"
    },
    "18338": {
      "op": "PUSH2",
      "value": "0x47AD"
    },
    "18341": {
      "op": "JUMPI"
    },
    "18342": {
      "op": "PUSH2",
      "value": "0x47AD"
    },
    "18345": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18348": {
      "jump": "i",
      "op": "JUMP"
    },
    "18349": {
      "op": "JUMPDEST"
    },
    "18350": {
      "op": "DUP1"
    },
    "18351": {
      "op": "DUP6"
    },
    "18352": {
      "op": "AND"
    },
    "18353": {
      "op": "ISZERO"
    },
    "18354": {
      "op": "PUSH2",
      "value": "0x47BA"
    },
    "18357": {
      "op": "JUMPI"
    },
    "18358": {
      "op": "SWAP2"
    },
    "18359": {
      "op": "DUP2"
    },
    "18360": {
      "op": "MUL"
    },
    "18361": {
      "op": "SWAP2"
    },
    "18362": {
      "op": "JUMPDEST"
    },
    "18363": {
      "op": "SWAP4"
    },
    "18364": {
      "op": "DUP5"
    },
    "18365": {
      "op": "SHR"
    },
    "18366": {
      "op": "SWAP4"
    },
    "18367": {
      "op": "SWAP1"
    },
    "18368": {
      "op": "DUP1"
    },
    "18369": {
      "op": "MUL"
    },
    "18370": {
      "op": "SWAP1"
    },
    "18371": {
      "op": "PUSH2",
      "value": "0x4791"
    },
    "18374": {
      "op": "JUMP"
    },
    "18375": {
      "op": "JUMPDEST"
    },
    "18376": {
      "op": "POP"
    },
    "18377": {
      "op": "SWAP3"
    },
    "18378": {
      "op": "POP"
    },
    "18379": {
      "op": "SWAP3"
    },
    "18380": {
      "op": "SWAP1"
    },
    "18381": {
      "op": "POP"
    },
    "18382": {
      "jump": "o",
      "op": "JUMP"
    },
    "18383": {
      "op": "JUMPDEST"
    },
    "18384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18386": {
      "op": "PUSH2",
      "value": "0x396F"
    },
    "18389": {
      "op": "DUP4"
    },
    "18390": {
      "op": "DUP4"
    },
    "18391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18393": {
      "op": "DUP3"
    },
    "18394": {
      "op": "PUSH2",
      "value": "0x47E5"
    },
    "18397": {
      "op": "JUMPI"
    },
    "18398": {
      "op": "POP"
    },
    "18399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18401": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18404": {
      "op": "JUMP"
    },
    "18405": {
      "op": "JUMPDEST"
    },
    "18406": {
      "op": "DUP2"
    },
    "18407": {
      "op": "PUSH2",
      "value": "0x47F2"
    },
    "18410": {
      "op": "JUMPI"
    },
    "18411": {
      "op": "POP"
    },
    "18412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18414": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18417": {
      "op": "JUMP"
    },
    "18418": {
      "op": "JUMPDEST"
    },
    "18419": {
      "op": "DUP2"
    },
    "18420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18422": {
      "op": "DUP2"
    },
    "18423": {
      "op": "EQ"
    },
    "18424": {
      "op": "PUSH2",
      "value": "0x4808"
    },
    "18427": {
      "op": "JUMPI"
    },
    "18428": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "18430": {
      "op": "DUP2"
    },
    "18431": {
      "op": "EQ"
    },
    "18432": {
      "op": "PUSH2",
      "value": "0x4812"
    },
    "18435": {
      "op": "JUMPI"
    },
    "18436": {
      "op": "PUSH2",
      "value": "0x482E"
    },
    "18439": {
      "op": "JUMP"
    },
    "18440": {
      "op": "JUMPDEST"
    },
    "18441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18443": {
      "op": "SWAP2"
    },
    "18444": {
      "op": "POP"
    },
    "18445": {
      "op": "POP"
    },
    "18446": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18449": {
      "op": "JUMP"
    },
    "18450": {
      "op": "JUMPDEST"
    },
    "18451": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18453": {
      "op": "DUP5"
    },
    "18454": {
      "op": "GT"
    },
    "18455": {
      "op": "ISZERO"
    },
    "18456": {
      "op": "PUSH2",
      "value": "0x4823"
    },
    "18459": {
      "op": "JUMPI"
    },
    "18460": {
      "op": "PUSH2",
      "value": "0x4823"
    },
    "18463": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18466": {
      "jump": "i",
      "op": "JUMP"
    },
    "18467": {
      "op": "JUMPDEST"
    },
    "18468": {
      "op": "POP"
    },
    "18469": {
      "op": "POP"
    },
    "18470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18472": {
      "op": "DUP3"
    },
    "18473": {
      "op": "SHL"
    },
    "18474": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18477": {
      "op": "JUMP"
    },
    "18478": {
      "op": "JUMPDEST"
    },
    "18479": {
      "op": "POP"
    },
    "18480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18482": {
      "op": "DUP4"
    },
    "18483": {
      "op": "LT"
    },
    "18484": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "18487": {
      "op": "DUP4"
    },
    "18488": {
      "op": "LT"
    },
    "18489": {
      "op": "AND"
    },
    "18490": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "18492": {
      "op": "DUP5"
    },
    "18493": {
      "op": "LT"
    },
    "18494": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "18496": {
      "op": "DUP5"
    },
    "18497": {
      "op": "LT"
    },
    "18498": {
      "op": "AND"
    },
    "18499": {
      "op": "OR"
    },
    "18500": {
      "op": "ISZERO"
    },
    "18501": {
      "op": "PUSH2",
      "value": "0x4851"
    },
    "18504": {
      "op": "JUMPI"
    },
    "18505": {
      "op": "POP"
    },
    "18506": {
      "op": "DUP2"
    },
    "18507": {
      "op": "DUP2"
    },
    "18508": {
      "op": "EXP"
    },
    "18509": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18512": {
      "op": "JUMP"
    },
    "18513": {
      "op": "JUMPDEST"
    },
    "18514": {
      "op": "PUSH2",
      "value": "0x485B"
    },
    "18517": {
      "op": "DUP4"
    },
    "18518": {
      "op": "DUP4"
    },
    "18519": {
      "op": "PUSH2",
      "value": "0x478C"
    },
    "18522": {
      "jump": "i",
      "op": "JUMP"
    },
    "18523": {
      "op": "JUMPDEST"
    },
    "18524": {
      "op": "DUP1"
    },
    "18525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18527": {
      "op": "NOT"
    },
    "18528": {
      "op": "DIV"
    },
    "18529": {
      "op": "DUP3"
    },
    "18530": {
      "op": "GT"
    },
    "18531": {
      "op": "ISZERO"
    },
    "18532": {
      "op": "PUSH2",
      "value": "0x486F"
    },
    "18535": {
      "op": "JUMPI"
    },
    "18536": {
      "op": "PUSH2",
      "value": "0x486F"
    },
    "18539": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18542": {
      "jump": "i",
      "op": "JUMP"
    },
    "18543": {
      "op": "JUMPDEST"
    },
    "18544": {
      "op": "MUL"
    },
    "18545": {
      "op": "SWAP4"
    },
    "18546": {
      "op": "SWAP3"
    },
    "18547": {
      "op": "POP"
    },
    "18548": {
      "op": "POP"
    },
    "18549": {
      "op": "POP"
    },
    "18550": {
      "jump": "o",
      "op": "JUMP"
    },
    "18551": {
      "op": "JUMPDEST"
    },
    "18552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18554": {
      "op": "DUP2"
    },
    "18555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18557": {
      "op": "NOT"
    },
    "18558": {
      "op": "DIV"
    },
    "18559": {
      "op": "DUP4"
    },
    "18560": {
      "op": "GT"
    },
    "18561": {
      "op": "DUP3"
    },
    "18562": {
      "op": "ISZERO"
    },
    "18563": {
      "op": "ISZERO"
    },
    "18564": {
      "op": "AND"
    },
    "18565": {
      "op": "ISZERO"
    },
    "18566": {
      "op": "PUSH2",
      "value": "0x4891"
    },
    "18569": {
      "op": "JUMPI"
    },
    "18570": {
      "op": "PUSH2",
      "value": "0x4891"
    },
    "18573": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18576": {
      "jump": "i",
      "op": "JUMP"
    },
    "18577": {
      "op": "JUMPDEST"
    },
    "18578": {
      "op": "POP"
    },
    "18579": {
      "op": "MUL"
    },
    "18580": {
      "op": "SWAP1"
    },
    "18581": {
      "jump": "o",
      "op": "JUMP"
    },
    "18582": {
      "op": "JUMPDEST"
    },
    "18583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18585": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18588": {
      "op": "DUP4"
    },
    "18589": {
      "op": "DUP2"
    },
    "18590": {
      "op": "AND"
    },
    "18591": {
      "op": "SWAP1"
    },
    "18592": {
      "op": "DUP4"
    },
    "18593": {
      "op": "AND"
    },
    "18594": {
      "op": "DUP2"
    },
    "18595": {
      "op": "DUP2"
    },
    "18596": {
      "op": "LT"
    },
    "18597": {
      "op": "ISZERO"
    },
    "18598": {
      "op": "PUSH2",
      "value": "0x48B1"
    },
    "18601": {
      "op": "JUMPI"
    },
    "18602": {
      "op": "PUSH2",
      "value": "0x48B1"
    },
    "18605": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18608": {
      "jump": "i",
      "op": "JUMP"
    },
    "18609": {
      "op": "JUMPDEST"
    },
    "18610": {
      "op": "SUB"
    },
    "18611": {
      "op": "SWAP4"
    },
    "18612": {
      "op": "SWAP3"
    },
    "18613": {
      "op": "POP"
    },
    "18614": {
      "op": "POP"
    },
    "18615": {
      "op": "POP"
    },
    "18616": {
      "jump": "o",
      "op": "JUMP"
    },
    "18617": {
      "op": "JUMPDEST"
    },
    "18618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18620": {
      "op": "DUP3"
    },
    "18621": {
      "op": "DUP3"
    },
    "18622": {
      "op": "LT"
    },
    "18623": {
      "op": "ISZERO"
    },
    "18624": {
      "op": "PUSH2",
      "value": "0x48CB"
    },
    "18627": {
      "op": "JUMPI"
    },
    "18628": {
      "op": "PUSH2",
      "value": "0x48CB"
    },
    "18631": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18634": {
      "jump": "i",
      "op": "JUMP"
    },
    "18635": {
      "op": "JUMPDEST"
    },
    "18636": {
      "op": "POP"
    },
    "18637": {
      "op": "SUB"
    },
    "18638": {
      "op": "SWAP1"
    },
    "18639": {
      "jump": "o",
      "op": "JUMP"
    },
    "18640": {
      "op": "JUMPDEST"
    },
    "18641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18643": {
      "op": "JUMPDEST"
    },
    "18644": {
      "op": "DUP4"
    },
    "18645": {
      "op": "DUP2"
    },
    "18646": {
      "op": "LT"
    },
    "18647": {
      "op": "ISZERO"
    },
    "18648": {
      "op": "PUSH2",
      "value": "0x48EB"
    },
    "18651": {
      "op": "JUMPI"
    },
    "18652": {
      "op": "DUP2"
    },
    "18653": {
      "op": "DUP2"
    },
    "18654": {
      "op": "ADD"
    },
    "18655": {
      "op": "MLOAD"
    },
    "18656": {
      "op": "DUP4"
    },
    "18657": {
      "op": "DUP3"
    },
    "18658": {
      "op": "ADD"
    },
    "18659": {
      "op": "MSTORE"
    },
    "18660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18662": {
      "op": "ADD"
    },
    "18663": {
      "op": "PUSH2",
      "value": "0x48D3"
    },
    "18666": {
      "op": "JUMP"
    },
    "18667": {
      "op": "JUMPDEST"
    },
    "18668": {
      "op": "DUP4"
    },
    "18669": {
      "op": "DUP2"
    },
    "18670": {
      "op": "GT"
    },
    "18671": {
      "op": "ISZERO"
    },
    "18672": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "18675": {
      "op": "JUMPI"
    },
    "18676": {
      "op": "POP"
    },
    "18677": {
      "op": "POP"
    },
    "18678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18680": {
      "op": "SWAP2"
    },
    "18681": {
      "op": "ADD"
    },
    "18682": {
      "op": "MSTORE"
    },
    "18683": {
      "jump": "o",
      "op": "JUMP"
    },
    "18684": {
      "op": "JUMPDEST"
    },
    "18685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18689": {
      "op": "NOT"
    },
    "18690": {
      "op": "DUP3"
    },
    "18691": {
      "op": "EQ"
    },
    "18692": {
      "op": "ISZERO"
    },
    "18693": {
      "op": "PUSH2",
      "value": "0x4910"
    },
    "18696": {
      "op": "JUMPI"
    },
    "18697": {
      "op": "PUSH2",
      "value": "0x4910"
    },
    "18700": {
      "op": "PUSH2",
      "value": "0x4917"
    },
    "18703": {
      "jump": "i",
      "op": "JUMP"
    },
    "18704": {
      "op": "JUMPDEST"
    },
    "18705": {
      "op": "POP"
    },
    "18706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18708": {
      "op": "ADD"
    },
    "18709": {
      "op": "SWAP1"
    },
    "18710": {
      "jump": "o",
      "op": "JUMP"
    },
    "18711": {
      "op": "JUMPDEST"
    },
    "18712": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18719": {
      "op": "SHL"
    },
    "18720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18722": {
      "op": "MSTORE"
    },
    "18723": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "18725": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18727": {
      "op": "MSTORE"
    },
    "18728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18732": {
      "op": "REVERT"
    },
    "18733": {
      "op": "JUMPDEST"
    },
    "18734": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18741": {
      "op": "SHL"
    },
    "18742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18744": {
      "op": "MSTORE"
    },
    "18745": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "18747": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18749": {
      "op": "MSTORE"
    },
    "18750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18754": {
      "op": "REVERT"
    },
    "18755": {
      "op": "JUMPDEST"
    },
    "18756": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18761": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18763": {
      "op": "SHL"
    },
    "18764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18766": {
      "op": "MSTORE"
    },
    "18767": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "18769": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18771": {
      "op": "MSTORE"
    },
    "18772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18776": {
      "op": "REVERT"
    },
    "18777": {
      "op": "JUMPDEST"
    },
    "18778": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18785": {
      "op": "SHL"
    },
    "18786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18788": {
      "op": "MSTORE"
    },
    "18789": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "18791": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18793": {
      "op": "MSTORE"
    },
    "18794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18798": {
      "op": "REVERT"
    },
    "18799": {
      "op": "JUMPDEST"
    },
    "18800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18806": {
      "op": "SHL"
    },
    "18807": {
      "op": "SUB"
    },
    "18808": {
      "op": "DUP2"
    },
    "18809": {
      "op": "AND"
    },
    "18810": {
      "op": "DUP2"
    },
    "18811": {
      "op": "EQ"
    },
    "18812": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "18815": {
      "op": "JUMPI"
    },
    "18816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18818": {
      "op": "DUP1"
    },
    "18819": {
      "op": "REVERT"
    },
    "18820": {
      "op": "JUMPDEST"
    },
    "18821": {
      "op": "DUP1"
    },
    "18822": {
      "op": "ISZERO"
    },
    "18823": {
      "op": "ISZERO"
    },
    "18824": {
      "op": "DUP2"
    },
    "18825": {
      "op": "EQ"
    },
    "18826": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "18829": {
      "op": "JUMPI"
    },
    "18830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18832": {
      "op": "DUP1"
    },
    "18833": {
      "op": "REVERT"
    },
    "18834": {
      "op": "JUMPDEST"
    },
    "18835": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18837": {
      "op": "DUP2"
    },
    "18838": {
      "op": "AND"
    },
    "18839": {
      "op": "DUP2"
    },
    "18840": {
      "op": "EQ"
    },
    "18841": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "18844": {
      "op": "JUMPI"
    },
    "18845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18847": {
      "op": "DUP1"
    },
    "18848": {
      "op": "REVERT"
    }
  },
  "sha1": "82097ca1e2742ba57b90e601c3c81d59fe9f72bc",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.7;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\n\nimport \"./interfaces/IRegistry.sol\";\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n\ncontract Registry is IRegistry, ERC721Holder, ERC1155Receiver, ERC1155Holder {\n    using SafeERC20 for ERC20;\n\n    IResolver private resolver;\n    address private admin;\n    address payable private beneficiary;\n    uint256 private lendingID = 1;\n    uint256 private rentingID = 1;\n    bool public paused = false;\n    uint256 public rentFee = 0;\n    uint256 private constant SECONDS_IN_DAY = 86400;\n    mapping(bytes32 => Lending) private lendings;\n    mapping(bytes32 => Renting) private rentings;\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"ReNFT::not admin\");\n        _;\n    }\n\n    modifier notPaused() {\n        require(!paused, \"ReNFT::paused\");\n        _;\n    }\n\n    constructor(\n        address newResolver,\n        address payable newBeneficiary,\n        address newAdmin\n    ) {\n        ensureIsNotZeroAddr(newResolver);\n        ensureIsNotZeroAddr(newBeneficiary);\n        ensureIsNotZeroAddr(newAdmin);\n        resolver = IResolver(newResolver);\n        beneficiary = newBeneficiary;\n        admin = newAdmin;\n    }\n\n    function lend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        IResolver.PaymentToken[] memory paymentToken\n    ) external override notPaused {\n        bundleCall(\n            handleLend,\n            createLendCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                lendAmount,\n                maxRentDuration,\n                dailyRentPrice,\n                paymentToken\n            )\n        );\n    }\n\n    function stopLend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID\n    ) external override notPaused {\n        bundleCall(\n            handleStopLend,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                new uint256[](0)\n            )\n        );\n    }\n\n    function rent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) external payable override notPaused {\n        bundleCall(\n            handleRent,\n            createRentCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                rentDuration,\n                rentAmount\n            )\n        );\n    }\n\n    function stopRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(\n            handleStopRent,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                _rentingID\n            )\n        );\n    }\n\n    function claimRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(\n            handleClaimRent,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                _rentingID\n            )\n        );\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function handleLend(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            ensureIsLendable(cd, i);\n            bytes32 identifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    lendingID\n                )\n            );\n            IRegistry.Lending storage lending = lendings[identifier];\n            ensureIsNull(lending);\n            ensureTokenNotSentinel(uint8(cd.paymentToken[i]));\n            bool is721 = cd.nftStandard[i] == IRegistry.NFTStandard.E721;\n            lendings[identifier] = IRegistry.Lending({\n                nftStandard: cd.nftStandard[i],\n                lenderAddress: payable(msg.sender),\n                maxRentDuration: cd.maxRentDuration[i],\n                dailyRentPrice: cd.dailyRentPrice[i],\n                lendAmount: is721 ? 1 : uint8(cd.lendAmount[i]),\n                availableAmount: is721 ? 1 : uint8(cd.lendAmount[i]),\n                paymentToken: cd.paymentToken[i]\n            });\n            emit IRegistry.Lend(\n                is721,\n                msg.sender,\n                cd.nftAddress[cd.left],\n                cd.tokenID[i],\n                lendingID,\n                cd.maxRentDuration[i],\n                cd.dailyRentPrice[i],\n                is721 ? 1 : uint8(cd.lendAmount[i]),\n                cd.paymentToken[i]\n            );\n            lendingID++;\n        }\n        safeTransfer(\n            cd,\n            msg.sender,\n            address(this),\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(cd.lendAmount, cd.left, cd.right, 0)\n        );\n    }\n\n    function handleStopLend(IRegistry.CallData memory cd) private {\n        uint256[] memory lentAmounts = new uint256[](cd.right - cd.left);\n        IRegistry.NFTStandard nftStandard = IRegistry.NFTStandard.E721;\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            Lending storage lending = lendings[lendingIdentifier];\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            // the condition below ensures there are no rentings tied up to this lending\n            require(\n                lending.lendAmount == lending.availableAmount,\n                \"ReNFT::actively rented\"\n            );\n            ensureIsNotNull(lending);\n            ensureIsStoppable(lending, msg.sender);\n            lentAmounts[i - cd.left] = lending.lendAmount;\n            nftStandard = lending.nftStandard;\n            emit IRegistry.StopLend(cd.lendingID[i], uint32(block.timestamp));\n            delete lendings[lendingIdentifier];\n        }\n        safeTransfer(\n            cd,\n            address(this),\n            msg.sender,\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(lentAmounts, cd.left, cd.right, cd.left)\n        );\n    }\n\n    function handleRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    rentingID\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNull(renting);\n            ensureIsRentable(lending, cd, i, msg.sender);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                cd.rentAmount[i] <= lending.availableAmount,\n                \"ReNFT::invalid rent amount\"\n            );\n            uint8 paymentTokenIx = uint8(lending.paymentToken);\n            address paymentToken = resolver.getPaymentToken(paymentTokenIx);\n            uint256 decimals = ERC20(paymentToken).decimals();\n            {\n                uint256 scale = 10**decimals;\n                uint256 rentPrice = cd.rentAmount[i] *\n                    cd.rentDuration[i] *\n                    unpackPrice(lending.dailyRentPrice, scale);\n                require(rentPrice > 0, \"ReNFT::rent price is zero\");\n                ERC20(paymentToken).safeTransferFrom(\n                    msg.sender,\n                    address(this),\n                    rentPrice\n                );\n            }\n            rentings[rentingIdentifier] = IRegistry.Renting({\n                renterAddress: payable(msg.sender),\n                rentAmount: uint8(cd.rentAmount[i]),\n                rentDuration: cd.rentDuration[i],\n                rentedAt: uint32(block.timestamp)\n            });\n            lendings[lendingIdentifier].availableAmount -= uint8(\n                cd.rentAmount[i]\n            );\n            emit IRegistry.Rent(\n                msg.sender,\n                cd.lendingID[i],\n                rentingID,\n                uint8(cd.rentAmount[i]),\n                cd.rentDuration[i],\n                renting.rentedAt\n            );\n            rentingID++;\n        }\n    }\n\n    function handleStopRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.rentingID[i]\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsReturnable(renting, msg.sender, block.timestamp);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                renting.rentAmount <= lending.lendAmount,\n                \"ReNFT::critical error\"\n            );\n            uint256 secondsSinceRentStart = block.timestamp - renting.rentedAt;\n            distributePayments(lending, renting, secondsSinceRentStart);\n            lendings[lendingIdentifier].availableAmount += renting.rentAmount;\n            emit IRegistry.StopRent(cd.lendingID[i], uint32(block.timestamp));\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    function handleClaimRent(CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.rentingID[i]\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNotNull(renting);\n            ensureIsClaimable(renting, block.timestamp);\n            distributeClaimPayment(lending, renting);\n            emit IRegistry.RentClaimed(\n                cd.rentingID[i],\n                uint32(block.timestamp)\n            );\n            lending.availableAmount =\n                lending.availableAmount +\n                renting.rentAmount;\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function bundleCall(\n        function(IRegistry.CallData memory) handler,\n        IRegistry.CallData memory cd\n    ) private {\n        require(cd.nftAddress.length > 0, \"ReNFT::no nfts\");\n        while (cd.right != cd.nftAddress.length) {\n            if (\n                (cd.nftAddress[cd.left] == cd.nftAddress[cd.right]) &&\n                (cd.nftStandard[cd.right] == IRegistry.NFTStandard.E1155)\n            ) {\n                cd.right++;\n            } else {\n                handler(cd);\n                cd.left = cd.right;\n                cd.right++;\n            }\n        }\n        handler(cd);\n    }\n\n    function takeFee(uint256 rentAmt, IResolver.PaymentToken paymentToken)\n        private\n        returns (uint256 fee)\n    {\n        fee = rentAmt * rentFee;\n        fee /= 10000;\n        uint8 paymentTokenIx = uint8(paymentToken);\n        ERC20 pmtToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        pmtToken.safeTransfer(beneficiary, fee);\n    }\n\n    function distributePayments(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting,\n        uint256 secondsSinceRentStart\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        address pmtToken = resolver.getPaymentToken(paymentTokenIx);\n        uint256 decimals = ERC20(pmtToken).decimals();\n        uint256 scale = 10**decimals;\n        uint256 rentPrice = unpackPrice(lending.dailyRentPrice, scale);\n        uint256 totalRenterPmt = renting.rentAmount *\n            rentPrice *\n            renting.rentDuration;\n        uint256 sendLenderAmt = (secondsSinceRentStart * rentPrice) /\n            SECONDS_IN_DAY;\n        require(totalRenterPmt > 0, \"ReNFT::total renter payment is zero\");\n        require(sendLenderAmt > 0, \"ReNFT::lender payment is zero\");\n        uint256 sendRenterAmt = totalRenterPmt - sendLenderAmt;\n        if (rentFee != 0) {\n            uint256 takenFee = takeFee(sendLenderAmt, lending.paymentToken);\n            sendLenderAmt -= takenFee;\n        }\n        ERC20(pmtToken).safeTransfer(lending.lenderAddress, sendLenderAmt);\n        if (sendRenterAmt > 0) {\n            ERC20(pmtToken).safeTransfer(renting.renterAddress, sendRenterAmt);\n        }\n    }\n\n    function distributeClaimPayment(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        ERC20 paymentToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        uint256 decimals = ERC20(paymentToken).decimals();\n        uint256 scale = 10**decimals;\n        uint256 rentPrice = unpackPrice(lending.dailyRentPrice, scale);\n        uint256 finalAmt = renting.rentAmount *\n            rentPrice *\n            renting.rentDuration;\n        uint256 takenFee = 0;\n        if (rentFee != 0) {\n            takenFee = takeFee(\n                finalAmt,\n                IResolver.PaymentToken(paymentTokenIx)\n            );\n        }\n        paymentToken.safeTransfer(lending.lenderAddress, finalAmt - takenFee);\n    }\n\n    function safeTransfer(\n        CallData memory cd,\n        address from,\n        address to,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount\n    ) private {\n        if (cd.nftStandard[cd.left] == IRegistry.NFTStandard.E721) {\n            IERC721(cd.nftAddress[cd.left]).transferFrom(\n                from,\n                to,\n                cd.tokenID[cd.left]\n            );\n        } else {\n            IERC1155(cd.nftAddress[cd.left]).safeBatchTransferFrom(\n                from,\n                to,\n                tokenID,\n                lendAmount,\n                \"\"\n            );\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function getLending(\n        address nftAddress,\n        uint256 tokenID,\n        uint256 _lendingID\n    )\n        external\n        view\n        returns (\n            uint8,\n            address,\n            uint8,\n            bytes4,\n            uint16,\n            uint16,\n            uint8\n        )\n    {\n        bytes32 identifier = keccak256(\n            abi.encodePacked(nftAddress, tokenID, _lendingID)\n        );\n        IRegistry.Lending storage lending = lendings[identifier];\n        return (\n            uint8(lending.nftStandard),\n            lending.lenderAddress,\n            lending.maxRentDuration,\n            lending.dailyRentPrice,\n            lending.lendAmount,\n            lending.availableAmount,\n            uint8(lending.paymentToken)\n        );\n    }\n\n    function getRenting(\n        address nftAddress,\n        uint256 tokenID,\n        uint256 _rentingID\n    )\n        external\n        view\n        returns (\n            address,\n            uint16,\n            uint8,\n            uint32\n        )\n    {\n        bytes32 identifier = keccak256(\n            abi.encodePacked(nftAddress, tokenID, _rentingID)\n        );\n        IRegistry.Renting storage renting = rentings[identifier];\n        return (\n            renting.renterAddress,\n            renting.rentAmount,\n            renting.rentDuration,\n            renting.rentedAt\n        );\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function createLendCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        IResolver.PaymentToken[] memory paymentToken\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: lendAmount,\n            lendingID: new uint256[](0),\n            rentingID: new uint256[](0),\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: maxRentDuration,\n            dailyRentPrice: dailyRentPrice,\n            paymentToken: paymentToken\n        });\n    }\n\n    function createRentCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: new uint256[](0),\n            rentDuration: rentDuration,\n            rentAmount: rentAmount,\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new IResolver.PaymentToken[](0)\n        });\n    }\n\n    function createActionCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: _rentingID,\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new IResolver.PaymentToken[](0)\n        });\n    }\n\n    function unpackPrice(bytes4 price, uint256 scale)\n        private\n        pure\n        returns (uint256)\n    {\n        ensureIsUnpackablePrice(price, scale);\n        uint16 whole = uint16(bytes2(price));\n        uint16 decimal = uint16(bytes2(price << 16));\n        uint256 decimalScale = scale / 10000;\n        if (whole > 9999) {\n            whole = 9999;\n        }\n        if (decimal > 9999) {\n            decimal = 9999;\n        }\n        uint256 w = whole * scale;\n        uint256 d = decimal * decimalScale;\n        uint256 fullPrice = w + d;\n        return fullPrice;\n    }\n\n    function sliceArr(\n        uint256[] memory arr,\n        uint256 fromIx,\n        uint256 toIx,\n        uint256 arrOffset\n    ) private pure returns (uint256[] memory r) {\n        r = new uint256[](toIx - fromIx);\n        for (uint256 i = fromIx; i < toIx; i++) {\n            r[i - fromIx] = arr[i - arrOffset];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function ensureIsNotZeroAddr(address addr) private pure {\n        require(addr != address(0), \"ReNFT::zero address\");\n    }\n\n    function ensureIsZeroAddr(address addr) private pure {\n        require(addr == address(0), \"ReNFT::not a zero address\");\n    }\n\n    function ensureIsNull(Lending memory lending) private pure {\n        ensureIsZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration == 0, \"ReNFT::duration not zero\");\n        require(lending.dailyRentPrice == 0, \"ReNFT::rent price not zero\");\n    }\n\n    function ensureIsNotNull(Lending memory lending) private pure {\n        ensureIsNotZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration != 0, \"ReNFT::duration zero\");\n        require(lending.dailyRentPrice != 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsNull(Renting memory renting) private pure {\n        ensureIsZeroAddr(renting.renterAddress);\n        require(renting.rentDuration == 0, \"ReNFT::duration not zero\");\n        require(renting.rentedAt == 0, \"ReNFT::rented at not zero\");\n    }\n\n    function ensureIsNotNull(Renting memory renting) private pure {\n        ensureIsNotZeroAddr(renting.renterAddress);\n        require(renting.rentDuration != 0, \"ReNFT::duration is zero\");\n        require(renting.rentedAt != 0, \"ReNFT::rented at is zero\");\n    }\n\n    function ensureIsLendable(CallData memory cd, uint256 i) private pure {\n        require(cd.lendAmount[i] > 0, \"ReNFT::lend amount is zero\");\n        require(cd.lendAmount[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(cd.maxRentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(cd.maxRentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(uint32(cd.dailyRentPrice[i]) > 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsRentable(\n        Lending memory lending,\n        CallData memory cd,\n        uint256 i,\n        address msgSender\n    ) private pure {\n        require(msgSender != lending.lenderAddress, \"ReNFT::cant rent own nft\");\n        require(cd.rentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(cd.rentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(\n            cd.rentDuration[i] <= lending.maxRentDuration,\n            \"ReNFT::rent duration exceeds allowed max\"\n        );\n    }\n\n    function ensureIsReturnable(\n        Renting memory renting,\n        address msgSender,\n        uint256 blockTimestamp\n    ) private pure {\n        require(renting.renterAddress == msgSender, \"ReNFT::not renter\");\n        require(\n            !isPastReturnDate(renting, blockTimestamp),\n            \"ReNFT::past return date\"\n        );\n    }\n\n    function ensureIsStoppable(Lending memory lending, address msgSender)\n        private\n        pure\n    {\n        require(lending.lenderAddress == msgSender, \"ReNFT::not lender\");\n    }\n\n    function ensureIsUnpackablePrice(bytes4 price, uint256 scale) private pure {\n        require(uint32(price) > 0, \"ReNFT::invalid price\");\n        require(scale >= 10000, \"ReNFT::invalid scale\");\n    }\n\n    function ensureTokenNotSentinel(uint8 paymentIx) private pure {\n        require(paymentIx > 0, \"ReNFT::token is sentinel\");\n    }\n\n    function ensureIsClaimable(\n        IRegistry.Renting memory renting,\n        uint256 blockTimestamp\n    ) private pure {\n        require(\n            isPastReturnDate(renting, blockTimestamp),\n            \"ReNFT::return date not passed\"\n        );\n    }\n\n    function isPastReturnDate(Renting memory renting, uint256 nowTime)\n        private\n        pure\n        returns (bool)\n    {\n        require(nowTime > renting.rentedAt, \"ReNFT::now before rented\");\n        return\n            nowTime - renting.rentedAt > renting.rentDuration * SECONDS_IN_DAY;\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function setRentFee(uint256 newRentFee) external onlyAdmin {\n        require(newRentFee < 10000, \"ReNFT::fee exceeds 100pct\");\n        rentFee = newRentFee;\n    }\n\n    function setBeneficiary(address payable newBeneficiary) external onlyAdmin {\n        beneficiary = newBeneficiary;\n    }\n\n    function setPaused(bool newPaused) external onlyAdmin {\n        paused = newPaused;\n    }\n}\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n",
  "sourceMap": "2113:25996:23:-:0;;;2356:1;2328:29;;;;2363;;2398:26;;;-1:-1:-1;;2398:26:23;;;-1:-1:-1;2430:26:23;;2807:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:32;2950:11;2930:19;:32::i;:::-;2972:35;2992:14;2972:19;:35::i;:::-;3017:29;3037:8;3017:19;:29::i;:::-;3056:8;:33;;-1:-1:-1;;;;;3056:33:23;;;-1:-1:-1;;;;;;3056:33:23;;;;;;;3099:11;:28;;;;;;;;;;;;;;;3056:33;3137:16;;;;;;;;;;;2113:25996;;23780:123;-1:-1:-1;;;;;23854:18:23;;23846:50;;;;-1:-1:-1;;;23846:50:23;;748:2:31;23846:50:23;;;730:21:31;787:2;767:18;;;760:30;826:21;806:18;;;799:49;865:18;;23846:50:23;;;;;;;;23780:123;:::o;14:527:31:-;110:6;118;126;179:2;167:9;158:7;154:23;150:32;147:52;;;195:1;192;185:12;147:52;227:9;221:16;246:31;271:5;246:31;:::i;:::-;346:2;331:18;;325:25;296:5;;-1:-1:-1;359:33:31;325:25;359:33;:::i;:::-;463:2;448:18;;442:25;411:7;;-1:-1:-1;476:33:31;442:25;476:33;:::i;:::-;528:7;518:17;;;14:527;;;;;:::o;894:131::-;-1:-1:-1;;;;;969:31:31;;959:42;;949:70;;1015:1;1012;1005:12;894:131;2113:25996:23;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}