{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newResolver",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "is721",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "lenderAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "maxRentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "dailyRentPrice",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "lendAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "enum IResolver.PaymentToken",
          "name": "paymentToken",
          "type": "uint8"
        }
      ],
      "name": "Lend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "renterAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "rentAmount",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "rentDuration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "rentedAt",
          "type": "uint32"
        }
      ],
      "name": "Rent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "collectedAt",
          "type": "uint32"
        }
      ],
      "name": "RentClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lendingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopLend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "rentingID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "stoppedAt",
          "type": "uint32"
        }
      ],
      "name": "StopRent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "claimRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lendingID",
          "type": "uint256"
        }
      ],
      "name": "getLending",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentingID",
          "type": "uint256"
        }
      ],
      "name": "getRenting",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lendAmount",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "maxRentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "dailyRentPrice",
          "type": "bytes4[]"
        },
        {
          "internalType": "enum IResolver.PaymentToken[]",
          "name": "paymentToken",
          "type": "uint8[]"
        }
      ],
      "name": "lend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "rentDuration",
          "type": "uint8[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rentAmount",
          "type": "uint256[]"
        }
      ],
      "name": "rent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newBeneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "newPaused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRentFee",
          "type": "uint256"
        }
      ],
      "name": "setRentFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopLend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRegistry.NFTStandard[]",
          "name": "nftStandard",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "nftAddress",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lendingID",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_rentingID",
          "type": "uint256[]"
        }
      ],
      "name": "stopRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
    "1": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155Receiver.sol",
    "10": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
    "11": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Address.sol",
    "12": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "13": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol",
    "14": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "15": "contracts/Registry.sol",
    "16": "contracts/interfaces/IRegistry.sol",
    "17": "contracts/interfaces/IResolver.sol",
    "2": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
    "3": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
    "4": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
    "5": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "7": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "8": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
    "9": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "Address": [
        4321
      ],
      "Context": [
        4024
      ],
      "ERC1155Holder": [
        2647
      ],
      "ERC1155Receiver": [
        2681
      ],
      "ERC165": [
        3977
      ],
      "ERC20": [
        3227
      ],
      "ERC721Holder": [
        3672
      ],
      "IERC1155": [
        2596
      ],
      "IERC1155Receiver": [
        3953
      ],
      "IERC165": [
        3912
      ],
      "IERC20": [
        3305
      ],
      "IERC20Metadata": [
        4002
      ],
      "IERC721": [
        3645
      ],
      "IERC721Receiver": [
        4339
      ],
      "IRegistry": [
        3900
      ],
      "IResolver": [
        4361
      ],
      "Registry": [
        2474
      ],
      "SafeERC20": [
        3529
      ]
    },
    "id": 2475,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:15"
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 3228,
        "src": "57:83:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 3306,
        "src": "141:84:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 3530,
        "src": "226:93:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 3646,
        "src": "320:86:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 3673,
        "src": "407:97:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 2597,
        "src": "505:88:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 2648,
        "src": "594:99:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 2682,
        "src": "694:101:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IRegistry.sol",
        "file": "./interfaces/IRegistry.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2475,
        "sourceUnit": 3901,
        "src": "797:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3900,
              "src": "2134:9:15"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "2134:9:15"
          },
          {
            "baseName": {
              "id": 13,
              "name": "ERC721Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3672,
              "src": "2145:12:15"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "2145:12:15"
          },
          {
            "baseName": {
              "id": 15,
              "name": "ERC1155Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2681,
              "src": "2159:15:15"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "2159:15:15"
          },
          {
            "baseName": {
              "id": 17,
              "name": "ERC1155Holder",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2647,
              "src": "2176:13:15"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "2176:13:15"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2474,
        "linearizedBaseContracts": [
          2474,
          2647,
          2681,
          3953,
          3977,
          3912,
          3672,
          4339,
          3900
        ],
        "name": "Registry",
        "nameLocation": "2122:8:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "id": 19,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3529,
              "src": "2202:9:15"
            },
            "nodeType": "UsingForDirective",
            "src": "2196:26:15",
            "typeName": {
              "id": 21,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 20,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3227,
                "src": "2216:5:15"
              },
              "referencedDeclaration": 3227,
              "src": "2216:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3227",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "resolver",
            "nameLocation": "2246:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2228:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IResolver_$4361",
              "typeString": "contract IResolver"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "IResolver",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4361,
                "src": "2228:9:15"
              },
              "referencedDeclaration": 4361,
              "src": "2228:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IResolver_$4361",
                "typeString": "contract IResolver"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "2276:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2260:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2260:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "beneficiary",
            "nameLocation": "2311:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2287:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 28,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2287:15:15",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "lendingID",
            "nameLocation": "2344:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2328:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2328:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2356:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "rentingID",
            "nameLocation": "2379:9:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2363:29:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2363:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2391:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 38,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "2410:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2398:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2398:4:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2419:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bf2b23ea",
            "id": 41,
            "mutability": "mutable",
            "name": "rentFee",
            "nameLocation": "2445:7:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2430:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2430:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2455:1:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 44,
            "mutability": "constant",
            "name": "SECONDS_IN_DAY",
            "nameLocation": "2487:14:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2462:47:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2462:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2504:5:15",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "lendings",
            "nameLocation": "2551:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2515:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 45,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2523:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2515:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Lending)"
              },
              "valueType": {
                "id": 47,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 46,
                  "name": "Lending",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3788,
                  "src": "2534:7:15"
                },
                "referencedDeclaration": 3788,
                "src": "2534:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                  "typeString": "struct IRegistry.Lending"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "rentings",
            "nameLocation": "2601:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2474,
            "src": "2565:44:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
              "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 50,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2573:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2565:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                "typeString": "mapping(bytes32 => struct IRegistry.Renting)"
              },
              "valueType": {
                "id": 52,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51,
                  "name": "Renting",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3797,
                  "src": "2584:7:15"
                },
                "referencedDeclaration": 3797,
                "src": "2584:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                  "typeString": "struct IRegistry.Renting"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "2637:76:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2655:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2655:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2669:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2655:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061646d696e",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2676:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        },
                        "value": "ReNFT::not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fffda9afd14b13f1ffa3513e2d92d121d7733f26c16415b40abbc0ddd4e865f5",
                          "typeString": "literal_string \"ReNFT::not admin\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2647:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2647:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "2647:48:15"
                },
                {
                  "id": 64,
                  "nodeType": "PlaceholderStatement",
                  "src": "2705:1:15"
                }
              ]
            },
            "id": 66,
            "name": "onlyAdmin",
            "nameLocation": "2625:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:2:15"
            },
            "src": "2616:97:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "2740:61:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2758:7:15",
                        "subExpression": {
                          "id": 69,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2759:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706175736564",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2767:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        },
                        "value": "ReNFT::paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5d99b6a43b76cee309429437a6188b1bc1cbad53dcd0ea4c7a16fe9d2f6f25a",
                          "typeString": "literal_string \"ReNFT::paused\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2750:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:33:15"
                },
                {
                  "id": 74,
                  "nodeType": "PlaceholderStatement",
                  "src": "2793:1:15"
                }
              ]
            },
            "id": 76,
            "name": "notPaused",
            "nameLocation": "2728:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2737:2:15"
            },
            "src": "2719:82:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "2920:240:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "newResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2950:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "2930:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2930:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "newBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "2992:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 89,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "2972:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "2972:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "3037:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 93,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "3017:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:29:15"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3056:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$4361",
                        "typeString": "contract IResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 99,
                          "name": "newResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3077:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 98,
                        "name": "IResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4361,
                        "src": "3067:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IResolver_$4361_$",
                          "typeString": "type(contract IResolver)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:22:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IResolver_$4361",
                        "typeString": "contract IResolver"
                      }
                    },
                    "src": "3056:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IResolver_$4361",
                      "typeString": "contract IResolver"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:33:15"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3099:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "3113:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3099:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3099:28:15"
                },
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "3137:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "3145:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3137:16:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "3137:16:15"
                }
              ]
            },
            "id": 112,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "newResolver",
                  "nameLocation": "2836:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2828:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "2873:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2857:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2857:15:15",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "2905:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "2897:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2897:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:101:15"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2920:0:15"
            },
            "scope": 2474,
            "src": "2807:353:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3823
            ],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3508:312:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "handleLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "3542:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 144,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "3602:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 145,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "3631:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 146,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "3659:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 147,
                            "name": "lendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "3684:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 148,
                            "name": "maxRentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3712:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 149,
                            "name": "dailyRentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "3745:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            }
                          },
                          {
                            "id": 150,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3777:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                              "typeString": "enum IResolver.PaymentToken[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                              "typeString": "bytes4[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                              "typeString": "enum IResolver.PaymentToken[] memory"
                            }
                          ],
                          "id": 143,
                          "name": "createLendCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1768,
                          "src": "3566:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3771_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,bytes4[] memory,enum IResolver.PaymentToken[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:237:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 141,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "3518:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$_$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:295:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:295:15"
                }
              ]
            },
            "functionSelector": "1cbb410f",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 138,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "3498:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "3498:9:15"
              }
            ],
            "name": "lend",
            "nameLocation": "3175:4:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3489:8:15"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3220:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3189:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 114,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 113,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "3189:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "3189:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 115,
                    "nodeType": "ArrayTypeName",
                    "src": "3189:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3258:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3241:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3241:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 118,
                    "nodeType": "ArrayTypeName",
                    "src": "3241:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3295:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3278:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 120,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3278:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 121,
                    "nodeType": "ArrayTypeName",
                    "src": "3278:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "3329:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3312:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3312:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 124,
                    "nodeType": "ArrayTypeName",
                    "src": "3312:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "3364:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3349:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3349:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "3349:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "3405:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3389:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 129,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "3389:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 130,
                    "nodeType": "ArrayTypeName",
                    "src": "3389:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "3461:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "3429:44:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                    "typeString": "enum IResolver.PaymentToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 133,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 132,
                        "name": "IResolver.PaymentToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4346,
                        "src": "3429:22:15"
                      },
                      "referencedDeclaration": 4346,
                      "src": "3429:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentToken_$4346",
                        "typeString": "enum IResolver.PaymentToken"
                      }
                    },
                    "id": 134,
                    "nodeType": "ArrayTypeName",
                    "src": "3429:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_storage_ptr",
                      "typeString": "enum IResolver.PaymentToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3179:300:15"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3508:0:15"
            },
            "scope": 2474,
            "src": "3166:654:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3839
            ],
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "4038:257:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 175,
                        "name": "handleStopLend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "4072:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 177,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "4138:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 178,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "4167:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 179,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "4195:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 180,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "4220:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4262:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4248:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 181,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4252:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 182,
                                "nodeType": "ArrayTypeName",
                                "src": "4252:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4248:16:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 176,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1899,
                          "src": "4100:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3771_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4100:178:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 174,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "4048:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$_$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:240:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:240:15"
                }
              ]
            },
            "functionSelector": "c9c40183",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 171,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4028:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4028:9:15"
              }
            ],
            "name": "stopLend",
            "nameLocation": "3835:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4019:8:15"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "3884:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3853:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 157,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 156,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "3853:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "3853:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 158,
                    "nodeType": "ArrayTypeName",
                    "src": "3853:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "3922:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3905:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3905:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 161,
                    "nodeType": "ArrayTypeName",
                    "src": "3905:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "3959:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3942:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 163,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3942:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 164,
                    "nodeType": "ArrayTypeName",
                    "src": "3942:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "3993:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "3976:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 166,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3976:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 167,
                    "nodeType": "ArrayTypeName",
                    "src": "3976:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3843:166:15"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4038:0:15"
            },
            "scope": 2474,
            "src": "3826:469:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3861
            ],
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "4591:275:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "handleRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "4625:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 218,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "4685:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 219,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "4714:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 220,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4742:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 221,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "4767:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 222,
                            "name": "rentDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "4795:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          {
                            "id": 223,
                            "name": "rentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 209,
                            "src": "4825:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 217,
                          "name": "createRentCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1833,
                          "src": "4649:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3771_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint8[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4649:200:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 215,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "4601:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$_$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4601:258:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "4601:258:15"
                }
              ]
            },
            "functionSelector": "cbe55e54",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "4581:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "4581:9:15"
              }
            ],
            "name": "rent",
            "nameLocation": "4310:4:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 211,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4572:8:15"
            },
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4355:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4324:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 192,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 191,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "4324:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "4324:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 193,
                    "nodeType": "ArrayTypeName",
                    "src": "4324:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4393:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4376:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 195,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4376:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 196,
                    "nodeType": "ArrayTypeName",
                    "src": "4376:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "4430:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4413:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 198,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4413:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 199,
                    "nodeType": "ArrayTypeName",
                    "src": "4413:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "4464:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4447:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4447:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 202,
                    "nodeType": "ArrayTypeName",
                    "src": "4447:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "4499:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4484:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 204,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4484:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 205,
                    "nodeType": "ArrayTypeName",
                    "src": "4484:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "4538:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "4521:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 207,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4521:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 208,
                    "nodeType": "ArrayTypeName",
                    "src": "4521:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4314:240:15"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4591:0:15"
            },
            "scope": 2474,
            "src": "4301:565:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3880
            ],
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "5121:251:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 251,
                        "name": "handleStopRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "5155:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 253,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "5221:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 254,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "5250:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 255,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "5278:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 256,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "5303:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 257,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "5331:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 252,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1899,
                          "src": "5183:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3771_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5183:172:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 250,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "5131:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$_$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5131:234:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:234:15"
                }
              ]
            },
            "functionSelector": "14b5685c",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5111:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5111:9:15"
              }
            ],
            "name": "stopRent",
            "nameLocation": "4881:8:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 246,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5102:8:15"
            },
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "4930:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4899:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 230,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 229,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "4899:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "4899:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 231,
                    "nodeType": "ArrayTypeName",
                    "src": "4899:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "4968:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4951:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 233,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4951:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 234,
                    "nodeType": "ArrayTypeName",
                    "src": "4951:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5005:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "4988:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 236,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4988:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 237,
                    "nodeType": "ArrayTypeName",
                    "src": "4988:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5039:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5022:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 239,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5022:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 240,
                    "nodeType": "ArrayTypeName",
                    "src": "5022:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5076:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "5059:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5059:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 243,
                    "nodeType": "ArrayTypeName",
                    "src": "5059:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4889:203:15"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5121:0:15"
            },
            "scope": 2474,
            "src": "4872:500:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3899
            ],
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "5628:252:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 285,
                        "name": "handleClaimRent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1191,
                        "src": "5662:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 287,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5729:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            }
                          },
                          {
                            "id": 288,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "5758:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          {
                            "id": 289,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "5786:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 290,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5811:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "id": 291,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "5839:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                              "typeString": "enum IRegistry.NFTStandard[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 286,
                          "name": "createActionCallData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1899,
                          "src": "5691:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_struct$_CallData_$3771_memory_ptr_$",
                            "typeString": "function (enum IRegistry.NFTStandard[] memory,address[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (struct IRegistry.CallData memory)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5691:172:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                          "typeString": "function (struct IRegistry.CallData memory)"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 284,
                      "name": "bundleCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "5638:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$_$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                        "typeString": "function (function (struct IRegistry.CallData memory),struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5638:235:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5638:235:15"
                }
              ]
            },
            "functionSelector": "937821a1",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "notPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "5618:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "5618:9:15"
              }
            ],
            "name": "claimRent",
            "nameLocation": "5387:9:15",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5609:8:15"
            },
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "5437:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5406:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 264,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 263,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "5406:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "5406:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 265,
                    "nodeType": "ArrayTypeName",
                    "src": "5406:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "5475:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5458:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 267,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5458:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 268,
                    "nodeType": "ArrayTypeName",
                    "src": "5458:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "5512:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5495:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 270,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5495:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 271,
                    "nodeType": "ArrayTypeName",
                    "src": "5495:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "5546:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5529:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 273,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5529:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 274,
                    "nodeType": "ArrayTypeName",
                    "src": "5529:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "5583:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "5566:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 276,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5566:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 277,
                    "nodeType": "ArrayTypeName",
                    "src": "5566:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:203:15"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5628:0:15"
            },
            "scope": 2474,
            "src": "5378:502:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "6126:1637:15",
              "statements": [
                {
                  "body": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "6181:1362:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 315,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6212:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 316,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "6216:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 314,
                            "name": "ensureIsLendable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2244,
                            "src": "6195:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_CallData_$3771_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.CallData memory,uint256) pure"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:23:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:23:15"
                      },
                      {
                        "assignments": [
                          320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 320,
                            "mutability": "mutable",
                            "name": "identifier",
                            "nameLocation": "6240:10:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6232:18:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6232:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 336,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 324,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6318:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "6318:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 328,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 326,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6332:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 327,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "6332:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6318:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 329,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6362:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "6362:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 332,
                                  "indexExpression": {
                                    "id": 331,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6373:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6362:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 333,
                                  "name": "lendingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "6397:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 322,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6280:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6280:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6280:144:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 321,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6253:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6253:185:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6232:206:15"
                      },
                      {
                        "assignments": [
                          341
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 341,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "6478:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6452:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 340,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 339,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3788,
                                "src": "6452:17:15"
                              },
                              "referencedDeclaration": 3788,
                              "src": "6452:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 345,
                        "initialValue": {
                          "baseExpression": {
                            "id": 342,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6488:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 344,
                          "indexExpression": {
                            "id": 343,
                            "name": "identifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6497:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6488:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6452:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "6535:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 346,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2090,
                              2146
                            ],
                            "referencedDeclaration": 2090,
                            "src": "6522:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6522:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "ExpressionStatement",
                        "src": "6522:21:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 353,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6586:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "paymentToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3770,
                                    "src": "6586:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                                      "typeString": "enum IResolver.PaymentToken[] memory"
                                    }
                                  },
                                  "id": 356,
                                  "indexExpression": {
                                    "id": 355,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 303,
                                    "src": "6602:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6586:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                    "typeString": "enum IResolver.PaymentToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                    "typeString": "enum IResolver.PaymentToken"
                                  }
                                ],
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6580:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 351,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6580:5:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6580:25:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 350,
                            "name": "ensureTokenNotSentinel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2384,
                            "src": "6557:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$__$",
                              "typeString": "function (uint8) pure"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6557:49:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "6557:49:15"
                      },
                      {
                        "assignments": [
                          361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 361,
                            "mutability": "mutable",
                            "name": "is721",
                            "nameLocation": "6625:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 463,
                            "src": "6620:10:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 360,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6620:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 370,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_NFTStandard_$3731",
                            "typeString": "enum IRegistry.NFTStandard"
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 362,
                                "name": "cd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "6633:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                  "typeString": "struct IRegistry.CallData memory"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nftStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3739,
                              "src": "6633:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                                "typeString": "enum IRegistry.NFTStandard[] memory"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "id": 364,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "6648:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6633:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3731",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 366,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3900,
                                "src": "6654:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTStandard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3731,
                              "src": "6654:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3731_$",
                                "typeString": "type(enum IRegistry.NFTStandard)"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "E721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3729,
                            "src": "6654:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3731",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "src": "6633:47:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6620:60:15"
                      },
                      {
                        "expression": {
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 371,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "6694:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 373,
                            "indexExpression": {
                              "id": 372,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "6703:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6694:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 376,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6766:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3739,
                                  "src": "6766:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 379,
                                "indexExpression": {
                                  "id": 378,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6781:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6766:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 382,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6824:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6824:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6816:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 380,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6816:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6816:19:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 385,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6870:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 386,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "maxRentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3751,
                                  "src": "6870:18:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 388,
                                "indexExpression": {
                                  "id": 387,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6889:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6870:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 389,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6925:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 390,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dailyRentPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3754,
                                  "src": "6925:17:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                    "typeString": "bytes4[] memory"
                                  }
                                },
                                "id": 392,
                                "indexExpression": {
                                  "id": 391,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "6943:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6925:20:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              {
                                "condition": {
                                  "id": 393,
                                  "name": "is721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "6975:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 397,
                                          "name": "cd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "6993:2:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                            "typeString": "struct IRegistry.CallData memory"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lendAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3748,
                                        "src": "6993:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 400,
                                      "indexExpression": {
                                        "id": 399,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "7007:1:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6993:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 396,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6987:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 395,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6987:5:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6987:23:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "6975:35:15",
                                "trueExpression": {
                                  "hexValue": "31",
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6983:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "condition": {
                                  "id": 403,
                                  "name": "is721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 361,
                                  "src": "7045:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 407,
                                          "name": "cd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "7063:2:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                            "typeString": "struct IRegistry.CallData memory"
                                          }
                                        },
                                        "id": 408,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lendAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3748,
                                        "src": "7063:13:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 410,
                                      "indexExpression": {
                                        "id": 409,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 303,
                                        "src": "7077:1:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7063:16:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7057:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 405,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7057:5:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7057:23:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7045:35:15",
                                "trueExpression": {
                                  "hexValue": "31",
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7053:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 413,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "7112:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "paymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3770,
                                  "src": "7112:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                                    "typeString": "enum IResolver.PaymentToken[] memory"
                                  }
                                },
                                "id": 416,
                                "indexExpression": {
                                  "id": 415,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "7128:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7112:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              ],
                              "expression": {
                                "id": 374,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3900,
                                "src": "6717:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Lending",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3788,
                              "src": "6717:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Lending_$3788_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Lending storage pointer)"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "nftStandard",
                              "lenderAddress",
                              "maxRentDuration",
                              "dailyRentPrice",
                              "lendAmount",
                              "availableAmount",
                              "paymentToken"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6717:428:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "src": "6694:451:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "6694:451:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 423,
                              "name": "is721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "7196:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7219:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7219:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 426,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7247:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3742,
                                "src": "7247:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 430,
                              "indexExpression": {
                                "expression": {
                                  "id": 428,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7261:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3733,
                                "src": "7261:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7247:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 431,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7287:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 432,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3745,
                                "src": "7287:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 434,
                              "indexExpression": {
                                "id": 433,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7298:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7287:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 435,
                              "name": "lendingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "7318:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 436,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7345:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxRentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3751,
                                "src": "7345:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 439,
                              "indexExpression": {
                                "id": 438,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7364:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7345:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 440,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7384:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 441,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3754,
                                "src": "7384:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 443,
                              "indexExpression": {
                                "id": 442,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7402:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7384:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "condition": {
                                "id": 444,
                                "name": "is721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "7422:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 448,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 299,
                                        "src": "7440:2:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 449,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lendAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3748,
                                      "src": "7440:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 451,
                                    "indexExpression": {
                                      "id": 450,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 303,
                                      "src": "7454:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7440:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7434:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 446,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7434:5:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7434:23:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "7422:35:15",
                              "trueExpression": {
                                "hexValue": "31",
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7430:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 454,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "7475:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 455,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "paymentToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3770,
                                "src": "7475:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                                  "typeString": "enum IResolver.PaymentToken[] memory"
                                }
                              },
                              "id": 457,
                              "indexExpression": {
                                "id": 456,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "7491:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7475:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "expression": {
                              "id": 420,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3900,
                              "src": "7164:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Lend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3696,
                            "src": "7164:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_enum$_PaymentToken_$4346_$returns$__$",
                              "typeString": "function (bool,address,address,uint256,uint256,uint8,bytes4,uint16,enum IResolver.PaymentToken)"
                            }
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7164:343:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 459,
                        "nodeType": "EmitStatement",
                        "src": "7159:348:15"
                      },
                      {
                        "expression": {
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7521:11:15",
                          "subExpression": {
                            "id": 460,
                            "name": "lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "7521:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "7521:11:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 307,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "6162:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 308,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6166:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "6166:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6162:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 464,
                  "initializationExpression": {
                    "assignments": [
                      303
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6149:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 464,
                        "src": "6141:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6141:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 306,
                    "initialValue": {
                      "expression": {
                        "id": 304,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "6153:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3733,
                      "src": "6153:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6141:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6176:3:15",
                      "subExpression": {
                        "id": 311,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "6176:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 313,
                    "nodeType": "ExpressionStatement",
                    "src": "6176:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "6136:1407:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 466,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "7578:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 467,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7594:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7594:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 471,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7626:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2474",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2474",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7618:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 469,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7618:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7618:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 474,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7654:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "7654:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 476,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7666:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3733,
                            "src": "7666:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 478,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7675:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3735,
                            "src": "7675:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7685:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 473,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2030,
                          "src": "7645:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7645:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 483,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7710:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3748,
                            "src": "7710:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 485,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7725:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3733,
                            "src": "7725:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 487,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "7734:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 488,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3735,
                            "src": "7734:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7744:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 482,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2030,
                          "src": "7701:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7701:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 465,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1590,
                      "src": "7552:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:204:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:204:15"
                }
              ]
            },
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleLend",
            "nameLocation": "6077:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "6114:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "6088:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 297,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "6088:18:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "6088:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6087:30:15"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6126:0:15"
            },
            "scope": 2474,
            "src": "6068:1695:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "7831:1428:15",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "lentAmounts",
                      "nameLocation": "7858:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7841:28:15",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 502,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7841:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 503,
                        "nodeType": "ArrayTypeName",
                        "src": "7841:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 508,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "7886:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "right",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3735,
                          "src": "7886:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 510,
                            "name": "cd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "7897:2:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                              "typeString": "struct IRegistry.CallData memory"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "left",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3733,
                          "src": "7897:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7886:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7872:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7876:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 506,
                        "nodeType": "ArrayTypeName",
                        "src": "7876:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7872:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7841:64:15"
                },
                {
                  "assignments": [
                    519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 519,
                      "mutability": "mutable",
                      "name": "nftStandard",
                      "nameLocation": "7937:11:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7915:33:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      },
                      "typeName": {
                        "id": 518,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 517,
                          "name": "IRegistry.NFTStandard",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3731,
                          "src": "7915:21:15"
                        },
                        "referencedDeclaration": 3731,
                        "src": "7915:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_NFTStandard_$3731",
                          "typeString": "enum IRegistry.NFTStandard"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 523,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 520,
                        "name": "IRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3900,
                        "src": "7951:9:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                          "typeString": "type(contract IRegistry)"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "NFTStandard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3731,
                      "src": "7951:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3731_$",
                        "typeString": "type(enum IRegistry.NFTStandard)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "E721",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3729,
                    "src": "7951:26:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_NFTStandard_$3731",
                      "typeString": "enum IRegistry.NFTStandard"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7915:62:15"
                },
                {
                  "body": {
                    "id": 628,
                    "nodeType": "Block",
                    "src": "8032:1003:15",
                    "statements": [
                      {
                        "assignments": [
                          537
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 537,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "8054:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 628,
                            "src": "8046:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 536,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "8046:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 556,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 541,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8139:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "8139:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 545,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 543,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8153:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 544,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "8153:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8139:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 546,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8183:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 547,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "8183:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 549,
                                  "indexExpression": {
                                    "id": 548,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "8194:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8183:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 550,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "8218:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 551,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3757,
                                    "src": "8218:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 553,
                                  "indexExpression": {
                                    "id": 552,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "8231:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8218:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 539,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8101:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8101:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8101:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 538,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "8074:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8074:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8046:219:15"
                      },
                      {
                        "assignments": [
                          559
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 559,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "8295:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 628,
                            "src": "8279:23:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 558,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 557,
                                "name": "Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3788,
                                "src": "8279:7:15"
                              },
                              "referencedDeclaration": 3788,
                              "src": "8279:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 563,
                        "initialValue": {
                          "baseExpression": {
                            "id": 560,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "8305:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 562,
                          "indexExpression": {
                            "id": 561,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "8314:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8305:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8279:53:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 565,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 497,
                                    "src": "8371:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 566,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3739,
                                  "src": "8371:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 568,
                                "indexExpression": {
                                  "id": 567,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 525,
                                  "src": "8386:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8371:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 569,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "8392:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 570,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3774,
                                "src": "8392:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "8371:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8429:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 564,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8346:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8346:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 574,
                        "nodeType": "ExpressionStatement",
                        "src": "8346:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 576,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "8600:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 577,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3782,
                                "src": "8600:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 578,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 559,
                                  "src": "8622:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3784,
                                "src": "8622:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "8600:45:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a6163746976656c792072656e746564",
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8663:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              },
                              "value": "ReNFT::actively rented"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2ef5838968650c7efefdf8d494bc0563f961ca6e785a771b24da2223f90dafab",
                                "typeString": "literal_string \"ReNFT::actively rented\""
                              }
                            ],
                            "id": 575,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8575:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8575:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "8575:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 585,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8731:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 584,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2118,
                              2174
                            ],
                            "referencedDeclaration": 2118,
                            "src": "8715:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8715:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 587,
                        "nodeType": "ExpressionStatement",
                        "src": "8715:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 589,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8771:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 590,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8780:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8780:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 588,
                            "name": "ensureIsStoppable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "8753:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,address) pure"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8753:38:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 593,
                        "nodeType": "ExpressionStatement",
                        "src": "8753:38:15"
                      },
                      {
                        "expression": {
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 594,
                              "name": "lentAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "8805:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 599,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 595,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 525,
                                "src": "8817:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 596,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "8821:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3733,
                                "src": "8821:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8817:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8805:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 600,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8832:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3782,
                            "src": "8832:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "8805:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 603,
                        "nodeType": "ExpressionStatement",
                        "src": "8805:45:15"
                      },
                      {
                        "expression": {
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 604,
                            "name": "nftStandard",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "8864:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3731",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 605,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "8878:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 606,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3774,
                            "src": "8878:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3731",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          },
                          "src": "8864:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_NFTStandard_$3731",
                            "typeString": "enum IRegistry.NFTStandard"
                          }
                        },
                        "id": 608,
                        "nodeType": "ExpressionStatement",
                        "src": "8864:33:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 612,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 497,
                                  "src": "8935:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3757,
                                "src": "8935:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 615,
                              "indexExpression": {
                                "id": 614,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 525,
                                "src": "8948:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8935:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 618,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8959:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8959:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8952:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 616,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8952:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8952:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 609,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3900,
                              "src": "8916:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopLend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3716,
                            "src": "8916:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8916:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 622,
                        "nodeType": "EmitStatement",
                        "src": "8911:65:15"
                      },
                      {
                        "expression": {
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8990:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 623,
                              "name": "lendings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "8997:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                              }
                            },
                            "id": 625,
                            "indexExpression": {
                              "id": 624,
                              "name": "lendingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "9006:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8997:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage",
                              "typeString": "struct IRegistry.Lending storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 627,
                        "nodeType": "ExpressionStatement",
                        "src": "8990:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 529,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "8013:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 530,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "8017:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 531,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "8017:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8013:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 629,
                  "initializationExpression": {
                    "assignments": [
                      525
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 525,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8000:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "7992:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 524,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7992:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 528,
                    "initialValue": {
                      "expression": {
                        "id": 526,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "8004:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3733,
                      "src": "8004:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7992:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8027:3:15",
                      "subExpression": {
                        "id": 533,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "8027:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 535,
                    "nodeType": "ExpressionStatement",
                    "src": "8027:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "7987:1048:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "9070:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 634,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9094:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Registry_$2474",
                              "typeString": "contract Registry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Registry_$2474",
                              "typeString": "contract Registry"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9086:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9086:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9086:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 636,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9113:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9113:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 639,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9146:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "9146:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 641,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9158:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3733,
                            "src": "9158:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 643,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9167:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3735,
                            "src": "9167:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9177:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 638,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2030,
                          "src": "9137:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9137:42:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 648,
                            "name": "lentAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "9202:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 649,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9215:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3733,
                            "src": "9215:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 651,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9224:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 652,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "right",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3735,
                            "src": "9224:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 653,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "9234:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 654,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "left",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3733,
                            "src": "9234:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 647,
                          "name": "sliceArr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2030,
                          "src": "9193:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9193:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 630,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1590,
                      "src": "9044:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9044:208:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "9044:208:15"
                }
              ]
            },
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopLend",
            "nameLocation": "7778:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "7819:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "7793:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 496,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 495,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "7793:18:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "7793:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7792:30:15"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7831:0:15"
            },
            "scope": 2474,
            "src": "7769:1490:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 907,
              "nodeType": "Block",
              "src": "9323:2405:15",
              "statements": [
                {
                  "body": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "9378:2344:15",
                    "statements": [
                      {
                        "assignments": [
                          678
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 678,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "9400:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "9392:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 677,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9392:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 682,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9485:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 683,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "9485:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 686,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 684,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9499:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "9499:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9485:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 687,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9529:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 688,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "9529:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 690,
                                  "indexExpression": {
                                    "id": 689,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "9540:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9529:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 691,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9564:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 692,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3757,
                                    "src": "9564:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 694,
                                  "indexExpression": {
                                    "id": 693,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "9577:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9564:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 680,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9447:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9447:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9447:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 679,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9420:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9420:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9392:219:15"
                      },
                      {
                        "assignments": [
                          699
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 699,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "9633:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "9625:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 698,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9625:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 715,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 703,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9718:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "9718:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 707,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 705,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9732:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 706,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "9732:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9718:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 708,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9762:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "9762:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 711,
                                  "indexExpression": {
                                    "id": 710,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "9773:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9762:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 712,
                                  "name": "rentingID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9797:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 701,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9680:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9680:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9680:144:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 700,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9653:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9653:185:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9625:213:15"
                      },
                      {
                        "assignments": [
                          720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 720,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "9878:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "9852:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 719,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 718,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3788,
                                "src": "9852:17:15"
                              },
                              "referencedDeclaration": 3788,
                              "src": "9852:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 724,
                        "initialValue": {
                          "baseExpression": {
                            "id": 721,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "9888:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 723,
                          "indexExpression": {
                            "id": 722,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "9897:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9888:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9852:63:15"
                      },
                      {
                        "assignments": [
                          729
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 729,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "9955:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "9929:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 728,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 727,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3797,
                                "src": "9929:17:15"
                              },
                              "referencedDeclaration": 3797,
                              "src": "9929:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 733,
                        "initialValue": {
                          "baseExpression": {
                            "id": 730,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "9965:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 732,
                          "indexExpression": {
                            "id": 731,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "9974:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9965:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9929:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 735,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "10022:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 734,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2118,
                              2174
                            ],
                            "referencedDeclaration": 2118,
                            "src": "10006:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10006:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "10006:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 739,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "10057:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 738,
                            "name": "ensureIsNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2090,
                              2146
                            ],
                            "referencedDeclaration": 2146,
                            "src": "10044:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3797_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10044:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 741,
                        "nodeType": "ExpressionStatement",
                        "src": "10044:21:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 743,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "10096:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 744,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "10105:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            {
                              "id": 745,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "10109:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 746,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10112:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10112:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 742,
                            "name": "ensureIsRentable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2301,
                            "src": "10079:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$_t_struct$_CallData_$3771_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.CallData memory,uint256,address) pure"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10079:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 749,
                        "nodeType": "ExpressionStatement",
                        "src": "10079:44:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 751,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10162:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 752,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3739,
                                  "src": "10162:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 754,
                                "indexExpression": {
                                  "id": 753,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "10177:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10162:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 755,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "10183:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3774,
                                "src": "10183:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "10162:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10220:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 750,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10137:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10137:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "10137:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 762,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10302:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3766,
                                  "src": "10302:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 765,
                                "indexExpression": {
                                  "id": 764,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "10316:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10302:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 766,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "10322:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 767,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "availableAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3784,
                                "src": "10322:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "10302:43:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c69642072656e7420616d6f756e74",
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10363:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              },
                              "value": "ReNFT::invalid rent amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_289f2ee4b6fe280149d7a3a54002c0794b4fb41f312f746fa1a3070143a3c53c",
                                "typeString": "literal_string \"ReNFT::invalid rent amount\""
                              }
                            ],
                            "id": 761,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10277:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10277:128:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 771,
                        "nodeType": "ExpressionStatement",
                        "src": "10277:128:15"
                      },
                      {
                        "assignments": [
                          773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 773,
                            "mutability": "mutable",
                            "name": "paymentTokenIx",
                            "nameLocation": "10425:14:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "10419:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 772,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "10419:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 779,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 776,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "10448:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 777,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3787,
                              "src": "10448:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10442:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "10442:5:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10442:27:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10419:50:15"
                      },
                      {
                        "assignments": [
                          781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 781,
                            "mutability": "mutable",
                            "name": "paymentToken",
                            "nameLocation": "10491:12:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "10483:20:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 780,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10483:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 786,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 784,
                              "name": "paymentTokenIx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "10531:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "id": 782,
                              "name": "resolver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "10506:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IResolver_$4361",
                                "typeString": "contract IResolver"
                              }
                            },
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPaymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4353,
                            "src": "10506:24:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                              "typeString": "function (uint8) view external returns (address)"
                            }
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10506:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10483:63:15"
                      },
                      {
                        "assignments": [
                          788
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 788,
                            "mutability": "mutable",
                            "name": "decimals",
                            "nameLocation": "10568:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 905,
                            "src": "10560:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10560:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 794,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 790,
                                  "name": "paymentToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 781,
                                  "src": "10585:12:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 789,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3227,
                                "src": "10579:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10579:19:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3227",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2756,
                            "src": "10579:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10579:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10560:49:15"
                      },
                      {
                        "id": 834,
                        "nodeType": "Block",
                        "src": "10623:421:15",
                        "statements": [
                          {
                            "assignments": [
                              796
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 796,
                                "mutability": "mutable",
                                "name": "scale",
                                "nameLocation": "10649:5:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 834,
                                "src": "10641:13:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 795,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10641:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 800,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10657:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 798,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 788,
                                "src": "10661:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10657:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "10641:28:15"
                          },
                          {
                            "assignments": [
                              802
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 802,
                                "mutability": "mutable",
                                "name": "rentPrice",
                                "nameLocation": "10695:9:15",
                                "nodeType": "VariableDeclaration",
                                "scope": 834,
                                "src": "10687:17:15",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 801,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10687:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 813,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 803,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "10707:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 804,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3763,
                                  "src": "10707:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 806,
                                "indexExpression": {
                                  "id": 805,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "10723:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10707:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 808,
                                      "name": "lending",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 720,
                                      "src": "10760:7:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                        "typeString": "struct IRegistry.Lending storage pointer"
                                      }
                                    },
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "dailyRentPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3780,
                                    "src": "10760:22:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 810,
                                    "name": "scale",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 796,
                                    "src": "10784:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 807,
                                  "name": "unpackPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1980,
                                  "src": "10748:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (bytes4,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10748:42:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10707:83:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "10687:103:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 815,
                                    "name": "rentPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 802,
                                    "src": "10816:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10828:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "10816:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10831:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  },
                                  "value": "ReNFT::rent price is zero"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                                    "typeString": "literal_string \"ReNFT::rent price is zero\""
                                  }
                                ],
                                "id": 814,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "10808:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10808:51:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 820,
                            "nodeType": "ExpressionStatement",
                            "src": "10808:51:15"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 825,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10935:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10935:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 829,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10975:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Registry_$2474",
                                        "typeString": "contract Registry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Registry_$2474",
                                        "typeString": "contract Registry"
                                      }
                                    ],
                                    "id": 828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10967:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 827,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10967:7:15",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10967:13:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 831,
                                  "name": "rentPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
                                  "src": "11002:9:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 822,
                                      "name": "paymentToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 781,
                                      "src": "10883:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 821,
                                    "name": "ERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3227,
                                    "src": "10877:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                                      "typeString": "type(contract ERC20)"
                                    }
                                  },
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10877:19:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$3227",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3362,
                                "src": "10877:36:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3305_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3305_$",
                                  "typeString": "function (contract IERC20,address,address,uint256)"
                                }
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10877:152:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 833,
                            "nodeType": "ExpressionStatement",
                            "src": "10877:152:15"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 835,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "11057:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 837,
                            "indexExpression": {
                              "id": 836,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "11066:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11057:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 842,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "11146:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 843,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "11146:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11138:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 840,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11138:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11138:19:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 847,
                                        "name": "cd",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 662,
                                        "src": "11193:2:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                          "typeString": "struct IRegistry.CallData memory"
                                        }
                                      },
                                      "id": 848,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rentAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3766,
                                      "src": "11193:13:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 850,
                                    "indexExpression": {
                                      "id": 849,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 666,
                                      "src": "11207:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11193:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11187:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 845,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11187:5:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11187:23:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 852,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "11242:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 853,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentDuration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3763,
                                  "src": "11242:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                    "typeString": "uint8[] memory"
                                  }
                                },
                                "id": 855,
                                "indexExpression": {
                                  "id": 854,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "11258:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11242:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 858,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "11295:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 859,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "11295:15:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11288:6:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint32_$",
                                    "typeString": "type(uint32)"
                                  },
                                  "typeName": {
                                    "id": 856,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11288:6:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11288:23:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "id": 838,
                                "name": "IRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3900,
                                "src": "11087:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                  "typeString": "type(contract IRegistry)"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Renting",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3797,
                              "src": "11087:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Renting_$3797_storage_ptr_$",
                                "typeString": "type(struct IRegistry.Renting storage pointer)"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "renterAddress",
                              "rentAmount",
                              "rentDuration",
                              "rentedAt"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11087:239:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "src": "11057:269:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "id": 863,
                        "nodeType": "ExpressionStatement",
                        "src": "11057:269:15"
                      },
                      {
                        "expression": {
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 864,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "11340:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 866,
                              "indexExpression": {
                                "id": 865,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 678,
                                "src": "11349:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11340:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3784,
                            "src": "11340:43:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "id": 870,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 662,
                                    "src": "11410:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 871,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rentAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3766,
                                  "src": "11410:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 873,
                                "indexExpression": {
                                  "id": 872,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "11424:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11410:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11387:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 868,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "11387:5:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11387:53:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11340:100:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "11340:100:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11491:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11491:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 882,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 662,
                                  "src": "11519:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 883,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3757,
                                "src": "11519:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 885,
                              "indexExpression": {
                                "id": 884,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "11532:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11519:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 886,
                              "name": "rentingID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "11552:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 889,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "11585:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 890,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3766,
                                    "src": "11585:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 892,
                                  "indexExpression": {
                                    "id": 891,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "11599:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11585:16:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11579:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 887,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11579:5:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11579:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 894,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 662,
                                  "src": "11620:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 895,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentDuration",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3763,
                                "src": "11620:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              "id": 897,
                              "indexExpression": {
                                "id": 896,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "11636:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11620:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "id": 898,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 729,
                                "src": "11656:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 899,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3794,
                              "src": "11656:16:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 877,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3900,
                              "src": "11459:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Rent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3710,
                            "src": "11459:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint16_$_t_uint8_$_t_uint32_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint16,uint8,uint32)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11459:227:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "EmitStatement",
                        "src": "11454:232:15"
                      },
                      {
                        "expression": {
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11700:11:15",
                          "subExpression": {
                            "id": 902,
                            "name": "rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "11700:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 904,
                        "nodeType": "ExpressionStatement",
                        "src": "11700:11:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 670,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "9359:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 671,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "9363:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "9363:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9359:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 906,
                  "initializationExpression": {
                    "assignments": [
                      666
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9346:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 906,
                        "src": "9338:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9338:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 669,
                    "initialValue": {
                      "expression": {
                        "id": 667,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "9350:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3733,
                      "src": "9350:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9338:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9373:3:15",
                      "subExpression": {
                        "id": 674,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "9373:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 676,
                    "nodeType": "ExpressionStatement",
                    "src": "9373:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "9333:2389:15"
                }
              ]
            },
            "id": 908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleRent",
            "nameLocation": "9274:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "9311:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 908,
                  "src": "9285:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 661,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 660,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "9285:18:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "9285:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9284:30:15"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9323:0:15"
            },
            "scope": 2474,
            "src": "9265:2463:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "11796:1433:15",
              "statements": [
                {
                  "body": {
                    "id": 1059,
                    "nodeType": "Block",
                    "src": "11851:1372:15",
                    "statements": [
                      {
                        "assignments": [
                          927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 927,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "11873:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1059,
                            "src": "11865:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 926,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11865:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 946,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 931,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "11958:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 932,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "11958:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 935,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 933,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "11972:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 934,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "11972:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11958:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 936,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "12002:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 937,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "12002:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 939,
                                  "indexExpression": {
                                    "id": 938,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "12013:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12002:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 940,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "12037:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 941,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3757,
                                    "src": "12037:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 943,
                                  "indexExpression": {
                                    "id": 942,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "12050:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12037:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 929,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "11920:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "11920:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11920:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 928,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11893:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11893:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11865:219:15"
                      },
                      {
                        "assignments": [
                          948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 948,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "12106:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1059,
                            "src": "12098:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 947,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12098:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 967,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 952,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "12191:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 953,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "12191:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 956,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 954,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "12205:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 955,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "12205:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12191:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 957,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "12235:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "12235:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 960,
                                  "indexExpression": {
                                    "id": 959,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "12246:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12235:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 961,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 911,
                                      "src": "12270:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 962,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3760,
                                    "src": "12270:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 964,
                                  "indexExpression": {
                                    "id": 963,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "12283:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12270:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 950,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "12153:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "12153:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12153:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 949,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "12126:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12126:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12098:219:15"
                      },
                      {
                        "assignments": [
                          972
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 972,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "12357:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1059,
                            "src": "12331:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 971,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 970,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3788,
                                "src": "12331:17:15"
                              },
                              "referencedDeclaration": 3788,
                              "src": "12331:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 976,
                        "initialValue": {
                          "baseExpression": {
                            "id": 973,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "12367:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 975,
                          "indexExpression": {
                            "id": 974,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "12376:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12367:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12331:63:15"
                      },
                      {
                        "assignments": [
                          981
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 981,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "12434:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1059,
                            "src": "12408:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 980,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 979,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3797,
                                "src": "12408:17:15"
                              },
                              "referencedDeclaration": 3797,
                              "src": "12408:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 985,
                        "initialValue": {
                          "baseExpression": {
                            "id": 982,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "12444:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 984,
                          "indexExpression": {
                            "id": 983,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "12453:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12444:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12408:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 987,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12501:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 986,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2118,
                              2174
                            ],
                            "referencedDeclaration": 2118,
                            "src": "12485:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12485:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 989,
                        "nodeType": "ExpressionStatement",
                        "src": "12485:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 991,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "12542:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 992,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12551:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12551:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 994,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12563:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12563:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 990,
                            "name": "ensureIsReturnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2329,
                            "src": "12523:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3797_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,address,uint256) pure"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12523:56:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "12523:56:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                "typeString": "enum IRegistry.NFTStandard"
                              },
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 999,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "12618:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1000,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nftStandard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3739,
                                  "src": "12618:14:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                                    "typeString": "enum IRegistry.NFTStandard[] memory"
                                  }
                                },
                                "id": 1002,
                                "indexExpression": {
                                  "id": 1001,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "12633:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12618:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1003,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "12639:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftStandard",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3774,
                                "src": "12639:19:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                }
                              },
                              "src": "12618:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a696e76616c6964206e6674207374616e64617264",
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12676:29:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              },
                              "value": "ReNFT::invalid nft standard"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_59da77ab822bb37bf6d6d5e6758c2bd09a9a1822ba888be6948f2e96e640afbd",
                                "typeString": "literal_string \"ReNFT::invalid nft standard\""
                              }
                            ],
                            "id": 998,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12593:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12593:126:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1008,
                        "nodeType": "ExpressionStatement",
                        "src": "12593:126:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1010,
                                  "name": "renting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 981,
                                  "src": "12758:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                    "typeString": "struct IRegistry.Renting storage pointer"
                                  }
                                },
                                "id": 1011,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rentAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3796,
                                "src": "12758:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1012,
                                  "name": "lending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "12780:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                    "typeString": "struct IRegistry.Lending storage pointer"
                                  }
                                },
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3782,
                                "src": "12780:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "src": "12758:40:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52654e46543a3a637269746963616c206572726f72",
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12816:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              },
                              "value": "ReNFT::critical error"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6f1984363b73db9750fba0dec0d544ce17b2982d6dbdcc9dc348e2b30cda508",
                                "typeString": "literal_string \"ReNFT::critical error\""
                              }
                            ],
                            "id": 1009,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12733:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12733:120:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1017,
                        "nodeType": "ExpressionStatement",
                        "src": "12733:120:15"
                      },
                      {
                        "assignments": [
                          1019
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1019,
                            "mutability": "mutable",
                            "name": "secondsSinceRentStart",
                            "nameLocation": "12875:21:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1059,
                            "src": "12867:29:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1018,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12867:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1025,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1020,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12899:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12899:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1022,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "12917:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentedAt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3794,
                            "src": "12917:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12899:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12867:66:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1027,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12966:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1028,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "12975:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "id": 1029,
                              "name": "secondsSinceRentStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1019,
                              "src": "12984:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1026,
                            "name": "distributePayments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "12947:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$3788_memory_ptr_$_t_struct$_Renting_$3797_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory,uint256)"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12947:59:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1031,
                        "nodeType": "ExpressionStatement",
                        "src": "12947:59:15"
                      },
                      {
                        "expression": {
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1032,
                                "name": "lendings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "13020:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                                  "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                                }
                              },
                              "id": 1034,
                              "indexExpression": {
                                "id": 1033,
                                "name": "lendingIdentifier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 927,
                                "src": "13029:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13020:27:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage",
                                "typeString": "struct IRegistry.Lending storage ref"
                              }
                            },
                            "id": 1035,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3784,
                            "src": "13020:43:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1036,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "13067:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3796,
                            "src": "13067:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "13020:65:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "13020:65:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1043,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "13123:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3757,
                                "src": "13123:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1046,
                              "indexExpression": {
                                "id": 1045,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "13136:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13123:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1049,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "13147:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1050,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "13147:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13140:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1047,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13140:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13140:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1040,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3900,
                              "src": "13104:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "StopRent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3722,
                            "src": "13104:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13104:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1053,
                        "nodeType": "EmitStatement",
                        "src": "13099:65:15"
                      },
                      {
                        "expression": {
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "13178:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1054,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "13185:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1056,
                            "indexExpression": {
                              "id": 1055,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "13194:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13185:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1058,
                        "nodeType": "ExpressionStatement",
                        "src": "13178:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 919,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 915,
                      "src": "11832:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 920,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "11836:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "11836:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11832:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1060,
                  "initializationExpression": {
                    "assignments": [
                      915
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11819:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "11811:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11811:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 918,
                    "initialValue": {
                      "expression": {
                        "id": 916,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 911,
                        "src": "11823:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3733,
                      "src": "11823:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11811:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11846:3:15",
                      "subExpression": {
                        "id": 923,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "11846:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 925,
                    "nodeType": "ExpressionStatement",
                    "src": "11846:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "11806:1417:15"
                }
              ]
            },
            "id": 1062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleStopRent",
            "nameLocation": "11743:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "11784:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "11758:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 909,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "11758:18:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "11758:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11757:30:15"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11796:0:15"
            },
            "scope": 2474,
            "src": "11734:1495:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1190,
              "nodeType": "Block",
              "src": "13288:1171:15",
              "statements": [
                {
                  "body": {
                    "id": 1188,
                    "nodeType": "Block",
                    "src": "13343:1110:15",
                    "statements": [
                      {
                        "assignments": [
                          1081
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1081,
                            "mutability": "mutable",
                            "name": "lendingIdentifier",
                            "nameLocation": "13365:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1188,
                            "src": "13357:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1080,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13357:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1100,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1085,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13450:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1086,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "13450:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1089,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1087,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13464:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1088,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "13464:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13450:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1090,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13494:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1091,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "13494:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1093,
                                  "indexExpression": {
                                    "id": 1092,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1069,
                                    "src": "13505:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13494:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1094,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13529:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1095,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lendingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3757,
                                    "src": "13529:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1097,
                                  "indexExpression": {
                                    "id": 1096,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1069,
                                    "src": "13542:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13529:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1083,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13412:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "13412:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13412:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1082,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13385:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13385:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13357:219:15"
                      },
                      {
                        "assignments": [
                          1102
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1102,
                            "mutability": "mutable",
                            "name": "rentingIdentifier",
                            "nameLocation": "13598:17:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1188,
                            "src": "13590:25:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1101,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13590:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1121,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1106,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13683:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1107,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "13683:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1110,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1108,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13697:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1109,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "13697:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13683:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1111,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13727:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1112,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3745,
                                    "src": "13727:10:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1114,
                                  "indexExpression": {
                                    "id": 1113,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1069,
                                    "src": "13738:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13727:13:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1115,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "13762:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1116,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rentingID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3760,
                                    "src": "13762:12:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1118,
                                  "indexExpression": {
                                    "id": 1117,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1069,
                                    "src": "13775:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13762:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1104,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13645:3:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "13645:16:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13645:150:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1103,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13618:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13618:191:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13590:219:15"
                      },
                      {
                        "assignments": [
                          1126
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1126,
                            "mutability": "mutable",
                            "name": "lending",
                            "nameLocation": "13849:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1188,
                            "src": "13823:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                              "typeString": "struct IRegistry.Lending"
                            },
                            "typeName": {
                              "id": 1125,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1124,
                                "name": "IRegistry.Lending",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3788,
                                "src": "13823:17:15"
                              },
                              "referencedDeclaration": 3788,
                              "src": "13823:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1130,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1127,
                            "name": "lendings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "13859:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                            }
                          },
                          "id": 1129,
                          "indexExpression": {
                            "id": 1128,
                            "name": "lendingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "13868:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13859:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage",
                            "typeString": "struct IRegistry.Lending storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13823:63:15"
                      },
                      {
                        "assignments": [
                          1135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1135,
                            "mutability": "mutable",
                            "name": "renting",
                            "nameLocation": "13926:7:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1188,
                            "src": "13900:33:15",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                              "typeString": "struct IRegistry.Renting"
                            },
                            "typeName": {
                              "id": 1134,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1133,
                                "name": "IRegistry.Renting",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3797,
                                "src": "13900:17:15"
                              },
                              "referencedDeclaration": 3797,
                              "src": "13900:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1139,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1136,
                            "name": "rentings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "13936:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                              "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                            }
                          },
                          "id": 1138,
                          "indexExpression": {
                            "id": 1137,
                            "name": "rentingIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1102,
                            "src": "13945:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13936:27:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage",
                            "typeString": "struct IRegistry.Renting storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13900:63:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1141,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "13993:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            ],
                            "id": 1140,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2118,
                              2174
                            ],
                            "referencedDeclaration": 2118,
                            "src": "13977:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Lending_$3788_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory) pure"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13977:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "13977:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1145,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "14031:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1144,
                            "name": "ensureIsNotNull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2118,
                              2174
                            ],
                            "referencedDeclaration": 2174,
                            "src": "14015:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3797_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory) pure"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14015:24:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1147,
                        "nodeType": "ExpressionStatement",
                        "src": "14015:24:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1149,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "14071:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            },
                            {
                              "expression": {
                                "id": 1150,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14080:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14080:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1148,
                            "name": "ensureIsClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2401,
                            "src": "14053:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3797_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure"
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14053:43:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1153,
                        "nodeType": "ExpressionStatement",
                        "src": "14053:43:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1155,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "14133:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            {
                              "id": 1156,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "14142:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              },
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                "typeString": "struct IRegistry.Renting storage pointer"
                              }
                            ],
                            "id": 1154,
                            "name": "distributeClaimPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1529,
                            "src": "14110:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Lending_$3788_memory_ptr_$_t_struct$_Renting_$3797_memory_ptr_$returns$__$",
                              "typeString": "function (struct IRegistry.Lending memory,struct IRegistry.Renting memory)"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14110:40:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "14110:40:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1162,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1065,
                                  "src": "14208:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1163,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lendingID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3757,
                                "src": "14208:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1165,
                              "indexExpression": {
                                "id": 1164,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1069,
                                "src": "14221:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14208:15:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1168,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14248:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14248:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14241:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 1166,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14241:6:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14241:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "id": 1159,
                              "name": "IRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3900,
                              "src": "14169:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                "typeString": "type(contract IRegistry)"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "RentClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3728,
                            "src": "14169:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint32_$returns$__$",
                              "typeString": "function (uint256,uint32)"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14169:109:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1172,
                        "nodeType": "EmitStatement",
                        "src": "14164:114:15"
                      },
                      {
                        "expression": {
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1173,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "14292:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1175,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "availableAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3784,
                            "src": "14292:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1176,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1126,
                                "src": "14334:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                  "typeString": "struct IRegistry.Lending storage pointer"
                                }
                              },
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3784,
                              "src": "14334:23:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 1178,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1135,
                                "src": "14376:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                                  "typeString": "struct IRegistry.Renting storage pointer"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rentAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3796,
                              "src": "14376:18:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "14334:60:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "14292:102:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "14292:102:15"
                      },
                      {
                        "expression": {
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "14408:34:15",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1183,
                              "name": "rentings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "14415:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                                "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                              }
                            },
                            "id": 1185,
                            "indexExpression": {
                              "id": 1184,
                              "name": "rentingIdentifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "14424:17:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14415:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_storage",
                              "typeString": "struct IRegistry.Renting storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1187,
                        "nodeType": "ExpressionStatement",
                        "src": "14408:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1073,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "13324:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1074,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "13328:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "13328:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13324:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1189,
                  "initializationExpression": {
                    "assignments": [
                      1069
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13311:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1189,
                        "src": "13303:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13303:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1072,
                    "initialValue": {
                      "expression": {
                        "id": 1070,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "13315:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "left",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3733,
                      "src": "13315:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13303:19:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13338:3:15",
                      "subExpression": {
                        "id": 1077,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "13338:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1079,
                    "nodeType": "ExpressionStatement",
                    "src": "13338:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "13298:1155:15"
                }
              ]
            },
            "id": 1191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "handleClaimRent",
            "nameLocation": "13244:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "13276:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "13260:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1063,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "13260:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "13260:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13259:20:15"
            },
            "returnParameters": {
              "id": 1067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13288:0:15"
            },
            "scope": 2474,
            "src": "13235:1224:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "14772:484:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1205,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "14790:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3742,
                            "src": "14790:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14790:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14813:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14790:24:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f206e667473",
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14816:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        },
                        "value": "ReNFT::no nfts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f52badcc8137d8c39ef98a7008358d0aa859956aee9d66c4c5a86a3863ba00c",
                          "typeString": "literal_string \"ReNFT::no nfts\""
                        }
                      ],
                      "id": 1204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14782:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14782:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "14782:51:15"
                },
                {
                  "body": {
                    "id": 1266,
                    "nodeType": "Block",
                    "src": "14884:345:15",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1219,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "14920:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1220,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "14920:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1223,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1221,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "14934:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1222,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "14934:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14920:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1224,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "14946:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1225,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "14946:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1228,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1226,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "14960:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3735,
                                    "src": "14960:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14946:23:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14920:49:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1230,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14919:51:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                  "typeString": "enum IRegistry.NFTStandard"
                                },
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1231,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "14991:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1232,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3739,
                                    "src": "14991:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                                      "typeString": "enum IRegistry.NFTStandard[] memory"
                                    }
                                  },
                                  "id": 1235,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1233,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1201,
                                      "src": "15006:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1234,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "right",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3735,
                                    "src": "15006:8:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14991:24:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1236,
                                      "name": "IRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3900,
                                      "src": "15019:9:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                                        "typeString": "type(contract IRegistry)"
                                      }
                                    },
                                    "id": 1237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "NFTStandard",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3731,
                                    "src": "15019:21:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3731_$",
                                      "typeString": "type(enum IRegistry.NFTStandard)"
                                    }
                                  },
                                  "id": 1238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "E1155",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3730,
                                  "src": "15019:27:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_NFTStandard_$3731",
                                    "typeString": "enum IRegistry.NFTStandard"
                                  }
                                },
                                "src": "14991:55:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1240,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14990:57:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14919:128:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1264,
                          "nodeType": "Block",
                          "src": "15111:108:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1249,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1201,
                                    "src": "15137:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  ],
                                  "id": 1248,
                                  "name": "handler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1198,
                                  "src": "15129:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                                    "typeString": "function (struct IRegistry.CallData memory)"
                                  }
                                },
                                "id": 1250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15129:11:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1251,
                              "nodeType": "ExpressionStatement",
                              "src": "15129:11:15"
                            },
                            {
                              "expression": {
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1252,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1201,
                                    "src": "15158:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1254,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "left",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3733,
                                  "src": "15158:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1255,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1201,
                                    "src": "15168:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1256,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3735,
                                  "src": "15168:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15158:18:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "15158:18:15"
                            },
                            {
                              "expression": {
                                "id": 1262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15194:10:15",
                                "subExpression": {
                                  "expression": {
                                    "id": 1259,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1201,
                                    "src": "15194:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3735,
                                  "src": "15194:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1263,
                              "nodeType": "ExpressionStatement",
                              "src": "15194:10:15"
                            }
                          ]
                        },
                        "id": 1265,
                        "nodeType": "IfStatement",
                        "src": "14898:321:15",
                        "trueBody": {
                          "id": 1247,
                          "nodeType": "Block",
                          "src": "15062:43:15",
                          "statements": [
                            {
                              "expression": {
                                "id": 1245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "15080:10:15",
                                "subExpression": {
                                  "expression": {
                                    "id": 1242,
                                    "name": "cd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1201,
                                    "src": "15080:2:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                      "typeString": "struct IRegistry.CallData memory"
                                    }
                                  },
                                  "id": 1244,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "right",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3735,
                                  "src": "15080:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1246,
                              "nodeType": "ExpressionStatement",
                              "src": "15080:10:15"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1213,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "14850:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "right",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3735,
                      "src": "14850:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1215,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1201,
                          "src": "14862:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3742,
                        "src": "14862:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14862:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14850:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1267,
                  "nodeType": "WhileStatement",
                  "src": "14843:386:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1269,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "15246:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                          "typeString": "struct IRegistry.CallData memory"
                        }
                      ],
                      "id": 1268,
                      "name": "handler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "15238:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                        "typeString": "function (struct IRegistry.CallData memory)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15238:11:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "15238:11:15"
                }
              ]
            },
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bundleCall",
            "nameLocation": "14656:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "handler",
                  "nameLocation": "14712:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "14676:43:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                    "typeString": "function (struct IRegistry.CallData)"
                  },
                  "typeName": {
                    "id": 1197,
                    "nodeType": "FunctionTypeName",
                    "parameterTypes": {
                      "id": 1195,
                      "nodeType": "ParameterList",
                      "parameters": [
                        {
                          "constant": false,
                          "id": 1194,
                          "mutability": "mutable",
                          "name": "",
                          "nameLocation": "-1:-1:-1",
                          "nodeType": "VariableDeclaration",
                          "scope": 1197,
                          "src": "14685:25:15",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                            "typeString": "struct IRegistry.CallData"
                          },
                          "typeName": {
                            "id": 1193,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1192,
                              "name": "IRegistry.CallData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3771,
                              "src": "14685:18:15"
                            },
                            "referencedDeclaration": 3771,
                            "src": "14685:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                              "typeString": "struct IRegistry.CallData"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "src": "14684:27:15"
                    },
                    "returnParameterTypes": {
                      "id": 1196,
                      "nodeType": "ParameterList",
                      "parameters": [],
                      "src": "14712:0:15"
                    },
                    "src": "14676:43:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CallData_$3771_memory_ptr_$returns$__$",
                      "typeString": "function (struct IRegistry.CallData)"
                    },
                    "visibility": "internal"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "14755:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "14729:28:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1200,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1199,
                      "name": "IRegistry.CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "14729:18:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "14729:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14666:97:15"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14772:0:15"
            },
            "scope": 2474,
            "src": "14647:609:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1317,
              "nodeType": "Block",
              "src": "15383:237:15",
              "statements": [
                {
                  "expression": {
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1283,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "15393:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1284,
                        "name": "rentAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "15399:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 1285,
                        "name": "rentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "15409:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15399:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15393:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "15393:23:15"
                },
                {
                  "expression": {
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1289,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "15426:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "/=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15433:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "15426:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "15426:12:15"
                },
                {
                  "assignments": [
                    1294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1294,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "15454:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1317,
                      "src": "15448:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1293,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15448:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1299,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1297,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "15477:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$4346",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$4346",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15471:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15471:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15471:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15448:42:15"
                },
                {
                  "assignments": [
                    1302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1302,
                      "mutability": "mutable",
                      "name": "pmtToken",
                      "nameLocation": "15506:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1317,
                      "src": "15500:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3227",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1300,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3227,
                          "src": "15500:5:15"
                        },
                        "referencedDeclaration": 3227,
                        "src": "15500:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1309,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1306,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1294,
                            "src": "15548:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1304,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "15523:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$4361",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4353,
                          "src": "15523:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15523:40:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1303,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3227,
                      "src": "15517:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15517:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3227",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15500:64:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1313,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "15596:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1314,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "15609:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1310,
                        "name": "pmtToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "15574:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3336,
                      "src": "15574:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3305_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3305_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15574:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "15574:39:15"
                }
              ]
            },
            "id": 1318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "takeFee",
            "nameLocation": "15271:7:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "rentAmt",
                  "nameLocation": "15287:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "15279:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15279:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "15319:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "15296:35:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PaymentToken_$4346",
                    "typeString": "enum IResolver.PaymentToken"
                  },
                  "typeName": {
                    "id": 1277,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1276,
                      "name": "IResolver.PaymentToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4346,
                      "src": "15296:22:15"
                    },
                    "referencedDeclaration": 4346,
                    "src": "15296:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PaymentToken_$4346",
                      "typeString": "enum IResolver.PaymentToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15278:54:15"
            },
            "returnParameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "15374:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "15366:11:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15366:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15365:13:15"
            },
            "scope": 2474,
            "src": "15262:358:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1442,
              "nodeType": "Block",
              "src": "15791:1028:15",
              "statements": [
                {
                  "assignments": [
                    1330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1330,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "15807:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "15801:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1329,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15801:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1336,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1333,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "15830:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3787,
                        "src": "15830:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$4346",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$4346",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15824:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1331,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "15824:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15824:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15801:50:15"
                },
                {
                  "assignments": [
                    1338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1338,
                      "mutability": "mutable",
                      "name": "pmtToken",
                      "nameLocation": "15869:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "15861:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15861:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1343,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1341,
                        "name": "paymentTokenIx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "15905:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1339,
                        "name": "resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "15880:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IResolver_$4361",
                          "typeString": "contract IResolver"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPaymentToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4353,
                      "src": "15880:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                        "typeString": "function (uint8) view external returns (address)"
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15880:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15861:59:15"
                },
                {
                  "assignments": [
                    1345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1345,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "15938:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "15930:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15930:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1351,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1347,
                            "name": "pmtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "15955:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1346,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3227,
                          "src": "15949:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15949:15:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2756,
                      "src": "15949:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15949:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15930:45:15"
                },
                {
                  "assignments": [
                    1353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1353,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "15993:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "15985:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15985:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1357,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16001:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1355,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "16005:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16001:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15985:28:15"
                },
                {
                  "assignments": [
                    1359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1359,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "16031:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "16023:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16023:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1365,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1361,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "16055:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3780,
                        "src": "16055:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1363,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "16079:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1360,
                      "name": "unpackPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1980,
                      "src": "16043:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes4,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16043:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16023:62:15"
                },
                {
                  "assignments": [
                    1367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1367,
                      "mutability": "mutable",
                      "name": "totalRenterPmt",
                      "nameLocation": "16103:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "16095:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1366,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16095:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1372,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1368,
                      "name": "rentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1359,
                      "src": "16120:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1369,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "16132:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1370,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3792,
                      "src": "16132:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16120:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16095:57:15"
                },
                {
                  "assignments": [
                    1374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1374,
                      "mutability": "mutable",
                      "name": "sendLenderAmt",
                      "nameLocation": "16170:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "16162:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16162:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1381,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1375,
                            "name": "secondsSinceRentStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "16187:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1376,
                            "name": "rentPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1359,
                            "src": "16211:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16187:33:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1378,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16186:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1379,
                      "name": "SECONDS_IN_DAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "16236:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16186:64:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16162:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1383,
                          "name": "totalRenterPmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1367,
                          "src": "16268:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16285:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16268:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f74616c2072656e746572207061796d656e74206973207a65726f",
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16288:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        },
                        "value": "ReNFT::total renter payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_713b468fd36252cd36d8daacefddd3e2dbbcb1889f7a036277ecfde7125b9fc9",
                          "typeString": "literal_string \"ReNFT::total renter payment is zero\""
                        }
                      ],
                      "id": 1382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16260:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16260:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1388,
                  "nodeType": "ExpressionStatement",
                  "src": "16260:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1390,
                          "name": "sendLenderAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "16344:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16360:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16344:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e646572207061796d656e74206973207a65726f",
                        "id": 1393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16363:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        },
                        "value": "ReNFT::lender payment is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab0b1c9d335b97dd1528f0261fe0ad80fa0e223ac5aa227d7542691d5f8f5a99",
                          "typeString": "literal_string \"ReNFT::lender payment is zero\""
                        }
                      ],
                      "id": 1389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16336:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16336:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1395,
                  "nodeType": "ExpressionStatement",
                  "src": "16336:59:15"
                },
                {
                  "assignments": [
                    1397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1397,
                      "mutability": "mutable",
                      "name": "sendRenterAmt",
                      "nameLocation": "16413:13:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1442,
                      "src": "16405:21:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16405:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1401,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1398,
                      "name": "totalRenterPmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "16429:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1399,
                      "name": "sendLenderAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "16446:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16429:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16405:54:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1402,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "16473:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16484:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16473:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1418,
                  "nodeType": "IfStatement",
                  "src": "16469:145:15",
                  "trueBody": {
                    "id": 1417,
                    "nodeType": "Block",
                    "src": "16487:127:15",
                    "statements": [
                      {
                        "assignments": [
                          1406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1406,
                            "mutability": "mutable",
                            "name": "takenFee",
                            "nameLocation": "16509:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 1417,
                            "src": "16501:16:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1405,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16501:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1412,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1408,
                              "name": "sendLenderAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "16528:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1409,
                                "name": "lending",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1321,
                                "src": "16543:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                                  "typeString": "struct IRegistry.Lending memory"
                                }
                              },
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3787,
                              "src": "16543:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                "typeString": "enum IResolver.PaymentToken"
                              }
                            ],
                            "id": 1407,
                            "name": "takeFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "16520:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_PaymentToken_$4346_$returns$_t_uint256_$",
                              "typeString": "function (uint256,enum IResolver.PaymentToken) returns (uint256)"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16520:44:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16501:63:15"
                      },
                      {
                        "expression": {
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1413,
                            "name": "sendLenderAmt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "16578:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1414,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "16595:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16578:25:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1416,
                        "nodeType": "ExpressionStatement",
                        "src": "16578:25:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1423,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "16652:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1424,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3776,
                        "src": "16652:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1425,
                        "name": "sendLenderAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "16675:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1420,
                            "name": "pmtToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "16629:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1419,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3227,
                          "src": "16623:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16623:15:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3336,
                      "src": "16623:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3305_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3305_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16623:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1427,
                  "nodeType": "ExpressionStatement",
                  "src": "16623:66:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1428,
                      "name": "sendRenterAmt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1397,
                      "src": "16703:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16719:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16703:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1441,
                  "nodeType": "IfStatement",
                  "src": "16699:114:15",
                  "trueBody": {
                    "id": 1440,
                    "nodeType": "Block",
                    "src": "16722:91:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1435,
                                "name": "renting",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1324,
                                "src": "16765:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                                  "typeString": "struct IRegistry.Renting memory"
                                }
                              },
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "renterAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3790,
                              "src": "16765:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1437,
                              "name": "sendRenterAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1397,
                              "src": "16788:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1432,
                                  "name": "pmtToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1338,
                                  "src": "16742:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1431,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3227,
                                "src": "16736:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16736:15:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3227",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3336,
                            "src": "16736:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3305_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3305_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16736:66:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1439,
                        "nodeType": "ExpressionStatement",
                        "src": "16736:66:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributePayments",
            "nameLocation": "15635:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "15688:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1443,
                  "src": "15663:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1320,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1319,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3788,
                      "src": "15663:17:15"
                    },
                    "referencedDeclaration": 3788,
                    "src": "15663:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "15730:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1443,
                  "src": "15705:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1323,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1322,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "15705:17:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "15705:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "secondsSinceRentStart",
                  "nameLocation": "15755:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1443,
                  "src": "15747:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15747:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15653:129:15"
            },
            "returnParameters": {
              "id": 1328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15791:0:15"
            },
            "scope": 2474,
            "src": "15626:1193:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1528,
              "nodeType": "Block",
              "src": "16955:650:15",
              "statements": [
                {
                  "assignments": [
                    1453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1453,
                      "mutability": "mutable",
                      "name": "paymentTokenIx",
                      "nameLocation": "16971:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "16965:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1452,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16965:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1459,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1456,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1446,
                          "src": "16994:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3787,
                        "src": "16994:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PaymentToken_$4346",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PaymentToken_$4346",
                          "typeString": "enum IResolver.PaymentToken"
                        }
                      ],
                      "id": 1455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "16988:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16988:5:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16988:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16965:50:15"
                },
                {
                  "assignments": [
                    1462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1462,
                      "mutability": "mutable",
                      "name": "paymentToken",
                      "nameLocation": "17031:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "17025:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3227",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1461,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1460,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3227,
                          "src": "17025:5:15"
                        },
                        "referencedDeclaration": 3227,
                        "src": "17025:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1469,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1466,
                            "name": "paymentTokenIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "17077:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 1464,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "17052:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IResolver_$4361",
                              "typeString": "contract IResolver"
                            }
                          },
                          "id": 1465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPaymentToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4353,
                          "src": "17052:24:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                            "typeString": "function (uint8) view external returns (address)"
                          }
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17052:40:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1463,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3227,
                      "src": "17046:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17046:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3227",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17025:68:15"
                },
                {
                  "assignments": [
                    1471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1471,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "17111:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "17103:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17103:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1477,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1473,
                            "name": "paymentToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1462,
                            "src": "17128:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3227",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$3227",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1472,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3227,
                          "src": "17122:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$3227_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17122:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2756,
                      "src": "17122:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17122:30:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17103:49:15"
                },
                {
                  "assignments": [
                    1479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1479,
                      "mutability": "mutable",
                      "name": "scale",
                      "nameLocation": "17170:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "17162:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1478,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17162:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1483,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 1480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17178:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "id": 1481,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "17182:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17178:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17162:28:15"
                },
                {
                  "assignments": [
                    1485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1485,
                      "mutability": "mutable",
                      "name": "rentPrice",
                      "nameLocation": "17208:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "17200:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1484,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17200:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1491,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1487,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1446,
                          "src": "17232:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3780,
                        "src": "17232:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1489,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "17256:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1486,
                      "name": "unpackPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1980,
                      "src": "17220:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes4,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17220:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17200:62:15"
                },
                {
                  "assignments": [
                    1493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "finalAmt",
                      "nameLocation": "17280:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "17272:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17272:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1498,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1494,
                      "name": "rentPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1485,
                      "src": "17291:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "id": 1495,
                        "name": "renting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "17303:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                          "typeString": "struct IRegistry.Renting memory"
                        }
                      },
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rentDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3792,
                      "src": "17303:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17291:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17272:51:15"
                },
                {
                  "assignments": [
                    1500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1500,
                      "mutability": "mutable",
                      "name": "takenFee",
                      "nameLocation": "17341:8:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "17333:16:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1499,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17333:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17352:1:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17333:20:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1503,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "17367:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17378:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17367:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1517,
                  "nodeType": "IfStatement",
                  "src": "17363:157:15",
                  "trueBody": {
                    "id": 1516,
                    "nodeType": "Block",
                    "src": "17381:139:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1506,
                            "name": "takenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1500,
                            "src": "17395:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1508,
                                "name": "finalAmt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1493,
                                "src": "17431:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1511,
                                    "name": "paymentTokenIx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1453,
                                    "src": "17480:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1509,
                                    "name": "IResolver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4361,
                                    "src": "17457:9:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IResolver_$4361_$",
                                      "typeString": "type(contract IResolver)"
                                    }
                                  },
                                  "id": 1510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "PaymentToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4346,
                                  "src": "17457:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PaymentToken_$4346_$",
                                    "typeString": "type(enum IResolver.PaymentToken)"
                                  }
                                },
                                "id": 1512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17457:38:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              ],
                              "id": 1507,
                              "name": "takeFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1318,
                              "src": "17406:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_PaymentToken_$4346_$returns$_t_uint256_$",
                                "typeString": "function (uint256,enum IResolver.PaymentToken) returns (uint256)"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17406:103:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17395:114:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "17395:114:15"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1521,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1446,
                          "src": "17555:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3776,
                        "src": "17555:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1523,
                          "name": "finalAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "17578:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1524,
                          "name": "takenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "17589:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17578:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1518,
                        "name": "paymentToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1462,
                        "src": "17529:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3227",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3336,
                      "src": "17529:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3305_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3305_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17529:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "17529:69:15"
                }
              ]
            },
            "id": 1529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeClaimPayment",
            "nameLocation": "16834:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1446,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "16891:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1529,
                  "src": "16866:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 1445,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1444,
                      "name": "IRegistry.Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3788,
                      "src": "16866:17:15"
                    },
                    "referencedDeclaration": 3788,
                    "src": "16866:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "16933:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1529,
                  "src": "16908:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 1448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1447,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "16908:17:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "16908:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16856:90:15"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16955:0:15"
            },
            "scope": 2474,
            "src": "16825:780:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1589,
              "nodeType": "Block",
              "src": "17788:451:15",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_NFTStandard_$3731",
                      "typeString": "enum IRegistry.NFTStandard"
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1545,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1532,
                          "src": "17802:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1546,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3739,
                        "src": "17802:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                          "typeString": "enum IRegistry.NFTStandard[] memory"
                        }
                      },
                      "id": 1549,
                      "indexExpression": {
                        "expression": {
                          "id": 1547,
                          "name": "cd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1532,
                          "src": "17817:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                            "typeString": "struct IRegistry.CallData memory"
                          }
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "left",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3733,
                        "src": "17817:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17802:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1550,
                          "name": "IRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3900,
                          "src": "17829:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRegistry_$3900_$",
                            "typeString": "type(contract IRegistry)"
                          }
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTStandard",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3731,
                        "src": "17829:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_NFTStandard_$3731_$",
                          "typeString": "type(enum IRegistry.NFTStandard)"
                        }
                      },
                      "id": 1552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "E721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3729,
                      "src": "17829:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "src": "17802:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1587,
                    "nodeType": "Block",
                    "src": "18025:208:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1580,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1534,
                              "src": "18111:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1581,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "18133:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1582,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1539,
                              "src": "18153:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1583,
                              "name": "lendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "18178:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18206:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1573,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "18048:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1574,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "18048:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1577,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1575,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "18062:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1576,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "18062:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18048:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1572,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2596,
                                "src": "18039:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$2596_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              },
                              "id": 1578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18039:32:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$2596",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeBatchTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2595,
                            "src": "18039:54:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18039:183:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1586,
                        "nodeType": "ExpressionStatement",
                        "src": "18039:183:15"
                      }
                    ]
                  },
                  "id": 1588,
                  "nodeType": "IfStatement",
                  "src": "17798:435:15",
                  "trueBody": {
                    "id": 1571,
                    "nodeType": "Block",
                    "src": "17857:162:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1562,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1534,
                              "src": "17933:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1563,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "17955:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1564,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1532,
                                  "src": "17975:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1565,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3745,
                                "src": "17975:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1568,
                              "indexExpression": {
                                "expression": {
                                  "id": 1566,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1532,
                                  "src": "17986:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 1567,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "left",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3733,
                                "src": "17986:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17975:19:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1555,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "17879:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1556,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftAddress",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3742,
                                    "src": "17879:13:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1559,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1557,
                                      "name": "cd",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "17893:2:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                        "typeString": "struct IRegistry.CallData memory"
                                      }
                                    },
                                    "id": 1558,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "left",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3733,
                                    "src": "17893:7:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17879:22:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1554,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3645,
                                "src": "17871:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3645_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17871:31:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$3645",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3598,
                            "src": "17871:44:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17871:137:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1570,
                        "nodeType": "ExpressionStatement",
                        "src": "17871:137:15"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1590,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "17620:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "17658:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "17642:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1531,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1530,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "17642:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "17642:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "17678:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "17670:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17670:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1536,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17700:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "17692:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17692:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "17729:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "17712:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1537,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17712:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1538,
                    "nodeType": "ArrayTypeName",
                    "src": "17712:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "17763:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "17746:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1540,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17746:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1541,
                    "nodeType": "ArrayTypeName",
                    "src": "17746:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17632:147:15"
            },
            "returnParameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17788:0:15"
            },
            "scope": 2474,
            "src": "17611:628:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1655,
              "nodeType": "Block",
              "src": "18733:471:15",
              "statements": [
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "18751:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1655,
                      "src": "18743:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1613,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18743:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1623,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1618,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1592,
                            "src": "18804:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1619,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "18816:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1620,
                            "name": "_lendingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "18825:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1616,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18787:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18787:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18787:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1615,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18764:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18764:82:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18743:103:15"
                },
                {
                  "assignments": [
                    1628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1628,
                      "mutability": "mutable",
                      "name": "lending",
                      "nameLocation": "18882:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1655,
                      "src": "18856:33:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                        "typeString": "struct IRegistry.Lending"
                      },
                      "typeName": {
                        "id": 1627,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1626,
                          "name": "IRegistry.Lending",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3788,
                          "src": "18856:17:15"
                        },
                        "referencedDeclaration": 3788,
                        "src": "18856:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                          "typeString": "struct IRegistry.Lending"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1632,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1629,
                      "name": "lendings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "18892:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Lending_$3788_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Lending storage ref)"
                      }
                    },
                    "id": 1631,
                    "indexExpression": {
                      "id": 1630,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1614,
                      "src": "18901:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "18892:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage",
                      "typeString": "struct IRegistry.Lending storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18856:56:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1635,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1628,
                              "src": "18949:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1636,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftStandard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3774,
                            "src": "18949:19:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_NFTStandard_$3731",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_NFTStandard_$3731",
                              "typeString": "enum IRegistry.NFTStandard"
                            }
                          ],
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18943:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1633,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "18943:5:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18943:26:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1638,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1628,
                          "src": "18983:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3776,
                        "src": "18983:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1640,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1628,
                          "src": "19018:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxRentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3778,
                        "src": "19018:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1642,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1628,
                          "src": "19055:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dailyRentPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3780,
                        "src": "19055:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "expression": {
                          "id": 1644,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1628,
                          "src": "19091:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1645,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lendAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3782,
                        "src": "19091:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1646,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1628,
                          "src": "19123:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                            "typeString": "struct IRegistry.Lending storage pointer"
                          }
                        },
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "availableAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3784,
                        "src": "19123:23:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1650,
                              "name": "lending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1628,
                              "src": "19166:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                                "typeString": "struct IRegistry.Lending storage pointer"
                              }
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "paymentToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3787,
                            "src": "19166:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PaymentToken_$4346",
                              "typeString": "enum IResolver.PaymentToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_PaymentToken_$4346",
                              "typeString": "enum IResolver.PaymentToken"
                            }
                          ],
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19160:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1648,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "19160:5:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19160:27:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 1653,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18929:268:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint8_$_t_bytes4_$_t_uint16_$_t_uint16_$_t_uint8_$",
                      "typeString": "tuple(uint8,address payable,uint8,bytes4,uint16,uint16,uint8)"
                    }
                  },
                  "functionReturnParameters": 1612,
                  "id": 1654,
                  "nodeType": "Return",
                  "src": "18922:275:15"
                }
              ]
            },
            "functionSelector": "296c21b7",
            "id": 1656,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLending",
            "nameLocation": "18436:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1592,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "18464:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18456:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18456:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1594,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "18492:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18484:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18484:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1596,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "18517:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18509:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18509:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18446:87:15"
            },
            "returnParameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18594:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18594:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18613:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18613:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18634:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18634:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18653:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "18653:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18673:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1606,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18673:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18693:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18693:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1656,
                  "src": "18713:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18713:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18580:148:15"
            },
            "scope": 2474,
            "src": "18427:777:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "19458:344:15",
              "statements": [
                {
                  "assignments": [
                    1674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1674,
                      "mutability": "mutable",
                      "name": "identifier",
                      "nameLocation": "19476:10:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "19468:18:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1673,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19468:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1683,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1678,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "19529:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1679,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1660,
                            "src": "19541:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1680,
                            "name": "_rentingID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "19550:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1676,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19512:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19512:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19512:49:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1675,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19489:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19489:82:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19468:103:15"
                },
                {
                  "assignments": [
                    1688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1688,
                      "mutability": "mutable",
                      "name": "renting",
                      "nameLocation": "19607:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "19581:33:15",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                        "typeString": "struct IRegistry.Renting"
                      },
                      "typeName": {
                        "id": 1687,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1686,
                          "name": "IRegistry.Renting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3797,
                          "src": "19581:17:15"
                        },
                        "referencedDeclaration": 3797,
                        "src": "19581:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                          "typeString": "struct IRegistry.Renting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1692,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1689,
                      "name": "rentings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "19617:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Renting_$3797_storage_$",
                        "typeString": "mapping(bytes32 => struct IRegistry.Renting storage ref)"
                      }
                    },
                    "id": 1691,
                    "indexExpression": {
                      "id": 1690,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "19626:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19617:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage",
                      "typeString": "struct IRegistry.Renting storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19581:56:15"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1693,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1688,
                          "src": "19668:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3790,
                        "src": "19668:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 1695,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1688,
                          "src": "19703:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3796,
                        "src": "19703:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "expression": {
                          "id": 1697,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1688,
                          "src": "19735:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1698,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3792,
                        "src": "19735:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1699,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1688,
                          "src": "19769:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                            "typeString": "struct IRegistry.Renting storage pointer"
                          }
                        },
                        "id": 1700,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3794,
                        "src": "19769:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "id": 1701,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19654:141:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint16_$_t_uint8_$_t_uint32_$",
                      "typeString": "tuple(address payable,uint16,uint8,uint32)"
                    }
                  },
                  "functionReturnParameters": 1672,
                  "id": 1702,
                  "nodeType": "Return",
                  "src": "19647:148:15"
                }
              ]
            },
            "functionSelector": "fe46b7cd",
            "id": 1704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRenting",
            "nameLocation": "19219:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "19247:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19239:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19239:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "19275:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19267:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19267:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1662,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "19300:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19292:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19292:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19229:87:15"
            },
            "returnParameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19377:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19377:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1667,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19398:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "19398:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19418:5:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "19418:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "19437:6:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1670,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19437:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19363:90:15"
            },
            "scope": 2474,
            "src": "19210:592:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1767,
              "nodeType": "Block",
              "src": "20360:521:15",
              "statements": [
                {
                  "expression": {
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1733,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1731,
                      "src": "20370:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20404:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20426:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1737,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "20454:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1738,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1711,
                          "src": "20491:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1739,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "20524:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1740,
                          "name": "lendAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1717,
                          "src": "20557:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20606:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20592:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1741,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20596:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1742,
                              "nodeType": "ArrayTypeName",
                              "src": "20596:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20592:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20647:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20633:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1746,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20637:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1747,
                              "nodeType": "ArrayTypeName",
                              "src": "20637:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20633:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20689:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20677:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1751,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "20681:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1752,
                              "nodeType": "ArrayTypeName",
                              "src": "20681:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20677:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20731:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "20717:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1756,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20721:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1757,
                              "nodeType": "ArrayTypeName",
                              "src": "20721:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20717:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1761,
                          "name": "maxRentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "20764:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1762,
                          "name": "dailyRentPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1723,
                          "src": "20809:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "id": 1763,
                          "name": "paymentToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1727,
                          "src": "20851:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1734,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3771,
                        "src": "20375:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$3771_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "20375:499:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "20370:504:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1766,
                  "nodeType": "ExpressionStatement",
                  "src": "20370:504:15"
                }
              ]
            },
            "id": 1768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLendCallData",
            "nameLocation": "19999:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1708,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "20058:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20027:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1706,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1705,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "20027:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "20027:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1707,
                    "nodeType": "ArrayTypeName",
                    "src": "20027:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "20096:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20079:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1709,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20079:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1710,
                    "nodeType": "ArrayTypeName",
                    "src": "20079:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "20133:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20116:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1712,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20116:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1713,
                    "nodeType": "ArrayTypeName",
                    "src": "20116:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "lendAmount",
                  "nameLocation": "20167:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20150:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1715,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20150:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1716,
                    "nodeType": "ArrayTypeName",
                    "src": "20150:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "maxRentDuration",
                  "nameLocation": "20202:15:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20187:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1718,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20187:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1719,
                    "nodeType": "ArrayTypeName",
                    "src": "20187:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1723,
                  "mutability": "mutable",
                  "name": "dailyRentPrice",
                  "nameLocation": "20243:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20227:30:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1721,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "20227:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 1722,
                    "nodeType": "ArrayTypeName",
                    "src": "20227:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1727,
                  "mutability": "mutable",
                  "name": "paymentToken",
                  "nameLocation": "20299:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20267:44:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                    "typeString": "enum IResolver.PaymentToken[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1725,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1724,
                        "name": "IResolver.PaymentToken",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4346,
                        "src": "20267:22:15"
                      },
                      "referencedDeclaration": 4346,
                      "src": "20267:22:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PaymentToken_$4346",
                        "typeString": "enum IResolver.PaymentToken"
                      }
                    },
                    "id": 1726,
                    "nodeType": "ArrayTypeName",
                    "src": "20267:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_storage_ptr",
                      "typeString": "enum IResolver.PaymentToken[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20017:300:15"
            },
            "returnParameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1731,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "20356:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "20340:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1730,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1729,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "20340:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "20340:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20339:20:15"
            },
            "scope": 2474,
            "src": "19990:891:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1832,
              "nodeType": "Block",
              "src": "21197:532:15",
              "statements": [
                {
                  "expression": {
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1793,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1791,
                      "src": "21207:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21241:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21263:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1797,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1772,
                          "src": "21291:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1798,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1775,
                          "src": "21328:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1799,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "21361:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21408:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21394:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1800,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21398:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1801,
                              "nodeType": "ArrayTypeName",
                              "src": "21398:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21394:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1805,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "21435:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21484:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21470:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1806,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21474:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1807,
                              "nodeType": "ArrayTypeName",
                              "src": "21474:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21470:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1811,
                          "name": "rentDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1784,
                          "src": "21514:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "id": 1812,
                          "name": "rentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1787,
                          "src": "21552:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21605:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21593:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1813,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "21597:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1814,
                              "nodeType": "ArrayTypeName",
                              "src": "21597:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21593:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21650:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21637:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1818,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "21641:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1819,
                              "nodeType": "ArrayTypeName",
                              "src": "21641:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21637:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21709:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21680:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (enum IResolver.PaymentToken[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1824,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1823,
                                  "name": "IResolver.PaymentToken",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4346,
                                  "src": "21684:22:15"
                                },
                                "referencedDeclaration": 4346,
                                "src": "21684:22:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              },
                              "id": 1825,
                              "nodeType": "ArrayTypeName",
                              "src": "21684:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_storage_ptr",
                                "typeString": "enum IResolver.PaymentToken[]"
                              }
                            }
                          },
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21680:31:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1794,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3771,
                        "src": "21212:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$3771_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "21212:510:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "21207:515:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1831,
                  "nodeType": "ExpressionStatement",
                  "src": "21207:515:15"
                }
              ]
            },
            "id": 1833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRentCallData",
            "nameLocation": "20896:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "20955:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "20924:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1770,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1769,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "20924:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "20924:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1771,
                    "nodeType": "ArrayTypeName",
                    "src": "20924:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1775,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "20993:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "20976:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1773,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "20976:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1774,
                    "nodeType": "ArrayTypeName",
                    "src": "20976:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "21030:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "21013:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1776,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21013:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1777,
                    "nodeType": "ArrayTypeName",
                    "src": "21013:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1781,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "21064:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "21047:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1779,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21047:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1780,
                    "nodeType": "ArrayTypeName",
                    "src": "21047:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "rentDuration",
                  "nameLocation": "21099:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "21084:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1782,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "21084:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1783,
                    "nodeType": "ArrayTypeName",
                    "src": "21084:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1787,
                  "mutability": "mutable",
                  "name": "rentAmount",
                  "nameLocation": "21138:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "21121:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1785,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21121:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1786,
                    "nodeType": "ArrayTypeName",
                    "src": "21121:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20914:240:15"
            },
            "returnParameters": {
              "id": 1792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1791,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "21193:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1833,
                  "src": "21177:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1789,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "21177:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "21177:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21176:20:15"
            },
            "scope": 2474,
            "src": "20887:842:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1898,
              "nodeType": "Block",
              "src": "22010:534:15",
              "statements": [
                {
                  "expression": {
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1855,
                      "name": "cd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1853,
                      "src": "22020:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22054:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "31",
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22076:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "id": 1859,
                          "name": "nftStandard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "22104:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          }
                        },
                        {
                          "id": 1860,
                          "name": "nftAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1840,
                          "src": "22141:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 1861,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1843,
                          "src": "22174:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22221:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22207:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1862,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22211:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1863,
                              "nodeType": "ArrayTypeName",
                              "src": "22211:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22207:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1867,
                          "name": "_lendingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1846,
                          "src": "22248:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 1868,
                          "name": "_rentingID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1849,
                          "src": "22283:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22333:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22321:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1869,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22325:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1870,
                              "nodeType": "ArrayTypeName",
                              "src": "22325:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22321:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22375:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22361:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1874,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22365:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1875,
                              "nodeType": "ArrayTypeName",
                              "src": "22365:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 1878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22361:16:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22420:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22408:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint8[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1879,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "22412:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 1880,
                              "nodeType": "ArrayTypeName",
                              "src": "22412:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                                "typeString": "uint8[]"
                              }
                            }
                          },
                          "id": 1883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22408:14:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22465:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22452:12:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes4[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1884,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "22456:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "id": 1885,
                              "nodeType": "ArrayTypeName",
                              "src": "22456:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                                "typeString": "bytes4[]"
                              }
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22452:15:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22524:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "22495:28:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (enum IResolver.PaymentToken[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1890,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1889,
                                  "name": "IResolver.PaymentToken",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 4346,
                                  "src": "22499:22:15"
                                },
                                "referencedDeclaration": 4346,
                                "src": "22499:22:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PaymentToken_$4346",
                                  "typeString": "enum IResolver.PaymentToken"
                                }
                              },
                              "id": 1891,
                              "nodeType": "ArrayTypeName",
                              "src": "22499:24:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_storage_ptr",
                                "typeString": "enum IResolver.PaymentToken[]"
                              }
                            }
                          },
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22495:31:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                            "typeString": "enum IRegistry.NFTStandard[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                            "typeString": "uint8[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_enum$_PaymentToken_$4346_$dyn_memory_ptr",
                            "typeString": "enum IResolver.PaymentToken[] memory"
                          }
                        ],
                        "id": 1856,
                        "name": "CallData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3771,
                        "src": "22025:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallData_$3771_storage_ptr_$",
                          "typeString": "type(struct IRegistry.CallData storage pointer)"
                        }
                      },
                      "id": 1895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "left",
                        "right",
                        "nftStandard",
                        "nftAddress",
                        "tokenID",
                        "lendAmount",
                        "lendingID",
                        "rentingID",
                        "rentDuration",
                        "rentAmount",
                        "maxRentDuration",
                        "dailyRentPrice",
                        "paymentToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "22025:512:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                        "typeString": "struct IRegistry.CallData memory"
                      }
                    },
                    "src": "22020:517:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                      "typeString": "struct IRegistry.CallData memory"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "22020:517:15"
                }
              ]
            },
            "id": 1899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createActionCallData",
            "nameLocation": "21744:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1837,
                  "mutability": "mutable",
                  "name": "nftStandard",
                  "nameLocation": "21805:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "21774:42:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_memory_ptr",
                    "typeString": "enum IRegistry.NFTStandard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1835,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1834,
                        "name": "IRegistry.NFTStandard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3731,
                        "src": "21774:21:15"
                      },
                      "referencedDeclaration": 3731,
                      "src": "21774:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_NFTStandard_$3731",
                        "typeString": "enum IRegistry.NFTStandard"
                      }
                    },
                    "id": 1836,
                    "nodeType": "ArrayTypeName",
                    "src": "21774:23:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_NFTStandard_$3731_$dyn_storage_ptr",
                      "typeString": "enum IRegistry.NFTStandard[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "21843:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "21826:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1838,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21826:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1839,
                    "nodeType": "ArrayTypeName",
                    "src": "21826:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1843,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nameLocation": "21880:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "21863:24:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1841,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21863:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1842,
                    "nodeType": "ArrayTypeName",
                    "src": "21863:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "_lendingID",
                  "nameLocation": "21914:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "21897:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1844,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21897:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1845,
                    "nodeType": "ArrayTypeName",
                    "src": "21897:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1849,
                  "mutability": "mutable",
                  "name": "_rentingID",
                  "nameLocation": "21951:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "21934:27:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1847,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21934:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1848,
                    "nodeType": "ArrayTypeName",
                    "src": "21934:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21764:203:15"
            },
            "returnParameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "22006:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1899,
                  "src": "21990:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 1852,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1851,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "21990:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "21990:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21989:20:15"
            },
            "scope": 2474,
            "src": "21735:809:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1979,
              "nodeType": "Block",
              "src": "22659:472:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1909,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1901,
                        "src": "22693:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 1910,
                        "name": "scale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1903,
                        "src": "22700:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1908,
                      "name": "ensureIsUnpackablePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2371,
                      "src": "22669:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes4_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes4,uint256) pure"
                      }
                    },
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22669:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1912,
                  "nodeType": "ExpressionStatement",
                  "src": "22669:37:15"
                },
                {
                  "assignments": [
                    1914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1914,
                      "mutability": "mutable",
                      "name": "whole",
                      "nameLocation": "22723:5:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "22716:12:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1913,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22716:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1922,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1919,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "22745:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22738:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 1917,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "22738:6:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22738:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 1916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "22731:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1915,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22731:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22731:21:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22716:36:15"
                },
                {
                  "assignments": [
                    1924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1924,
                      "mutability": "mutable",
                      "name": "decimal",
                      "nameLocation": "22769:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "22762:14:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 1923,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22762:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1934,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 1931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1929,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1901,
                              "src": "22793:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "hexValue": "3136",
                              "id": 1930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22802:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16_by_1",
                                "typeString": "int_const 16"
                              },
                              "value": "16"
                            },
                            "src": "22793:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22786:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes2_$",
                            "typeString": "type(bytes2)"
                          },
                          "typeName": {
                            "id": 1927,
                            "name": "bytes2",
                            "nodeType": "ElementaryTypeName",
                            "src": "22786:6:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22786:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes2",
                          "typeString": "bytes2"
                        }
                      ],
                      "id": 1926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "22779:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint16_$",
                        "typeString": "type(uint16)"
                      },
                      "typeName": {
                        "id": 1925,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "22779:6:15",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22779:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22762:44:15"
                },
                {
                  "assignments": [
                    1936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1936,
                      "mutability": "mutable",
                      "name": "decimalScale",
                      "nameLocation": "22824:12:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "22816:20:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1935,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22816:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1940,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1937,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1903,
                      "src": "22839:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22847:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "22839:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22816:36:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1941,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "22866:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 1942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22874:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "22866:12:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1949,
                  "nodeType": "IfStatement",
                  "src": "22862:55:15",
                  "trueBody": {
                    "id": 1948,
                    "nodeType": "Block",
                    "src": "22880:37:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1944,
                            "name": "whole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "22894:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 1945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22902:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "22894:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1947,
                        "nodeType": "ExpressionStatement",
                        "src": "22894:12:15"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1950,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "22930:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "39393939",
                      "id": 1951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22940:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9999_by_1",
                        "typeString": "int_const 9999"
                      },
                      "value": "9999"
                    },
                    "src": "22930:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1958,
                  "nodeType": "IfStatement",
                  "src": "22926:59:15",
                  "trueBody": {
                    "id": 1957,
                    "nodeType": "Block",
                    "src": "22946:39:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1953,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1924,
                            "src": "22960:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "39393939",
                            "id": 1954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22970:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999_by_1",
                              "typeString": "int_const 9999"
                            },
                            "value": "9999"
                          },
                          "src": "22960:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1956,
                        "nodeType": "ExpressionStatement",
                        "src": "22960:14:15"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1960,
                      "mutability": "mutable",
                      "name": "w",
                      "nameLocation": "23002:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "22994:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22994:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1964,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1961,
                      "name": "whole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "23006:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1962,
                      "name": "scale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1903,
                      "src": "23014:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23006:13:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22994:25:15"
                },
                {
                  "assignments": [
                    1966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1966,
                      "mutability": "mutable",
                      "name": "d",
                      "nameLocation": "23037:1:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "23029:9:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23029:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1970,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1967,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "23041:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1968,
                      "name": "decimalScale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "23051:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23041:22:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23029:34:15"
                },
                {
                  "assignments": [
                    1972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1972,
                      "mutability": "mutable",
                      "name": "fullPrice",
                      "nameLocation": "23081:9:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 1979,
                      "src": "23073:17:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1971,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23073:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1976,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1973,
                      "name": "w",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1960,
                      "src": "23093:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1974,
                      "name": "d",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1966,
                      "src": "23097:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23093:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23073:25:15"
                },
                {
                  "expression": {
                    "id": 1977,
                    "name": "fullPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1972,
                    "src": "23115:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1907,
                  "id": 1978,
                  "nodeType": "Return",
                  "src": "23108:16:15"
                }
              ]
            },
            "id": 1980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpackPrice",
            "nameLocation": "22559:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "22578:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1980,
                  "src": "22571:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "22571:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "22593:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1980,
                  "src": "22585:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22585:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22570:29:15"
            },
            "returnParameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1980,
                  "src": "22646:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22646:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22645:9:15"
            },
            "scope": 2474,
            "src": "22550:581:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2029,
              "nodeType": "Block",
              "src": "23306:157:15",
              "statements": [
                {
                  "expression": {
                    "id": 2003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1995,
                      "name": "r",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "23316:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1999,
                            "name": "toIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "23334:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2000,
                            "name": "fromIx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "23341:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23334:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "23320:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1996,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "23324:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1997,
                          "nodeType": "ArrayTypeName",
                          "src": "23324:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 2002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23320:28:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "23316:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2004,
                  "nodeType": "ExpressionStatement",
                  "src": "23316:32:15"
                },
                {
                  "body": {
                    "id": 2027,
                    "nodeType": "Block",
                    "src": "23398:59:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2015,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1993,
                              "src": "23412:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2019,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2016,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2006,
                                "src": "23414:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2017,
                                "name": "fromIx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1985,
                                "src": "23418:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23414:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "23412:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2020,
                              "name": "arr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1983,
                              "src": "23428:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2024,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2021,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2006,
                                "src": "23432:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2022,
                                "name": "arrOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1989,
                                "src": "23436:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "23432:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23428:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23412:34:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2026,
                        "nodeType": "ExpressionStatement",
                        "src": "23412:34:15"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2009,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2006,
                      "src": "23383:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2010,
                      "name": "toIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1987,
                      "src": "23387:4:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23383:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2028,
                  "initializationExpression": {
                    "assignments": [
                      2006
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2006,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "23371:1:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2028,
                        "src": "23363:9:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2005,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23363:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2008,
                    "initialValue": {
                      "id": 2007,
                      "name": "fromIx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "23375:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23363:18:15"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23393:3:15",
                      "subExpression": {
                        "id": 2012,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2006,
                        "src": "23393:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2014,
                    "nodeType": "ExpressionStatement",
                    "src": "23393:3:15"
                  },
                  "nodeType": "ForStatement",
                  "src": "23358:99:15"
                }
              ]
            },
            "id": 2030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sliceArr",
            "nameLocation": "23146:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "arr",
                  "nameLocation": "23181:3:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "23164:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1981,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23164:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1982,
                    "nodeType": "ArrayTypeName",
                    "src": "23164:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "fromIx",
                  "nameLocation": "23202:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "23194:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23194:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "toIx",
                  "nameLocation": "23226:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "23218:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23218:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1989,
                  "mutability": "mutable",
                  "name": "arrOffset",
                  "nameLocation": "23248:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "23240:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23240:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23154:109:15"
            },
            "returnParameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "23303:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2030,
                  "src": "23286:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1991,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23286:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1992,
                    "nodeType": "ArrayTypeName",
                    "src": "23286:9:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23285:20:15"
            },
            "scope": 2474,
            "src": "23137:326:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "23707:67:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2036,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2032,
                          "src": "23725:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23741:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23733:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23733:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23733:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23725:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a7a65726f2061646472657373",
                        "id": 2042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23745:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        },
                        "value": "ReNFT::zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_017ab3f46160f82f94f3731aea2acc6f505420f91f1db2d75db06a888358c3d6",
                          "typeString": "literal_string \"ReNFT::zero address\""
                        }
                      ],
                      "id": 2035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23717:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23717:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2044,
                  "nodeType": "ExpressionStatement",
                  "src": "23717:50:15"
                }
              ]
            },
            "id": 2046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotZeroAddr",
            "nameLocation": "23660:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "23688:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "23680:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23680:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23679:14:15"
            },
            "returnParameters": {
              "id": 2034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23707:0:15"
            },
            "scope": 2474,
            "src": "23651:123:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "23833:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2052,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2048,
                          "src": "23851:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23867:1:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23859:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2053,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23859:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23859:10:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23851:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742061207a65726f2061646472657373",
                        "id": 2058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23871:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        },
                        "value": "ReNFT::not a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf0a413fa4e7c97f0ba99c3900cd64d87a46eb7681883585347a63729357c08a",
                          "typeString": "literal_string \"ReNFT::not a zero address\""
                        }
                      ],
                      "id": 2051,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23843:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23843:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2060,
                  "nodeType": "ExpressionStatement",
                  "src": "23843:56:15"
                }
              ]
            },
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsZeroAddr",
            "nameLocation": "23789:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "23814:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2062,
                  "src": "23806:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23806:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23805:14:15"
            },
            "returnParameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23833:0:15"
            },
            "scope": 2474,
            "src": "23780:126:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2089,
              "nodeType": "Block",
              "src": "23971:207:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2069,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2065,
                          "src": "23998:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3776,
                        "src": "23998:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2068,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "23981:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23981:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2072,
                  "nodeType": "ExpressionStatement",
                  "src": "23981:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2074,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2065,
                            "src": "24038:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2075,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3778,
                          "src": "24038:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24065:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24038:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24068:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24030:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24030:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2080,
                  "nodeType": "ExpressionStatement",
                  "src": "24030:65:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2082,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2065,
                            "src": "24113:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3780,
                          "src": "24113:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24139:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24113:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206e6f74207a65726f",
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24142:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        },
                        "value": "ReNFT::rent price not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48cfe636a1e20ea0463ade8a5cfe4fe8f43599908aead963e03225001cea4e44",
                          "typeString": "literal_string \"ReNFT::rent price not zero\""
                        }
                      ],
                      "id": 2081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24105:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24105:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2088,
                  "nodeType": "ExpressionStatement",
                  "src": "24105:66:15"
                }
              ]
            },
            "id": 2090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "23921:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "23949:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2090,
                  "src": "23934:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2063,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3788,
                      "src": "23934:7:15"
                    },
                    "referencedDeclaration": 3788,
                    "src": "23934:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23933:24:15"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23971:0:15"
            },
            "scope": 2474,
            "src": "23912:266:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2117,
              "nodeType": "Block",
              "src": "24246:205:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2097,
                          "name": "lending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2093,
                          "src": "24276:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                            "typeString": "struct IRegistry.Lending memory"
                          }
                        },
                        "id": 2098,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lenderAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3776,
                        "src": "24276:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2096,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "24256:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24256:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2100,
                  "nodeType": "ExpressionStatement",
                  "src": "24256:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2102,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "24316:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3778,
                          "src": "24316:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24343:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24316:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e207a65726f",
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24346:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        },
                        "value": "ReNFT::duration zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dfe6e7c6144fc08b0ffaa474de244e9bbe25d4a87ce45cf2898b5a62ec0131a",
                          "typeString": "literal_string \"ReNFT::duration zero\""
                        }
                      ],
                      "id": 2101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24308:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24308:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2108,
                  "nodeType": "ExpressionStatement",
                  "src": "24308:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2110,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2093,
                            "src": "24387:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dailyRentPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3780,
                          "src": "24387:22:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24413:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24387:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24416:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24379:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24379:65:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "24379:65:15"
                }
              ]
            },
            "id": 2118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24193:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2093,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "24224:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2118,
                  "src": "24209:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2092,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2091,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3788,
                      "src": "24209:7:15"
                    },
                    "referencedDeclaration": 3788,
                    "src": "24209:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24208:24:15"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24246:0:15"
            },
            "scope": 2474,
            "src": "24184:267:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2145,
              "nodeType": "Block",
              "src": "24516:197:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2125,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2121,
                          "src": "24543:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3790,
                        "src": "24543:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2124,
                      "name": "ensureIsZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "24526:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24526:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2128,
                  "nodeType": "ExpressionStatement",
                  "src": "24526:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2130,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "24583:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2131,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3792,
                          "src": "24583:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24607:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24583:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206e6f74207a65726f",
                        "id": 2134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24610:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        },
                        "value": "ReNFT::duration not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bfed158b71c7b43b596ff53abfc876396a7eeba1e8742980adf723536811fb9",
                          "typeString": "literal_string \"ReNFT::duration not zero\""
                        }
                      ],
                      "id": 2129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24575:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24575:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2136,
                  "nodeType": "ExpressionStatement",
                  "src": "24575:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2138,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2121,
                            "src": "24655:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3794,
                          "src": "24655:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24675:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24655:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206e6f74207a65726f",
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24678:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        },
                        "value": "ReNFT::rented at not zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59d3efea810797b8e1f5a46ec91585c665142e29ff2034bb81184c3c3f6e6146",
                          "typeString": "literal_string \"ReNFT::rented at not zero\""
                        }
                      ],
                      "id": 2137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24647:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24647:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2144,
                  "nodeType": "ExpressionStatement",
                  "src": "24647:59:15"
                }
              ]
            },
            "id": 2146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNull",
            "nameLocation": "24466:12:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24494:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "24479:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2120,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2119,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "24479:7:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "24479:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24478:24:15"
            },
            "returnParameters": {
              "id": 2123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24516:0:15"
            },
            "scope": 2474,
            "src": "24457:256:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2173,
              "nodeType": "Block",
              "src": "24781:198:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2153,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2149,
                          "src": "24811:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "renterAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3790,
                        "src": "24811:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2152,
                      "name": "ensureIsNotZeroAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2046,
                      "src": "24791:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24791:42:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "24791:42:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2158,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "24851:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3792,
                          "src": "24851:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24875:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24851:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24878:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24843:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24843:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2164,
                  "nodeType": "ExpressionStatement",
                  "src": "24843:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2166,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "24922:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3794,
                          "src": "24922:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24942:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24922:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e746564206174206973207a65726f",
                        "id": 2170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24945:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        },
                        "value": "ReNFT::rented at is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1d64bbdc6ad9244225c1520b653d2d803876ddbf569b4b0339344a5457f51bf",
                          "typeString": "literal_string \"ReNFT::rented at is zero\""
                        }
                      ],
                      "id": 2165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24914:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24914:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "24914:58:15"
                }
              ]
            },
            "id": 2174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsNotNull",
            "nameLocation": "24728:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2149,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "24759:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "24744:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2148,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2147,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "24744:7:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "24744:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24743:24:15"
            },
            "returnParameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24781:0:15"
            },
            "scope": 2474,
            "src": "24719:260:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2243,
              "nodeType": "Block",
              "src": "25055:380:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2183,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2177,
                              "src": "25073:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3748,
                            "src": "25073:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2186,
                          "indexExpression": {
                            "id": 2185,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2179,
                            "src": "25087:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25073:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25092:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25073:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6c656e6420616d6f756e74206973207a65726f",
                        "id": 2189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25095:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        },
                        "value": "ReNFT::lend amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4de43cfbd194812072149f798b9896e887b8df0277521ec9aae6d4793a9d866b",
                          "typeString": "literal_string \"ReNFT::lend amount is zero\""
                        }
                      ],
                      "id": 2182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25065:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25065:59:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "25065:59:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2193,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2177,
                              "src": "25142:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2194,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lendAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3748,
                            "src": "25142:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 2196,
                          "indexExpression": {
                            "id": 2195,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2179,
                            "src": "25156:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25142:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25167:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2198,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25167:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2197,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25162:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25162:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25162:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25142:35:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25179:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25134:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25134:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2205,
                  "nodeType": "ExpressionStatement",
                  "src": "25134:64:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2207,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2177,
                              "src": "25216:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2208,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3751,
                            "src": "25216:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2210,
                          "indexExpression": {
                            "id": 2209,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2179,
                            "src": "25235:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25216:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25240:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25216:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25243:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25208:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25208:61:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2215,
                  "nodeType": "ExpressionStatement",
                  "src": "25208:61:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2217,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2177,
                              "src": "25287:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxRentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3751,
                            "src": "25287:18:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2220,
                          "indexExpression": {
                            "id": 2219,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2179,
                            "src": "25306:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25287:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25317:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2222,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25317:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2221,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25312:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25312:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25312:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25287:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25329:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25279:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25279:69:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2229,
                  "nodeType": "ExpressionStatement",
                  "src": "25279:69:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 2233,
                                  "name": "cd",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2177,
                                  "src": "25373:2:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                    "typeString": "struct IRegistry.CallData memory"
                                  }
                                },
                                "id": 2234,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "dailyRentPrice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3754,
                                "src": "25373:17:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 2236,
                              "indexExpression": {
                                "id": 2235,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2179,
                                "src": "25391:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25373:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25366:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2231,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "25366:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25366:28:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25397:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25366:32:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74207072696365206973207a65726f",
                        "id": 2240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25400:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        },
                        "value": "ReNFT::rent price is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f6bab4f9dc318622a5df7d34cefe1c276f067b92ec2d1d9ba0813b98e88df29",
                          "typeString": "literal_string \"ReNFT::rent price is zero\""
                        }
                      ],
                      "id": 2230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25358:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25358:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2242,
                  "nodeType": "ExpressionStatement",
                  "src": "25358:70:15"
                }
              ]
            },
            "id": 2244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsLendable",
            "nameLocation": "24994:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2177,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25027:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2244,
                  "src": "25011:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2176,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2175,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "25011:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "25011:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2179,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25039:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2244,
                  "src": "25031:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25031:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25010:31:15"
            },
            "returnParameters": {
              "id": 2181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25055:0:15"
            },
            "scope": 2474,
            "src": "24985:450:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2300,
              "nodeType": "Block",
              "src": "25592:374:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2258,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2254,
                          "src": "25610:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 2259,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2247,
                            "src": "25623:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2260,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3776,
                          "src": "25623:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "25610:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a63616e742072656e74206f776e206e6674",
                        "id": 2262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25646:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        },
                        "value": "ReNFT::cant rent own nft"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4f92edf0bbfd9dc58dc0f4a8267dbc207d8e8405950a6a8eaae69df1951ef5",
                          "typeString": "literal_string \"ReNFT::cant rent own nft\""
                        }
                      ],
                      "id": 2257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25602:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25602:71:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2264,
                  "nodeType": "ExpressionStatement",
                  "src": "25602:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2266,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2250,
                              "src": "25691:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3763,
                            "src": "25691:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2269,
                          "indexExpression": {
                            "id": 2268,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "25707:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25691:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25718:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2271,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25718:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2270,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25713:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25713:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "25713:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25691:37:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742075696e7438",
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25730:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        },
                        "value": "ReNFT::not uint8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d178e07a8e716cc710eedbce7a73a17635267b53f82d13986521b8c9b33191be",
                          "typeString": "literal_string \"ReNFT::not uint8\""
                        }
                      ],
                      "id": 2265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25683:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25683:66:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2278,
                  "nodeType": "ExpressionStatement",
                  "src": "25683:66:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2280,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2250,
                              "src": "25767:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2281,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3763,
                            "src": "25767:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2283,
                          "indexExpression": {
                            "id": 2282,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "25783:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25767:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25788:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25767:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6475726174696f6e206973207a65726f",
                        "id": 2286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25791:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        },
                        "value": "ReNFT::duration is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f715af536e7a0cf80411b450f1b1434a085f3c8cb663f14bcdc0fd7cdf1023d",
                          "typeString": "literal_string \"ReNFT::duration is zero\""
                        }
                      ],
                      "id": 2279,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25759:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25759:58:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "25759:58:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 2290,
                              "name": "cd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2250,
                              "src": "25848:2:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                                "typeString": "struct IRegistry.CallData memory"
                              }
                            },
                            "id": 2291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rentDuration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3763,
                            "src": "25848:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                              "typeString": "uint8[] memory"
                            }
                          },
                          "id": 2293,
                          "indexExpression": {
                            "id": 2292,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2252,
                            "src": "25864:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25848:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2294,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2247,
                            "src": "25870:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2295,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxRentDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3778,
                          "src": "25870:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "25848:45:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72656e74206475726174696f6e206578636565647320616c6c6f776564206d6178",
                        "id": 2297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25907:42:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        },
                        "value": "ReNFT::rent duration exceeds allowed max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39659f6ead9bf4255f63fe3d2efb8746dc0fa05be82fb4a445824367bedbb9b9",
                          "typeString": "literal_string \"ReNFT::rent duration exceeds allowed max\""
                        }
                      ],
                      "id": 2289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25827:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25827:132:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "25827:132:15"
                }
              ]
            },
            "id": 2301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsRentable",
            "nameLocation": "25450:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2247,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "25491:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "25476:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2245,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3788,
                      "src": "25476:7:15"
                    },
                    "referencedDeclaration": 3788,
                    "src": "25476:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2250,
                  "mutability": "mutable",
                  "name": "cd",
                  "nameLocation": "25524:2:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "25508:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallData_$3771_memory_ptr",
                    "typeString": "struct IRegistry.CallData"
                  },
                  "typeName": {
                    "id": 2249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2248,
                      "name": "CallData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3771,
                      "src": "25508:8:15"
                    },
                    "referencedDeclaration": 3771,
                    "src": "25508:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$3771_storage_ptr",
                      "typeString": "struct IRegistry.CallData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2252,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "25544:1:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "25536:9:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25536:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "25563:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2301,
                  "src": "25555:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25555:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25466:112:15"
            },
            "returnParameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25592:0:15"
            },
            "scope": 2474,
            "src": "25441:525:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2328,
              "nodeType": "Block",
              "src": "26110:203:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2312,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2304,
                            "src": "26128:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "renterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3790,
                          "src": "26128:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2314,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2306,
                          "src": "26153:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26128:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f742072656e746572",
                        "id": 2316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26164:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        },
                        "value": "ReNFT::not renter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b071f9698ef9a459a93f5d0571059a4e85f96b590bfdf41c172b70768be64506",
                          "typeString": "literal_string \"ReNFT::not renter\""
                        }
                      ],
                      "id": 2311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26120:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26120:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2318,
                  "nodeType": "ExpressionStatement",
                  "src": "26120:64:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "26215:42:15",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2321,
                              "name": "renting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2304,
                              "src": "26233:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              }
                            },
                            {
                              "id": 2322,
                              "name": "blockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2308,
                              "src": "26242:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                                "typeString": "struct IRegistry.Renting memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2320,
                            "name": "isPastReturnDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "26216:16:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3797_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                            }
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26216:41:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a706173742072657475726e2064617465",
                        "id": 2325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26271:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        },
                        "value": "ReNFT::past return date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60d9351a02e13c6126fdf430f735bf371068ce09068a692cd4cbd6d1f979d6cd",
                          "typeString": "literal_string \"ReNFT::past return date\""
                        }
                      ],
                      "id": 2319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26194:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26194:112:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2327,
                  "nodeType": "ExpressionStatement",
                  "src": "26194:112:15"
                }
              ]
            },
            "id": 2329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsReturnable",
            "nameLocation": "25981:18:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "26024:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "26009:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2303,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2302,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "26009:7:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "26009:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26049:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "26041:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26041:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "26076:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "26068:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26068:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25999:97:15"
            },
            "returnParameters": {
              "id": 2310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26110:0:15"
            },
            "scope": 2474,
            "src": "25972:341:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2345,
              "nodeType": "Block",
              "src": "26422:81:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2338,
                            "name": "lending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2332,
                            "src": "26440:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                              "typeString": "struct IRegistry.Lending memory"
                            }
                          },
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lenderAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3776,
                          "src": "26440:21:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2340,
                          "name": "msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2334,
                          "src": "26465:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26440:34:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f74206c656e646572",
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26476:19:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        },
                        "value": "ReNFT::not lender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_738003007a673e3539342adf0524c591935e1842a8b07715583bffb993d87642",
                          "typeString": "literal_string \"ReNFT::not lender\""
                        }
                      ],
                      "id": 2337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26432:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26432:64:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "26432:64:15"
                }
              ]
            },
            "id": 2346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsStoppable",
            "nameLocation": "26328:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "lending",
                  "nameLocation": "26361:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "26346:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Lending_$3788_memory_ptr",
                    "typeString": "struct IRegistry.Lending"
                  },
                  "typeName": {
                    "id": 2331,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2330,
                      "name": "Lending",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3788,
                      "src": "26346:7:15"
                    },
                    "referencedDeclaration": 3788,
                    "src": "26346:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Lending_$3788_storage_ptr",
                      "typeString": "struct IRegistry.Lending"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "26378:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "26370:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26370:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26345:43:15"
            },
            "returnParameters": {
              "id": 2336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26422:0:15"
            },
            "scope": 2474,
            "src": "26319:184:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2370,
              "nodeType": "Block",
              "src": "26584:124:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2356,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2348,
                              "src": "26609:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 2355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26602:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2354,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "26602:6:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26602:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26618:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26602:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207072696365",
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26621:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        },
                        "value": "ReNFT::invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559545e25fdf2266fad8ea404da44063c3eafafdf63766a3044711f6486ede80",
                          "typeString": "literal_string \"ReNFT::invalid price\""
                        }
                      ],
                      "id": 2353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26594:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26594:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2362,
                  "nodeType": "ExpressionStatement",
                  "src": "26594:50:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2364,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2350,
                          "src": "26662:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26671:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "26662:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a696e76616c6964207363616c65",
                        "id": 2367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26678:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        },
                        "value": "ReNFT::invalid scale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1c00ae96977513cade12e3568a1f3a607092c3cd311e350759f44e65314d2e2",
                          "typeString": "literal_string \"ReNFT::invalid scale\""
                        }
                      ],
                      "id": 2363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26654:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26654:47:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2369,
                  "nodeType": "ExpressionStatement",
                  "src": "26654:47:15"
                }
              ]
            },
            "id": 2371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsUnpackablePrice",
            "nameLocation": "26518:23:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2348,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "26549:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "26542:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2347,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "26542:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2350,
                  "mutability": "mutable",
                  "name": "scale",
                  "nameLocation": "26564:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "26556:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26556:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26541:29:15"
            },
            "returnParameters": {
              "id": 2352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26584:0:15"
            },
            "scope": 2474,
            "src": "26509:199:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2383,
              "nodeType": "Block",
              "src": "26776:67:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2377,
                          "name": "paymentIx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2373,
                          "src": "26794:9:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26806:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "26794:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a746f6b656e2069732073656e74696e656c",
                        "id": 2380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26809:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        },
                        "value": "ReNFT::token is sentinel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e33b4b37f2925bfd014eba670bad9694f29620b6260f525acdbc9212950b0049",
                          "typeString": "literal_string \"ReNFT::token is sentinel\""
                        }
                      ],
                      "id": 2376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26786:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26786:50:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2382,
                  "nodeType": "ExpressionStatement",
                  "src": "26786:50:15"
                }
              ]
            },
            "id": 2384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureTokenNotSentinel",
            "nameLocation": "26723:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "paymentIx",
                  "nameLocation": "26752:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "26746:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "26746:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26745:17:15"
            },
            "returnParameters": {
              "id": 2375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26776:0:15"
            },
            "scope": 2474,
            "src": "26714:129:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2400,
              "nodeType": "Block",
              "src": "26969:134:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2394,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2387,
                            "src": "27017:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          {
                            "id": 2395,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2389,
                            "src": "27026:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2393,
                          "name": "isPastReturnDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2430,
                          "src": "27000:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Renting_$3797_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (struct IRegistry.Renting memory,uint256) pure returns (bool)"
                          }
                        },
                        "id": 2396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27000:41:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a72657475726e2064617465206e6f7420706173736564",
                        "id": 2397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27055:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        },
                        "value": "ReNFT::return date not passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fd0a7086a9002dba470ae5e332cefa8c9633f26aad92d4f0e8b2bb73f67d943",
                          "typeString": "literal_string \"ReNFT::return date not passed\""
                        }
                      ],
                      "id": 2392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26979:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26979:117:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2399,
                  "nodeType": "ExpressionStatement",
                  "src": "26979:117:15"
                }
              ]
            },
            "id": 2401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ensureIsClaimable",
            "nameLocation": "26858:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "26910:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2401,
                  "src": "26885:32:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2386,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2385,
                      "name": "IRegistry.Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "26885:17:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "26885:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "mutability": "mutable",
                  "name": "blockTimestamp",
                  "nameLocation": "26935:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2401,
                  "src": "26927:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26927:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26875:80:15"
            },
            "returnParameters": {
              "id": 2391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26969:0:15"
            },
            "scope": 2474,
            "src": "26849:254:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2429,
              "nodeType": "Block",
              "src": "27232:175:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2412,
                          "name": "nowTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2406,
                          "src": "27250:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 2413,
                            "name": "renting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2404,
                            "src": "27260:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                              "typeString": "struct IRegistry.Renting memory"
                            }
                          },
                          "id": 2414,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rentedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3794,
                          "src": "27260:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "27250:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a6e6f77206265666f72652072656e746564",
                        "id": 2416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27278:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        },
                        "value": "ReNFT::now before rented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42e6480c6f4e3cb3e382808e29c7860baf7be54e2edbcea1fca873baaf1f3eeb",
                          "typeString": "literal_string \"ReNFT::now before rented\""
                        }
                      ],
                      "id": 2411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27242:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27242:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2418,
                  "nodeType": "ExpressionStatement",
                  "src": "27242:63:15"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2419,
                        "name": "nowTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "27334:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 2420,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2404,
                          "src": "27344:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3794,
                        "src": "27344:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "27334:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2423,
                          "name": "renting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2404,
                          "src": "27363:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                            "typeString": "struct IRegistry.Renting memory"
                          }
                        },
                        "id": 2424,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rentDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3792,
                        "src": "27363:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 2425,
                        "name": "SECONDS_IN_DAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "27386:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "27363:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27334:66:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2410,
                  "id": 2428,
                  "nodeType": "Return",
                  "src": "27315:85:15"
                }
              ]
            },
            "id": 2430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPastReturnDate",
            "nameLocation": "27118:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "renting",
                  "nameLocation": "27150:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2430,
                  "src": "27135:22:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Renting_$3797_memory_ptr",
                    "typeString": "struct IRegistry.Renting"
                  },
                  "typeName": {
                    "id": 2403,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2402,
                      "name": "Renting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3797,
                      "src": "27135:7:15"
                    },
                    "referencedDeclaration": 3797,
                    "src": "27135:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Renting_$3797_storage_ptr",
                      "typeString": "struct IRegistry.Renting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2406,
                  "mutability": "mutable",
                  "name": "nowTime",
                  "nameLocation": "27167:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2430,
                  "src": "27159:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27159:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27134:41:15"
            },
            "returnParameters": {
              "id": 2410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2430,
                  "src": "27222:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2408,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27222:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27221:6:15"
            },
            "scope": 2474,
            "src": "27109:298:15",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2448,
              "nodeType": "Block",
              "src": "27654:103:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2438,
                          "name": "newRentFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2432,
                          "src": "27672:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 2439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27685:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "27672:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52654e46543a3a666565206578636565647320313030706374",
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27692:27:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        },
                        "value": "ReNFT::fee exceeds 100pct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_249b67412866a1c666e3a52f5a831898ae2505cc18668696837db60d72052507",
                          "typeString": "literal_string \"ReNFT::fee exceeds 100pct\""
                        }
                      ],
                      "id": 2437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27664:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27664:56:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2443,
                  "nodeType": "ExpressionStatement",
                  "src": "27664:56:15"
                },
                {
                  "expression": {
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2444,
                      "name": "rentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "27730:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2445,
                      "name": "newRentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2432,
                      "src": "27740:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27730:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "27730:20:15"
                }
              ]
            },
            "functionSelector": "76774ea3",
            "id": 2449,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2434,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27644:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27644:9:15"
              }
            ],
            "name": "setRentFee",
            "nameLocation": "27604:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "newRentFee",
                  "nameLocation": "27623:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2449,
                  "src": "27615:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27615:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27614:20:15"
            },
            "returnParameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27654:0:15"
            },
            "scope": 2474,
            "src": "27595:162:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2460,
              "nodeType": "Block",
              "src": "27838:45:15",
              "statements": [
                {
                  "expression": {
                    "id": 2458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2456,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "27848:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2457,
                      "name": "newBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2451,
                      "src": "27862:14:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "27848:28:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2459,
                  "nodeType": "ExpressionStatement",
                  "src": "27848:28:15"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "id": 2461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2454,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2453,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27828:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27828:9:15"
              }
            ],
            "name": "setBeneficiary",
            "nameLocation": "27772:14:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2451,
                  "mutability": "mutable",
                  "name": "newBeneficiary",
                  "nameLocation": "27803:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2461,
                  "src": "27787:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27787:15:15",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27786:32:15"
            },
            "returnParameters": {
              "id": 2455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27838:0:15"
            },
            "scope": 2474,
            "src": "27763:120:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2472,
              "nodeType": "Block",
              "src": "27943:35:15",
              "statements": [
                {
                  "expression": {
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2468,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "27953:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2469,
                      "name": "newPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "27962:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "27953:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2471,
                  "nodeType": "ExpressionStatement",
                  "src": "27953:18:15"
                }
              ]
            },
            "functionSelector": "16c38b3c",
            "id": 2473,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2466,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2465,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66,
                  "src": "27933:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "27933:9:15"
              }
            ],
            "name": "setPaused",
            "nameLocation": "27898:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2463,
                  "mutability": "mutable",
                  "name": "newPaused",
                  "nameLocation": "27913:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2473,
                  "src": "27908:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27908:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27907:16:15"
            },
            "returnParameters": {
              "id": 2467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27943:0:15"
            },
            "scope": 2474,
            "src": "27889:89:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2475,
        "src": "2113:25867:15",
        "usedErrors": []
      }
    ],
    "src": "32:29227:15"
  },
  "bytecode": "",
  "bytecodeSha1": "7f0dca0c030ba088a9414c8c7d4a9392ed4edfe2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {
        "Address.functionCallWithValue": {
          "174": [
            4745,
            4775,
            true
          ]
        },
        "Address.verifyCallResult": {
          "175": [
            7335,
            7342,
            false
          ],
          "176": [
            7476,
            7497,
            false
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {
        "Registry.bundleCall": {
          "131": [
            14790,
            14814,
            true
          ]
        },
        "Registry.distributeClaimPayment": {
          "160": [
            17367,
            17379,
            false
          ]
        },
        "Registry.distributePayments": {
          "144": [
            16268,
            16286,
            true
          ],
          "145": [
            16344,
            16361,
            true
          ],
          "146": [
            16473,
            16485,
            false
          ],
          "147": [
            16703,
            16720,
            false
          ]
        },
        "Registry.ensureIsClaimable": {
          "159": [
            27000,
            27041,
            true
          ]
        },
        "Registry.ensureIsLendable": {
          "148": [
            25073,
            25093,
            true
          ],
          "149": [
            25142,
            25177,
            true
          ],
          "150": [
            25216,
            25241,
            true
          ],
          "151": [
            25287,
            25327,
            true
          ],
          "152": [
            25366,
            25398,
            true
          ]
        },
        "Registry.ensureIsNotNull": {
          "140": [
            24316,
            24344,
            true
          ],
          "141": [
            24387,
            24414,
            true
          ],
          "157": [
            24851,
            24876,
            true
          ],
          "158": [
            24922,
            24943,
            true
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "170": [
            23725,
            23743,
            true
          ]
        },
        "Registry.ensureIsNull": {
          "153": [
            24038,
            24066,
            true
          ],
          "154": [
            24113,
            24140,
            true
          ],
          "162": [
            24583,
            24608,
            true
          ],
          "163": [
            24655,
            24676,
            true
          ]
        },
        "Registry.ensureIsRentable": {
          "164": [
            25610,
            25644,
            true
          ],
          "165": [
            25691,
            25728,
            true
          ],
          "166": [
            25767,
            25789,
            true
          ],
          "167": [
            25848,
            25893,
            true
          ]
        },
        "Registry.ensureIsReturnable": {
          "142": [
            26128,
            26162,
            true
          ],
          "143": [
            26215,
            26257,
            true
          ]
        },
        "Registry.ensureIsStoppable": {
          "161": [
            26440,
            26474,
            true
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "173": [
            26662,
            26676,
            true
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "172": [
            23851,
            23869,
            true
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "155": [
            26794,
            26807,
            true
          ]
        },
        "Registry.handleLend": {
          "132": [
            6975,
            6980,
            true
          ],
          "133": [
            7045,
            7050,
            true
          ],
          "134": [
            7422,
            7427,
            true
          ]
        },
        "Registry.handleRent": {
          "137": [
            10162,
            10202,
            true
          ],
          "138": [
            10302,
            10345,
            true
          ],
          "139": [
            10816,
            10829,
            true
          ]
        },
        "Registry.handleStopLend": {
          "135": [
            8371,
            8411,
            true
          ],
          "136": [
            8600,
            8645,
            true
          ]
        },
        "Registry.handleStopRent": {
          "129": [
            12618,
            12658,
            true
          ],
          "130": [
            12758,
            12798,
            true
          ]
        },
        "Registry.isPastReturnDate": {
          "171": [
            27250,
            27276,
            true
          ]
        },
        "Registry.safeTransfer": {
          "156": [
            17802,
            17855,
            false
          ]
        },
        "Registry.setRentFee": {
          "128": [
            27672,
            27690,
            true
          ]
        },
        "Registry.unpackPrice": {
          "168": [
            22866,
            22878,
            false
          ],
          "169": [
            22930,
            22944,
            false
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "177": [
            3668,
            3689,
            false
          ],
          "178": [
            3752,
            3782,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {
        "Address.functionCall": {
          "122": [
            3618,
            3677
          ]
        },
        "Address.functionCallWithValue": {
          "123": [
            4737,
            4818
          ],
          "124": [
            4828,
            4888
          ],
          "125": [
            4982,
            5040
          ]
        },
        "Address.verifyCallResult": {
          "126": [
            7358,
            7375
          ],
          "127": [
            7802,
            7822
          ]
        }
      },
      "12": {},
      "13": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "14": {},
      "15": {
        "Registry.bundleCall": {
          "23": [
            14782,
            14833
          ],
          "24": [
            15080,
            15090
          ],
          "25": [
            15129,
            15140
          ],
          "26": [
            15158,
            15176
          ],
          "27": [
            15194,
            15204
          ],
          "28": [
            15238,
            15249
          ]
        },
        "Registry.claimRent": {
          "9": [
            5638,
            5873
          ]
        },
        "Registry.createActionCallData": {
          "22": [
            22020,
            22537
          ]
        },
        "Registry.createLendCallData": {
          "37": [
            20370,
            20874
          ]
        },
        "Registry.createRentCallData": {
          "68": [
            21207,
            21722
          ]
        },
        "Registry.distributeClaimPayment": {
          "97": [
            17395,
            17509
          ],
          "98": [
            17529,
            17598
          ]
        },
        "Registry.distributePayments": {
          "74": [
            16260,
            16326
          ],
          "75": [
            16336,
            16395
          ],
          "76": [
            16578,
            16603
          ],
          "77": [
            16623,
            16689
          ],
          "78": [
            16736,
            16802
          ]
        },
        "Registry.ensureIsClaimable": {
          "96": [
            26979,
            27096
          ]
        },
        "Registry.ensureIsLendable": {
          "79": [
            25065,
            25124
          ],
          "80": [
            25134,
            25198
          ],
          "81": [
            25208,
            25269
          ],
          "82": [
            25279,
            25348
          ],
          "83": [
            25358,
            25428
          ]
        },
        "Registry.ensureIsNotNull": {
          "69": [
            24256,
            24298
          ],
          "70": [
            24308,
            24369
          ],
          "71": [
            24379,
            24444
          ],
          "93": [
            24791,
            24833
          ],
          "94": [
            24843,
            24904
          ],
          "95": [
            24914,
            24972
          ]
        },
        "Registry.ensureIsNotZeroAddr": {
          "111": [
            23717,
            23767
          ]
        },
        "Registry.ensureIsNull": {
          "84": [
            23981,
            24020
          ],
          "85": [
            24030,
            24095
          ],
          "86": [
            24105,
            24171
          ],
          "100": [
            24526,
            24565
          ],
          "101": [
            24575,
            24637
          ],
          "102": [
            24647,
            24706
          ]
        },
        "Registry.ensureIsRentable": {
          "103": [
            25602,
            25673
          ],
          "104": [
            25683,
            25749
          ],
          "105": [
            25759,
            25817
          ],
          "106": [
            25827,
            25959
          ]
        },
        "Registry.ensureIsReturnable": {
          "72": [
            26120,
            26184
          ],
          "73": [
            26194,
            26306
          ]
        },
        "Registry.ensureIsStoppable": {
          "99": [
            26432,
            26496
          ]
        },
        "Registry.ensureIsUnpackablePrice": {
          "119": [
            26594,
            26644
          ],
          "120": [
            26654,
            26701
          ]
        },
        "Registry.ensureIsZeroAddr": {
          "118": [
            23843,
            23899
          ]
        },
        "Registry.ensureTokenNotSentinel": {
          "87": [
            26786,
            26836
          ]
        },
        "Registry.getLending": {
          "6": [
            18922,
            19197
          ]
        },
        "Registry.getRenting": {
          "12": [
            19647,
            19795
          ]
        },
        "Registry.handleClaimRent": {
          "38": [
            13977,
            14001
          ],
          "39": [
            14015,
            14039
          ],
          "40": [
            14053,
            14096
          ],
          "41": [
            14110,
            14150
          ],
          "42": [
            14164,
            14278
          ],
          "43": [
            14292,
            14394
          ],
          "44": [
            14408,
            14442
          ],
          "45": [
            13338,
            13341
          ]
        },
        "Registry.handleLend": {
          "29": [
            6195,
            6218
          ],
          "30": [
            6522,
            6543
          ],
          "31": [
            6557,
            6606
          ],
          "32": [
            6694,
            7145
          ],
          "33": [
            7159,
            7507
          ],
          "34": [
            7521,
            7532
          ],
          "35": [
            6176,
            6179
          ],
          "36": [
            7552,
            7756
          ]
        },
        "Registry.handleRent": {
          "56": [
            10006,
            10030
          ],
          "57": [
            10044,
            10065
          ],
          "58": [
            10079,
            10123
          ],
          "59": [
            10137,
            10263
          ],
          "60": [
            10277,
            10405
          ],
          "61": [
            10808,
            10859
          ],
          "62": [
            10877,
            11029
          ],
          "63": [
            11057,
            11326
          ],
          "64": [
            11340,
            11440
          ],
          "65": [
            11454,
            11686
          ],
          "66": [
            11700,
            11711
          ],
          "67": [
            9373,
            9376
          ]
        },
        "Registry.handleStopLend": {
          "46": [
            8346,
            8472
          ],
          "47": [
            8575,
            8701
          ],
          "48": [
            8715,
            8739
          ],
          "49": [
            8753,
            8791
          ],
          "50": [
            8805,
            8850
          ],
          "51": [
            8864,
            8897
          ],
          "52": [
            8911,
            8976
          ],
          "53": [
            8990,
            9024
          ],
          "54": [
            8027,
            8030
          ],
          "55": [
            9044,
            9252
          ]
        },
        "Registry.handleStopRent": {
          "13": [
            12485,
            12509
          ],
          "14": [
            12523,
            12579
          ],
          "15": [
            12593,
            12719
          ],
          "16": [
            12733,
            12853
          ],
          "17": [
            12947,
            13006
          ],
          "18": [
            13020,
            13085
          ],
          "19": [
            13099,
            13164
          ],
          "20": [
            13178,
            13212
          ],
          "21": [
            11846,
            11849
          ]
        },
        "Registry.isPastReturnDate": {
          "112": [
            27242,
            27305
          ],
          "113": [
            27315,
            27400
          ]
        },
        "Registry.lend": {
          "5": [
            3518,
            3813
          ]
        },
        "Registry.rent": {
          "11": [
            4601,
            4859
          ]
        },
        "Registry.safeTransfer": {
          "91": [
            17871,
            18008
          ],
          "92": [
            18039,
            18222
          ]
        },
        "Registry.setBeneficiary": {
          "4": [
            27848,
            27876
          ]
        },
        "Registry.setPaused": {
          "3": [
            27953,
            27971
          ]
        },
        "Registry.setRentFee": {
          "7": [
            27664,
            27720
          ],
          "8": [
            27730,
            27750
          ]
        },
        "Registry.sliceArr": {
          "88": [
            23316,
            23348
          ],
          "89": [
            23412,
            23446
          ],
          "90": [
            23393,
            23396
          ]
        },
        "Registry.stopLend": {
          "10": [
            4048,
            4288
          ]
        },
        "Registry.stopRent": {
          "2": [
            5131,
            5365
          ]
        },
        "Registry.takeFee": {
          "114": [
            15393,
            15416
          ],
          "115": [
            15426,
            15438
          ],
          "116": [
            15574,
            15613
          ]
        },
        "Registry.unpackPrice": {
          "107": [
            22669,
            22706
          ],
          "108": [
            22894,
            22906
          ],
          "109": [
            22960,
            22974
          ]
        }
      },
      "16": {},
      "17": {},
      "2": {},
      "3": {
        "ERC1155Receiver.supportsInterface": {
          "0": [
            430,
            526
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {},
      "7": {
        "SafeERC20._callOptionalReturn": {
          "121": [
            3744,
            3829
          ]
        },
        "SafeERC20.safeTransfer": {
          "117": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "110": [
            983,
            1079
          ]
        }
      },
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC721Holder",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC721Receiver",
    "IRegistry",
    "IResolver",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "2113:25867:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:221:3;;;;;;;;;;-1:-1:-1;312:221:3;;;;;:::i;:::-;;:::i;:::-;;;18644:14:18;;18637:22;18619:41;;18607:2;18592:18;312:221:3;;;;;;;;4872:500:15;;;;;;;;;;-1:-1:-1;4872:500:15;;;;;:::i;:::-;;:::i;:::-;;517:200:10;;;;;;;;;;-1:-1:-1;517:200:10;;;;;:::i;:::-;-1:-1:-1;;;517:200:10;;;;;;;;;;-1:-1:-1;;;;;;19591:33:18;;;19573:52;;19561:2;19546:18;517:200:10;19429:202:18;27889:89:15;;;;;;;;;;-1:-1:-1;27889:89:15;;;;;:::i;:::-;;:::i;27763:120::-;;;;;;;;;;-1:-1:-1;27763:120:15;;;;;:::i;:::-;;:::i;3166:654::-;;;;;;;;;;-1:-1:-1;3166:654:15;;;;;:::i;:::-;;:::i;18427:777::-;;;;;;;;;;-1:-1:-1;18427:777:15;;;;;:::i;:::-;;:::i;:::-;;;;33093:4:18;33081:17;;;33063:36;;-1:-1:-1;;;;;33135:32:18;;;33130:2;33115:18;;33108:60;33204:17;;;33184:18;;;33177:45;;;;-1:-1:-1;;;;;;33258:33:18;;;33253:2;33238:18;;33231:61;33311:6;33354:15;;;33348:3;33333:19;;33326:44;33407:15;33155:3;33386:19;;33379:44;33460:17;;;;33454:3;33439:19;;33432:46;33050:3;33035:19;18427:777:15;32766:718:18;2398:26:15;;;;;;;;;;-1:-1:-1;2398:26:15;;;;;;;;27595:162;;;;;;;;;;-1:-1:-1;27595:162:15;;;;;:::i;:::-;;:::i;5378:502::-;;;;;;;;;;-1:-1:-1;5378:502:15;;;;;:::i;:::-;;:::i;404:247:2:-;;;;;;;;;;-1:-1:-1;404:247:2;;;;;:::i;:::-;-1:-1:-1;;;404:247:2;;;;;;;;2430:26:15;;;;;;;;;;;;;;;;;;;32344:25:18;;;32332:2;32317:18;2430:26:15;32198:177:18;3826:469:15;;;;;;;;;;-1:-1:-1;3826:469:15;;;;;:::i;:::-;;:::i;4301:565::-;;;;;;:::i;:::-;;:::i;179:219:2:-;;;;;;;;;;-1:-1:-1;179:219:2;;;;;:::i;:::-;-1:-1:-1;;;179:219:2;;;;;;;;19210:592:15;;;;;;;;;;-1:-1:-1;19210:592:15;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;17986:32:18;;;17968:51;;18067:6;18055:19;;;18050:2;18035:18;;18028:47;18123:4;18111:17;;;18091:18;;;18084:45;;;;18177:10;18165:23;18160:2;18145:18;;18138:51;17955:3;17940:19;19210:592:15;17745:450:18;312:221:3;414:4;-1:-1:-1;;;;;;437:49:3;;-1:-1:-1;;;437:49:3;;:89;;-1:-1:-1;;;;;;;;;;871:40:13;;;490:36:3;430:96;312:221;-1:-1:-1;;312:221:3:o;4872:500:15:-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;;;;;;;;;5131:234:::1;5155:14;5183:172;5221:11;5250:10;5278:7;5303:10;5331;5183:20;:172::i;:::-;5131:10;:234::i;:::-;4872:500:::0;;;;;:::o;27889:89::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27953:6:::1;:18:::0;;-1:-1:-1;;27953:18:15::1;::::0;::::1;;::::0;;;::::1;::::0;;27889:89::o;27763:120::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27848:11:::1;:28:::0;;-1:-1:-1;;;;;;27848:28:15::1;-1:-1:-1::0;;;;;27848:28:15;;;::::1;::::0;;;::::1;::::0;;27763:120::o;3166:654::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;3518:295:::1;3542:10;3566:237;3602:11;3631:10;3659:7;3684:10;3712:15;3745:14;3777:12;3566:18;:237::i;3518:295::-;3166:654:::0;;;;;;;:::o;18427:777::-;18594:5;18613:7;18634:5;18653:6;18673;18693;18713:5;18743:18;18804:10;18816:7;18825:10;18787:49;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18787:49:15;;;;;;;;;18764:82;;18787:49;18764:82;;;;18856:33;18892:20;;;:8;:20;;;;;18949:19;;18764:82;;-1:-1:-1;18892:20:15;18949:19;;;18943:26;;;;;;;:::i;:::-;18983:21;;-1:-1:-1;;;;;18983:21:15;;;;;19018:23;-1:-1:-1;;;19018:23:15;;;;;-1:-1:-1;;;19055:22:15;;;;;19091:18;-1:-1:-1;;;19091:18:15;;;;;-1:-1:-1;;;19123:23:15;;;;;;-1:-1:-1;;;19166:20:15;;;;19160:27;;;;;;;;:::i;:::-;18922:275;;;;;;;;;;;;;;;;18427:777;;;;;;;;;;;:::o;27595:162::-;2669:5;;-1:-1:-1;;;;;2669:5:15;2655:10;:19;2647:48;;;;-1:-1:-1;;;2647:48:15;;;;;;;:::i;:::-;27685:5:::1;27672:10;:18;27664:56;;;::::0;-1:-1:-1;;;27664:56:15;;20923:2:18;27664:56:15::1;::::0;::::1;20905:21:18::0;20962:2;20942:18;;;20935:30;21001:27;20981:18;;;20974:55;21046:18;;27664:56:15::1;20721:349:18::0;27664:56:15::1;27730:7;:20:::0;27595:162::o;5378:502::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;5638:235:::1;5662:15;5691:172;5729:11;5758:10;5786:7;5811:10;5839;5691:20;:172::i;3826:469::-:0;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;4048:240:::1;4072:14;4100:178;4138:11:::0;4167:10;4195:7;4220:10;4262:1:::1;4248:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4248:16:15::1;;4100:20;:178::i;4048:240::-;3826:469:::0;;;;:::o;4301:565::-;2759:6;;;;2758:7;2750:33;;;;-1:-1:-1;;;2750:33:15;;;;;;;:::i;:::-;4601:258:::1;4625:10;4649:200;4685:11;4714:10;4742:7;4767:10;4795:12;4825:10;4649:18;:200::i;4601:258::-;4301:565:::0;;;;;;:::o;19210:592::-;19377:7;19398:6;19418:5;19437:6;19468:18;19529:10;19541:7;19550:10;19512:49;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;19512:49:15;;;;;;19489:82;;19512:49;19489:82;;;;19581:33;19617:20;;;:8;:20;;;;;19668:21;-1:-1:-1;;;;;19668:21:15;;;-1:-1:-1;;;19703:18:15;;;;;-1:-1:-1;;;;19735:20:15;;;;;-1:-1:-1;;;;19769:16:15;;;;;;-1:-1:-1;19210:592:15;-1:-1:-1;;;;;19210:592:15:o;11734:1495::-;11823:7;;11806:1417;11836:2;:8;;;11832:1;:12;11806:1417;;;11865:25;11958:2;:13;;;11972:2;:7;;;11958:22;;;;;;;;:::i;:::-;;;;;;;12002:2;:10;;;12013:1;12002:13;;;;;;;;:::i;:::-;;;;;;;12037:2;:12;;;12050:1;12037:15;;;;;;;;:::i;:::-;;;;;;;11920:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11893:191;;;;;;11865:219;;12098:25;12191:2;:13;;;12205:2;:7;;;12191:22;;;;;;;;:::i;:::-;;;;;;;12235:2;:10;;;12246:1;12235:13;;;;;;;;:::i;:::-;;;;;;;12270:2;:12;;;12283:1;12270:15;;;;;;;;:::i;:::-;;;;;;;12153:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12153:150:15;;;;;;;;;12126:191;;12153:150;12126:191;;;;12331:33;12367:27;;;:8;:27;;;;;12444;;;:8;:27;;;;;;12485:24;;;;;;;;12126:191;;-1:-1:-1;12367:27:15;;12485:24;;12367:27;;12153:150;;12485:24;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12485:24:15;;;;;;;;;-1:-1:-1;;;12485:24:15;;;;;;;;-1:-1:-1;;;;;;;;;12485:24:15;;;;;;;;;;-1:-1:-1;;;12485:24:15;;;;;;;;-1:-1:-1;;;12485:24:15;;;;;;;;;;;;-1:-1:-1;;;12485:24:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12485:15:15;:24::i;:::-;12523:56;;;;;;;;;;-1:-1:-1;;;;;12523:56:15;;;;-1:-1:-1;;;12523:56:15;;;;;;;;-1:-1:-1;;;12523:56:15;;;;;;;;;;;-1:-1:-1;;;12523:56:15;;;;;;;;;;;12551:10;12563:15;12523:18;:56::i;:::-;12639:19;;;;;12618:40;;;;;;;:::i;:::-;:2;:14;;;12633:1;12618:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;12593:126;;;;-1:-1:-1;;;12593:126:15;;;;;;;:::i;:::-;12780:18;;12758;;-1:-1:-1;;;12780:18:15;;;;;;;-1:-1:-1;;;12758:18:15;;;;:40;;12733:120;;;;-1:-1:-1;;;12733:120:15;;30592:2:18;12733:120:15;;;30574:21:18;30631:2;30611:18;;;30604:30;-1:-1:-1;;;30650:18:18;;;30643:51;30711:18;;12733:120:15;30390:345:18;12733:120:15;12917:16;;12867:29;;12899:34;;-1:-1:-1;;;12917:16:15;;;;12899:15;:34;:::i;:::-;12947:59;;;;;;;;;;;12867:66;;-1:-1:-1;12947:59:15;;12966:7;;12947:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;12947:59:15;;;;;;;;;-1:-1:-1;;;12947:59:15;;;;;;;;-1:-1:-1;;;;;;;;;12947:59:15;;;;;;;;;;-1:-1:-1;;;12947:59:15;;;;;;;;-1:-1:-1;;;12947:59:15;;;;;;;;;;;;-1:-1:-1;;;12947:59:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;12947:59:15;;;;;;;;;;-1:-1:-1;;;;;12947:59:15;;;;-1:-1:-1;;;12947:59:15;;;;;;;;-1:-1:-1;;;12947:59:15;;;;;;;;;;;-1:-1:-1;;;12947:59:15;;;;;;;;;12984:21;12947:18;:59::i;:::-;13067:18;;;13020:27;;;:8;:27;;;;;:65;;13067:18;-1:-1:-1;;;13067:18:15;;;;;;13020:43;;:65;;13067:18;;-1:-1:-1;;;13020:65:15;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13123:2;:12;;;13136:1;13123:15;;;;;;;;:::i;:::-;;;;;;;13104:60;13147:15;13104:60;;;;;32554:10:18;32542:23;;;;32524:42;;32512:2;32497:18;;32380:192;13104:60:15;;;;;;;;-1:-1:-1;;;13185:27:15;;;;:8;:27;;;;;13178:34;;-1:-1:-1;;;;;;13178:34:15;;;-1:-1:-1;11846:3:15;;;;:::i;:::-;;;;11806:1417;;;;11734:1495;:::o;21735:809::-;21990:18;;:::i;:::-;22025:512;;;;;;;;22054:1;22025:512;;;;22076:1;22025:512;;;;22104:11;22025:512;;;;22141:10;22025:512;;;;22174:7;22025:512;;;;22221:1;-1:-1:-1;;;;;22207:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22207:16:15;-1:-1:-1;22025:512:15;;;;22420:1;22408:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22408:14:15;-1:-1:-1;22025:512:15;;;;22465:1;22452:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22452:15:15;-1:-1:-1;22025:512:15;;;;;;;;;;;;;;;;-1:-1:-1;22321:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22321:14:15;-1:-1:-1;22025:512:15;;;;22375:1;22361:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22361:16:15;-1:-1:-1;22025:512:15;;;;22524:1;22495:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22495:31:15;-1:-1:-1;22025:512:15;;22020:517;21735:809;-1:-1:-1;;;;;;21735:809:15:o;14647:609::-;14813:1;14790:2;:13;;;:20;:24;14782:51;;;;-1:-1:-1;;;14782:51:15;;23808:2:18;14782:51:15;;;23790:21:18;23847:2;23827:18;;;23820:30;-1:-1:-1;;;23866:18:18;;;23859:44;23920:18;;14782:51:15;23606:338:18;14782:51:15;14862:2;:13;;;:20;14850:2;:8;;;:32;14843:386;;14946:2;:13;;;14960:2;:8;;;14946:23;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14920:49:15;:2;:13;;;14934:2;:7;;;14920:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14920:49:15;;14919:128;;;;-1:-1:-1;15019:27:15;14991:2;:14;;;15006:2;:8;;;14991:24;;;;;;;;:::i;:::-;;;;;;;:55;;;;;;;;:::i;:::-;;14919:128;14898:321;;;15080:8;;;:10;;;;;;:::i;:::-;;;-1:-1:-1;14843:386:15;;14898:321;15129:11;15137:2;15129:7;:11;;:::i;:::-;15168:8;;;;;15158:18;;;15168:8;15194:10;15168:8;15194:10;:::i;14843:386::-;15238:11;15246:2;15238:7;:11;;:::i;6068:1695::-;6153:7;;6136:1407;6166:2;:8;;;6162:1;:12;6136:1407;;;6195:23;6212:2;6216:1;6195:16;:23::i;:::-;6232:18;6318:2;:13;;;6332:2;:7;;;6318:22;;;;;;;;:::i;:::-;;;;;;;6362:2;:10;;;6373:1;6362:13;;;;;;;;:::i;:::-;;;;;;;6397:9;;6280:144;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6280:144:15;;;;;;;;;6253:185;;6280:144;6253:185;;;;6452:33;6488:20;;;:8;:20;;;;;;;6522:21;;;;;;;;6253:185;;-1:-1:-1;6488:20:15;;6522:21;;6488:20;;6280:144;;6522:21;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;6522:21:15;;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;-1:-1:-1;;;;;;;;;6522:21:15;;;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;;;;;-1:-1:-1;;;6522:21:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;6522:12:15;:21::i;:::-;6557:49;6586:2;:15;;;6602:1;6586:18;;;;;;;;:::i;:::-;;;;;;;6580:25;;;;;;;;:::i;:::-;6557:22;:49::i;:::-;6620:10;;6633:2;:14;;;6648:1;6633:17;;;;;;;;:::i;:::-;;;;;;;:47;;;;;;;;:::i;:::-;;6620:60;;6717:428;;;;;;;;6766:2;:14;;;6781:1;6766:17;;;;;;;;:::i;:::-;;;;;;;6717:428;;;;;;;;:::i;:::-;;;;;6824:10;-1:-1:-1;;;;;6717:428:15;;;;;6870:2;:18;;;6889:1;6870:21;;;;;;;;:::i;:::-;;;;;;;6717:428;;;;;;6925:2;:17;;;6943:1;6925:20;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6717:428:15;;;;;;6975:5;:35;;6993:2;:13;;;7007:1;6993:16;;;;;;;;:::i;:::-;;;;;;;6975:35;;;6983:1;6975:35;6717:428;;;;;;7045:5;:35;;7063:2;:13;;;7077:1;7063:16;;;;;;;;:::i;:::-;;;;;;;7045:35;;;7053:1;7045:35;6717:428;;;;;;;;7112:2;:15;;;7128:1;7112:18;;;;;;;;:::i;:::-;;;;;;;6717:428;;;;;;;;:::i;:::-;;;6694:20;;;;:8;:20;;;;;:451;;;;:20;;-1:-1:-1;;6694:451:15;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6694:451:15;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6694:451:15;;;;-1:-1:-1;;;;;6694:451:15;;;;;;;-1:-1:-1;;;;6694:451:15;;;;;-1:-1:-1;;;6694:451:15;;;;;;;;;;;;-1:-1:-1;;;;6694:451:15;-1:-1:-1;;;6694:451:15;;;;;;;;;-1:-1:-1;;;;6694:451:15;;-1:-1:-1;;;6694:451:15;;;;;;-1:-1:-1;;;;6694:451:15;;-1:-1:-1;;;6694:451:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;6694:451:15;;;-1:-1:-1;;;;6694:451:15;;;;-1:-1:-1;;;6694:451:15;;;;;;;;;:::i;:::-;;;;;;;;;7287:2;:10;;;7298:1;7287:13;;;;;;;;:::i;:::-;;;;;;;7247:2;:13;;;7261:2;:7;;;7247:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7164:343:15;7219:10;-1:-1:-1;;;;;7164:343:15;;7196:5;7318:9;;7345:2;:18;;;7364:1;7345:21;;;;;;;;:::i;:::-;;;;;;;7384:2;:17;;;7402:1;7384:20;;;;;;;;:::i;:::-;;;;;;;7422:5;:35;;7440:2;:13;;;7454:1;7440:16;;;;;;;;:::i;:::-;;;;;;;7422:35;;;7430:1;7422:35;7475:2;:15;;;7491:1;7475:18;;;;;;;;:::i;:::-;;;;;;;7164:343;;;;;;;;;;;:::i;:::-;;;;;;;;7521:9;:11;;;:9;:11;;;:::i;:::-;;;;;;6181:1362;;;6176:3;;;;;:::i;:::-;;;;6136:1407;;;;7552:204;7578:2;7594:10;7626:4;7645:42;7654:2;:10;;;7666:2;:7;;;7675:2;:8;;;7685:1;7645:8;:42::i;:::-;7701:45;7710:2;:13;;;7725:2;:7;;;7734:2;:8;;;7744:1;7701:8;:45::i;:::-;7552:12;:204::i;:::-;6068:1695;:::o;19990:891::-;20340:18;;:::i;:::-;20375:499;;;;;;;;20404:1;20375:499;;;;20426:1;20375:499;;;;20454:11;20375:499;;;;20491:10;20375:499;;;;20524:7;20375:499;;;;20557:10;20375:499;;;;20764:15;20375:499;;;;20809:14;20375:499;;;;20606:1;-1:-1:-1;;;;;20592:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20592:16:15;-1:-1:-1;20375:499:15;;;;20647:1;20633:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20633:16:15;-1:-1:-1;20375:499:15;;;;20689:1;20677:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20677:14:15;-1:-1:-1;20375:499:15;;;;20731:1;20717:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20717:16:15;-1:-1:-1;20375:499:15;;;;;;;;-1:-1:-1;20370:504:15;19990:891;-1:-1:-1;;;;;;19990:891:15:o;13235:1224::-;13315:7;;13298:1155;13328:2;:8;;;13324:1;:12;13298:1155;;;13357:25;13450:2;:13;;;13464:2;:7;;;13450:22;;;;;;;;:::i;:::-;;;;;;;13494:2;:10;;;13505:1;13494:13;;;;;;;;:::i;:::-;;;;;;;13529:2;:12;;;13542:1;13529:15;;;;;;;;:::i;:::-;;;;;;;13412:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13385:191;;;;;;13357:219;;13590:25;13683:2;:13;;;13697:2;:7;;;13683:22;;;;;;;;:::i;:::-;;;;;;;13727:2;:10;;;13738:1;13727:13;;;;;;;;:::i;:::-;;;;;;;13762:2;:12;;;13775:1;13762:15;;;;;;;;:::i;:::-;;;;;;;13645:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13645:150:15;;;;;;;;;13618:191;;13645:150;13618:191;;;;13823:33;13859:27;;;:8;:27;;;;;13936;;;:8;:27;;;;;;13977:24;;;;;;;;13618:191;;-1:-1:-1;13859:27:15;;13977:24;;13859:27;;13645:150;;13977:24;;;;;;;;;;:::i;:::-;14015;;;;;;;;;;-1:-1:-1;;;;;14015:24:15;;;;-1:-1:-1;;;14015:24:15;;;;;;;;-1:-1:-1;;;14015:24:15;;;;;;;;;;;-1:-1:-1;;;14015:24:15;;;;;;;;;;;:15;:24::i;:::-;14053:43;;;;;;;;;;-1:-1:-1;;;;;14053:43:15;;;;-1:-1:-1;;;14053:43:15;;;;;;;;-1:-1:-1;;;14053:43:15;;;;;;;;;;;-1:-1:-1;;;14053:43:15;;;;;;;;;;;14080:15;14053:17;:43::i;:::-;14110:40;;;;;;;;;;;;;;14133:7;;14110:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;14110:40:15;;;;;;;;;-1:-1:-1;;;14110:40:15;;;;;;;;-1:-1:-1;;;;;;;;;14110:40:15;;;;;;;;;;-1:-1:-1;;;14110:40:15;;;;;;;;-1:-1:-1;;;14110:40:15;;;;;;;;;;;;-1:-1:-1;;;14110:40:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;14110:40:15;;;;;;;;;;-1:-1:-1;;;;;14110:40:15;;;;-1:-1:-1;;;14110:40:15;;;;;;;;-1:-1:-1;;;14110:40:15;;;;;;;;;;;-1:-1:-1;;;14110:40:15;;;;;;;;;:22;:40::i;:::-;14208:2;:12;;;14221:1;14208:15;;;;;;;;:::i;:::-;;;;;;;14169:109;14248:15;14169:109;;;;;32554:10:18;32542:23;;;;32524:42;;32512:2;32497:18;;32380:192;14169:109:15;;;;;;;;14376:18;;14334:23;;:60;;14376:18;-1:-1:-1;;;14376:18:15;;;;;;-1:-1:-1;;;14334:23:15;;;:60;:::i;:::-;14292:102;;;;;;;-1:-1:-1;;;14292:102:15;-1:-1:-1;;;;14292:102:15;;;;;;;-1:-1:-1;14292:23:15;14415:27;;;:8;:27;;;;;14408:34;;-1:-1:-1;;;;;;14408:34:15;;;-1:-1:-1;13338:3:15;;;;:::i;:::-;;;;13298:1155;;7769:1490;7897:7;;7886:8;;;;7841:28;;7886:18;;;:::i;:::-;-1:-1:-1;;;;;7872:33:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7872:33:15;-1:-1:-1;8004:7:15;;7841:64;;-1:-1:-1;7915:33:15;;7987:1048;8017:2;:8;;;8013:1;:12;7987:1048;;;8046:25;8139:2;:13;;;8153:2;:7;;;8139:22;;;;;;;;:::i;:::-;;;;;;;8183:2;:10;;;8194:1;8183:13;;;;;;;;:::i;:::-;;;;;;;8218:2;:12;;;8231:1;8218:15;;;;;;;;:::i;:::-;;;;;;;8101:150;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8101:150:15;;;;;;;;;8074:191;;8101:150;8074:191;;;;8279:23;8305:27;;;:8;:27;;;;;8392:19;;8074:191;;-1:-1:-1;8305:27:15;8392:19;;;8371:40;;;;;;;:::i;:::-;:2;:14;;;8386:1;8371:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;8346:126;;;;-1:-1:-1;;;8346:126:15;;;;;;;:::i;:::-;8622:23;;-1:-1:-1;;;8600:18:15;;8622:23;8600:18;;;-1:-1:-1;;;8622:23:15;;;;8600:45;8575:126;;;;-1:-1:-1;;;8575:126:15;;21985:2:18;8575:126:15;;;21967:21:18;22024:2;22004:18;;;21997:30;-1:-1:-1;;;22043:18:18;;;22036:52;22105:18;;8575:126:15;21783:346:18;8575:126:15;8715:24;;;;;;;;;;;;;;8731:7;;8715:24;;;;;;;;;;;;:::i;:::-;8753:38;;;;;;;;;;;;;;8771:7;;8753:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;8753:38:15;;;;;;;;;-1:-1:-1;;;8753:38:15;;;;;;;;-1:-1:-1;;;;;;;;;8753:38:15;;;;;;;;;;-1:-1:-1;;;8753:38:15;;;;;;;;-1:-1:-1;;;8753:38:15;;;;;;;;;;;;-1:-1:-1;;;8753:38:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;8780:10:15;8753:17;:38::i;:::-;8832:18;;8821:7;;-1:-1:-1;;;8832:18:15;;;;;;8805:11;;8817;;:1;:11;:::i;:::-;8805:24;;;;;;;;:::i;:::-;;;;;;;;;;:45;8878:19;;;8935:12;;;:15;;8878:19;;;;;-1:-1:-1;8935:12:15;8948:1;;8935:15;;;;;;:::i;:::-;;;;;;;8916:60;8959:15;8916:60;;;;;32554:10:18;32542:23;;;;32524:42;;32512:2;32497:18;;32380:192;8916:60:15;;;;;;;;-1:-1:-1;8997:27:15;;;;:8;:27;;;;;8990:34;;-1:-1:-1;;;;;;8990:34:15;;;8027:3;;;;:::i;:::-;;;;7987:1048;;;;9044:208;9070:2;9094:4;9113:10;9137:42;9146:2;:10;;;9158:2;:7;;;9167:2;:8;;;9177:1;9137:8;:42::i;:::-;9215:7;;9224:8;;;;9193:49;;9202:11;;9215:7;9193:8;:49::i;9044:208::-;7831:1428;;7769:1490;:::o;9265:2463::-;9350:7;;9333:2389;9363:2;:8;;;9359:1;:12;9333:2389;;;9392:25;9485:2;:13;;;9499:2;:7;;;9485:22;;;;;;;;:::i;:::-;;;;;;;9529:2;:10;;;9540:1;9529:13;;;;;;;;:::i;:::-;;;;;;;9564:2;:12;;;9577:1;9564:15;;;;;;;;:::i;:::-;;;;;;;9447:150;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9420:191;;;;;;9392:219;;9625:25;9718:2;:13;;;9732:2;:7;;;9718:22;;;;;;;;:::i;:::-;;;;;;;9762:2;:10;;;9773:1;9762:13;;;;;;;;:::i;:::-;;;;;;;9797:9;;9680:144;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9680:144:15;;;;;;;;;9653:185;;9680:144;9653:185;;;;9852:33;9888:27;;;:8;:27;;;;;9965;;;:8;:27;;;;;;10006:24;;;;;;;;9653:185;;-1:-1:-1;9888:27:15;;10006:24;;9888:27;;9680:144;;10006:24;;;;;;;;;;:::i;:::-;10044:21;;;;;;;;;;-1:-1:-1;;;;;10044:21:15;;;;-1:-1:-1;;;10044:21:15;;;;;;;;-1:-1:-1;;;10044:21:15;;;;;;;;;;;-1:-1:-1;;;10044:21:15;;;;;;;;;;;:12;:21::i;:::-;10079:44;;;;;;;;;;;;;;10096:7;;10079:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;10079:44:15;;;;;;;;;-1:-1:-1;;;10079:44:15;;;;;;;;-1:-1:-1;;;;;;;;;10079:44:15;;;;;;;;;;-1:-1:-1;;;10079:44:15;;;;;;;;-1:-1:-1;;;10079:44:15;;;;;;;;;;;;-1:-1:-1;;;10079:44:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;10105:2:15;10109:1;10112:10;10079:16;:44::i;:::-;10183:19;;;;;10162:40;;;;;;;:::i;:::-;:2;:14;;;10177:1;10162:17;;;;;;;;:::i;:::-;;;;;;;:40;;;;;;;;:::i;:::-;;10137:126;;;;-1:-1:-1;;;10137:126:15;;;;;;;:::i;:::-;10322:23;;10302:13;;;;:16;;-1:-1:-1;;;10322:23:15;;;;;;10316:1;;10302:16;;;;;;:::i;:::-;;;;;;;:43;;10277:128;;;;-1:-1:-1;;;10277:128:15;;21277:2:18;10277:128:15;;;21259:21:18;21316:2;21296:18;;;21289:30;21355:28;21335:18;;;21328:56;21401:18;;10277:128:15;21075:350:18;10277:128:15;10448:20;;10419;;-1:-1:-1;;;10448:20:15;;;;10442:27;;;;;;;;:::i;:::-;10483:20;10506:8;;:40;;-1:-1:-1;;;10506:40:15;;32749:4:18;32737:17;;10506:40:15;;;32719:36:18;10419:50:15;;-1:-1:-1;10483:20:15;;-1:-1:-1;;;;;10506:8:15;;;;:24;;32692:18:18;;10506:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10483:63;;10560:16;10585:12;-1:-1:-1;;;;;10579:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10560:49;;;-1:-1:-1;10641:13:15;10657:12;10560:49;10657:2;:12;:::i;:::-;10760:22;;10641:28;;-1:-1:-1;10687:17:15;;10748:42;;-1:-1:-1;;;10760:22:15;;;;10641:28;10748:11;:42::i;:::-;10707:2;:15;;;10723:1;10707:18;;;;;;;;:::i;:::-;;;;;;;:83;;;;;;:::i;:::-;10687:103;;10828:1;10816:9;:13;10808:51;;;;-1:-1:-1;;;10808:51:15;;;;;;;:::i;:::-;10877:152;-1:-1:-1;;;;;10877:36:15;;10935:10;10975:4;11002:9;10877:36;:152::i;:::-;10623:421;;11087:239;;;;;;;;11146:10;-1:-1:-1;;;;;11087:239:15;;;;;11242:2;:15;;;11258:1;11242:18;;;;;;;;:::i;:::-;;;;;;;11087:239;;;;;;11295:15;11087:239;;;;;;11193:2;:13;;;11207:1;11193:16;;;;;;;;:::i;:::-;;;;;;;;;;;;11087:239;;;;;;;11057:27;;;;:8;:27;;;;;;;:269;;;;;;;;;;;;;;;;;11087:239;11057:269;-1:-1:-1;;;11057:269:15;-1:-1:-1;;;;11057:269:15;;;;-1:-1:-1;;;11057:269:15;;;;;-1:-1:-1;;;;11057:269:15;;;;-1:-1:-1;;;11057:269:15;-1:-1:-1;;;;;;11057:269:15;;;-1:-1:-1;;;;;11057:269:15;;;;;;;;;;;;;;;;;;;11410:13;;;;:16;;11424:1;;11410:16;;;;;;:::i;:::-;;;;;;;11340:100;;:8;:27;11349:17;11340:27;;;;;;;;;;;:43;;;:100;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11552:9;;11519:2;:12;;;11532:1;11519:15;;;;;;;;:::i;:::-;;;;;;;11491:10;-1:-1:-1;;;;;11459:227:15;;11585:2;:13;;;11599:1;11585:16;;;;;;;;:::i;:::-;;;;;;;11620:2;:15;;;11636:1;11620:18;;;;;;;;:::i;:::-;;;;;;;;;;;;11656:16;;11459:227;;;33712:4:18;33700:17;;;33682:36;;33754:17;;;;33734:18;;;33727:45;;;;-1:-1:-1;;;11656:16:15;;;;;33788:18:18;;;33781:51;33670:2;33655:18;11459:227:15;;;;;;;11700:9;:11;;;:9;:11;;;:::i;:::-;;;;;;9378:2344;;;;;;;9373:3;;;;;:::i;:::-;;;;9333:2389;;20887:842;21177:18;;:::i;:::-;21212:510;;;;;;;;21241:1;21212:510;;;;21263:1;21212:510;;;;21291:11;21212:510;;;;21328:10;21212:510;;;;21361:7;21212:510;;;;21408:1;-1:-1:-1;;;;;21394:16:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21394:16:15;-1:-1:-1;21212:510:15;;;;21605:1;21593:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21593:14:15;-1:-1:-1;21212:510:15;;;;21650:1;21637:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21637:15:15;-1:-1:-1;21212:510:15;;;;;;;;;;;21470:16;;-1:-1:-1;21470:16:15;;;;;;;;21212:510;;;;;;;;;;;;;;;;;;;;;21680:31;;;;;;;;;;;-1:-1:-1;21212:510:15;;;;;21207:515;;-1:-1:-1;;;20887:842:15:o;24184:267::-;24256:42;24276:7;:21;;;24256:19;:42::i;:::-;24316:23;;;;:28;;24308:61;;;;-1:-1:-1;;;24308:61:15;;20574:2:18;24308:61:15;;;20556:21:18;20613:2;20593:18;;;20586:30;-1:-1:-1;;;20632:18:18;;;20625:50;20692:18;;24308:61:15;20372:344:18;24308:61:15;24387:22;;;;-1:-1:-1;;;;;;24387:27:15;24379:65;;;;-1:-1:-1;;;24379:65:15;;;;;;;:::i;25972:341::-;26153:9;-1:-1:-1;;;;;26128:34:15;:7;:21;;;-1:-1:-1;;;;;26128:34:15;;26120:64;;;;-1:-1:-1;;;26120:64:15;;28494:2:18;26120:64:15;;;28476:21:18;28533:2;28513:18;;;28506:30;-1:-1:-1;;;28552:18:18;;;28545:47;28609:18;;26120:64:15;28292:341:18;26120:64:15;26216:41;26233:7;26242:14;26216:16;:41::i;:::-;26215:42;26194:112;;;;-1:-1:-1;;;26194:112:15;;25969:2:18;26194:112:15;;;25951:21:18;26008:2;25988:18;;;25981:30;26047:25;26027:18;;;26020:53;26090:18;;26194:112:15;25767:347:18;15626:1193:15;15801:20;15830:7;:20;;;15824:27;;;;;;;;:::i;:::-;15861:16;15880:8;;:40;;-1:-1:-1;;;15880:40:15;;32749:4:18;32737:17;;15880:40:15;;;32719:36:18;15801:50:15;;-1:-1:-1;15861:16:15;;-1:-1:-1;;;;;15880:8:15;;;;:24;;32692:18:18;;15880:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15861:59;;15930:16;15955:8;-1:-1:-1;;;;;15949:24:15;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15930:45;;;-1:-1:-1;15985:13:15;16001:12;15930:45;16001:2;:12;:::i;:::-;15985:28;;16023:17;16043:42;16055:7;:22;;;16079:5;16043:11;:42::i;:::-;16023:62;;16095:22;16132:7;:20;;;16120:32;;:9;:32;;;;:::i;:::-;16095:57;-1:-1:-1;16162:21:15;2504:5;16187:33;16211:9;16187:21;:33;:::i;:::-;16186:64;;;;:::i;:::-;16162:88;;16285:1;16268:14;:18;16260:66;;;;-1:-1:-1;;;16260:66:15;;26675:2:18;16260:66:15;;;26657:21:18;26714:2;26694:18;;;26687:30;26753:34;26733:18;;;26726:62;-1:-1:-1;;;26804:18:18;;;26797:33;26847:19;;16260:66:15;26473:399:18;16260:66:15;16360:1;16344:13;:17;16336:59;;;;-1:-1:-1;;;16336:59:15;;28136:2:18;16336:59:15;;;28118:21:18;28175:2;28155:18;;;28148:30;28214:31;28194:18;;;28187:59;28263:18;;16336:59:15;27934:353:18;16336:59:15;16405:21;16429:30;16446:13;16429:14;:30;:::i;:::-;16405:54;;16473:7;;16484:1;16473:12;16469:145;;16501:16;16520:44;16528:13;16543:7;:20;;;16520:7;:44::i;:::-;16501:63;-1:-1:-1;16578:25:15;16501:63;16578:25;;:::i;:::-;;;16487:127;16469:145;16652:21;;;;16623:66;;-1:-1:-1;;;;;16623:28:15;;;16675:13;16623:28;:66::i;:::-;16703:17;;16699:114;;16765:21;;16736:66;;-1:-1:-1;;;;;16736:28:15;;;16788:13;16736:28;:66::i;:::-;15791:1028;;;;;;;;15626:1193;;;:::o;24985:450::-;25092:1;25073:2;:13;;;25087:1;25073:16;;;;;;;;:::i;:::-;;;;;;;:20;25065:59;;;;-1:-1:-1;;;25065:59:15;;23453:2:18;25065:59:15;;;23435:21:18;23492:2;23472:18;;;23465:30;23531:28;23511:18;;;23504:56;23577:18;;25065:59:15;23251:350:18;25065:59:15;25162:15;25142:35;;:2;:13;;;25156:1;25142:16;;;;;;;;:::i;:::-;;;;;;;:35;;25134:64;;;;-1:-1:-1;;;25134:64:15;;;;;;;:::i;:::-;25240:1;25216:2;:18;;;25235:1;25216:21;;;;;;;;:::i;:::-;;;;;;;:25;;;25208:61;;;;-1:-1:-1;;;25208:61:15;;;;;;;:::i;:::-;25312:15;25287:40;;:2;:18;;;25306:1;25287:21;;;;;;;;:::i;:::-;;;;;;;:40;;;;25279:69;;;;-1:-1:-1;;;25279:69:15;;;;;;;:::i;:::-;25397:1;25373:2;:17;;;25391:1;25373:20;;;;;;;;:::i;:::-;;;;;;;25366:28;;:32;;;25358:70;;;;-1:-1:-1;;;25358:70:15;;;;;;;:::i;23912:266::-;23981:39;23998:7;:21;;;23981:16;:39::i;:::-;24038:23;;;;:28;;;24030:65;;;;-1:-1:-1;;;24030:65:15;;21632:2:18;24030:65:15;;;21614:21:18;21671:2;21651:18;;;21644:30;-1:-1:-1;;;21690:18:18;;;21683:54;21754:18;;24030:65:15;21430:348:18;24030:65:15;24113:22;;;;-1:-1:-1;;;;;;24113:27:15;;24105:66;;;;-1:-1:-1;;;24105:66:15;;23098:2:18;24105:66:15;;;23080:21:18;23137:2;23117:18;;;23110:30;23176:28;23156:18;;;23149:56;23222:18;;24105:66:15;22896:350:18;26714:129:15;26806:1;26794:9;:13;;;26786:50;;;;-1:-1:-1;;;26786:50:15;;31702:2:18;26786:50:15;;;31684:21:18;31741:2;31721:18;;;31714:30;31780:26;31760:18;;;31753:54;31824:18;;26786:50:15;31500:348:18;23137:326:15;23286:18;23334:13;23341:6;23334:4;:13;:::i;:::-;-1:-1:-1;;;;;23320:28:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23320:28:15;-1:-1:-1;23316:32:15;-1:-1:-1;23375:6:15;23358:99;23387:4;23383:1;:8;23358:99;;;23428:3;23432:13;23436:9;23432:1;:13;:::i;:::-;23428:18;;;;;;;;:::i;:::-;;;;;;;23412:1;23418:6;23414:1;:10;;;;:::i;:::-;23412:13;;;;;;;;:::i;:::-;;;;;;;;;;:34;23393:3;;;;:::i;:::-;;;;23358:99;;;;23137:326;;;;;;:::o;17611:628::-;17829:26;17802:14;;;;17817:7;;17802:23;;;;;;;;:::i;:::-;;;;;;;:53;;;;;;;;:::i;:::-;;17798:435;;;17879:13;;;;17893:7;;17879:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;17871:44:15;;17933:4;17955:2;17975;:10;;;17986:2;:7;;;17975:19;;;;;;;;:::i;:::-;;;;;;;;;;;17871:137;;-1:-1:-1;;;;;;17871:137:15;;;;;;;-1:-1:-1;;;;;17623:15:18;;;17871:137:15;;;17605:34:18;17675:15;;;;17655:18;;;17648:43;17707:18;;;17700:34;17540:18;;17871:137:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17798:435;;;18048:13;;;;18062:7;;18048:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;18039:54:15;;18111:4;18133:2;18153:7;18178:10;18039:183;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17611:628;;;;;:::o;24719:260::-;24811:21;;24791:42;;:19;:42::i;:::-;24851:20;;;;:25;;24843:61;;;;-1:-1:-1;;;24843:61:15;;;;;;;:::i;:::-;24922:16;;;;:21;;24914:58;;;;-1:-1:-1;;;24914:58:15;;27783:2:18;24914:58:15;;;27765:21:18;27822:2;27802:18;;;27795:30;27861:26;27841:18;;;27834:54;27905:18;;24914:58:15;27581:348:18;26849:254:15;27000:41;27017:7;27026:14;27000:16;:41::i;:::-;26979:117;;;;-1:-1:-1;;;26979:117:15;;27425:2:18;26979:117:15;;;27407:21:18;27464:2;27444:18;;;27437:30;27503:31;27483:18;;;27476:59;27552:18;;26979:117:15;27223:353:18;16825:780:15;16965:20;16994:7;:20;;;16988:27;;;;;;;;:::i;:::-;17025:18;17052:8;;:40;;-1:-1:-1;;;17052:40:15;;32749:4:18;32737:17;;17052:40:15;;;32719:36:18;16965:50:15;;-1:-1:-1;17025:18:15;;-1:-1:-1;;;;;17052:8:15;;;;:24;;32692:18:18;;17052:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17025:68;;17103:16;17128:12;-1:-1:-1;;;;;17122:28:15;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17103:49;;;-1:-1:-1;17162:13:15;17178:12;17103:49;17178:2;:12;:::i;:::-;17162:28;;17200:17;17220:42;17232:7;:22;;;17256:5;17220:11;:42::i;:::-;17200:62;;17272:16;17303:7;:20;;;17291:32;;:9;:32;;;;:::i;:::-;17272:51;;17333:16;17367:7;;17378:1;17367:12;17363:157;;17406:103;17431:8;17480:14;17457:38;;;;;;;;;;:::i;:::-;17406:7;:103::i;:::-;17395:114;;17363:157;17555:21;;;;17529:69;;17578:19;17589:8;17578;:19;:::i;:::-;-1:-1:-1;;;;;17529:25:15;;;:69;:25;:69::i;26319:184::-;26465:9;-1:-1:-1;;;;;26440:34:15;:7;:21;;;-1:-1:-1;;;;;26440:34:15;;26432:64;;;;-1:-1:-1;;;26432:64:15;;27079:2:18;26432:64:15;;;27061:21:18;27118:2;27098:18;;;27091:30;-1:-1:-1;;;27137:18:18;;;27130:47;27194:18;;26432:64:15;26877:341:18;24457:256:15;24543:21;;24526:39;;:16;:39::i;:::-;24583:20;;;;:25;;;24575:62;;;;-1:-1:-1;;;24575:62:15;;21632:2:18;24575:62:15;;;21614:21:18;21671:2;21651:18;;;21644:30;-1:-1:-1;;;21690:18:18;;;21683:54;21754:18;;24575:62:15;21430:348:18;24575:62:15;24655:16;;;;:21;;;24647:59;;;;-1:-1:-1;;;24647:59:15;;24907:2:18;24647:59:15;;;24889:21:18;24946:2;24926:18;;;24919:30;24985:27;24965:18;;;24958:55;25030:18;;24647:59:15;24705:349:18;25441:525:15;25623:7;:21;;;-1:-1:-1;;;;;25610:34:15;:9;-1:-1:-1;;;;;25610:34:15;;;25602:71;;;;-1:-1:-1;;;25602:71:15;;28840:2:18;25602:71:15;;;28822:21:18;28879:2;28859:18;;;28852:30;28918:26;28898:18;;;28891:54;28962:18;;25602:71:15;28638:348:18;25602:71:15;25713:15;25691:37;;:2;:15;;;25707:1;25691:18;;;;;;;;:::i;:::-;;;;;;;:37;;;;25683:66;;;;-1:-1:-1;;;25683:66:15;;;;;;;:::i;:::-;25788:1;25767:2;:15;;;25783:1;25767:18;;;;;;;;:::i;:::-;;;;;;;:22;;;25759:58;;;;-1:-1:-1;;;25759:58:15;;;;;;;:::i;:::-;25870:7;:23;;;25848:45;;:2;:15;;;25864:1;25848:18;;;;;;;;:::i;:::-;;;;;;;:45;;;;25827:132;;;;-1:-1:-1;;;25827:132:15;;22336:2:18;25827:132:15;;;22318:21:18;22375:2;22355:18;;;22348:30;22414:34;22394:18;;;22387:62;-1:-1:-1;;;22465:18:18;;;22458:38;22513:19;;25827:132:15;22134:404:18;22550:581:15;22646:7;22669:37;22693:5;22700;22669:23;:37::i;:::-;22731:21;;;;22779:27;;;;;;22716:12;22839:13;22847:5;22839;:13;:::i;:::-;22816:36;;22874:4;22866:5;:12;;;22862:55;;;22902:4;22894:12;;22862:55;22940:4;22930:7;:14;;;22926:59;;;22970:4;22960:14;;22926:59;22994:9;23006:13;23014:5;23006:13;;;;:::i;:::-;22994:25;-1:-1:-1;23029:9:15;23041:22;23051:12;23041:22;;;;:::i;:::-;23029:34;-1:-1:-1;23073:17:15;23093:5;23029:34;23093:1;:5;:::i;:::-;23073:25;22550:581;-1:-1:-1;;;;;;;;;22550:581:15:o;845:241:7:-;1010:68;;-1:-1:-1;;;;;17623:15:18;;;1010:68:7;;;17605:34:18;17675:15;;17655:18;;;17648:43;17707:18;;;17700:34;;;983:96:7;;1003:5;;-1:-1:-1;;;1033:27:7;17540:18:18;;1010:68:7;;;;-1:-1:-1;;1010:68:7;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:7;-1:-1:-1;;;;;;1010:68:7;;;;;;;;;;983:19;:96::i;23651:123:15:-;-1:-1:-1;;;;;23725:18:15;;23717:50;;;;-1:-1:-1;;;23717:50:15;;20226:2:18;23717:50:15;;;20208:21:18;20265:2;20245:18;;;20238:30;-1:-1:-1;;;20284:18:18;;;20277:49;20343:18;;23717:50:15;20024:343:18;27109:298:15;27222:4;27260:7;:16;;;27250:26;;:7;:26;27242:63;;;;-1:-1:-1;;;27242:63:15;;22745:2:18;27242:63:15;;;22727:21:18;22784:2;22764:18;;;22757:30;22823:26;22803:18;;;22796:54;22867:18;;27242:63:15;22543:348:18;27242:63:15;2504:5;27363:7;:20;;;:37;;;;;;:::i;:::-;27344:16;;;;27334:26;;;;:7;:26;:::i;:::-;:66;;27109:298;-1:-1:-1;;;27109:298:15:o;15262:358::-;15366:11;15409:7;;15399;:17;;;;:::i;:::-;15393:23;-1:-1:-1;15426:12:15;15433:5;15393:23;15426:12;:::i;:::-;;;15448:20;15477:12;15471:19;;;;;;;;:::i;:::-;15500:14;15523:8;;:40;;-1:-1:-1;;;15523:40:15;;32749:4:18;32737:17;;15523:40:15;;;32719:36:18;15448:42:15;;-1:-1:-1;15500:14:15;;-1:-1:-1;;;;;15523:8:15;;;;:24;;32692:18:18;;15523:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15596:11;;15500:64;;-1:-1:-1;15574:39:15;;-1:-1:-1;;;;;15574:21:15;;;;15596:11;15609:3;15574:21;:39::i;:::-;15383:237;;15262:358;;;;:::o;634:205:7:-;773:58;;-1:-1:-1;;;;;18392:32:18;;773:58:7;;;18374:51:18;18441:18;;;18434:34;;;746:86:7;;766:5;;-1:-1:-1;;;796:23:7;18347:18:18;;773:58:7;18200:274:18;23780:126:15;-1:-1:-1;;;;;23851:18:15;;;23843:56;;;;-1:-1:-1;;;23843:56:15;;29193:2:18;23843:56:15;;;29175:21:18;29232:2;29212:18;;;29205:30;29271:27;29251:18;;;29244:55;29316:18;;23843:56:15;28991:349:18;26509:199:15;26602:13;;;;26594:50;;;;-1:-1:-1;;;26594:50:15;;24151:2:18;26594:50:15;;;24133:21:18;24190:2;24170:18;;;24163:30;-1:-1:-1;;;24209:18:18;;;24202:50;24269:18;;26594:50:15;23949:344:18;26594:50:15;26671:5;26662;:14;;26654:47;;;;-1:-1:-1;;;26654:47:15;;31353:2:18;26654:47:15;;;31335:21:18;31392:2;31372:18;;;31365:30;-1:-1:-1;;;31411:18:18;;;31404:50;31471:18;;26654:47:15;31151:344:18;3140:706:7;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:7;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:7;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:7;;30942:2:18;3744:85:7;;;30924:21:18;30981:2;30961:18;;;30954:30;31020:34;31000:18;;;30993:62;-1:-1:-1;;;31071:18:18;;;31064:40;31121:19;;3744:85:7;30740:406:18;3461:223:11;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;;3461:223;;;;;;:::o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:11;;24500:2:18;4737:81:11;;;24482:21:18;24539:2;24519:18;;;24512:30;24578:34;24558:18;;;24551:62;-1:-1:-1;;;24629:18:18;;;24622:36;24675:19;;4737:81:11;24298:402:18;4737:81:11;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:11;;29547:2:18;4828:60:11;;;29529:21:18;29586:2;29566:18;;;29559:30;29625:31;29605:18;;;29598:59;29674:18;;4828:60:11;29345:353:18;4828:60:11;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:11;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:11:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:11;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:11;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:748:18:-;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;175:6;162:20;201:4;225:60;241:43;281:2;241:43;:::i;:::-;225:60;:::i;:::-;307:3;331:2;326:3;319:15;359:2;354:3;350:12;343:19;;394:2;386:6;382:15;446:3;441:2;435;432:1;428:10;420:6;416:23;412:32;409:41;406:61;;;463:1;460;453:12;406:61;485:1;495:238;509:2;506:1;503:9;495:238;;;580:3;567:17;597:31;622:5;597:31;:::i;:::-;641:18;;679:12;;;;711;;;;527:1;520:9;495:238;;;-1:-1:-1;751:5:18;;14:748;-1:-1:-1;;;;;;;14:748:18:o;767:677::-;820:5;873:3;866:4;858:6;854:17;850:27;840:55;;891:1;888;881:12;840:55;927:6;914:20;953:4;977:60;993:43;1033:2;993:43;:::i;977:60::-;1059:3;1083:2;1078:3;1071:15;1111:2;1106:3;1102:12;1095:19;;1146:2;1138:6;1134:15;1198:3;1193:2;1187;1184:1;1180:10;1172:6;1168:23;1164:32;1161:41;1158:61;;;1215:1;1212;1205:12;1158:61;1237:1;1247:168;1261:2;1258:1;1255:9;1247:168;;;1318:22;1336:3;1318:22;:::i;:::-;1306:35;;1361:12;;;;1393;;;;1279:1;1272:9;1247:168;;1449:793;1512:5;1565:3;1558:4;1550:6;1546:17;1542:27;1532:55;;1583:1;1580;1573:12;1532:55;1619:6;1606:20;1645:4;1669:60;1685:43;1725:2;1685:43;:::i;1669:60::-;1751:3;1775:2;1770:3;1763:15;1803:2;1798:3;1794:12;1787:19;;1838:2;1830:6;1826:15;1890:3;1885:2;1879;1876:1;1872:10;1864:6;1860:23;1856:32;1853:41;1850:61;;;1907:1;1904;1897:12;1850:61;1929:1;1950;1960:253;1976:2;1971:3;1968:11;1960:253;;;2051:3;2038:17;2088:1;2081:5;2078:12;2068:40;;2104:1;2101;2094:12;2068:40;2121:18;;2159:12;;;;2191;;;;1998:1;1989:11;1960:253;;;-1:-1:-1;2231:5:18;;1449:793;-1:-1:-1;;;;;;;;1449:793:18:o;2247:794::-;2311:5;2364:3;2357:4;2349:6;2345:17;2341:27;2331:55;;2382:1;2379;2372:12;2331:55;2418:6;2405:20;2444:4;2468:60;2484:43;2524:2;2484:43;:::i;2468:60::-;2550:3;2574:2;2569:3;2562:15;2602:2;2597:3;2593:12;2586:19;;2637:2;2629:6;2625:15;2689:3;2684:2;2678;2675:1;2671:10;2663:6;2659:23;2655:32;2652:41;2649:61;;;2706:1;2703;2696:12;2649:61;2728:1;2749;2759:253;2775:2;2770:3;2767:11;2759:253;;;2850:3;2837:17;2887:1;2880:5;2877:12;2867:40;;2903:1;2900;2893:12;2867:40;2920:18;;2958:12;;;;2990;;;;2797:1;2788:11;2759:253;;3046:673;3100:5;3153:3;3146:4;3138:6;3134:17;3130:27;3120:55;;3171:1;3168;3161:12;3120:55;3207:6;3194:20;3233:4;3257:60;3273:43;3313:2;3273:43;:::i;3257:60::-;3339:3;3363:2;3358:3;3351:15;3391:2;3386:3;3382:12;3375:19;;3426:2;3418:6;3414:15;3478:3;3473:2;3467;3464:1;3460:10;3452:6;3448:23;3444:32;3441:41;3438:61;;;3495:1;3492;3485:12;3438:61;3517:1;3527:163;3541:2;3538:1;3535:9;3527:163;;;3598:17;;3586:30;;3636:12;;;;3668;;;;3559:1;3552:9;3527:163;;3724:744;3776:5;3829:3;3822:4;3814:6;3810:17;3806:27;3796:55;;3847:1;3844;3837:12;3796:55;3883:6;3870:20;3909:4;3933:60;3949:43;3989:2;3949:43;:::i;3933:60::-;4015:3;4039:2;4034:3;4027:15;4067:2;4062:3;4058:12;4051:19;;4102:2;4094:6;4090:15;4154:3;4149:2;4143;4140:1;4136:10;4128:6;4124:23;4120:32;4117:41;4114:61;;;4171:1;4168;4161:12;4114:61;4193:1;4203:236;4217:2;4214:1;4211:9;4203:236;;;4288:3;4275:17;4305:29;4328:5;4305:29;:::i;:::-;4347:18;;4385:12;;;;4417;;;;4235:1;4228:9;4203:236;;4473:173;4540:20;;-1:-1:-1;;;;;;4589:32:18;;4579:43;;4569:71;;4636:1;4633;4626:12;4569:71;4473:173;;;:::o;4651:530::-;4693:5;4746:3;4739:4;4731:6;4727:17;4723:27;4713:55;;4764:1;4761;4754:12;4713:55;4800:6;4787:20;-1:-1:-1;;;;;4822:2:18;4819:26;4816:52;;;4848:18;;:::i;:::-;4892:55;4935:2;4916:13;;-1:-1:-1;;4912:27:18;4941:4;4908:38;4892:55;:::i;:::-;4972:2;4963:7;4956:19;5018:3;5011:4;5006:2;4998:6;4994:15;4990:26;4987:35;4984:55;;;5035:1;5032;5025:12;4984:55;5100:2;5093:4;5085:6;5081:17;5074:4;5065:7;5061:18;5048:55;5148:1;5123:16;;;5141:4;5119:27;5112:38;;;;5127:7;4651:530;-1:-1:-1;;;4651:530:18:o;5186:251::-;5256:6;5309:2;5297:9;5288:7;5284:23;5280:32;5277:52;;;5325:1;5322;5315:12;5277:52;5357:9;5351:16;5376:31;5401:5;5376:31;:::i;5442:255::-;5509:6;5562:2;5550:9;5541:7;5537:23;5533:32;5530:52;;;5578:1;5575;5568:12;5530:52;5617:9;5604:23;5636:31;5661:5;5636:31;:::i;5702:1071::-;5856:6;5864;5872;5880;5888;5941:3;5929:9;5920:7;5916:23;5912:33;5909:53;;;5958:1;5955;5948:12;5909:53;5997:9;5984:23;6016:31;6041:5;6016:31;:::i;:::-;6066:5;-1:-1:-1;6123:2:18;6108:18;;6095:32;6136:33;6095:32;6136:33;:::i;:::-;6188:7;-1:-1:-1;6246:2:18;6231:18;;6218:32;-1:-1:-1;;;;;6299:14:18;;;6296:34;;;6326:1;6323;6316:12;6296:34;6349:61;6402:7;6393:6;6382:9;6378:22;6349:61;:::i;:::-;6339:71;;6463:2;6452:9;6448:18;6435:32;6419:48;;6492:2;6482:8;6479:16;6476:36;;;6508:1;6505;6498:12;6476:36;6531:63;6586:7;6575:8;6564:9;6560:24;6531:63;:::i;:::-;6521:73;;6647:3;6636:9;6632:19;6619:33;6603:49;;6677:2;6667:8;6664:16;6661:36;;;6693:1;6690;6683:12;6661:36;;6716:51;6759:7;6748:8;6737:9;6733:24;6716:51;:::i;:::-;6706:61;;;5702:1071;;;;;;;;:::o;6778:665::-;6873:6;6881;6889;6897;6950:3;6938:9;6929:7;6925:23;6921:33;6918:53;;;6967:1;6964;6957:12;6918:53;7006:9;6993:23;7025:31;7050:5;7025:31;:::i;:::-;7075:5;-1:-1:-1;7132:2:18;7117:18;;7104:32;7145:33;7104:32;7145:33;:::i;:::-;7197:7;-1:-1:-1;7251:2:18;7236:18;;7223:32;;-1:-1:-1;7306:2:18;7291:18;;7278:32;-1:-1:-1;;;;;7322:30:18;;7319:50;;;7365:1;7362;7355:12;7319:50;7388:49;7429:7;7420:6;7409:9;7405:22;7388:49;:::i;:::-;7378:59;;;6778:665;;;;;;;:::o;7448:734::-;7552:6;7560;7568;7576;7584;7637:3;7625:9;7616:7;7612:23;7608:33;7605:53;;;7654:1;7651;7644:12;7605:53;7693:9;7680:23;7712:31;7737:5;7712:31;:::i;:::-;7762:5;-1:-1:-1;7819:2:18;7804:18;;7791:32;7832:33;7791:32;7832:33;:::i;:::-;7884:7;-1:-1:-1;7938:2:18;7923:18;;7910:32;;-1:-1:-1;7989:2:18;7974:18;;7961:32;;-1:-1:-1;8044:3:18;8029:19;;8016:33;-1:-1:-1;;;;;8061:30:18;;8058:50;;;8104:1;8101;8094:12;8058:50;8127:49;8168:7;8159:6;8148:9;8144:22;8127:49;:::i;8187:383::-;8264:6;8272;8280;8333:2;8321:9;8312:7;8308:23;8304:32;8301:52;;;8349:1;8346;8339:12;8301:52;8388:9;8375:23;8407:31;8432:5;8407:31;:::i;:::-;8457:5;8509:2;8494:18;;8481:32;;-1:-1:-1;8560:2:18;8545:18;;;8532:32;;8187:383;-1:-1:-1;;;8187:383:18:o;8575:1073::-;8777:6;8785;8793;8801;8854:3;8842:9;8833:7;8829:23;8825:33;8822:53;;;8871:1;8868;8861:12;8822:53;8911:9;8898:23;-1:-1:-1;;;;;8981:2:18;8973:6;8970:14;8967:34;;;8997:1;8994;8987:12;8967:34;9020:70;9082:7;9073:6;9062:9;9058:22;9020:70;:::i;:::-;9010:80;;9143:2;9132:9;9128:18;9115:32;9099:48;;9172:2;9162:8;9159:16;9156:36;;;9188:1;9185;9178:12;9156:36;9211:63;9266:7;9255:8;9244:9;9240:24;9211:63;:::i;:::-;9201:73;;9327:2;9316:9;9312:18;9299:32;9283:48;;9356:2;9346:8;9343:16;9340:36;;;9372:1;9369;9362:12;9340:36;9395:63;9450:7;9439:8;9428:9;9424:24;9395:63;:::i;:::-;9385:73;;9511:2;9500:9;9496:18;9483:32;9467:48;;9540:2;9530:8;9527:16;9524:36;;;9556:1;9553;9546:12;9524:36;;9579:63;9634:7;9623:8;9612:9;9608:24;9579:63;:::i;9653:1300::-;9889:6;9897;9905;9913;9921;9974:3;9962:9;9953:7;9949:23;9945:33;9942:53;;;9991:1;9988;9981:12;9942:53;10031:9;10018:23;-1:-1:-1;;;;;10101:2:18;10093:6;10090:14;10087:34;;;10117:1;10114;10107:12;10087:34;10140:70;10202:7;10193:6;10182:9;10178:22;10140:70;:::i;:::-;10130:80;;10263:2;10252:9;10248:18;10235:32;10219:48;;10292:2;10282:8;10279:16;10276:36;;;10308:1;10305;10298:12;10276:36;10331:63;10386:7;10375:8;10364:9;10360:24;10331:63;:::i;:::-;10321:73;;10447:2;10436:9;10432:18;10419:32;10403:48;;10476:2;10466:8;10463:16;10460:36;;;10492:1;10489;10482:12;10460:36;10515:63;10570:7;10559:8;10548:9;10544:24;10515:63;:::i;:::-;10505:73;;10631:2;10620:9;10616:18;10603:32;10587:48;;10660:2;10650:8;10647:16;10644:36;;;10676:1;10673;10666:12;10644:36;10699:63;10754:7;10743:8;10732:9;10728:24;10699:63;:::i;:::-;10689:73;;10815:3;10804:9;10800:19;10787:33;10771:49;;10845:2;10835:8;10832:16;10829:36;;;10861:1;10858;10851:12;10829:36;;10884:63;10939:7;10928:8;10917:9;10913:24;10884:63;:::i;10958:1775::-;11276:6;11284;11292;11300;11308;11316;11324;11377:3;11365:9;11356:7;11352:23;11348:33;11345:53;;;11394:1;11391;11384:12;11345:53;11434:9;11421:23;-1:-1:-1;;;;;11504:2:18;11496:6;11493:14;11490:34;;;11520:1;11517;11510:12;11490:34;11543:70;11605:7;11596:6;11585:9;11581:22;11543:70;:::i;:::-;11533:80;;11666:2;11655:9;11651:18;11638:32;11622:48;;11695:2;11685:8;11682:16;11679:36;;;11711:1;11708;11701:12;11679:36;11734:63;11789:7;11778:8;11767:9;11763:24;11734:63;:::i;:::-;11724:73;;11850:2;11839:9;11835:18;11822:32;11806:48;;11879:2;11869:8;11866:16;11863:36;;;11895:1;11892;11885:12;11863:36;11918:63;11973:7;11962:8;11951:9;11947:24;11918:63;:::i;:::-;11908:73;;12034:2;12023:9;12019:18;12006:32;11990:48;;12063:2;12053:8;12050:16;12047:36;;;12079:1;12076;12069:12;12047:36;12102:63;12157:7;12146:8;12135:9;12131:24;12102:63;:::i;:::-;12092:73;;12218:3;12207:9;12203:19;12190:33;12174:49;;12248:2;12238:8;12235:16;12232:36;;;12264:1;12261;12254:12;12232:36;12287:61;12340:7;12329:8;12318:9;12314:24;12287:61;:::i;:::-;12277:71;;12401:3;12390:9;12386:19;12373:33;12357:49;;12431:2;12421:8;12418:16;12415:36;;;12447:1;12444;12437:12;12415:36;12470:62;12524:7;12513:8;12502:9;12498:24;12470:62;:::i;:::-;12460:72;;12585:3;12574:9;12570:19;12557:33;12541:49;;12615:2;12605:8;12602:16;12599:36;;;12631:1;12628;12621:12;12599:36;;12654:73;12719:7;12708:8;12697:9;12693:24;12654:73;:::i;:::-;12644:83;;;10958:1775;;;;;;;;;;:::o;12738:1523::-;13006:6;13014;13022;13030;13038;13046;13099:3;13087:9;13078:7;13074:23;13070:33;13067:53;;;13116:1;13113;13106:12;13067:53;13156:9;13143:23;-1:-1:-1;;;;;13226:2:18;13218:6;13215:14;13212:34;;;13242:1;13239;13232:12;13212:34;13265:70;13327:7;13318:6;13307:9;13303:22;13265:70;:::i;:::-;13255:80;;13388:2;13377:9;13373:18;13360:32;13344:48;;13417:2;13407:8;13404:16;13401:36;;;13433:1;13430;13423:12;13401:36;13456:63;13511:7;13500:8;13489:9;13485:24;13456:63;:::i;:::-;13446:73;;13572:2;13561:9;13557:18;13544:32;13528:48;;13601:2;13591:8;13588:16;13585:36;;;13617:1;13614;13607:12;13585:36;13640:63;13695:7;13684:8;13673:9;13669:24;13640:63;:::i;:::-;13630:73;;13756:2;13745:9;13741:18;13728:32;13712:48;;13785:2;13775:8;13772:16;13769:36;;;13801:1;13798;13791:12;13769:36;13824:63;13879:7;13868:8;13857:9;13853:24;13824:63;:::i;:::-;13814:73;;13940:3;13929:9;13925:19;13912:33;13896:49;;13970:2;13960:8;13957:16;13954:36;;;13986:1;13983;13976:12;13954:36;14009:61;14062:7;14051:8;14040:9;14036:24;14009:61;:::i;:::-;13999:71;;14123:3;14112:9;14108:19;14095:33;14079:49;;14153:2;14143:8;14140:16;14137:36;;;14169:1;14166;14159:12;14137:36;;14192:63;14247:7;14236:8;14225:9;14221:24;14192:63;:::i;:::-;14182:73;;;12738:1523;;;;;;;;:::o;14266:241::-;14322:6;14375:2;14363:9;14354:7;14350:23;14346:32;14343:52;;;14391:1;14388;14381:12;14343:52;14430:9;14417:23;14449:28;14471:5;14449:28;:::i;14512:245::-;14579:6;14632:2;14620:9;14611:7;14607:23;14603:32;14600:52;;;14648:1;14645;14638:12;14600:52;14680:9;14674:16;14699:28;14721:5;14699:28;:::i;14762:184::-;14820:6;14873:2;14861:9;14852:7;14848:23;14844:32;14841:52;;;14889:1;14886;14879:12;14841:52;14912:28;14930:9;14912:28;:::i;14951:180::-;15010:6;15063:2;15051:9;15042:7;15038:23;15034:32;15031:52;;;15079:1;15076;15069:12;15031:52;-1:-1:-1;15102:23:18;;14951:180;-1:-1:-1;14951:180:18:o;15136:247::-;15204:6;15257:2;15245:9;15236:7;15232:23;15228:32;15225:52;;;15273:1;15270;15263:12;15225:52;15305:9;15299:16;15324:29;15347:5;15324:29;:::i;15388:435::-;15441:3;15479:5;15473:12;15506:6;15501:3;15494:19;15532:4;15561:2;15556:3;15552:12;15545:19;;15598:2;15591:5;15587:14;15619:1;15629:169;15643:6;15640:1;15637:13;15629:169;;;15704:13;;15692:26;;15738:12;;;;15773:15;;;;15665:1;15658:9;15629:169;;;-1:-1:-1;15814:3:18;;15388:435;-1:-1:-1;;;;;15388:435:18:o;15828:359::-;16033:2;16029:15;;;;-1:-1:-1;;16025:53:18;16013:66;;16104:2;16095:12;;16088:28;;;;16141:2;16132:12;;16125:28;16178:2;16169:12;;15828:359::o;16192:274::-;16321:3;16359:6;16353:13;16375:53;16421:6;16416:3;16409:4;16401:6;16397:17;16375:53;:::i;:::-;16444:16;;;;;16192:274;-1:-1:-1;;16192:274:18:o;16471:889::-;-1:-1:-1;;;;;16922:15:18;;;16904:34;;16974:15;;16969:2;16954:18;;16947:43;16884:3;17021:2;17006:18;;16999:31;;;16847:4;;17053:57;;17090:19;;17082:6;17053:57;:::i;:::-;17158:9;17150:6;17146:22;17141:2;17130:9;17126:18;17119:50;17192:44;17229:6;17221;17192:44;:::i;:::-;17273:22;;;17267:3;17252:19;;;17245:51;;;;-1:-1:-1;;17320:1:18;17305:17;;17351:2;17339:15;;16471:889;-1:-1:-1;;;;16471:889:18:o;18671:753::-;18983:14;;18976:22;18958:41;;19030:2;19015:18;;19008:34;;;19090:4;19078:17;;;19073:2;19058:18;;19051:45;-1:-1:-1;;;;;;19132:33:18;;19127:2;19112:18;;19105:61;19203:17;;19197:3;19182:19;;19175:46;18945:3;18930:19;;19251:1;19240:13;;19230:144;;19296:10;19291:3;19287:20;19284:1;19277:31;19331:4;19328:1;19321:15;19359:4;19356:1;19349:15;19230:144;19411:6;19405:3;19394:9;19390:19;19383:35;18671:753;;;;;;;;;:::o;19636:383::-;19785:2;19774:9;19767:21;19748:4;19817:6;19811:13;19860:6;19855:2;19844:9;19840:18;19833:34;19876:66;19935:6;19930:2;19919:9;19915:18;19910:2;19902:6;19898:15;19876:66;:::i;:::-;20003:2;19982:15;-1:-1:-1;;19978:29:18;19963:45;;;;20010:2;19959:54;;19636:383;-1:-1:-1;;19636:383:18:o;25059:351::-;25261:2;25243:21;;;25300:2;25280:18;;;25273:30;25339:29;25334:2;25319:18;;25312:57;25401:2;25386:18;;25059:351::o;25415:347::-;25617:2;25599:21;;;25656:2;25636:18;;;25629:30;25695:25;25690:2;25675:18;;25668:53;25753:2;25738:18;;25415:347::o;26119:349::-;26321:2;26303:21;;;26360:2;26340:18;;;26333:30;26399:27;26394:2;26379:18;;26372:55;26459:2;26444:18;;26119:349::o;29703:340::-;29905:2;29887:21;;;29944:2;29924:18;;;29917:30;-1:-1:-1;;;29978:2:18;29963:18;;29956:46;30034:2;30019:18;;29703:340::o;30048:337::-;30250:2;30232:21;;;30289:2;30269:18;;;30262:30;-1:-1:-1;;;30323:2:18;30308:18;;30301:43;30376:2;30361:18;;30048:337::o;31853:340::-;32055:2;32037:21;;;32094:2;32074:18;;;32067:30;-1:-1:-1;;;32128:2:18;32113:18;;32106:46;32184:2;32169:18;;31853:340::o;33843:275::-;33914:2;33908:9;33979:2;33960:13;;-1:-1:-1;;33956:27:18;33944:40;;-1:-1:-1;;;;;33999:34:18;;34035:22;;;33996:62;33993:88;;;34061:18;;:::i;:::-;34097:2;34090:22;33843:275;;-1:-1:-1;33843:275:18:o;34123:183::-;34183:4;-1:-1:-1;;;;;34208:6:18;34205:30;34202:56;;;34238:18;;:::i;:::-;-1:-1:-1;34283:1:18;34279:14;34295:4;34275:25;;34123:183::o;34311:224::-;34350:3;34378:6;34411:2;34408:1;34404:10;34441:2;34438:1;34434:10;34472:3;34468:2;34464:12;34459:3;34456:21;34453:47;;;34480:18;;:::i;:::-;34516:13;;34311:224;-1:-1:-1;;;;34311:224:18:o;34540:128::-;34580:3;34611:1;34607:6;34604:1;34601:13;34598:39;;;34617:18;;:::i;:::-;-1:-1:-1;34653:9:18;;34540:128::o;34673:217::-;34713:1;34739;34729:132;;34783:10;34778:3;34774:20;34771:1;34764:31;34818:4;34815:1;34808:15;34846:4;34843:1;34836:15;34729:132;-1:-1:-1;34875:9:18;;34673:217::o;34895:422::-;34984:1;35027:5;34984:1;35041:270;35062:7;35052:8;35049:21;35041:270;;;35121:4;35117:1;35113:6;35109:17;35103:4;35100:27;35097:53;;;35130:18;;:::i;:::-;35180:7;35170:8;35166:22;35163:55;;;35200:16;;;;35163:55;35279:22;;;;35239:15;;;;35041:270;;;35045:3;34895:422;;;;;:::o;35322:131::-;35382:5;35411:36;35438:8;35432:4;35507:5;35537:8;35527:80;;-1:-1:-1;35578:1:18;35592:5;;35527:80;35626:4;35616:76;;-1:-1:-1;35663:1:18;35677:5;;35616:76;35708:4;35726:1;35721:59;;;;35794:1;35789:130;;;;35701:218;;35721:59;35751:1;35742:10;;35765:5;;;35789:130;35826:3;35816:8;35813:17;35810:43;;;35833:18;;:::i;:::-;-1:-1:-1;;35889:1:18;35875:16;;35904:5;;35701:218;;36003:2;35993:8;35990:16;35984:3;35978:4;35975:13;35971:36;35965:2;35955:8;35952:16;35947:2;35941:4;35938:12;35934:35;35931:77;35928:159;;;-1:-1:-1;36040:19:18;;;36072:5;;35928:159;36119:34;36144:8;36138:4;36119:34;:::i;:::-;36189:6;36185:1;36181:6;36177:19;36168:7;36165:32;36162:58;;;36200:18;;:::i;:::-;36238:20;;35458:806;-1:-1:-1;;;35458:806:18:o;36269:168::-;36309:7;36375:1;36371;36367:6;36363:14;36360:1;36357:21;36352:1;36345:9;36338:17;36334:45;36331:71;;;36382:18;;:::i;:::-;-1:-1:-1;36422:9:18;;36269:168::o;36442:217::-;36481:4;36510:6;36566:10;;;;36536;;36588:12;;;36585:38;;;36603:18;;:::i;:::-;36640:13;;36442:217;-1:-1:-1;;;36442:217:18:o;36664:125::-;36704:4;36732:1;36729;36726:8;36723:34;;;36737:18;;:::i;:::-;-1:-1:-1;36774:9:18;;36664:125::o;36794:258::-;36866:1;36876:113;36890:6;36887:1;36884:13;36876:113;;;36966:11;;;36960:18;36947:11;;;36940:39;36912:2;36905:10;36876:113;;;37007:6;37004:1;37001:13;36998:48;;;-1:-1:-1;;37042:1:18;37024:16;;37017:27;36794:258::o;37057:135::-;37096:3;-1:-1:-1;;37117:17:18;;37114:43;;;37137:18;;:::i;:::-;-1:-1:-1;37184:1:18;37173:13;;37057:135::o;37197:127::-;37258:10;37253:3;37249:20;37246:1;37239:31;37289:4;37286:1;37279:15;37313:4;37310:1;37303:15;37329:127;37390:10;37385:3;37381:20;37378:1;37371:31;37421:4;37418:1;37411:15;37445:4;37442:1;37435:15;37461:127;37522:10;37517:3;37513:20;37510:1;37503:31;37553:4;37550:1;37543:15;37577:4;37574:1;37567:15;37593:127;37654:10;37649:3;37645:20;37642:1;37635:31;37685:4;37682:1;37675:15;37709:4;37706:1;37699:15;37725:131;-1:-1:-1;;;;;37800:31:18;;37790:42;;37780:70;;37846:1;37843;37836:12;37861:118;37947:5;37940:13;37933:21;37926:5;37923:32;37913:60;;37969:1;37966;37959:12;37984:114;38068:4;38061:5;38057:16;38050:5;38047:27;38037:55;;38088:1;38085;38078:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    2113,
    27980
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76774EA3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9C40183 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC9C40183 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xCBE55E54 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xFE46B7CD EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x76774EA3 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x937821A1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xBF2B23EA EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C31F710 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1C31F710 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x1CBB410F EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x296C21B7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x14B5685C EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x193 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x43AA JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0x409E JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x3EF6 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x4370 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2C JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x4162 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP9 DUP10 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x20 DUP9 ADD MSTORE SWAP5 DUP8 AND SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x118 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x43C5 JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x409E JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E49 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFE JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x14D PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x427C JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F61 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x394 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FC9 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x124 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x400 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A PUSH2 0x7CB PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xE9E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH2 0x512 PUSH2 0xFD3 PUSH2 0x445 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1578 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x57A PUSH2 0x48DE JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL DUP2 DIV PUSH1 0xE0 SHL SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xE0 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D4 PUSH2 0x48DE JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP SWAP4 SWAP8 SWAP1 SWAP5 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x61B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A66656520657863656564732031303070637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x694 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x16A8 PUSH2 0x445 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH2 0x708 PUSH2 0x1AA9 PUSH2 0x445 DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x702 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH2 0xD18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x4639 JUMP JUMPDEST PUSH2 0x745 PUSH2 0x1E76 PUSH2 0x445 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x25CF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x76A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP10 PUSH1 0x1 PUSH1 0xC8 SHL DUP3 DIV PUSH2 0xFFFF AND SWAP10 POP PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH1 0xFF AND SWAP9 POP PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x7F6 JUMPI PUSH2 0x7F6 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x833 JUMPI PUSH2 0x833 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x84D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x881 JUMPI PUSH2 0x881 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH2 0x89F PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x8BE JUMPI PUSH2 0x8BE PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x9D9 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x942 PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9C0 JUMPI PUSH2 0x9C0 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9D1 JUMPI PUSH2 0x9D1 PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xA30 SWAP1 CALLER TIMESTAMP PUSH2 0x2774 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA46 JUMPI PUSH2 0xA46 PUSH2 0x48DE JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xA5C JUMPI PUSH2 0xA5C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA75 PUSH2 0x48DE JUMP JUMPDEST EQ PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x456A JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB0F SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x486A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP5 SLOAD SWAP2 SWAP3 POP PUSH2 0xC30 SWAP2 DUP6 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB3B JUMPI PUSH2 0xB3B PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBCA PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBDB JUMPI PUSH2 0xBDB PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH2 0x2824 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP4 DIV DUP4 AND SWAP3 PUSH1 0x1C SWAP2 PUSH2 0xC66 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV AND PUSH2 0x46DD JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH2 0x100 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xCDA SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0xD0C DUP2 PUSH2 0x48AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD20 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD65 JUMPI PUSH2 0xD65 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD8E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDBF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDF0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE60 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE91 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 ADD MLOAD MLOAD GT PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x52654E46543A3A6E6F206E667473 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD MLOAD DUP2 PUSH1 0x20 ADD MLOAD EQ PUSH2 0xFC6 JUMPI DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF0E JUMPI PUSH2 0xF0E PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x60 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF39 JUMPI PUSH2 0xF39 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xF89 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0xF6E JUMPI PUSH2 0xF6E PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF87 JUMPI PUSH2 0xF87 PUSH2 0x48DE JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0xFA6 JUMPI PUSH1 0x20 DUP2 ADD DUP1 MLOAD SWAP1 PUSH2 0xF9E DUP3 PUSH2 0x48AD JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xFB3 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 PUSH2 0xF9E DUP3 PUSH2 0x48AD JUMP JUMPDEST PUSH2 0xD14 DUP2 DUP4 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x1537 JUMPI PUSH2 0xFEC DUP3 DUP3 PUSH2 0x2AB6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1008 JUMPI PUSH2 0x1008 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1026 JUMPI PUSH2 0x1026 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1043 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 PUSH1 0xE0 DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 SLOAD SWAP1 SWAP4 POP SWAP1 SWAP2 PUSH2 0x113B SWAP2 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1093 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A4 PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1122 JUMPI PUSH2 0x1122 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1133 JUMPI PUSH2 0x1133 PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE POP PUSH2 0x2C2C JUMP JUMPDEST PUSH2 0x1173 DUP5 PUSH2 0x180 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1155 JUMPI PUSH2 0x1155 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x116E JUMPI PUSH2 0x116E PUSH2 0x48DE JUMP JUMPDEST PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x118C JUMPI PUSH2 0x118C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x48DE JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x11C9 JUMPI PUSH2 0x11C9 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E2 PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xC0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x120C JUMPI PUSH2 0x120C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xE0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1232 JUMPI PUSH2 0x1232 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0x1271 JUMPI DUP7 PUSH1 0xA0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1264 JUMPI PUSH2 0x1264 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1274 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0x12A4 JUMPI DUP7 PUSH1 0xA0 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH2 0x180 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x12CA JUMPI PUSH2 0x12CA PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E3 PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0x1310 JUMPI PUSH2 0x1310 PUSH2 0x48DE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 SLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP5 AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0xA8 SHL PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH6 0xFFFFFFFFFFFF PUSH1 0xB0 SHL NOT AND PUSH1 0x1 PUSH1 0xB0 SHL PUSH1 0xE0 SWAP3 SWAP1 SWAP3 SHR SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0xD0 SHL NOT AND OR PUSH1 0x1 PUSH1 0xD0 SHL PUSH2 0xFFFF SWAP4 DUP5 AND MUL OR PUSH2 0xFFFF PUSH1 0xE0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL SWAP1 DUP2 OR DUP4 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 DUP4 SWAP2 PUSH3 0xFFFFFF PUSH1 0xE0 SHL NOT SWAP1 SWAP2 AND PUSH1 0xFF PUSH1 0xF0 SHL NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xF0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13EC JUMPI PUSH2 0x13EC PUSH2 0x48DE JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x140A JUMPI PUSH2 0x140A PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x142C JUMPI PUSH2 0x142C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x46E173C7568BB4F093E16923381DCBA2A6B48F9CC9E688867965731218500AD3 DUP5 PUSH1 0x3 SLOAD DUP11 PUSH1 0xC0 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x1482 JUMPI PUSH2 0x1482 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 PUSH1 0xE0 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x14A0 JUMPI PUSH2 0x14A0 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH2 0x14D0 JUMPI DUP13 PUSH1 0xA0 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x14C3 JUMPI PUSH2 0x14C3 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP14 PUSH2 0x180 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x14EA JUMPI PUSH2 0x14EA PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1504 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x151C DUP4 PUSH2 0x48AD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x152F SWAP1 PUSH2 0x48AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFD6 JUMP JUMPDEST POP PUSH2 0x1575 DUP2 CALLER ADDRESS PUSH2 0x1557 DUP6 PUSH1 0x80 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x1570 DUP7 PUSH1 0xA0 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x2DF7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D7 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1600 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1631 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1662 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1693 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16F1 JUMPI PUSH2 0x16F1 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1710 JUMPI PUSH2 0x1710 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x172A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x175E JUMPI PUSH2 0x175E PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x120 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x179B JUMPI PUSH2 0x179B PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x180E SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1863 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x18B9 SWAP1 TIMESTAMP PUSH2 0x2FFE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x19D7 SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E3 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x18F4 JUMPI PUSH2 0x18F4 PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1972 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1983 JUMPI PUSH2 0x1983 PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3054 JUMP JUMPDEST DUP6 PUSH2 0x100 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19EE JUMPI PUSH2 0x19EE PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1A31 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SLOAD DUP3 SLOAD PUSH2 0x1A5C SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV AND PUSH2 0x46DD JUMP JUMPDEST DUP3 SLOAD PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH2 0xFFFF PUSH1 0xE0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND SWAP1 SSTORE POP DUP1 PUSH2 0x1AA1 DUP2 PUSH2 0x48AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16AB JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1ABC SWAP2 PUSH2 0x486A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD3 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AFC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1B2E JUMPI PUSH2 0x1B2E PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B4C JUMPI PUSH2 0x1B4C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1B6B JUMPI PUSH2 0x1B6B PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B85 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH2 0x1BC3 PUSH2 0x48DE JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1BD9 JUMPI PUSH2 0x1BD9 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1BF2 JUMPI PUSH2 0x1BF2 PUSH2 0x48DE JUMP JUMPDEST EQ PUSH2 0x1C0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x456A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV AND EQ PUSH2 0x1C6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995391950E8E9858DD1A5D995B1E481C995B9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH2 0x1C97 SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH2 0x1D6A SWAP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC1 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD2 PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D50 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D61 PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE POP CALLER PUSH2 0x31F3 JUMP JUMPDEST DUP1 SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 DUP7 SWAP1 PUSH2 0x1D87 SWAP1 DUP7 PUSH2 0x486A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D97 JUMPI PUSH2 0x1D97 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 SLOAD PUSH2 0x100 DUP8 ADD MLOAD DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP6 POP SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1DC4 JUMPI PUSH2 0x1DC4 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0xD0234BC8DD7E933F60CBC1E90FC139A8A9683AF1CB92743607DAFB9DFB70059B TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1E07 SWAP2 SWAP1 PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x1E36 DUP2 PUSH2 0x48AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B06 JUMP JUMPDEST POP PUSH2 0x1E71 DUP4 ADDRESS CALLER PUSH2 0x1E5E DUP8 PUSH1 0x80 ADD MLOAD DUP9 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH2 0x2D38 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x1570 SWAP2 DUP10 SWAP2 DUP2 PUSH2 0x2D38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1EA1 JUMPI PUSH2 0x1EA1 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1EBF JUMPI PUSH2 0x1EBF PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x100 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1EDE JUMPI PUSH2 0x1EDE PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x1F2C JUMPI PUSH2 0x1F2C PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1F4A JUMPI PUSH2 0x1F4A PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F67 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 DUP4 MSTORE DUP4 DUP2 KECCAK256 DUP3 DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP4 SWAP1 KECCAK256 PUSH1 0xE0 DUP6 ADD SWAP1 SWAP4 MSTORE DUP2 SLOAD SWAP1 SWAP5 POP SWAP1 SWAP3 PUSH2 0x1FC0 SWAP2 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x931 JUMPI PUSH2 0x931 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0xFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x2015 SWAP1 PUSH2 0x324C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH2 0x20EA SWAP2 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x203F JUMPI PUSH2 0x203F PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2050 JUMPI PUSH2 0x2050 PUSH2 0x48DE JUMP JUMPDEST DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 DUP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP3 DIV DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x1 PUSH1 0xB0 SHL DUP4 DIV PUSH1 0xE0 SHL AND PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xD0 SHL DUP4 DIV DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 DIV AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20CE JUMPI PUSH2 0x20CE PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20DF JUMPI PUSH2 0x20DF PUSH2 0x48DE JUMP JUMPDEST SWAP1 MSTORE POP DUP8 DUP8 CALLER PUSH2 0x32FF JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2100 JUMPI PUSH2 0x2100 PUSH2 0x48DE JUMP JUMPDEST DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2116 JUMPI PUSH2 0x2116 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x212F JUMPI PUSH2 0x212F PUSH2 0x48DE JUMP JUMPDEST EQ PUSH2 0x214C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x456A JUMP JUMPDEST DUP2 SLOAD PUSH2 0x160 DUP8 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x2173 JUMPI PUSH2 0x2173 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x21C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E9 PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x226D SWAP2 SWAP1 PUSH2 0x3E0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22E2 SWAP2 SWAP1 PUSH2 0x43DE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x22F4 DUP3 PUSH1 0xA PUSH2 0x4780 JUMP JUMPDEST DUP7 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2310 SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xE0 SHL DUP4 PUSH2 0x3473 JUMP JUMPDEST DUP12 PUSH2 0x140 ADD MLOAD DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x2327 JUMPI PUSH2 0x2327 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH2 0x233C SWAP2 SWAP1 PUSH2 0x4828 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x235E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x2373 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER ADDRESS DUP5 PUSH2 0x3502 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x140 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x23A6 JUMPI PUSH2 0x23A6 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x160 ADD MLOAD DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x23D9 JUMPI PUSH2 0x23D9 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0xFF SWAP1 DUP2 AND SWAP1 SWAP3 MSTORE PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP4 DUP7 ADD MLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0xC8 SHL MUL PUSH2 0xFFFF PUSH1 0xC8 SHL NOT PUSH4 0xFFFFFFFF SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP7 SWAP1 SWAP7 AND PUSH6 0xFFFFFFFFFFFF PUSH1 0xA8 SHL NOT SWAP4 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR SWAP3 SWAP1 SWAP3 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x160 DUP10 ADD MLOAD DUP1 MLOAD DUP10 SWAP1 DUP2 LT PUSH2 0x2485 JUMPI PUSH2 0x2485 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND PUSH1 0x7 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x24C2 SWAP2 SWAP1 PUSH2 0x4847 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 SLOAD DUP10 PUSH2 0x100 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x24F6 JUMPI PUSH2 0x24F6 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631 DUP13 PUSH2 0x160 ADD MLOAD DUP13 DUP2 MLOAD DUP2 LT PUSH2 0x2540 JUMPI PUSH2 0x2540 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP14 PUSH2 0x140 ADD MLOAD DUP14 DUP2 MLOAD DUP2 LT PUSH2 0x255F JUMPI PUSH2 0x255F PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x25B0 DUP4 PUSH2 0x48AD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP POP DUP1 DUP1 PUSH2 0x25C7 SWAP1 PUSH2 0x48AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E79 JUMP JUMPDEST PUSH2 0x25D7 PUSH2 0x3A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x261C JUMPI PUSH2 0x261C PUSH2 0x490A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2645 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2676 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP10 ADD DUP4 MSTORE DUP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 MLOAD SWAP5 DUP6 MSTORE SWAP5 DUP5 ADD SWAP1 SWAP3 MSTORE POP PUSH1 0xA0 SWAP1 SWAP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x26FE DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x356D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A6475726174696F6E207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103932B73A32B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x27D7 DUP4 DUP3 PUSH2 0x35B9 JUMP JUMPDEST ISZERO PUSH2 0x1E71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A706173742072657475726E2064617465000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0xC0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x283C JUMPI PUSH2 0x283C PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x289C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28C0 SWAP2 SWAP1 PUSH2 0x3E0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x43DE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x2947 DUP3 PUSH1 0xA PUSH2 0x4780 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2959 DUP9 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x3473 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 PUSH2 0x2970 SWAP2 SWAP1 PUSH2 0x4828 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x15180 PUSH2 0x2982 DUP5 DUP11 PUSH2 0x4828 JUMP JUMPDEST PUSH2 0x298C SWAP2 SWAP1 PUSH2 0x471B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x29EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65726F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2A3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A46 DUP3 DUP5 PUSH2 0x486A JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x2A72 JUMPI PUSH1 0x0 PUSH2 0x2A62 DUP4 DUP14 PUSH1 0xC0 ADD MLOAD PUSH2 0x3647 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A6E DUP2 DUP5 PUSH2 0x486A JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x20 DUP12 ADD MLOAD PUSH2 0x2A8C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP5 PUSH2 0x3724 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA9 JUMPI DUP10 MLOAD PUSH2 0x2AA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP4 PUSH2 0x3724 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2ACE JUMPI PUSH2 0x2ACE PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x2B23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP3 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B3D JUMPI PUSH2 0x2B3D PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0x2B63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x460F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B7B JUMPI PUSH2 0x2B7B PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x2BA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45A1 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP3 PUSH1 0xC0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BBD JUMPI PUSH2 0x2BBD PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x2BE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x460F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BFE JUMPI PUSH2 0x2BFE PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xE0 SHR PUSH4 0xFFFFFFFF AND GT PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45D8 JUMP JUMPDEST PUSH2 0x2C39 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x3754 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND ISZERO PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND GT PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2D44 DUP5 DUP5 PUSH2 0x486A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D5B JUMPI PUSH2 0x2D5B PUSH2 0x490A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2D84 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DEE JUMPI DUP6 PUSH2 0x2D9C DUP5 DUP4 PUSH2 0x486A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2DAC JUMPI PUSH2 0x2DAC PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP7 DUP4 PUSH2 0x2DC1 SWAP2 SWAP1 PUSH2 0x486A JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2DD1 JUMPI PUSH2 0x2DD1 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x2DE6 DUP2 PUSH2 0x48AD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D89 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP7 ADD MLOAD DUP7 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E10 JUMPI PUSH2 0x2E10 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2E29 JUMPI PUSH2 0x2E29 PUSH2 0x48DE JUMP JUMPDEST EQ ISZERO PUSH2 0x2EEF JUMPI PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E46 JUMPI PUSH2 0x2E46 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD DUP6 DUP6 DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2E78 JUMPI PUSH2 0x2E78 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x44A JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD DUP6 MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x2F06 JUMPI PUSH2 0x2F06 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2EB2C2D6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x447C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2F83 SWAP1 PUSH2 0x356D JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND PUSH2 0x2FA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45A1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x3008 DUP3 DUP3 PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xC0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x306C JUMPI PUSH2 0x306C PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30F0 SWAP2 SWAP1 PUSH2 0x3E0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x312D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3141 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3165 SWAP2 SWAP1 PUSH2 0x43DE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x3177 DUP3 PUSH1 0xA PUSH2 0x4780 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3189 DUP8 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x3473 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP3 PUSH2 0x31A0 SWAP2 SWAP1 PUSH2 0x4828 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ PUSH2 0x31CF JUMPI PUSH2 0x31CC DUP3 DUP9 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31C7 JUMPI PUSH2 0x31C7 PUSH2 0x48DE JUMP JUMPDEST PUSH2 0x3647 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0x2F6D SWAP1 PUSH2 0x31E2 DUP4 DUP6 PUSH2 0x486A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 PUSH2 0x3724 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2932A7232A1D1D3737BA103632B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3257 SWAP1 PUSH2 0x3754 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xFF AND ISZERO PUSH2 0x32A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x52654E46543A3A6475726174696F6E206E6F74207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xFF DUP1 AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3380 JUMPI PUSH2 0x3380 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x33A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x460F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x33C2 JUMPI PUSH2 0x33C2 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT PUSH2 0x33EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0x45A1 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP4 PUSH2 0x140 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3409 JUMPI PUSH2 0x3409 PUSH2 0x48F4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDEEECAC840DAC2F PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347F DUP4 DUP4 PUSH2 0x37AB JUMP JUMPDEST PUSH1 0xF0 DUP4 SWAP1 SHR PUSH2 0xFFFF PUSH1 0xE0 DUP6 SWAP1 SHR AND PUSH1 0x0 PUSH2 0x349B PUSH2 0x2710 DUP7 PUSH2 0x471B JUMP JUMPDEST SWAP1 POP PUSH2 0x270F DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x34B1 JUMPI PUSH2 0x270F SWAP3 POP JUMPDEST PUSH2 0x270F DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x34C5 JUMPI PUSH2 0x270F SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x34D5 DUP7 PUSH2 0xFFFF DUP7 AND PUSH2 0x4828 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34E7 DUP4 PUSH2 0xFFFF DUP7 AND PUSH2 0x4828 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34F5 DUP3 DUP5 PUSH2 0x4703 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x708 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x383C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x52654E46543A3A7A65726F2061646472657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP3 GT PUSH2 0x3614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH3 0x15180 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH2 0x362A SWAP2 SWAP1 PUSH2 0x4828 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x363F SWAP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0x486A JUMP JUMPDEST GT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x3657 SWAP2 SWAP1 PUSH2 0x4828 JUMP JUMPDEST SWAP1 POP PUSH2 0x3665 PUSH2 0x2710 DUP3 PUSH2 0x471B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x367B JUMPI PUSH2 0x367B PUSH2 0x48DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC6EE427F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC6EE427F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x36C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36FF SWAP2 SWAP1 PUSH2 0x3E0F JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x371C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP2 AND DUP6 PUSH2 0x3724 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1E71 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x3536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0xE0 DUP3 SWAP1 SHR PUSH2 0x37F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207072696365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x52654E46543A3A696E76616C6964207363616C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3891 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x390E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1E71 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x38AF SWAP2 SWAP1 PUSH2 0x438D JUMP JUMPDEST PUSH2 0x1E71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x391D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3927 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x3988 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x429 JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x39D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x429 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x39F2 SWAP2 SWAP1 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3A2F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3A34 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3A44 DUP3 DUP3 DUP7 PUSH2 0x3A4F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3A5E JUMPI POP DUP2 PUSH2 0x3920 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3A6E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x4537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3B16 PUSH2 0x3B11 DUP4 PUSH2 0x46BA JUMP JUMPDEST PUSH2 0x468A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3B36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B5E JUMPI DUP2 CALLDATALOAD PUSH2 0x3B4C DUP2 PUSH2 0x4920 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3B39 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3B8C PUSH2 0x3B11 DUP4 PUSH2 0x46BA JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3BAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B5E JUMPI PUSH2 0x3BC0 DUP3 PUSH2 0x3D83 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3BAF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3BF3 PUSH2 0x3B11 DUP4 PUSH2 0x46BA JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3C13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3C3F JUMPI DUP3 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x3C2D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3C17 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3C6E PUSH2 0x3B11 DUP4 PUSH2 0x46BA JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x3C3F JUMPI DUP3 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x3CA8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3C92 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3CDB PUSH2 0x3B11 DUP4 PUSH2 0x46BA JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B5E JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3CFE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3D3B PUSH2 0x3B11 DUP4 PUSH2 0x46BA JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x3D5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3B5E JUMPI DUP2 CALLDATALOAD PUSH2 0x3D71 DUP2 PUSH2 0x4943 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D5E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3D9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3DCA JUMPI PUSH2 0x3DCA PUSH2 0x490A JUMP JUMPDEST PUSH2 0x3DDD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x468A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3DF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3920 DUP2 PUSH2 0x4920 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3920 DUP2 PUSH2 0x4920 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3E61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x3E6C DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3E7C DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EA4 DUP10 DUP4 DUP11 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3EBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EC6 DUP10 DUP4 DUP11 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3EDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE9 DUP9 DUP3 DUP10 ADD PUSH2 0x3DA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3F0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x3F17 DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x3F27 DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F55 DUP8 DUP3 DUP9 ADD PUSH2 0x3DA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x3F84 DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3F94 DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EE9 DUP9 DUP3 DUP10 ADD PUSH2 0x3DA0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3FE9 DUP2 PUSH2 0x4920 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x402B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4037 DUP9 DUP4 DUP10 ADD PUSH2 0x3BD2 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x404D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4059 DUP9 DUP4 DUP10 ADD PUSH2 0x3AF0 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x406F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x407B DUP9 DUP4 DUP10 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4091 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F55 DUP8 DUP3 DUP9 ADD PUSH2 0x3CBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x40B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x40CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40D9 DUP10 DUP4 DUP11 ADD PUSH2 0x3BD2 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x40EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40FB DUP10 DUP4 DUP11 ADD PUSH2 0x3AF0 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4111 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x411D DUP10 DUP4 DUP11 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x413F DUP10 DUP4 DUP11 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE9 DUP9 DUP3 DUP10 ADD PUSH2 0x3CBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x417D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41A0 DUP12 DUP4 DUP13 ADD PUSH2 0x3BD2 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x41B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41C2 DUP12 DUP4 DUP13 ADD PUSH2 0x3AF0 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x41D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E4 DUP12 DUP4 DUP13 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x41FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4206 DUP12 DUP4 DUP13 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x421C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4228 DUP12 DUP4 DUP13 ADD PUSH2 0x3D1A JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x423E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x424A DUP12 DUP4 DUP13 ADD PUSH2 0x3B6B JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426D DUP11 DUP3 DUP12 ADD PUSH2 0x3C4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x4295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x42AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42B8 DUP11 DUP4 DUP12 ADD PUSH2 0x3BD2 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x42CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42DA DUP11 DUP4 DUP12 ADD PUSH2 0x3AF0 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x42F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42FC DUP11 DUP4 DUP12 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x431E DUP11 DUP4 DUP12 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4340 DUP11 DUP4 DUP12 ADD PUSH2 0x3D1A JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4363 DUP10 DUP3 DUP11 ADD PUSH2 0x3CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3920 DUP2 PUSH2 0x4935 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x439F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3920 DUP2 PUSH2 0x4935 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3920 DUP3 PUSH2 0x3D83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3920 DUP2 PUSH2 0x4943 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x442B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x440F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP4 MSTORE PUSH1 0x14 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4472 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4881 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x44A8 SWAP1 DUP4 ADD DUP6 PUSH2 0x43FB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x44BA DUP2 DUP6 PUSH2 0x43FB JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP7 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xFF DUP6 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x60 DUP4 ADD MSTORE DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x4526 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4556 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4881 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0xA4CA9C8CA87474DCDEE840EAD2DCE87 PUSH1 0x83 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x14995391950E8E9C185D5CD959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2932A7232A1D1D3737BA1030B236B4B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x46B2 JUMPI PUSH2 0x46B2 PUSH2 0x490A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x46D3 JUMPI PUSH2 0x46D3 PUSH2 0x490A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x46FA JUMPI PUSH2 0x46FA PUSH2 0x48C8 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4716 JUMPI PUSH2 0x4716 PUSH2 0x48C8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4738 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4778 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x475E JUMPI PUSH2 0x475E PUSH2 0x48C8 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x476B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x4742 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3920 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x4796 JUMPI POP PUSH1 0x1 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH2 0x47A3 JUMPI POP PUSH1 0x0 PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x47B9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x47C3 JUMPI PUSH2 0x47DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x400 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x47D4 JUMPI PUSH2 0x47D4 PUSH2 0x48C8 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x400 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4802 JUMPI POP DUP2 DUP2 EXP PUSH2 0x400 JUMP JUMPDEST PUSH2 0x480C DUP4 DUP4 PUSH2 0x473D JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4820 JUMPI PUSH2 0x4820 PUSH2 0x48C8 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4842 JUMPI PUSH2 0x4842 PUSH2 0x48C8 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x4862 JUMPI PUSH2 0x4862 PUSH2 0x48C8 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x487C JUMPI PUSH2 0x487C PUSH2 0x48C8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x489C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4884 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x708 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x48C1 JUMPI PUSH2 0x48C1 PUSH2 0x48C8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1575 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH2 0x644C 0xC9 PUSH15 0xB97C0E638B3C2A113476B9D8F764B5 NOT PUSH14 0xB7330B5999AD0E7B6B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "8": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "LT",
      "path": "15"
    },
    "9": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF3"
    },
    "12": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "CALLDATALOAD",
      "path": "15"
    },
    "16": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "SHR",
      "path": "15"
    },
    "19": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "20": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x76774EA3"
    },
    "25": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "GT",
      "path": "15"
    },
    "26": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8A"
    },
    "29": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "30": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "31": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC9C40183"
    },
    "36": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "GT",
      "path": "15"
    },
    "37": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x59"
    },
    "40": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "41": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "42": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC9C40183"
    },
    "47": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "48": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x315"
    },
    "51": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "52": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "53": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xCBE55E54"
    },
    "58": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "59": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x335"
    },
    "62": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "63": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "64": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xF23A6E61"
    },
    "69": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "70": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x348"
    },
    "73": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "74": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "75": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFE46B7CD"
    },
    "80": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "81": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x374"
    },
    "84": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "85": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "88": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "REVERT",
      "path": "15"
    },
    "89": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "90": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "91": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x76774EA3"
    },
    "96": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "97": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x285"
    },
    "100": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "101": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "102": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x937821A1"
    },
    "107": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "108": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A5"
    },
    "111": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "112": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "113": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBC197C81"
    },
    "118": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "119": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C5"
    },
    "122": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "123": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "124": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xBF2B23EA"
    },
    "129": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "130": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F1"
    },
    "133": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "134": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "137": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "REVERT",
      "path": "15"
    },
    "138": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "139": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "140": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1C31F710"
    },
    "145": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "GT",
      "path": "15"
    },
    "146": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "150": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "151": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1C31F710"
    },
    "156": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "157": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B3"
    },
    "160": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "161": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "162": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1CBB410F"
    },
    "167": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "168": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D3"
    },
    "171": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "172": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "173": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x296C21B7"
    },
    "178": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "179": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F3"
    },
    "182": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "183": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "184": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x5C975ABB"
    },
    "189": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "190": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26B"
    },
    "193": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "194": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "197": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "REVERT",
      "path": "15"
    },
    "198": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "199": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "200": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x1FFC9A7"
    },
    "205": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "206": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF8"
    },
    "209": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "210": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "211": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x14B5685C"
    },
    "216": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "217": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12D"
    },
    "220": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "221": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "222": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x150B7A02"
    },
    "227": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "228": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14F"
    },
    "231": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "232": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "233": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x16C38B3C"
    },
    "238": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "EQ",
      "path": "15"
    },
    "239": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x193"
    },
    "242": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "243": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "244": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "246": {
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "DUP1",
      "path": "15"
    },
    "247": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2113,
        27980
      ],
      "op": "REVERT",
      "path": "15"
    },
    "248": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "249": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "250": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "252": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "255": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "258": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "259": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "REVERT",
      "path": "3"
    },
    "260": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118"
    },
    "265": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x113"
    },
    "268": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "269": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "271": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43AA"
    },
    "274": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "275": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "276": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CF"
    },
    "279": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "i",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "280": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "281": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "283": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "DUP2"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "297": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "298": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SUB",
      "path": "3"
    },
    "299": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "300": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "RETURN",
      "path": "3"
    },
    "301": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "302": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "303": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "DUP1",
      "path": "15"
    },
    "304": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "305": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x139"
    },
    "308": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "309": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "311": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "DUP1",
      "path": "15"
    },
    "312": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "REVERT",
      "path": "15"
    },
    "313": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "314": {
      "op": "POP"
    },
    "315": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "318": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x148"
    },
    "321": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "322": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "324": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x409E"
    },
    "327": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "328": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "329": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x406"
    },
    "332": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "333": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "334": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "STOP",
      "path": "15"
    },
    "335": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "336": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "337": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "338": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "339": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15B"
    },
    "342": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "343": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "346": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "REVERT",
      "path": "10"
    },
    "347": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "348": {
      "op": "POP"
    },
    "349": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17A"
    },
    "352": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "355": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "356": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "358": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3EF6"
    },
    "361": {
      "fn": "ERC721Holder.onERC721Received",
      "jump": "i",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "10"
    },
    "362": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "363": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "372": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "373": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "374": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "375": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "376": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "POP",
      "path": "10"
    },
    "377": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMP",
      "path": "10"
    },
    "378": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "379": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "381": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "388": {
      "op": "SHL"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "op": "NOT"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC721Holder.onERC721Received",
      "offset": [
        517,
        717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "404": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "405": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "DUP1",
      "path": "15"
    },
    "406": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "407": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19F"
    },
    "410": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "411": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "413": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "DUP1",
      "path": "15"
    },
    "414": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "REVERT",
      "path": "15"
    },
    "415": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "416": {
      "op": "POP"
    },
    "417": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "420": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AE"
    },
    "423": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "424": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "426": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4370"
    },
    "429": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "430": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "431": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x451"
    },
    "434": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "435": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "436": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "437": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "DUP1",
      "path": "15"
    },
    "438": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "439": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BF"
    },
    "442": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "443": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "445": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "DUP1",
      "path": "15"
    },
    "446": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "REVERT",
      "path": "15"
    },
    "447": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "452": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CE"
    },
    "455": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "456": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "458": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E2C"
    },
    "461": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMP",
      "path": "15"
    },
    "462": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "463": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48E"
    },
    "466": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMP",
      "path": "15"
    },
    "467": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "468": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "469": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "470": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "471": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DF"
    },
    "474": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "475": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "477": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "DUP1",
      "path": "15"
    },
    "478": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "REVERT",
      "path": "15"
    },
    "479": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "480": {
      "op": "POP"
    },
    "481": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "484": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EE"
    },
    "487": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "488": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "490": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4162"
    },
    "493": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "494": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "495": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4DA"
    },
    "498": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "499": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "500": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "501": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "DUP1",
      "path": "15"
    },
    "502": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "503": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FF"
    },
    "506": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "507": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "509": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "DUP1",
      "path": "15"
    },
    "510": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "REVERT",
      "path": "15"
    },
    "511": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "512": {
      "op": "POP"
    },
    "513": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x213"
    },
    "516": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20E"
    },
    "519": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "520": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "522": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FC9"
    },
    "525": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMP",
      "path": "15"
    },
    "526": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "527": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x51B"
    },
    "530": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMP",
      "path": "15"
    },
    "531": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "532": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "534": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "DUP1",
      "path": "15"
    },
    "535": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "538": {
      "op": "SWAP9"
    },
    "539": {
      "op": "DUP10"
    },
    "540": {
      "op": "AND"
    },
    "541": {
      "op": "DUP2"
    },
    "542": {
      "op": "MSTORE"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "op": "SWAP1"
    },
    "552": {
      "op": "SWAP8"
    },
    "553": {
      "op": "AND"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "556": {
      "op": "DUP9"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "MSTORE"
    },
    "559": {
      "op": "SWAP5"
    },
    "560": {
      "op": "DUP8"
    },
    "561": {
      "op": "AND"
    },
    "562": {
      "op": "SWAP5"
    },
    "563": {
      "op": "DUP7"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "op": "SWAP5"
    },
    "566": {
      "op": "SWAP1"
    },
    "567": {
      "op": "SWAP5"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "op": "NOT"
    },
    "578": {
      "op": "SWAP1"
    },
    "579": {
      "op": "SWAP3"
    },
    "580": {
      "op": "AND"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "583": {
      "op": "DUP6"
    },
    "584": {
      "op": "ADD"
    },
    "585": {
      "op": "MSTORE"
    },
    "586": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "589": {
      "op": "SWAP1"
    },
    "590": {
      "op": "DUP2"
    },
    "591": {
      "op": "AND"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "594": {
      "op": "DUP6"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "MSTORE"
    },
    "597": {
      "op": "AND"
    },
    "598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "600": {
      "op": "DUP4"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "SWAP2"
    },
    "604": {
      "op": "SWAP1"
    },
    "605": {
      "op": "SWAP2"
    },
    "606": {
      "op": "AND"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "614": {
      "op": "ADD"
    },
    "615": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "618": {
      "op": "JUMP"
    },
    "619": {
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "620": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "621": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "622": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "623": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x277"
    },
    "626": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "627": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "629": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "630": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "REVERT",
      "path": "15"
    },
    "631": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "635": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "636": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x118"
    },
    "639": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "640": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "642": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "AND",
      "path": "15"
    },
    "643": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "644": {
      "fn": "Registry.getLending",
      "offset": [
        2398,
        2424
      ],
      "op": "JUMP",
      "path": "15"
    },
    "645": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "646": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "647": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "648": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "649": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x291"
    },
    "652": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "653": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "655": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "DUP1",
      "path": "15"
    },
    "656": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "REVERT",
      "path": "15"
    },
    "657": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "662": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A0"
    },
    "665": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "666": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "668": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43C5"
    },
    "671": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMP",
      "path": "15"
    },
    "672": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "673": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5F1"
    },
    "676": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMP",
      "path": "15"
    },
    "677": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "678": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "679": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "DUP1",
      "path": "15"
    },
    "680": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "681": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B1"
    },
    "684": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "685": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "687": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "DUP1",
      "path": "15"
    },
    "688": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "REVERT",
      "path": "15"
    },
    "689": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "694": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C0"
    },
    "697": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "698": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "700": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x409E"
    },
    "703": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "704": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "705": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x671"
    },
    "708": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMP",
      "path": "15"
    },
    "709": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "710": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "711": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "713": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D1"
    },
    "716": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "717": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "719": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "DUP1",
      "path": "2"
    },
    "720": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "REVERT",
      "path": "2"
    },
    "721": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "726": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "729": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "730": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "732": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E49"
    },
    "735": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "jump": "i",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "736": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "746": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "747": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "748": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "749": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "750": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "751": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "POP",
      "path": "2"
    },
    "752": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        404,
        651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "753": {
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "754": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "755": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "756": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "757": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FD"
    },
    "760": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "761": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "763": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP1",
      "path": "15"
    },
    "764": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "REVERT",
      "path": "15"
    },
    "765": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "766": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "POP",
      "path": "15"
    },
    "767": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x307"
    },
    "770": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "772": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "773": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "774": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "775": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "776": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "778": {
      "fn": "ERC1155Holder.onERC1155BatchReceived",
      "offset": [
        2430,
        2456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "779": {
      "op": "SWAP1"
    },
    "780": {
      "op": "DUP2"
    },
    "781": {
      "op": "MSTORE"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "784": {
      "op": "ADD"
    },
    "785": {
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "788": {
      "op": "JUMP"
    },
    "789": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "790": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "791": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "DUP1",
      "path": "15"
    },
    "792": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "793": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x321"
    },
    "796": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "797": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "799": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "DUP1",
      "path": "15"
    },
    "800": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "REVERT",
      "path": "15"
    },
    "801": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "806": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x330"
    },
    "809": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "810": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "812": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FFE"
    },
    "815": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "816": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "817": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6A7"
    },
    "820": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "821": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "822": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D"
    },
    "825": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x343"
    },
    "828": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "829": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "831": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x427C"
    },
    "834": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "835": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "836": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x70E"
    },
    "839": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "840": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "841": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "842": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "843": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "844": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "847": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "848": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "DUP1",
      "path": "2"
    },
    "851": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "REVERT",
      "path": "2"
    },
    "852": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A"
    },
    "857": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x363"
    },
    "860": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "861": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "863": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F61"
    },
    "866": {
      "fn": "ERC1155Holder.onERC1155Received",
      "jump": "i",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "867": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "868": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "877": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "878": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "879": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "880": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "881": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "882": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "POP",
      "path": "2"
    },
    "883": {
      "fn": "ERC1155Holder.onERC1155Received",
      "offset": [
        179,
        398
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "885": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "886": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "887": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "888": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x380"
    },
    "891": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "892": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "894": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "895": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "REVERT",
      "path": "15"
    },
    "896": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x394"
    },
    "901": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x38F"
    },
    "904": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "905": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "907": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3FC9"
    },
    "910": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMP",
      "path": "15"
    },
    "911": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "912": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x74D"
    },
    "915": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMP",
      "path": "15"
    },
    "916": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "917": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "919": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "DUP1",
      "path": "15"
    },
    "920": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "op": "SWAP1"
    },
    "930": {
      "op": "SWAP6"
    },
    "931": {
      "op": "AND"
    },
    "932": {
      "op": "DUP6"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "937": {
      "op": "SWAP1"
    },
    "938": {
      "op": "SWAP4"
    },
    "939": {
      "op": "AND"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "op": "DUP6"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "AND"
    },
    "950": {
      "op": "SWAP2"
    },
    "951": {
      "op": "DUP4"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "SWAP2"
    },
    "954": {
      "op": "SWAP1"
    },
    "955": {
      "op": "SWAP2"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "962": {
      "op": "AND"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "970": {
      "op": "ADD"
    },
    "971": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x124"
    },
    "974": {
      "op": "JUMP"
    },
    "975": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "976": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        414,
        418
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 0
    },
    "988": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "AND",
      "path": "3"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x2711897"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "EQ",
      "path": "3"
    },
    "998": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "999": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x400"
    },
    "1002": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        437,
        526
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "op": "NOT"
    },
    "1021": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 1
    },
    "1022": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "13"
    },
    "1023": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "13"
    },
    "1024": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        490,
        526
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1025": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        430,
        526
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1026": {
      "fn": "ERC1155Receiver.supportsInterface",
      "offset": [
        312,
        533
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "ERC1155Receiver.supportsInterface",
      "jump": "o",
      "offset": [
        312,
        533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1030": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1031": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1033": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1034": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1036": {
      "fn": "Registry.stopRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1037": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1038": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x432"
    },
    "1041": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1042": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1044": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1053": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1054": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1056": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1057": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1060": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1061": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4639"
    },
    "1064": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1065": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1066": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1068": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1069": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1070": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1071": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SUB",
      "path": "15"
    },
    "1072": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1073": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "15"
    },
    "1074": {
      "fn": "Registry.stopRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1075": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5365
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 2,
      "value": "0x44A"
    },
    "1078": {
      "fn": "Registry.stopRent",
      "offset": [
        5155,
        5169
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CB"
    },
    "1081": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5355
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1084": {
      "fn": "Registry.stopRent",
      "offset": [
        5221,
        5232
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1085": {
      "fn": "Registry.stopRent",
      "offset": [
        5250,
        5260
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1086": {
      "fn": "Registry.stopRent",
      "offset": [
        5278,
        5285
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1087": {
      "fn": "Registry.stopRent",
      "offset": [
        5303,
        5313
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1088": {
      "fn": "Registry.stopRent",
      "offset": [
        5331,
        5341
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1089": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5203
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD18"
    },
    "1092": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        5183,
        5355
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1093": {
      "fn": "Registry.stopRent",
      "offset": [
        5183,
        5355
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1094": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5141
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE9E"
    },
    "1097": {
      "fn": "Registry.stopRent",
      "jump": "i",
      "offset": [
        5131,
        5365
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1098": {
      "fn": "Registry.stopRent",
      "offset": [
        5131,
        5365
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1099": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1100": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1101": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1102": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1103": {
      "fn": "Registry.stopRent",
      "offset": [
        4872,
        5372
      ],
      "op": "POP",
      "path": "15"
    },
    "1104": {
      "fn": "Registry.stopRent",
      "jump": "o",
      "offset": [
        4872,
        5372
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1105": {
      "fn": "Registry.setPaused",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1106": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1108": {
      "fn": "Registry.setPaused",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1118": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1119": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1120": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x47B"
    },
    "1123": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1124": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1126": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1135": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1136": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1138": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1139": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1142": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1143": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4660"
    },
    "1146": {
      "fn": "Registry.setPaused",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1147": {
      "fn": "Registry.setPaused",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1148": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27959
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 3,
      "value": "0x5"
    },
    "1150": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1151": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1154": {
      "op": "NOT"
    },
    "1155": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "AND",
      "path": "15"
    },
    "1156": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1157": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1158": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1159": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1160": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1161": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1162": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "OR",
      "path": "15"
    },
    "1163": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1164": {
      "fn": "Registry.setPaused",
      "offset": [
        27953,
        27971
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1165": {
      "fn": "Registry.setPaused",
      "jump": "o",
      "offset": [
        27889,
        27978
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1166": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1167": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1169": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1176": {
      "op": "SHL"
    },
    "1177": {
      "op": "SUB"
    },
    "1178": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1179": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1180": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1181": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4B8"
    },
    "1184": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1185": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1187": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1196": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1197": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1199": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1200": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1203": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1204": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4660"
    },
    "1207": {
      "fn": "Registry.setBeneficiary",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1208": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1209": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27859
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 4,
      "value": "0x2"
    },
    "1211": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1212": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "NOT"
    },
    "1222": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "AND",
      "path": "15"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "op": "SUB"
    },
    "1231": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1232": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1233": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1234": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "AND",
      "path": "15"
    },
    "1235": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1236": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1237": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1238": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "OR",
      "path": "15"
    },
    "1239": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1240": {
      "fn": "Registry.setBeneficiary",
      "offset": [
        27848,
        27876
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1241": {
      "fn": "Registry.setBeneficiary",
      "jump": "o",
      "offset": [
        27763,
        27883
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1242": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1243": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1245": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1246": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1248": {
      "fn": "Registry.lend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1249": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1250": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4FD"
    },
    "1253": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1254": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1256": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1265": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1266": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1268": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1269": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1272": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1273": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4639"
    },
    "1276": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1277": {
      "fn": "Registry.lend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1278": {
      "fn": "Registry.lend",
      "offset": [
        3518,
        3813
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 5,
      "value": "0x512"
    },
    "1281": {
      "fn": "Registry.lend",
      "offset": [
        3542,
        3552
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFD3"
    },
    "1284": {
      "fn": "Registry.lend",
      "offset": [
        3566,
        3803
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1287": {
      "fn": "Registry.lend",
      "offset": [
        3602,
        3613
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1288": {
      "fn": "Registry.lend",
      "offset": [
        3631,
        3641
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1289": {
      "fn": "Registry.lend",
      "offset": [
        3659,
        3666
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1290": {
      "fn": "Registry.lend",
      "offset": [
        3684,
        3694
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1291": {
      "fn": "Registry.lend",
      "offset": [
        3712,
        3727
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1292": {
      "fn": "Registry.lend",
      "offset": [
        3745,
        3759
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1293": {
      "fn": "Registry.lend",
      "offset": [
        3777,
        3789
      ],
      "op": "DUP10",
      "path": "15"
    },
    "1294": {
      "fn": "Registry.lend",
      "offset": [
        3566,
        3584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1578"
    },
    "1297": {
      "fn": "Registry.lend",
      "jump": "i",
      "offset": [
        3566,
        3803
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1298": {
      "fn": "Registry.lend",
      "offset": [
        3518,
        3813
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1299": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1300": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1301": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1302": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1303": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1304": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1305": {
      "fn": "Registry.lend",
      "offset": [
        3166,
        3820
      ],
      "op": "POP",
      "path": "15"
    },
    "1306": {
      "fn": "Registry.lend",
      "jump": "o",
      "offset": [
        3166,
        3820
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1307": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1308": {
      "fn": "Registry.getLending",
      "offset": [
        18594,
        18599
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1310": {
      "fn": "Registry.getLending",
      "offset": [
        18613,
        18620
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1311": {
      "fn": "Registry.getLending",
      "offset": [
        18634,
        18639
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1313": {
      "fn": "Registry.getLending",
      "offset": [
        18653,
        18659
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1314": {
      "fn": "Registry.getLending",
      "offset": [
        18673,
        18679
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1316": {
      "fn": "Registry.getLending",
      "offset": [
        18693,
        18699
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1317": {
      "fn": "Registry.getLending",
      "offset": [
        18713,
        18718
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1319": {
      "fn": "Registry.getLending",
      "offset": [
        18743,
        18761
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1320": {
      "fn": "Registry.getLending",
      "offset": [
        18804,
        18814
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1321": {
      "fn": "Registry.getLending",
      "offset": [
        18816,
        18823
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1322": {
      "fn": "Registry.getLending",
      "offset": [
        18825,
        18835
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1323": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1325": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1326": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1328": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "ADD",
      "path": "15"
    },
    "1329": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x53C"
    },
    "1332": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1333": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1334": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1335": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1336": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "1339": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18787,
        18836
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1340": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1341": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1343": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1344": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1347": {
      "op": "NOT"
    },
    "1348": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1349": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1350": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "SUB",
      "path": "15"
    },
    "1351": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "ADD",
      "path": "15"
    },
    "1352": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1353": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1354": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1355": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1356": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1357": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1358": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1359": {
      "fn": "Registry.getLending",
      "offset": [
        18787,
        18836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1361": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1362": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1363": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "ADD",
      "path": "15"
    },
    "1364": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1365": {
      "fn": "Registry.getLending",
      "offset": [
        18856,
        18889
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1367": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1368": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1369": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1370": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18900
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "1372": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1373": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1374": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1375": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1376": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1377": {
      "fn": "Registry.getLending",
      "offset": [
        18949,
        18968
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 6
    },
    "1378": {
      "fn": "Registry.getLending",
      "offset": [
        18949,
        18968
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1379": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1380": {
      "fn": "Registry.getLending",
      "offset": [
        18764,
        18846
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "fn": "Registry.getLending",
      "offset": [
        18892,
        18912
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1383": {
      "fn": "Registry.getLending",
      "offset": [
        18949,
        18968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1385": {
      "fn": "Registry.getLending",
      "offset": [
        18949,
        18968
      ],
      "op": "AND",
      "path": "15"
    },
    "1386": {
      "fn": "Registry.getLending",
      "offset": [
        18949,
        18968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1388": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1389": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "GT",
      "path": "15"
    },
    "1390": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1391": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x57A"
    },
    "1394": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1395": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x57A"
    },
    "1398": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "1401": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        18943,
        18969
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1402": {
      "fn": "Registry.getLending",
      "offset": [
        18943,
        18969
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1403": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1404": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1416": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1417": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "DIV",
      "path": "15"
    },
    "1418": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "AND",
      "path": "15"
    },
    "1419": {
      "fn": "Registry.getLending",
      "offset": [
        18983,
        19004
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1420": {
      "fn": "Registry.getLending",
      "offset": [
        19018,
        19041
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "fn": "Registry.getLending",
      "offset": [
        19018,
        19041
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1428": {
      "fn": "Registry.getLending",
      "offset": [
        19018,
        19041
      ],
      "op": "DIV",
      "path": "15"
    },
    "1429": {
      "fn": "Registry.getLending",
      "offset": [
        19018,
        19041
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1430": {
      "fn": "Registry.getLending",
      "offset": [
        19018,
        19041
      ],
      "op": "AND",
      "path": "15"
    },
    "1431": {
      "fn": "Registry.getLending",
      "offset": [
        19018,
        19041
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "fn": "Registry.getLending",
      "offset": [
        19055,
        19077
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1438": {
      "fn": "Registry.getLending",
      "offset": [
        19055,
        19077
      ],
      "op": "DIV",
      "path": "15"
    },
    "1439": {
      "fn": "Registry.getLending",
      "offset": [
        19055,
        19077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "1441": {
      "fn": "Registry.getLending",
      "offset": [
        19055,
        19077
      ],
      "op": "SHL",
      "path": "15"
    },
    "1442": {
      "fn": "Registry.getLending",
      "offset": [
        19055,
        19077
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1443": {
      "fn": "Registry.getLending",
      "offset": [
        19091,
        19109
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "Registry.getLending",
      "offset": [
        19091,
        19109
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1452": {
      "fn": "Registry.getLending",
      "offset": [
        19091,
        19109
      ],
      "op": "DIV",
      "path": "15"
    },
    "1453": {
      "fn": "Registry.getLending",
      "offset": [
        19091,
        19109
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1454": {
      "fn": "Registry.getLending",
      "offset": [
        19091,
        19109
      ],
      "op": "AND",
      "path": "15"
    },
    "1455": {
      "fn": "Registry.getLending",
      "offset": [
        19091,
        19109
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "fn": "Registry.getLending",
      "offset": [
        19123,
        19146
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1462": {
      "fn": "Registry.getLending",
      "offset": [
        19123,
        19146
      ],
      "op": "DIV",
      "path": "15"
    },
    "1463": {
      "fn": "Registry.getLending",
      "offset": [
        19123,
        19146
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1464": {
      "fn": "Registry.getLending",
      "offset": [
        19123,
        19146
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1465": {
      "fn": "Registry.getLending",
      "offset": [
        19123,
        19146
      ],
      "op": "AND",
      "path": "15"
    },
    "1466": {
      "fn": "Registry.getLending",
      "offset": [
        19123,
        19146
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "Registry.getLending",
      "offset": [
        19166,
        19186
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1473": {
      "fn": "Registry.getLending",
      "offset": [
        19166,
        19186
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1474": {
      "fn": "Registry.getLending",
      "offset": [
        19166,
        19186
      ],
      "op": "DIV",
      "path": "15"
    },
    "1475": {
      "fn": "Registry.getLending",
      "offset": [
        19166,
        19186
      ],
      "op": "AND",
      "path": "15"
    },
    "1476": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "1478": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1479": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "GT",
      "path": "15"
    },
    "1480": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1481": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5D4"
    },
    "1484": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1485": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5D4"
    },
    "1488": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "1491": {
      "fn": "Registry.getLending",
      "jump": "i",
      "offset": [
        19160,
        19187
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1492": {
      "fn": "Registry.getLending",
      "offset": [
        19160,
        19187
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1493": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1494": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1495": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1496": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1497": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1498": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1499": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1500": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1501": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1502": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1503": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1504": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1505": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1506": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1507": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1508": {
      "fn": "Registry.getLending",
      "offset": [
        18922,
        19197
      ],
      "op": "POP",
      "path": "15"
    },
    "1509": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1510": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "1511": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "POP",
      "path": "15"
    },
    "1512": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1513": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "1514": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "POP",
      "path": "15"
    },
    "1515": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1516": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "1517": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1518": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1519": {
      "fn": "Registry.getLending",
      "offset": [
        18427,
        19204
      ],
      "op": "POP",
      "path": "15"
    },
    "1520": {
      "fn": "Registry.getLending",
      "jump": "o",
      "offset": [
        18427,
        19204
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1521": {
      "fn": "Registry.setRentFee",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1522": {
      "offset": [
        2669,
        2674
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1524": {
      "fn": "Registry.setRentFee",
      "offset": [
        2669,
        2674
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1531": {
      "op": "SHL"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "offset": [
        2669,
        2674
      ],
      "op": "AND",
      "path": "15"
    },
    "1534": {
      "offset": [
        2655,
        2665
      ],
      "op": "CALLER",
      "path": "15"
    },
    "1535": {
      "offset": [
        2655,
        2674
      ],
      "op": "EQ",
      "path": "15"
    },
    "1536": {
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x61B"
    },
    "1539": {
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1540": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1542": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1543": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "offset": [
        2647,
        2695
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1551": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1552": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1554": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "ADD",
      "path": "15"
    },
    "1555": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1558": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1559": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4660"
    },
    "1562": {
      "fn": "Registry.setRentFee",
      "jump": "i",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1563": {
      "fn": "Registry.setRentFee",
      "offset": [
        2647,
        2695
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1564": {
      "fn": "Registry.setRentFee",
      "offset": [
        27685,
        27690
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 7,
      "value": "0x2710"
    },
    "1567": {
      "fn": "Registry.setRentFee",
      "offset": [
        27672,
        27682
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1568": {
      "branch": 128,
      "fn": "Registry.setRentFee",
      "offset": [
        27672,
        27690
      ],
      "op": "LT",
      "path": "15"
    },
    "1569": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x66C"
    },
    "1572": {
      "branch": 128,
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1573": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1575": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1584": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1589": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1590": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "ADD",
      "path": "15"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A66656520657863656564732031303070637400000000000000"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1643": {
      "op": "JUMP"
    },
    "1644": {
      "fn": "Registry.setRentFee",
      "offset": [
        27664,
        27720
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1645": {
      "fn": "Registry.setRentFee",
      "offset": [
        27730,
        27737
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 8,
      "value": "0x6"
    },
    "1647": {
      "fn": "Registry.setRentFee",
      "offset": [
        27730,
        27750
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1648": {
      "fn": "Registry.setRentFee",
      "jump": "o",
      "offset": [
        27595,
        27757
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1649": {
      "fn": "Registry.claimRent",
      "offset": [
        5378,
        5880
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1650": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1652": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1653": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1655": {
      "fn": "Registry.claimRent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1656": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1657": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x694"
    },
    "1660": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1661": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1663": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1664": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1672": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1673": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1675": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1676": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1679": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1680": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4639"
    },
    "1683": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1684": {
      "fn": "Registry.claimRent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1685": {
      "fn": "Registry.claimRent",
      "offset": [
        5638,
        5873
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 9,
      "value": "0x44A"
    },
    "1688": {
      "fn": "Registry.claimRent",
      "offset": [
        5662,
        5677
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16A8"
    },
    "1691": {
      "fn": "Registry.claimRent",
      "offset": [
        5691,
        5863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1694": {
      "fn": "Registry.claimRent",
      "offset": [
        5729,
        5740
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1695": {
      "fn": "Registry.claimRent",
      "offset": [
        5758,
        5768
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1696": {
      "fn": "Registry.claimRent",
      "offset": [
        5786,
        5793
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1697": {
      "fn": "Registry.claimRent",
      "offset": [
        5811,
        5821
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1698": {
      "fn": "Registry.claimRent",
      "offset": [
        5839,
        5849
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1699": {
      "fn": "Registry.claimRent",
      "offset": [
        5691,
        5711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD18"
    },
    "1702": {
      "fn": "Registry.claimRent",
      "jump": "i",
      "offset": [
        5691,
        5863
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1703": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1704": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1706": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1707": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1709": {
      "fn": "Registry.stopLend",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1710": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1711": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6CA"
    },
    "1714": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1715": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1717": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1726": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1727": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1729": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1730": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1733": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1734": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4639"
    },
    "1737": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1738": {
      "fn": "Registry.stopLend",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1739": {
      "fn": "Registry.stopLend",
      "offset": [
        4048,
        4288
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 10,
      "value": "0x708"
    },
    "1742": {
      "fn": "Registry.stopLend",
      "offset": [
        4072,
        4086
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AA9"
    },
    "1745": {
      "fn": "Registry.stopLend",
      "offset": [
        4100,
        4278
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1748": {
      "fn": "Registry.stopLend",
      "offset": [
        4138,
        4149
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1749": {
      "fn": "Registry.stopLend",
      "offset": [
        4167,
        4177
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1750": {
      "fn": "Registry.stopLend",
      "offset": [
        4195,
        4202
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1751": {
      "fn": "Registry.stopLend",
      "offset": [
        4220,
        4230
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1752": {
      "fn": "Registry.stopLend",
      "offset": [
        4262,
        4263
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1754": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1756": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1757": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1758": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1759": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1760": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1761": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1762": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1764": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MUL",
      "path": "15"
    },
    "1765": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1767": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1768": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1769": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1770": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1772": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1773": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1774": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1775": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x702"
    },
    "1778": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1779": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1780": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1782": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1783": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1785": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1786": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "MUL",
      "path": "15"
    },
    "1787": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1788": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1789": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1790": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "1791": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "ADD",
      "path": "15"
    },
    "1792": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1795": {
      "fn": "Registry.stopLend",
      "offset": [
        4248,
        4264
      ],
      "op": "POP",
      "path": "15"
    },
    "1796": {
      "fn": "Registry.stopLend",
      "offset": [
        4100,
        4120
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD18"
    },
    "1799": {
      "fn": "Registry.stopLend",
      "jump": "i",
      "offset": [
        4100,
        4278
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1800": {
      "fn": "Registry.stopLend",
      "offset": [
        4048,
        4288
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1801": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1802": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1803": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1804": {
      "fn": "Registry.stopLend",
      "offset": [
        3826,
        4295
      ],
      "op": "POP",
      "path": "15"
    },
    "1805": {
      "fn": "Registry.stopLend",
      "jump": "o",
      "offset": [
        3826,
        4295
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1806": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1807": {
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1809": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1810": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1812": {
      "fn": "Registry.rent",
      "offset": [
        2759,
        2765
      ],
      "op": "AND",
      "path": "15"
    },
    "1813": {
      "offset": [
        2758,
        2765
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1814": {
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x731"
    },
    "1817": {
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1818": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1820": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1821": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "offset": [
        2750,
        2783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1829": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1830": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1832": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "ADD",
      "path": "15"
    },
    "1833": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "1836": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1837": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4639"
    },
    "1840": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1841": {
      "fn": "Registry.rent",
      "offset": [
        2750,
        2783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1842": {
      "fn": "Registry.rent",
      "offset": [
        4601,
        4859
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 11,
      "value": "0x745"
    },
    "1845": {
      "fn": "Registry.rent",
      "offset": [
        4625,
        4635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E76"
    },
    "1848": {
      "fn": "Registry.rent",
      "offset": [
        4649,
        4849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x445"
    },
    "1851": {
      "fn": "Registry.rent",
      "offset": [
        4685,
        4696
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1852": {
      "fn": "Registry.rent",
      "offset": [
        4714,
        4724
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1853": {
      "fn": "Registry.rent",
      "offset": [
        4742,
        4749
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1854": {
      "fn": "Registry.rent",
      "offset": [
        4767,
        4777
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1855": {
      "fn": "Registry.rent",
      "offset": [
        4795,
        4807
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1856": {
      "fn": "Registry.rent",
      "offset": [
        4825,
        4835
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1857": {
      "fn": "Registry.rent",
      "offset": [
        4649,
        4667
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25CF"
    },
    "1860": {
      "fn": "Registry.rent",
      "jump": "i",
      "offset": [
        4649,
        4849
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1861": {
      "fn": "Registry.rent",
      "offset": [
        4601,
        4859
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1862": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1863": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1864": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1865": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1866": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1867": {
      "fn": "Registry.rent",
      "offset": [
        4301,
        4866
      ],
      "op": "POP",
      "path": "15"
    },
    "1868": {
      "fn": "Registry.rent",
      "jump": "o",
      "offset": [
        4301,
        4866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1869": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1870": {
      "fn": "Registry.getRenting",
      "offset": [
        19377,
        19384
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1872": {
      "fn": "Registry.getRenting",
      "offset": [
        19398,
        19404
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1873": {
      "fn": "Registry.getRenting",
      "offset": [
        19418,
        19423
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1875": {
      "fn": "Registry.getRenting",
      "offset": [
        19437,
        19443
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1876": {
      "fn": "Registry.getRenting",
      "offset": [
        19468,
        19486
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1878": {
      "fn": "Registry.getRenting",
      "offset": [
        19529,
        19539
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1879": {
      "fn": "Registry.getRenting",
      "offset": [
        19541,
        19548
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1880": {
      "fn": "Registry.getRenting",
      "offset": [
        19550,
        19560
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1881": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1883": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1884": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1886": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "ADD",
      "path": "15"
    },
    "1887": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x76A"
    },
    "1890": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1891": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1892": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1893": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1894": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "1897": {
      "fn": "Registry.getRenting",
      "jump": "i",
      "offset": [
        19512,
        19561
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1898": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1899": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1901": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1902": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1903": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1904": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1905": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "SUB",
      "path": "15"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1908": {
      "op": "NOT"
    },
    "1909": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "ADD",
      "path": "15"
    },
    "1910": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1911": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1912": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1913": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1914": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1915": {
      "fn": "Registry.getRenting",
      "offset": [
        19489,
        19571
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1916": {
      "fn": "Registry.getRenting",
      "offset": [
        19489,
        19571
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1917": {
      "fn": "Registry.getRenting",
      "offset": [
        19512,
        19561
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1919": {
      "fn": "Registry.getRenting",
      "offset": [
        19489,
        19571
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1920": {
      "fn": "Registry.getRenting",
      "offset": [
        19489,
        19571
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1921": {
      "fn": "Registry.getRenting",
      "offset": [
        19489,
        19571
      ],
      "op": "ADD",
      "path": "15"
    },
    "1922": {
      "fn": "Registry.getRenting",
      "offset": [
        19489,
        19571
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1923": {
      "fn": "Registry.getRenting",
      "offset": [
        19581,
        19614
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1925": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1926": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1927": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1928": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19625
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "1930": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1931": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1932": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1933": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1934": {
      "fn": "Registry.getRenting",
      "offset": [
        19617,
        19637
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1935": {
      "fn": "Registry.getRenting",
      "offset": [
        19668,
        19689
      ],
      "op": "SLOAD",
      "path": "15",
      "statement": 12
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "Registry.getRenting",
      "offset": [
        19668,
        19689
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1945": {
      "fn": "Registry.getRenting",
      "offset": [
        19668,
        19689
      ],
      "op": "AND",
      "path": "15"
    },
    "1946": {
      "fn": "Registry.getRenting",
      "offset": [
        19668,
        19689
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1951": {
      "op": "SHL"
    },
    "1952": {
      "fn": "Registry.getRenting",
      "offset": [
        19703,
        19721
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1953": {
      "fn": "Registry.getRenting",
      "offset": [
        19703,
        19721
      ],
      "op": "DIV",
      "path": "15"
    },
    "1954": {
      "fn": "Registry.getRenting",
      "offset": [
        19703,
        19721
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "1957": {
      "fn": "Registry.getRenting",
      "offset": [
        19703,
        19721
      ],
      "op": "AND",
      "path": "15"
    },
    "1958": {
      "fn": "Registry.getRenting",
      "offset": [
        19703,
        19721
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "fn": "Registry.getRenting",
      "offset": [
        19735,
        19755
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1966": {
      "fn": "Registry.getRenting",
      "offset": [
        19735,
        19755
      ],
      "op": "DIV",
      "path": "15"
    },
    "1967": {
      "fn": "Registry.getRenting",
      "offset": [
        19735,
        19755
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1969": {
      "fn": "Registry.getRenting",
      "offset": [
        19735,
        19755
      ],
      "op": "AND",
      "path": "15"
    },
    "1970": {
      "fn": "Registry.getRenting",
      "offset": [
        19735,
        19755
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "fn": "Registry.getRenting",
      "offset": [
        19769,
        19785
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1978": {
      "fn": "Registry.getRenting",
      "offset": [
        19769,
        19785
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1979": {
      "fn": "Registry.getRenting",
      "offset": [
        19769,
        19785
      ],
      "op": "DIV",
      "path": "15"
    },
    "1980": {
      "fn": "Registry.getRenting",
      "offset": [
        19769,
        19785
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "1985": {
      "fn": "Registry.getRenting",
      "offset": [
        19769,
        19785
      ],
      "op": "AND",
      "path": "15"
    },
    "1986": {
      "fn": "Registry.getRenting",
      "offset": [
        19769,
        19785
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "fn": "Registry.getRenting",
      "offset": [
        19210,
        19802
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "op": "POP"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "fn": "Registry.getRenting",
      "jump": "o",
      "offset": [
        19210,
        19802
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1995": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11734,
        13229
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1996": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11823,
        11830
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1997": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11823,
        11830
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11836,
        11838
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11836,
        11844
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2002": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11836,
        11844
      ],
      "op": "ADD",
      "path": "15"
    },
    "2003": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11836,
        11844
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11832,
        11833
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2005": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11832,
        11844
      ],
      "op": "LT",
      "path": "15"
    },
    "2006": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "2010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11865,
        11890
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2013": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11960
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2016": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11971
      ],
      "op": "ADD",
      "path": "15"
    },
    "2017": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11971
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2018": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11972,
        11974
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2019": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11972,
        11979
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2021": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11972,
        11979
      ],
      "op": "ADD",
      "path": "15"
    },
    "2022": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11972,
        11979
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2023": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2025": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2026": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "LT",
      "path": "15"
    },
    "2027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F6"
    },
    "2030": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7F6"
    },
    "2034": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2037": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11958,
        11980
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2038": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2039": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "MUL",
      "path": "15"
    },
    "2042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2044": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "ADD",
      "path": "15"
    },
    "2045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "ADD",
      "path": "15"
    },
    "2046": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11958,
        11980
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2047": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12004
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12012
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12012
      ],
      "op": "ADD",
      "path": "15"
    },
    "2051": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12012
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2052": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12013,
        12014
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2053": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2054": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2055": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2056": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "LT",
      "path": "15"
    },
    "2057": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x814"
    },
    "2060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2061": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x814"
    },
    "2064": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2067": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12002,
        12015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2068": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2069": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2071": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "MUL",
      "path": "15"
    },
    "2072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2074": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "ADD",
      "path": "15"
    },
    "2075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "ADD",
      "path": "15"
    },
    "2076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12002,
        12015
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12039
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2078": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12049
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2081": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12049
      ],
      "op": "ADD",
      "path": "15"
    },
    "2082": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12049
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12050,
        12051
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2086": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2087": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "LT",
      "path": "15"
    },
    "2088": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x833"
    },
    "2091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x833"
    },
    "2095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2098": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12037,
        12052
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2099": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2100": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2102": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "MUL",
      "path": "15"
    },
    "2103": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "ADD",
      "path": "15"
    },
    "2106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "ADD",
      "path": "15"
    },
    "2107": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12037,
        12052
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2108": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2111": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "ADD",
      "path": "15"
    },
    "2114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x84D"
    },
    "2117": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2118": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2119": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "2124": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11920,
        12070
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2129": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2131": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2132": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SUB",
      "path": "15"
    },
    "2134": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SUB",
      "path": "15"
    },
    "2135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2136": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2140": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11920,
        12070
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2141": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11893,
        12084
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2142": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11893,
        12084
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2143": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11893,
        12084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2144": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11893,
        12084
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2146": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11893,
        12084
      ],
      "op": "ADD",
      "path": "15"
    },
    "2147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11893,
        12084
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2148": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11865,
        12084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2149": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11865,
        12084
      ],
      "op": "POP",
      "path": "15"
    },
    "2150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12098,
        12123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2152": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12193
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12204
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12204
      ],
      "op": "ADD",
      "path": "15"
    },
    "2156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12204
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2157": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12205,
        12207
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2158": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12205,
        12212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12205,
        12212
      ],
      "op": "ADD",
      "path": "15"
    },
    "2161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12205,
        12212
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2162": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2163": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2164": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2165": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "LT",
      "path": "15"
    },
    "2166": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x881"
    },
    "2169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x881"
    },
    "2173": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2176": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12191,
        12213
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2177": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2178": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "MUL",
      "path": "15"
    },
    "2181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2183": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "ADD",
      "path": "15"
    },
    "2184": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "ADD",
      "path": "15"
    },
    "2185": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12191,
        12213
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2186": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12237
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12245
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12245
      ],
      "op": "ADD",
      "path": "15"
    },
    "2190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12245
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2191": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12246,
        12247
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2192": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2193": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2194": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "LT",
      "path": "15"
    },
    "2196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x89F"
    },
    "2199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x89F"
    },
    "2203": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2206": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12235,
        12248
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2210": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "MUL",
      "path": "15"
    },
    "2211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2213": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "ADD",
      "path": "15"
    },
    "2214": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "ADD",
      "path": "15"
    },
    "2215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12235,
        12248
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2216": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12272
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2217": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12282
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "2220": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12282
      ],
      "op": "ADD",
      "path": "15"
    },
    "2221": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12282
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2222": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12283,
        12284
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2225": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "LT",
      "path": "15"
    },
    "2227": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BE"
    },
    "2230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2231": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8BE"
    },
    "2234": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2237": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12270,
        12285
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2238": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2239": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2241": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "MUL",
      "path": "15"
    },
    "2242": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2244": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "ADD",
      "path": "15"
    },
    "2245": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "ADD",
      "path": "15"
    },
    "2246": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12270,
        12285
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2247": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2249": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2250": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2252": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "ADD",
      "path": "15"
    },
    "2253": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x8D8"
    },
    "2256": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2257": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2258": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2259": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2260": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "2263": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12153,
        12303
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2264": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2267": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2271": {
      "op": "NOT"
    },
    "2272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2274": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "SUB",
      "path": "15"
    },
    "2275": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "ADD",
      "path": "15"
    },
    "2276": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2277": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2278": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2279": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2280": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2281": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2282": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2283": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2285": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2286": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2287": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "ADD",
      "path": "15"
    },
    "2288": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2289": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12331,
        12364
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2292": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "2296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2297": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2298": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2299": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2300": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2301": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2302": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2303": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12452
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "2306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2307": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2308": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2310": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12444,
        12471
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "2312": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 13,
      "value": "0xE0"
    },
    "2314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "2318": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2319": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2320": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2321": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2322": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12126,
        12317
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2325": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2326": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D9"
    },
    "2329": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2330": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2331": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12367,
        12394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2332": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2333": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12153,
        12303
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2334": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2336": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2337": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2339": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2340": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "GT",
      "path": "15"
    },
    "2341": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2342": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "2345": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2346": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "2349": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2352": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2353": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2354": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2356": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2357": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "GT",
      "path": "15"
    },
    "2358": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2359": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x942"
    },
    "2362": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2363": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x942"
    },
    "2366": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2369": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2370": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2371": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2372": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2373": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2374": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2386": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2387": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DIV",
      "path": "15"
    },
    "2388": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2389": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2391": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2392": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2393": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2394": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2402": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DIV",
      "path": "15"
    },
    "2403": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2404": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2405": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2407": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2408": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2409": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "SUB"
    },
    "2418": {
      "op": "NOT"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2425": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DIV",
      "path": "15"
    },
    "2426": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2428": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SHL",
      "path": "15"
    },
    "2429": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2430": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2432": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2433": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2434": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2435": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2442": {
      "op": "SHL"
    },
    "2443": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2444": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DIV",
      "path": "15"
    },
    "2445": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2446": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2447": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2449": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2450": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2451": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2458": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DIV",
      "path": "15"
    },
    "2459": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2460": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "2462": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2463": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2464": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2465": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "2467": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2468": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2469": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ADD",
      "path": "15"
    },
    "2470": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2477": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2478": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DIV",
      "path": "15"
    },
    "2479": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "AND",
      "path": "15"
    },
    "2480": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2482": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2483": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "GT",
      "path": "15"
    },
    "2484": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2485": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C0"
    },
    "2488": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2489": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9C0"
    },
    "2492": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2495": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2496": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2497": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "2499": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2500": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "GT",
      "path": "15"
    },
    "2501": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2502": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D1"
    },
    "2505": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2506": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x9D1"
    },
    "2509": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2512": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2513": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2514": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2515": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12500
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26F1"
    },
    "2520": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2521": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12485,
        12509
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2522": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 14,
      "value": "0x40"
    },
    "2524": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2525": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2526": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2528": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2529": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "ADD",
      "path": "15"
    },
    "2530": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2531": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2532": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2533": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2540": {
      "op": "SHL"
    },
    "2541": {
      "op": "SUB"
    },
    "2542": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2543": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "AND",
      "path": "15"
    },
    "2544": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2545": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2550": {
      "op": "SHL"
    },
    "2551": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2552": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DIV",
      "path": "15"
    },
    "2553": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2555": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "AND",
      "path": "15"
    },
    "2556": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2558": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2559": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "ADD",
      "path": "15"
    },
    "2560": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2567": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DIV",
      "path": "15"
    },
    "2568": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2573": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "AND",
      "path": "15"
    },
    "2574": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2575": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2576": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "ADD",
      "path": "15"
    },
    "2577": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2578": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2579": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2580": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2587": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2588": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DIV",
      "path": "15"
    },
    "2589": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2592": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "AND",
      "path": "15"
    },
    "2593": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2595": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2596": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "ADD",
      "path": "15"
    },
    "2597": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2598": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA30"
    },
    "2601": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2602": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12551,
        12561
      ],
      "op": "CALLER",
      "path": "15"
    },
    "2603": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12563,
        12578
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2604": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12541
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2774"
    },
    "2607": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12523,
        12579
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2608": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12523,
        12579
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2609": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12639,
        12658
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 15
    },
    "2610": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12639,
        12658
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2611": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12639,
        12658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2613": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12639,
        12658
      ],
      "op": "AND",
      "path": "15"
    },
    "2614": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12639,
        12658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2616": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2617": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "GT",
      "path": "15"
    },
    "2618": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2619": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA46"
    },
    "2622": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2623": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA46"
    },
    "2626": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2629": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12618,
        12658
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2630": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2631": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12620
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2632": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12632
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2634": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12632
      ],
      "op": "ADD",
      "path": "15"
    },
    "2635": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12632
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2636": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12633,
        12634
      ],
      "op": "DUP7",
      "path": "15"
    },
    "2637": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2638": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2639": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2640": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "LT",
      "path": "15"
    },
    "2641": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA5C"
    },
    "2644": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2645": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA5C"
    },
    "2648": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "2651": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12618,
        12635
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2652": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2653": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2655": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "MUL",
      "path": "15"
    },
    "2656": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2658": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "ADD",
      "path": "15"
    },
    "2659": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "ADD",
      "path": "15"
    },
    "2660": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12635
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2661": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2663": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2664": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "GT",
      "path": "15"
    },
    "2665": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2666": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA75"
    },
    "2669": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2670": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA75"
    },
    "2673": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2676": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12618,
        12658
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2677": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2678": {
      "branch": 129,
      "fn": "Registry.handleStopRent",
      "offset": [
        12618,
        12658
      ],
      "op": "EQ",
      "path": "15"
    },
    "2679": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xA92"
    },
    "2682": {
      "branch": 129,
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2683": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2685": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2694": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2695": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2697": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "ADD",
      "path": "15"
    },
    "2698": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "2701": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2702": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x456A"
    },
    "2705": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12593,
        12719
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2706": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12593,
        12719
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2707": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 16
    },
    "2708": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2709": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12776
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2710": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12776
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2715": {
      "op": "SHL"
    },
    "2716": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2717": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2718": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "DIV",
      "path": "15"
    },
    "2719": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2722": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2723": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2724": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12780,
        12798
      ],
      "op": "AND",
      "path": "15"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "2729": {
      "op": "SHL"
    },
    "2730": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12776
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2731": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12776
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2732": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12776
      ],
      "op": "DIV",
      "path": "15"
    },
    "2733": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12776
      ],
      "op": "AND",
      "path": "15"
    },
    "2734": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12798
      ],
      "op": "GT",
      "path": "15"
    },
    "2735": {
      "branch": 130,
      "fn": "Registry.handleStopRent",
      "offset": [
        12758,
        12798
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2736": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xAF3"
    },
    "2739": {
      "branch": 130,
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2740": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2742": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2749": {
      "op": "SHL"
    },
    "2750": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2751": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2754": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2756": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2757": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "ADD",
      "path": "15"
    },
    "2758": {
      "op": "MSTORE"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2763": {
      "op": "DUP3"
    },
    "2764": {
      "op": "ADD"
    },
    "2765": {
      "op": "MSTORE"
    },
    "2766": {
      "op": "PUSH21",
      "value": "0x2932A7232A1D1D31B934BA34B1B0B61032B93937B9"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2790": {
      "op": "SHL"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2793": {
      "op": "DUP3"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "2802": {
      "op": "JUMP"
    },
    "2803": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12733,
        12853
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2804": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12917,
        12933
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2805": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12917,
        12933
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2806": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12867,
        12896
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2808": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12867,
        12896
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2809": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12899,
        12933
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB0F"
    },
    "2812": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12899,
        12933
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12917,
        12933
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2819": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12917,
        12933
      ],
      "op": "DIV",
      "path": "15"
    },
    "2820": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12917,
        12933
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "2825": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12917,
        12933
      ],
      "op": "AND",
      "path": "15"
    },
    "2826": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12899,
        12914
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "2827": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12899,
        12933
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "2830": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12899,
        12933
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2831": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12899,
        12933
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2832": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 17,
      "value": "0x40"
    },
    "2834": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2835": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2836": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2838": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2839": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2840": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2841": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2842": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2843": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2844": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2845": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12867,
        12933
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2846": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12867,
        12933
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC30"
    },
    "2851": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2852": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12966,
        12973
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2853": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12966,
        12973
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2854": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2855": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2856": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2858": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "2859": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2861": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2862": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "GT",
      "path": "15"
    },
    "2863": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2864": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB3B"
    },
    "2867": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2868": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB3B"
    },
    "2871": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2874": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2875": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2876": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "2878": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2879": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "GT",
      "path": "15"
    },
    "2880": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2881": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB4C"
    },
    "2884": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2885": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB4C"
    },
    "2888": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "2891": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2892": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2893": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2894": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2895": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2896": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2903": {
      "op": "SHL"
    },
    "2904": {
      "op": "SUB"
    },
    "2905": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "2908": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2909": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "2910": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "2911": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2913": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2914": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2915": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2916": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2924": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "2925": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2926": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "2927": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2929": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2930": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2931": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "SUB"
    },
    "2940": {
      "op": "NOT"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2945": {
      "op": "SHL"
    },
    "2946": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2947": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "2948": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "2950": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SHL",
      "path": "15"
    },
    "2951": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "2952": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2954": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2955": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2956": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2957": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2964": {
      "op": "SHL"
    },
    "2965": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2966": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "2967": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2968": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "2969": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "2971": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP6",
      "path": "15"
    },
    "2972": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2973": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2980": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "2981": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "2982": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "2984": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP5",
      "path": "15"
    },
    "2985": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2986": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2987": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "2989": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2990": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2991": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "2992": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2997": {
      "op": "SHL"
    },
    "2998": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2999": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3000": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "3001": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "3002": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3004": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3005": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "GT",
      "path": "15"
    },
    "3006": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3007": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBCA"
    },
    "3010": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3011": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBCA"
    },
    "3014": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "3017": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3018": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3019": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "3021": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3022": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "GT",
      "path": "15"
    },
    "3023": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3024": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBDB"
    },
    "3027": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3028": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBDB"
    },
    "3031": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "3034": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3035": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3036": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3037": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3041": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3042": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3043": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "3045": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3046": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "3047": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3048": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3049": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3050": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3060": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "3061": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3062": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3067": {
      "op": "SHL"
    },
    "3068": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3069": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "3070": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3072": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "3073": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3075": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3076": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "3077": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3082": {
      "op": "SHL"
    },
    "3083": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3084": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "3085": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "3090": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "3091": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3092": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3093": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "3094": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3095": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3096": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3097": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3104": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3105": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DIV",
      "path": "15"
    },
    "3106": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3109": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "AND",
      "path": "15"
    },
    "3110": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3112": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3113": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "ADD",
      "path": "15"
    },
    "3114": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3115": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12984,
        13005
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3116": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        12965
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2824"
    },
    "3119": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3120": {
      "fn": "Registry.handleStopRent",
      "offset": [
        12947,
        13006
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3121": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 18
    },
    "3122": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3123": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3125": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3126": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3127": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3128": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13028
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "3130": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3132": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3133": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3135": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3136": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13047
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3137": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3138": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3139": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3146": {
      "op": "SHL"
    },
    "3147": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3148": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3149": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "DIV",
      "path": "15"
    },
    "3150": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3151": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "AND",
      "path": "15"
    },
    "3152": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3153": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13063
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "3155": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13063
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3156": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC66"
    },
    "3159": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3160": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3161": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13067,
        13085
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3168": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "DIV",
      "path": "15"
    },
    "3169": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "AND",
      "path": "15"
    },
    "3170": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46DD"
    },
    "3173": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        13020,
        13085
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3174": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3175": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3176": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "POP",
      "path": "15"
    },
    "3177": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3180": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "EXP",
      "path": "15"
    },
    "3181": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3182": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3183": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3184": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3187": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "MUL",
      "path": "15"
    },
    "3188": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "NOT",
      "path": "15"
    },
    "3189": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "AND",
      "path": "15"
    },
    "3190": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3191": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3192": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "3195": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "AND",
      "path": "15"
    },
    "3196": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "MUL",
      "path": "15"
    },
    "3197": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "OR",
      "path": "15"
    },
    "3198": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3199": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3200": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13020,
        13085
      ],
      "op": "POP",
      "path": "15"
    },
    "3201": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13125
      ],
      "op": "DUP7",
      "path": "15",
      "statement": 19
    },
    "3202": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13135
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3205": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13135
      ],
      "op": "ADD",
      "path": "15"
    },
    "3206": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13135
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3207": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13136,
        13137
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3208": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3209": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3210": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3211": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "LT",
      "path": "15"
    },
    "3212": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC97"
    },
    "3215": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3216": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC97"
    },
    "3219": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "3222": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        13123,
        13138
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3223": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3224": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3226": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "MUL",
      "path": "15"
    },
    "3227": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3229": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "ADD",
      "path": "15"
    },
    "3230": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "ADD",
      "path": "15"
    },
    "3231": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13123,
        13138
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3232": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x58855DD8908B14C6D7922D964418F37EFD968BC6B9B857560870B14A898F916D"
    },
    "3265": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13147,
        13162
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "3266": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3268": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3269": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xCDA"
    },
    "3272": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3273": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3274": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "3279": {
      "op": "SWAP2"
    },
    "3280": {
      "op": "SWAP1"
    },
    "3281": {
      "op": "SWAP2"
    },
    "3282": {
      "op": "AND"
    },
    "3283": {
      "op": "DUP2"
    },
    "3284": {
      "op": "MSTORE"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "SWAP1"
    },
    "3289": {
      "op": "JUMP"
    },
    "3290": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3291": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3293": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3294": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3295": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3296": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "SUB",
      "path": "15"
    },
    "3297": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3298": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13104,
        13164
      ],
      "op": "LOG2",
      "path": "15"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 20,
      "value": "0x0"
    },
    "3304": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3305": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3306": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3307": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13193
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "3309": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3311": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3312": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3314": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3315": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13185,
        13212
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3316": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13178,
        13212
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3317": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13178,
        13212
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "op": "NOT"
    },
    "3327": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13178,
        13212
      ],
      "op": "AND",
      "path": "15"
    },
    "3328": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13178,
        13212
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3329": {
      "fn": "Registry.handleStopRent",
      "offset": [
        13178,
        13212
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3330": {
      "op": "POP"
    },
    "3331": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 21
    },
    "3332": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD0C"
    },
    "3335": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3336": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "3339": {
      "fn": "Registry.handleStopRent",
      "jump": "i",
      "offset": [
        11846,
        11849
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3340": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3341": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3342": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "POP",
      "path": "15"
    },
    "3343": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11846,
        11849
      ],
      "op": "POP",
      "path": "15"
    },
    "3344": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7CE"
    },
    "3347": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3348": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3349": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11806,
        13223
      ],
      "op": "POP",
      "path": "15"
    },
    "3350": {
      "fn": "Registry.handleStopRent",
      "offset": [
        11734,
        13229
      ],
      "op": "POP",
      "path": "15"
    },
    "3351": {
      "fn": "Registry.handleStopRent",
      "jump": "o",
      "offset": [
        11734,
        13229
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3352": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21735,
        22544
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3353": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21990,
        22008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD20"
    },
    "3356": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21990,
        22008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A88"
    },
    "3359": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        21990,
        22008
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3360": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21990,
        22008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3361": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 22,
      "value": "0x40"
    },
    "3363": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3364": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3365": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "3368": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3369": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3371": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3372": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3373": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22054,
        22055
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3375": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3376": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3377": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3379": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3380": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22076,
        22077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3382": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3383": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3384": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3386": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3387": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22104,
        22115
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3388": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3389": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3390": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3392": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3393": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22141,
        22151
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3394": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3395": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3396": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3398": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3399": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22174,
        22181
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3400": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3401": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3402": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3404": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3405": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22221,
        22222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "op": "SUB"
    },
    "3415": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3416": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "GT",
      "path": "15"
    },
    "3417": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3418": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD65"
    },
    "3421": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3422": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD65"
    },
    "3425": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x490A"
    },
    "3428": {
      "fn": "Registry.createActionCallData",
      "jump": "i",
      "offset": [
        22207,
        22223
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3429": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3430": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3432": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3433": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3434": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3435": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3436": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3437": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3438": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3440": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "MUL",
      "path": "15"
    },
    "3441": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3443": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "ADD",
      "path": "15"
    },
    "3444": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3445": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "ADD",
      "path": "15"
    },
    "3446": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3448": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3449": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3450": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3451": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD8E"
    },
    "3454": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3455": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3456": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3458": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "ADD",
      "path": "15"
    },
    "3459": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3461": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3462": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "MUL",
      "path": "15"
    },
    "3463": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3464": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3465": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3466": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3467": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "ADD",
      "path": "15"
    },
    "3468": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22207,
        22223
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3473": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3474": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3476": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3477": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22420,
        22421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3479": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3481": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3482": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3483": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3484": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3485": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3486": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3487": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3489": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "MUL",
      "path": "15"
    },
    "3490": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3492": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "ADD",
      "path": "15"
    },
    "3493": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3494": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "ADD",
      "path": "15"
    },
    "3495": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3497": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3498": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3499": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3500": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDBF"
    },
    "3503": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3504": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3505": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3507": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "ADD",
      "path": "15"
    },
    "3508": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3510": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3511": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "MUL",
      "path": "15"
    },
    "3512": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3513": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3514": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3515": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3516": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "ADD",
      "path": "15"
    },
    "3517": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3518": {
      "op": "POP"
    },
    "3519": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22408,
        22422
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3522": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3523": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3525": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3526": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22465,
        22466
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3528": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3530": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3531": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3532": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3533": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3534": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3535": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3536": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3538": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "MUL",
      "path": "15"
    },
    "3539": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3541": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "ADD",
      "path": "15"
    },
    "3542": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3543": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "ADD",
      "path": "15"
    },
    "3544": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3546": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3547": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3548": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3549": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF0"
    },
    "3552": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3553": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3554": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3556": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "ADD",
      "path": "15"
    },
    "3557": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3559": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3560": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "MUL",
      "path": "15"
    },
    "3561": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3562": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3563": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3564": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3565": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "ADD",
      "path": "15"
    },
    "3566": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22452,
        22467
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3571": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3572": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3574": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3575": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3576": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3577": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3578": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3579": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3581": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3582": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3583": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3584": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3585": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3586": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3588": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3591": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3593": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3594": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3595": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3596": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3597": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3598": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3599": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3601": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "MUL",
      "path": "15"
    },
    "3602": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3604": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "ADD",
      "path": "15"
    },
    "3605": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3606": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "ADD",
      "path": "15"
    },
    "3607": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3609": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3610": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3611": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3612": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE2F"
    },
    "3615": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3616": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3617": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3619": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "ADD",
      "path": "15"
    },
    "3620": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3622": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3623": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "MUL",
      "path": "15"
    },
    "3624": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3625": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3626": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3627": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3628": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "ADD",
      "path": "15"
    },
    "3629": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22321,
        22335
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3634": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3635": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3637": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3638": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22375,
        22376
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3640": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3642": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3643": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3644": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3645": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3646": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3647": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3648": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3650": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "MUL",
      "path": "15"
    },
    "3651": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3653": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3654": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3655": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3656": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3658": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3659": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3660": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3661": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE60"
    },
    "3664": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3665": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3666": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3668": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3669": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3671": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3672": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "MUL",
      "path": "15"
    },
    "3673": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3674": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3675": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3676": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3677": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "ADD",
      "path": "15"
    },
    "3678": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3679": {
      "op": "POP"
    },
    "3680": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22361,
        22377
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3681": {
      "op": "POP"
    },
    "3682": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3683": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3684": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3686": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "ADD",
      "path": "15"
    },
    "3687": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22524,
        22525
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3689": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3691": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3692": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3693": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3694": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3695": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3696": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3697": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3699": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "MUL",
      "path": "15"
    },
    "3700": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3702": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "ADD",
      "path": "15"
    },
    "3703": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3704": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "ADD",
      "path": "15"
    },
    "3705": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3707": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3708": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3709": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3710": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE91"
    },
    "3713": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3714": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3715": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3717": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "ADD",
      "path": "15"
    },
    "3718": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3720": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3721": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "MUL",
      "path": "15"
    },
    "3722": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3723": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "3724": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3725": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "3726": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "ADD",
      "path": "15"
    },
    "3727": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22495,
        22526
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3732": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22025,
        22537
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3733": {
      "fn": "Registry.createActionCallData",
      "offset": [
        22020,
        22537
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "3734": {
      "fn": "Registry.createActionCallData",
      "offset": [
        21735,
        22544
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "3735": {
      "op": "POP"
    },
    "3736": {
      "op": "POP"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "POP"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "fn": "Registry.createActionCallData",
      "jump": "o",
      "offset": [
        21735,
        22544
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3742": {
      "fn": "Registry.bundleCall",
      "offset": [
        14647,
        15256
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3743": {
      "fn": "Registry.bundleCall",
      "offset": [
        14813,
        14814
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 23,
      "value": "0x0"
    },
    "3745": {
      "fn": "Registry.bundleCall",
      "offset": [
        14790,
        14792
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3746": {
      "fn": "Registry.bundleCall",
      "offset": [
        14790,
        14803
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3748": {
      "fn": "Registry.bundleCall",
      "offset": [
        14790,
        14803
      ],
      "op": "ADD",
      "path": "15"
    },
    "3749": {
      "fn": "Registry.bundleCall",
      "offset": [
        14790,
        14803
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3750": {
      "fn": "Registry.bundleCall",
      "offset": [
        14790,
        14810
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3751": {
      "branch": 131,
      "fn": "Registry.bundleCall",
      "offset": [
        14790,
        14814
      ],
      "op": "GT",
      "path": "15"
    },
    "3752": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEE4"
    },
    "3755": {
      "branch": 131,
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3756": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3758": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3767": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3770": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3772": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3773": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "ADD",
      "path": "15"
    },
    "3774": {
      "op": "MSTORE"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3779": {
      "op": "DUP3"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "MSTORE"
    },
    "3782": {
      "op": "PUSH14",
      "value": "0x52654E46543A3A6E6F206E667473"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3799": {
      "op": "SHL"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3802": {
      "op": "DUP3"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "3811": {
      "op": "JUMP"
    },
    "3812": {
      "fn": "Registry.bundleCall",
      "offset": [
        14782,
        14833
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3813": {
      "fn": "Registry.bundleCall",
      "offset": [
        14862,
        14864
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3814": {
      "fn": "Registry.bundleCall",
      "offset": [
        14862,
        14875
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3816": {
      "fn": "Registry.bundleCall",
      "offset": [
        14862,
        14875
      ],
      "op": "ADD",
      "path": "15"
    },
    "3817": {
      "fn": "Registry.bundleCall",
      "offset": [
        14862,
        14875
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3818": {
      "fn": "Registry.bundleCall",
      "offset": [
        14862,
        14882
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3819": {
      "fn": "Registry.bundleCall",
      "offset": [
        14850,
        14852
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3820": {
      "fn": "Registry.bundleCall",
      "offset": [
        14850,
        14858
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3822": {
      "fn": "Registry.bundleCall",
      "offset": [
        14850,
        14858
      ],
      "op": "ADD",
      "path": "15"
    },
    "3823": {
      "fn": "Registry.bundleCall",
      "offset": [
        14850,
        14858
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3824": {
      "fn": "Registry.bundleCall",
      "offset": [
        14850,
        14882
      ],
      "op": "EQ",
      "path": "15"
    },
    "3825": {
      "fn": "Registry.bundleCall",
      "offset": [
        14843,
        15229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFC6"
    },
    "3828": {
      "fn": "Registry.bundleCall",
      "offset": [
        14843,
        15229
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3829": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14948
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3830": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14959
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3832": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14959
      ],
      "op": "ADD",
      "path": "15"
    },
    "3833": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14959
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3834": {
      "fn": "Registry.bundleCall",
      "offset": [
        14960,
        14962
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3835": {
      "fn": "Registry.bundleCall",
      "offset": [
        14960,
        14968
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3837": {
      "fn": "Registry.bundleCall",
      "offset": [
        14960,
        14968
      ],
      "op": "ADD",
      "path": "15"
    },
    "3838": {
      "fn": "Registry.bundleCall",
      "offset": [
        14960,
        14968
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3839": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3840": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3841": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3842": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "LT",
      "path": "15"
    },
    "3843": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF0E"
    },
    "3846": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3847": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF0E"
    },
    "3850": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "3853": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14946,
        14969
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3854": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3855": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3857": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "MUL",
      "path": "15"
    },
    "3858": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3860": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "ADD",
      "path": "15"
    },
    "3861": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "ADD",
      "path": "15"
    },
    "3862": {
      "fn": "Registry.bundleCall",
      "offset": [
        14946,
        14969
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3869": {
      "op": "SHL"
    },
    "3870": {
      "op": "SUB"
    },
    "3871": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14969
      ],
      "op": "AND",
      "path": "15"
    },
    "3872": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14922
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3873": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14933
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "3875": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14933
      ],
      "op": "ADD",
      "path": "15"
    },
    "3876": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14933
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3877": {
      "fn": "Registry.bundleCall",
      "offset": [
        14934,
        14936
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3878": {
      "fn": "Registry.bundleCall",
      "offset": [
        14934,
        14941
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3880": {
      "fn": "Registry.bundleCall",
      "offset": [
        14934,
        14941
      ],
      "op": "ADD",
      "path": "15"
    },
    "3881": {
      "fn": "Registry.bundleCall",
      "offset": [
        14934,
        14941
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3882": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3883": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3884": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3885": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "LT",
      "path": "15"
    },
    "3886": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF39"
    },
    "3889": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3890": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF39"
    },
    "3893": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "3896": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14920,
        14942
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3897": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3898": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3900": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "MUL",
      "path": "15"
    },
    "3901": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3903": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3904": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "ADD",
      "path": "15"
    },
    "3905": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14942
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3912": {
      "op": "SHL"
    },
    "3913": {
      "op": "SUB"
    },
    "3914": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14969
      ],
      "op": "AND",
      "path": "15"
    },
    "3915": {
      "fn": "Registry.bundleCall",
      "offset": [
        14920,
        14969
      ],
      "op": "EQ",
      "path": "15"
    },
    "3916": {
      "fn": "Registry.bundleCall",
      "offset": [
        14919,
        15047
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3917": {
      "fn": "Registry.bundleCall",
      "offset": [
        14919,
        15047
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3918": {
      "fn": "Registry.bundleCall",
      "offset": [
        14919,
        15047
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF89"
    },
    "3921": {
      "fn": "Registry.bundleCall",
      "offset": [
        14919,
        15047
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3922": {
      "op": "POP"
    },
    "3923": {
      "fn": "Registry.bundleCall",
      "offset": [
        15019,
        15046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3925": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        14993
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3926": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15005
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3928": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15005
      ],
      "op": "ADD",
      "path": "15"
    },
    "3929": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15005
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3930": {
      "fn": "Registry.bundleCall",
      "offset": [
        15006,
        15008
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3931": {
      "fn": "Registry.bundleCall",
      "offset": [
        15006,
        15014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3933": {
      "fn": "Registry.bundleCall",
      "offset": [
        15006,
        15014
      ],
      "op": "ADD",
      "path": "15"
    },
    "3934": {
      "fn": "Registry.bundleCall",
      "offset": [
        15006,
        15014
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3935": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3936": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3937": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3938": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "LT",
      "path": "15"
    },
    "3939": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF6E"
    },
    "3942": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3943": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF6E"
    },
    "3946": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "3949": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14991,
        15015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3950": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3951": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3953": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "MUL",
      "path": "15"
    },
    "3954": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3956": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "ADD",
      "path": "15"
    },
    "3957": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "ADD",
      "path": "15"
    },
    "3958": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15015
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3959": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3961": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3962": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "GT",
      "path": "15"
    },
    "3963": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3964": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF87"
    },
    "3967": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3968": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF87"
    },
    "3971": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "3974": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        14991,
        15046
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3975": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3976": {
      "fn": "Registry.bundleCall",
      "offset": [
        14991,
        15046
      ],
      "op": "EQ",
      "path": "15"
    },
    "3977": {
      "fn": "Registry.bundleCall",
      "offset": [
        14919,
        15047
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3978": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        15219
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3979": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        15219
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA6"
    },
    "3982": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        15219
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3983": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15088
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 24,
      "value": "0x20"
    },
    "3985": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15088
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3986": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15088
      ],
      "op": "ADD",
      "path": "15"
    },
    "3987": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3988": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3989": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3990": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF9E"
    },
    "3993": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3994": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "3997": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15080,
        15090
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3998": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3999": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4000": {
      "fn": "Registry.bundleCall",
      "offset": [
        15080,
        15090
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "fn": "Registry.bundleCall",
      "offset": [
        14843,
        15229
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEE4"
    },
    "4005": {
      "fn": "Registry.bundleCall",
      "offset": [
        14843,
        15229
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4006": {
      "fn": "Registry.bundleCall",
      "offset": [
        14898,
        15219
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4007": {
      "fn": "Registry.bundleCall",
      "offset": [
        15129,
        15140
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 25,
      "value": "0xFB3"
    },
    "4010": {
      "fn": "Registry.bundleCall",
      "offset": [
        15137,
        15139
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4011": {
      "fn": "Registry.bundleCall",
      "offset": [
        15129,
        15136
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4012": {
      "fn": "Registry.bundleCall",
      "offset": [
        15129,
        15140
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4017": {
      "fn": "Registry.bundleCall",
      "offset": [
        15129,
        15140
      ],
      "op": "AND",
      "path": "15"
    },
    "4018": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15129,
        15140
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4019": {
      "fn": "Registry.bundleCall",
      "offset": [
        15129,
        15140
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4020": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 26,
      "value": "0x20"
    },
    "4022": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4023": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "ADD",
      "path": "15"
    },
    "4024": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4025": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4026": {
      "fn": "Registry.bundleCall",
      "offset": [
        15158,
        15176
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4027": {
      "fn": "Registry.bundleCall",
      "offset": [
        15158,
        15176
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4028": {
      "fn": "Registry.bundleCall",
      "offset": [
        15158,
        15176
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4029": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4030": {
      "fn": "Registry.bundleCall",
      "offset": [
        15194,
        15204
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 27,
      "value": "0xF9E"
    },
    "4033": {
      "fn": "Registry.bundleCall",
      "offset": [
        15168,
        15176
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4034": {
      "fn": "Registry.bundleCall",
      "offset": [
        15194,
        15204
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "4037": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15194,
        15204
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4038": {
      "fn": "Registry.bundleCall",
      "offset": [
        14843,
        15229
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4039": {
      "fn": "Registry.bundleCall",
      "offset": [
        15238,
        15249
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 28,
      "value": "0xD14"
    },
    "4042": {
      "fn": "Registry.bundleCall",
      "offset": [
        15246,
        15248
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4043": {
      "fn": "Registry.bundleCall",
      "offset": [
        15238,
        15245
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4044": {
      "fn": "Registry.bundleCall",
      "offset": [
        15238,
        15249
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "4049": {
      "fn": "Registry.bundleCall",
      "offset": [
        15238,
        15249
      ],
      "op": "AND",
      "path": "15"
    },
    "4050": {
      "fn": "Registry.bundleCall",
      "jump": "i",
      "offset": [
        15238,
        15249
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4051": {
      "fn": "Registry.handleLend",
      "offset": [
        6068,
        7763
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4052": {
      "fn": "Registry.handleLend",
      "offset": [
        6153,
        6160
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4053": {
      "fn": "Registry.handleLend",
      "offset": [
        6153,
        6160
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4054": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4055": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6168
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4056": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4058": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "ADD",
      "path": "15"
    },
    "4059": {
      "fn": "Registry.handleLend",
      "offset": [
        6166,
        6174
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4060": {
      "fn": "Registry.handleLend",
      "offset": [
        6162,
        6163
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4061": {
      "fn": "Registry.handleLend",
      "offset": [
        6162,
        6174
      ],
      "op": "LT",
      "path": "15"
    },
    "4062": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4063": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1537"
    },
    "4066": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4067": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6218
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 29,
      "value": "0xFEC"
    },
    "4070": {
      "fn": "Registry.handleLend",
      "offset": [
        6212,
        6214
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4071": {
      "fn": "Registry.handleLend",
      "offset": [
        6216,
        6217
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4072": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6211
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AB6"
    },
    "4075": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6195,
        6218
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4076": {
      "fn": "Registry.handleLend",
      "offset": [
        6195,
        6218
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4077": {
      "fn": "Registry.handleLend",
      "offset": [
        6232,
        6250
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4079": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6320
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4080": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4082": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "ADD",
      "path": "15"
    },
    "4083": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6331
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4084": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6334
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4085": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4087": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "ADD",
      "path": "15"
    },
    "4088": {
      "fn": "Registry.handleLend",
      "offset": [
        6332,
        6339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4089": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4090": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4091": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4092": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "LT",
      "path": "15"
    },
    "4093": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1008"
    },
    "4096": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4097": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1008"
    },
    "4100": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4103": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4104": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4105": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4107": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MUL",
      "path": "15"
    },
    "4108": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4110": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "ADD",
      "path": "15"
    },
    "4111": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "ADD",
      "path": "15"
    },
    "4112": {
      "fn": "Registry.handleLend",
      "offset": [
        6318,
        6340
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4113": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6364
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4114": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4116": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "ADD",
      "path": "15"
    },
    "4117": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6372
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4118": {
      "fn": "Registry.handleLend",
      "offset": [
        6373,
        6374
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4119": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4120": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4121": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4122": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "LT",
      "path": "15"
    },
    "4123": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1026"
    },
    "4126": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4127": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1026"
    },
    "4130": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4133": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4134": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4135": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4137": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MUL",
      "path": "15"
    },
    "4138": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4140": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "ADD",
      "path": "15"
    },
    "4141": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "ADD",
      "path": "15"
    },
    "4142": {
      "fn": "Registry.handleLend",
      "offset": [
        6362,
        6375
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4143": {
      "fn": "Registry.handleLend",
      "offset": [
        6397,
        6406
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4145": {
      "fn": "Registry.handleLend",
      "offset": [
        6397,
        6406
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4146": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4148": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4149": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4151": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "ADD",
      "path": "15"
    },
    "4152": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1043"
    },
    "4155": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4156": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4157": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4158": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4159": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "4162": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6280,
        6424
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4163": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4164": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4166": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4167": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4170": {
      "op": "NOT"
    },
    "4171": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4172": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4173": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SUB",
      "path": "15"
    },
    "4174": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "ADD",
      "path": "15"
    },
    "4175": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4176": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4177": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4178": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4179": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4180": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4181": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4182": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4184": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4185": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4186": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "ADD",
      "path": "15"
    },
    "4187": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4188": {
      "fn": "Registry.handleLend",
      "offset": [
        6452,
        6485
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4190": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4191": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4192": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4193": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4195": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4196": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4197": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4198": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4199": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4200": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4201": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4202": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 30,
      "value": "0xE0"
    },
    "4204": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4205": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4206": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4207": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4208": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4209": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4210": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4211": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4212": {
      "fn": "Registry.handleLend",
      "offset": [
        6253,
        6438
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4213": {
      "op": "POP"
    },
    "4214": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4215": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4216": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x113B"
    },
    "4219": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4220": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4221": {
      "fn": "Registry.handleLend",
      "offset": [
        6488,
        6508
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4222": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4223": {
      "fn": "Registry.handleLend",
      "offset": [
        6280,
        6424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4224": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4226": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4227": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4229": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4230": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4231": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4232": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1093"
    },
    "4235": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4236": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1093"
    },
    "4239": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4242": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4243": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4244": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4246": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4247": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4248": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4249": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10A4"
    },
    "4252": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4253": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10A4"
    },
    "4256": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4259": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4260": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4261": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4262": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4263": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4264": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4271": {
      "op": "SHL"
    },
    "4272": {
      "op": "SUB"
    },
    "4273": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4276": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4277": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4278": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4279": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4281": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4282": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4283": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4284": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4292": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4293": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4294": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4295": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4297": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4298": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4299": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4306": {
      "op": "SHL"
    },
    "4307": {
      "op": "SUB"
    },
    "4308": {
      "op": "NOT"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4313": {
      "op": "SHL"
    },
    "4314": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4315": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4316": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4318": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SHL",
      "path": "15"
    },
    "4319": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4320": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4322": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4323": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4324": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4325": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4332": {
      "op": "SHL"
    },
    "4333": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4334": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4335": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4336": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4337": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4339": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4340": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4341": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4346": {
      "op": "SHL"
    },
    "4347": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4348": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4349": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4350": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4352": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4353": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4354": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4355": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "4357": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4358": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4359": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ADD",
      "path": "15"
    },
    "4360": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4365": {
      "op": "SHL"
    },
    "4366": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4367": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4368": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DIV",
      "path": "15"
    },
    "4369": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "AND",
      "path": "15"
    },
    "4370": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4372": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4373": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4374": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4375": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1122"
    },
    "4378": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4379": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1122"
    },
    "4382": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4385": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4386": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4387": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4389": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4390": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "GT",
      "path": "15"
    },
    "4391": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4392": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1133"
    },
    "4395": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4396": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1133"
    },
    "4399": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4402": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4403": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4404": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4405": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4406": {
      "op": "POP"
    },
    "4407": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C2C"
    },
    "4410": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4411": {
      "fn": "Registry.handleLend",
      "offset": [
        6522,
        6543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4412": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6606
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 31,
      "value": "0x1173"
    },
    "4415": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6588
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4416": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "4419": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "ADD",
      "path": "15"
    },
    "4420": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6601
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4421": {
      "fn": "Registry.handleLend",
      "offset": [
        6602,
        6603
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4422": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4423": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4424": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4425": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "LT",
      "path": "15"
    },
    "4426": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1155"
    },
    "4429": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4430": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1155"
    },
    "4433": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4436": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4437": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4438": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4440": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MUL",
      "path": "15"
    },
    "4441": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4443": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "ADD",
      "path": "15"
    },
    "4444": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "ADD",
      "path": "15"
    },
    "4445": {
      "fn": "Registry.handleLend",
      "offset": [
        6586,
        6604
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4446": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4448": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4449": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "GT",
      "path": "15"
    },
    "4450": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4451": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116E"
    },
    "4454": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4455": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x116E"
    },
    "4458": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4461": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4462": {
      "fn": "Registry.handleLend",
      "offset": [
        6580,
        6605
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4463": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2CE5"
    },
    "4466": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6557,
        6606
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4467": {
      "fn": "Registry.handleLend",
      "offset": [
        6557,
        6606
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4468": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6630
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4470": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6630
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4471": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6635
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4472": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4474": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "ADD",
      "path": "15"
    },
    "4475": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6647
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4476": {
      "fn": "Registry.handleLend",
      "offset": [
        6648,
        6649
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4477": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4478": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4479": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4480": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "LT",
      "path": "15"
    },
    "4481": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x118C"
    },
    "4484": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4485": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x118C"
    },
    "4488": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4491": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4492": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4493": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4495": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MUL",
      "path": "15"
    },
    "4496": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4498": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "ADD",
      "path": "15"
    },
    "4499": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "ADD",
      "path": "15"
    },
    "4500": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6650
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4501": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4503": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4504": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "GT",
      "path": "15"
    },
    "4505": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4506": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A5"
    },
    "4509": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4510": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11A5"
    },
    "4513": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4516": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4517": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4518": {
      "fn": "Registry.handleLend",
      "offset": [
        6633,
        6680
      ],
      "op": "EQ",
      "path": "15"
    },
    "4519": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6680
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4520": {
      "fn": "Registry.handleLend",
      "offset": [
        6620,
        6680
      ],
      "op": "POP",
      "path": "15"
    },
    "4521": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 32,
      "value": "0x40"
    },
    "4523": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4524": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4525": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4527": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4528": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4530": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4531": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4532": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6768
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4533": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4535": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "ADD",
      "path": "15"
    },
    "4536": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6780
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4537": {
      "fn": "Registry.handleLend",
      "offset": [
        6781,
        6782
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4538": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4539": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4540": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4541": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "LT",
      "path": "15"
    },
    "4542": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C9"
    },
    "4545": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4546": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11C9"
    },
    "4549": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4552": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4553": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4554": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4556": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MUL",
      "path": "15"
    },
    "4557": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4559": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "ADD",
      "path": "15"
    },
    "4560": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "ADD",
      "path": "15"
    },
    "4561": {
      "fn": "Registry.handleLend",
      "offset": [
        6766,
        6783
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4562": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4564": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4565": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "GT",
      "path": "15"
    },
    "4566": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4567": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11E2"
    },
    "4570": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4571": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x11E2"
    },
    "4574": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4577": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4578": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4579": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4580": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4581": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4583": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4584": {
      "fn": "Registry.handleLend",
      "offset": [
        6824,
        6834
      ],
      "op": "CALLER",
      "path": "15"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "op": "SUB"
    },
    "4593": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4594": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4595": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4596": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4598": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4599": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6872
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4600": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "4602": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "ADD",
      "path": "15"
    },
    "4603": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6888
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4604": {
      "fn": "Registry.handleLend",
      "offset": [
        6889,
        6890
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4605": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4606": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4607": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4608": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "LT",
      "path": "15"
    },
    "4609": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120C"
    },
    "4612": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4613": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120C"
    },
    "4616": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4619": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4620": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4621": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4623": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MUL",
      "path": "15"
    },
    "4624": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4626": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "ADD",
      "path": "15"
    },
    "4627": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "ADD",
      "path": "15"
    },
    "4628": {
      "fn": "Registry.handleLend",
      "offset": [
        6870,
        6891
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4629": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4631": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4632": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4633": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4634": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4636": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4637": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6927
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4638": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4640": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "ADD",
      "path": "15"
    },
    "4641": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6942
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4642": {
      "fn": "Registry.handleLend",
      "offset": [
        6943,
        6944
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4643": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4644": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4645": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4646": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "LT",
      "path": "15"
    },
    "4647": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1232"
    },
    "4650": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4651": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1232"
    },
    "4654": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4657": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4658": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4659": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4661": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MUL",
      "path": "15"
    },
    "4662": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4664": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "ADD",
      "path": "15"
    },
    "4665": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "ADD",
      "path": "15"
    },
    "4666": {
      "fn": "Registry.handleLend",
      "offset": [
        6925,
        6945
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "op": "SUB"
    },
    "4675": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "NOT",
      "path": "15"
    },
    "4676": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4677": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4678": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4679": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4681": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4682": {
      "branch": 132,
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        6980
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4683": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1271"
    },
    "4686": {
      "branch": 132,
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4687": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        6995
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4688": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7006
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4690": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7006
      ],
      "op": "ADD",
      "path": "15"
    },
    "4691": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7006
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4692": {
      "fn": "Registry.handleLend",
      "offset": [
        7007,
        7008
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4693": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4694": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4695": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4696": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "LT",
      "path": "15"
    },
    "4697": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1264"
    },
    "4700": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4701": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1264"
    },
    "4704": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4707": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4708": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4709": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4711": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "MUL",
      "path": "15"
    },
    "4712": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4714": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "ADD",
      "path": "15"
    },
    "4715": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "ADD",
      "path": "15"
    },
    "4716": {
      "fn": "Registry.handleLend",
      "offset": [
        6993,
        7009
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4717": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1274"
    },
    "4720": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4721": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4722": {
      "fn": "Registry.handleLend",
      "offset": [
        6983,
        6984
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4724": {
      "fn": "Registry.handleLend",
      "offset": [
        6975,
        7010
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4725": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4727": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4728": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4729": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4730": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4732": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4733": {
      "branch": 133,
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7050
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4734": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12A4"
    },
    "4737": {
      "branch": 133,
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4738": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7065
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4739": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7076
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4741": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7076
      ],
      "op": "ADD",
      "path": "15"
    },
    "4742": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7076
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4743": {
      "fn": "Registry.handleLend",
      "offset": [
        7077,
        7078
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4744": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4745": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4746": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4747": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "LT",
      "path": "15"
    },
    "4748": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1297"
    },
    "4751": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4752": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1297"
    },
    "4755": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4758": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7063,
        7079
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4759": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4760": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4762": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "MUL",
      "path": "15"
    },
    "4763": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4765": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "ADD",
      "path": "15"
    },
    "4766": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "ADD",
      "path": "15"
    },
    "4767": {
      "fn": "Registry.handleLend",
      "offset": [
        7063,
        7079
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4768": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12A7"
    },
    "4771": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4772": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4773": {
      "fn": "Registry.handleLend",
      "offset": [
        7053,
        7054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4775": {
      "fn": "Registry.handleLend",
      "offset": [
        7045,
        7080
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4776": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4778": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4779": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "4782": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4783": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4784": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4785": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4787": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4788": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7114
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4789": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7127
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "4792": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7127
      ],
      "op": "ADD",
      "path": "15"
    },
    "4793": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7127
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4794": {
      "fn": "Registry.handleLend",
      "offset": [
        7128,
        7129
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4795": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4796": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4797": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4798": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "LT",
      "path": "15"
    },
    "4799": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12CA"
    },
    "4802": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4803": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12CA"
    },
    "4806": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "4809": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7112,
        7130
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4810": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4811": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4813": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "MUL",
      "path": "15"
    },
    "4814": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4816": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "ADD",
      "path": "15"
    },
    "4817": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "ADD",
      "path": "15"
    },
    "4818": {
      "fn": "Registry.handleLend",
      "offset": [
        7112,
        7130
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4819": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "4821": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4822": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "GT",
      "path": "15"
    },
    "4823": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4824": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12E3"
    },
    "4827": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4828": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12E3"
    },
    "4831": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4834": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4835": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4836": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4837": {
      "fn": "Registry.handleLend",
      "offset": [
        6717,
        7145
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4838": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4840": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4841": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4842": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4843": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6702
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "4845": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4847": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4848": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4850": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4851": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "4852": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4853": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4854": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4855": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4856": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4857": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        6714
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4860": {
      "op": "NOT"
    },
    "4861": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4862": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4864": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4865": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4866": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4867": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "GT",
      "path": "15"
    },
    "4868": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4869": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1310"
    },
    "4872": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4873": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1310"
    },
    "4876": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "4879": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4880": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4881": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "4882": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "4883": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4884": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4885": {
      "op": "POP"
    },
    "4886": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4888": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4889": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4890": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4891": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4892": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4893": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4895": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4896": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4897": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4898": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "4900": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4901": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4902": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4903": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "4905": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4906": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4907": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4908": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "4910": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4911": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "4912": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4920": {
      "op": "SHL"
    },
    "4921": {
      "op": "SUB"
    },
    "4922": {
      "op": "NOT"
    },
    "4923": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4924": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4925": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4926": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "op": "SUB"
    },
    "4937": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4938": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "4939": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4940": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "4941": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4942": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "4943": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4948": {
      "op": "SHL"
    },
    "4949": {
      "op": "NOT"
    },
    "4950": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4951": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4952": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4953": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "4954": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4959": {
      "op": "SHL"
    },
    "4960": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4962": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4963": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "4964": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4965": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4966": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4967": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4968": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "4969": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4970": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4971": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4972": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "4973": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "NOT"
    },
    "4984": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4989": {
      "op": "SHL"
    },
    "4990": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "4992": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4993": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4994": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4995": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SHR",
      "path": "15"
    },
    "4996": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4997": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4998": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4999": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "5000": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "op": "NOT"
    },
    "5007": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "5008": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5013": {
      "op": "SHL"
    },
    "5014": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "5017": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5018": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5019": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "5020": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "5021": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "5022": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "op": "NOT"
    },
    "5029": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5030": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5035": {
      "op": "SHL"
    },
    "5036": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5037": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5038": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5039": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "5040": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5041": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5042": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5043": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "5044": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5045": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5046": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "5047": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5048": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5049": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "5051": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5052": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ADD",
      "path": "15"
    },
    "5053": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5054": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5055": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5056": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5057": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "op": "NOT"
    },
    "5065": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5066": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5067": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5072": {
      "op": "SHL"
    },
    "5073": {
      "op": "NOT"
    },
    "5074": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5075": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5076": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "AND",
      "path": "15"
    },
    "5077": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5082": {
      "op": "SHL"
    },
    "5083": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5084": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "5086": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5087": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "GT",
      "path": "15"
    },
    "5088": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5089": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13EC"
    },
    "5092": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5093": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13EC"
    },
    "5096": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "5099": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5100": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5101": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "MUL",
      "path": "15"
    },
    "5102": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "OR",
      "path": "15"
    },
    "5103": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5104": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5105": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "POP",
      "path": "15"
    },
    "5106": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5107": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "POP",
      "path": "15"
    },
    "5108": {
      "fn": "Registry.handleLend",
      "offset": [
        6694,
        7145
      ],
      "op": "POP",
      "path": "15"
    },
    "5109": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7289
      ],
      "op": "DUP5",
      "path": "15",
      "statement": 33
    },
    "5110": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5112": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7297
      ],
      "op": "ADD",
      "path": "15"
    },
    "5113": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7297
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5114": {
      "fn": "Registry.handleLend",
      "offset": [
        7298,
        7299
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5115": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5116": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5117": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5118": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "LT",
      "path": "15"
    },
    "5119": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140A"
    },
    "5122": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5123": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140A"
    },
    "5126": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5129": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7287,
        7300
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5130": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5131": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5133": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "MUL",
      "path": "15"
    },
    "5134": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5136": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "ADD",
      "path": "15"
    },
    "5137": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "ADD",
      "path": "15"
    },
    "5138": {
      "fn": "Registry.handleLend",
      "offset": [
        7287,
        7300
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5139": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7249
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5140": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5142": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7260
      ],
      "op": "ADD",
      "path": "15"
    },
    "5143": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7260
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5144": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7263
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5145": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7268
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5147": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7268
      ],
      "op": "ADD",
      "path": "15"
    },
    "5148": {
      "fn": "Registry.handleLend",
      "offset": [
        7261,
        7268
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5149": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5150": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5151": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5152": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "LT",
      "path": "15"
    },
    "5153": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x142C"
    },
    "5156": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5157": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x142C"
    },
    "5160": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5163": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7247,
        7269
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5164": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5165": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5167": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "MUL",
      "path": "15"
    },
    "5168": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5170": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "ADD",
      "path": "15"
    },
    "5171": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "ADD",
      "path": "15"
    },
    "5172": {
      "fn": "Registry.handleLend",
      "offset": [
        7247,
        7269
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5179": {
      "op": "SHL"
    },
    "5180": {
      "op": "SUB"
    },
    "5181": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "AND",
      "path": "15"
    },
    "5182": {
      "fn": "Registry.handleLend",
      "offset": [
        7219,
        7229
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5189": {
      "op": "SHL"
    },
    "5190": {
      "op": "SUB"
    },
    "5191": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "AND",
      "path": "15"
    },
    "5192": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x46E173C7568BB4F093E16923381DCBA2A6B48F9CC9E688867965731218500AD3"
    },
    "5225": {
      "fn": "Registry.handleLend",
      "offset": [
        7196,
        7201
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5226": {
      "fn": "Registry.handleLend",
      "offset": [
        7318,
        7327
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "5228": {
      "fn": "Registry.handleLend",
      "offset": [
        7318,
        7327
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5229": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7347
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5230": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7363
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "5232": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7363
      ],
      "op": "ADD",
      "path": "15"
    },
    "5233": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7363
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5234": {
      "fn": "Registry.handleLend",
      "offset": [
        7364,
        7365
      ],
      "op": "DUP11",
      "path": "15"
    },
    "5235": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5236": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5237": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5238": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "LT",
      "path": "15"
    },
    "5239": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1482"
    },
    "5242": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5243": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1482"
    },
    "5246": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5249": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7345,
        7366
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5250": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5251": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5253": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "MUL",
      "path": "15"
    },
    "5254": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5256": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "ADD",
      "path": "15"
    },
    "5257": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "ADD",
      "path": "15"
    },
    "5258": {
      "fn": "Registry.handleLend",
      "offset": [
        7345,
        7366
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5259": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7386
      ],
      "op": "DUP12",
      "path": "15"
    },
    "5260": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7401
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "5262": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7401
      ],
      "op": "ADD",
      "path": "15"
    },
    "5263": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7401
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5264": {
      "fn": "Registry.handleLend",
      "offset": [
        7402,
        7403
      ],
      "op": "DUP12",
      "path": "15"
    },
    "5265": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5266": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5267": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5268": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "LT",
      "path": "15"
    },
    "5269": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A0"
    },
    "5272": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5273": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14A0"
    },
    "5276": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5279": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7384,
        7404
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5280": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5281": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5283": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "MUL",
      "path": "15"
    },
    "5284": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5286": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "ADD",
      "path": "15"
    },
    "5287": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "ADD",
      "path": "15"
    },
    "5288": {
      "fn": "Registry.handleLend",
      "offset": [
        7384,
        7404
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5289": {
      "branch": 134,
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7427
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5290": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D0"
    },
    "5293": {
      "branch": 134,
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5294": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7442
      ],
      "op": "DUP13",
      "path": "15"
    },
    "5295": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7453
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "5297": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7453
      ],
      "op": "ADD",
      "path": "15"
    },
    "5298": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7453
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5299": {
      "fn": "Registry.handleLend",
      "offset": [
        7454,
        7455
      ],
      "op": "DUP13",
      "path": "15"
    },
    "5300": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5301": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5302": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5303": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "LT",
      "path": "15"
    },
    "5304": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14C3"
    },
    "5307": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5308": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14C3"
    },
    "5311": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5314": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7440,
        7456
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5315": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5316": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5318": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "MUL",
      "path": "15"
    },
    "5319": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5321": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "ADD",
      "path": "15"
    },
    "5322": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "ADD",
      "path": "15"
    },
    "5323": {
      "fn": "Registry.handleLend",
      "offset": [
        7440,
        7456
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5324": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14D3"
    },
    "5327": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5328": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5329": {
      "fn": "Registry.handleLend",
      "offset": [
        7430,
        7431
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5331": {
      "fn": "Registry.handleLend",
      "offset": [
        7422,
        7457
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5332": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7477
      ],
      "op": "DUP14",
      "path": "15"
    },
    "5333": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180"
    },
    "5336": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7490
      ],
      "op": "ADD",
      "path": "15"
    },
    "5337": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7490
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5338": {
      "fn": "Registry.handleLend",
      "offset": [
        7491,
        7492
      ],
      "op": "DUP14",
      "path": "15"
    },
    "5339": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5340": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5341": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5342": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "LT",
      "path": "15"
    },
    "5343": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14EA"
    },
    "5346": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5347": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x14EA"
    },
    "5350": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5353": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7475,
        7493
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5354": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5355": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5357": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "MUL",
      "path": "15"
    },
    "5358": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5360": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "ADD",
      "path": "15"
    },
    "5361": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "ADD",
      "path": "15"
    },
    "5362": {
      "fn": "Registry.handleLend",
      "offset": [
        7475,
        7493
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5363": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5365": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5366": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1504"
    },
    "5369": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "5370": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "5371": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "5372": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5373": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5374": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5375": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5376": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44D7"
    },
    "5379": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7164,
        7507
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5380": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5381": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5383": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5384": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5385": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5386": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SUB",
      "path": "15"
    },
    "5387": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5388": {
      "fn": "Registry.handleLend",
      "offset": [
        7164,
        7507
      ],
      "op": "LOG4",
      "path": "15"
    },
    "5389": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7530
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 34,
      "value": "0x3"
    },
    "5391": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5392": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5393": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5394": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7530
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5396": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x151C"
    },
    "5399": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5400": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "5403": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7521,
        7532
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5404": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5405": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5406": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5407": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "POP",
      "path": "15"
    },
    "5408": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5409": {
      "fn": "Registry.handleLend",
      "offset": [
        7521,
        7532
      ],
      "op": "POP",
      "path": "15"
    },
    "5410": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7543
      ],
      "op": "POP",
      "path": "15"
    },
    "5411": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7543
      ],
      "op": "POP",
      "path": "15"
    },
    "5412": {
      "fn": "Registry.handleLend",
      "offset": [
        6181,
        7543
      ],
      "op": "POP",
      "path": "15"
    },
    "5413": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 35
    },
    "5414": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5415": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x152F"
    },
    "5418": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5419": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "5422": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        6176,
        6179
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5423": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5424": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5425": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "POP",
      "path": "15"
    },
    "5426": {
      "fn": "Registry.handleLend",
      "offset": [
        6176,
        6179
      ],
      "op": "POP",
      "path": "15"
    },
    "5427": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFD6"
    },
    "5430": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5431": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5432": {
      "fn": "Registry.handleLend",
      "offset": [
        6136,
        7543
      ],
      "op": "POP",
      "path": "15"
    },
    "5433": {
      "fn": "Registry.handleLend",
      "offset": [
        7552,
        7756
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 36,
      "value": "0x1575"
    },
    "5436": {
      "fn": "Registry.handleLend",
      "offset": [
        7578,
        7580
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5437": {
      "fn": "Registry.handleLend",
      "offset": [
        7594,
        7604
      ],
      "op": "CALLER",
      "path": "15"
    },
    "5438": {
      "fn": "Registry.handleLend",
      "offset": [
        7626,
        7630
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "5439": {
      "fn": "Registry.handleLend",
      "offset": [
        7645,
        7687
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1557"
    },
    "5442": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7656
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5443": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7664
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5445": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7664
      ],
      "op": "ADD",
      "path": "15"
    },
    "5446": {
      "fn": "Registry.handleLend",
      "offset": [
        7654,
        7664
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5447": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7668
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5448": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7673
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5450": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7673
      ],
      "op": "ADD",
      "path": "15"
    },
    "5451": {
      "fn": "Registry.handleLend",
      "offset": [
        7666,
        7673
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5452": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7677
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5453": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7683
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5455": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7683
      ],
      "op": "ADD",
      "path": "15"
    },
    "5456": {
      "fn": "Registry.handleLend",
      "offset": [
        7675,
        7683
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5457": {
      "fn": "Registry.handleLend",
      "offset": [
        7685,
        7686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5459": {
      "fn": "Registry.handleLend",
      "offset": [
        7645,
        7653
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D38"
    },
    "5462": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7645,
        7687
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5463": {
      "fn": "Registry.handleLend",
      "offset": [
        7645,
        7687
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5464": {
      "fn": "Registry.handleLend",
      "offset": [
        7701,
        7746
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1570"
    },
    "5467": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7712
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5468": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7723
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "5470": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7723
      ],
      "op": "ADD",
      "path": "15"
    },
    "5471": {
      "fn": "Registry.handleLend",
      "offset": [
        7710,
        7723
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5472": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7727
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5473": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5475": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7732
      ],
      "op": "ADD",
      "path": "15"
    },
    "5476": {
      "fn": "Registry.handleLend",
      "offset": [
        7725,
        7732
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5477": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7736
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5478": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7742
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5480": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7742
      ],
      "op": "ADD",
      "path": "15"
    },
    "5481": {
      "fn": "Registry.handleLend",
      "offset": [
        7734,
        7742
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5482": {
      "fn": "Registry.handleLend",
      "offset": [
        7744,
        7745
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5484": {
      "fn": "Registry.handleLend",
      "offset": [
        7701,
        7709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D38"
    },
    "5487": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7701,
        7746
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5488": {
      "fn": "Registry.handleLend",
      "offset": [
        7701,
        7746
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5489": {
      "fn": "Registry.handleLend",
      "offset": [
        7552,
        7564
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DF7"
    },
    "5492": {
      "fn": "Registry.handleLend",
      "jump": "i",
      "offset": [
        7552,
        7756
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5493": {
      "fn": "Registry.handleLend",
      "offset": [
        7552,
        7756
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5494": {
      "fn": "Registry.handleLend",
      "offset": [
        6068,
        7763
      ],
      "op": "POP",
      "path": "15"
    },
    "5495": {
      "fn": "Registry.handleLend",
      "jump": "o",
      "offset": [
        6068,
        7763
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5496": {
      "fn": "Registry.createLendCallData",
      "offset": [
        19990,
        20881
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5497": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20340,
        20358
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1580"
    },
    "5500": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20340,
        20358
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A88"
    },
    "5503": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20340,
        20358
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5504": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20340,
        20358
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5505": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 37,
      "value": "0x40"
    },
    "5507": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5508": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5509": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "5512": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5513": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5515": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5516": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5517": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20404,
        20405
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5519": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5520": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5521": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5523": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5524": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20426,
        20427
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "5526": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5527": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5528": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5530": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5531": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20454,
        20465
      ],
      "op": "DUP10",
      "path": "15"
    },
    "5532": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5533": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5534": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5536": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5537": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20491,
        20501
      ],
      "op": "DUP9",
      "path": "15"
    },
    "5538": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5539": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5540": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5542": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5543": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20524,
        20531
      ],
      "op": "DUP8",
      "path": "15"
    },
    "5544": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5545": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5546": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5548": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5549": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20557,
        20567
      ],
      "op": "DUP7",
      "path": "15"
    },
    "5550": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5551": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5552": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5554": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5555": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20764,
        20779
      ],
      "op": "DUP6",
      "path": "15"
    },
    "5556": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5557": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5558": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5560": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5561": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20809,
        20823
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5562": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5563": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5564": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5566": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5567": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20606,
        20607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5575": {
      "op": "SHL"
    },
    "5576": {
      "op": "SUB"
    },
    "5577": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5578": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "GT",
      "path": "15"
    },
    "5579": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5580": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15D7"
    },
    "5583": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5584": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x15D7"
    },
    "5587": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x490A"
    },
    "5590": {
      "fn": "Registry.createLendCallData",
      "jump": "i",
      "offset": [
        20592,
        20608
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5591": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5592": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5594": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5595": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5596": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5597": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5598": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5599": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5600": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5602": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "MUL",
      "path": "15"
    },
    "5603": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5605": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5606": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5607": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5608": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5610": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5611": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5612": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5613": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1600"
    },
    "5616": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5617": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5618": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5620": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5621": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5623": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5624": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "MUL",
      "path": "15"
    },
    "5625": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5626": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5627": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5628": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5629": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "ADD",
      "path": "15"
    },
    "5630": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20592,
        20608
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5633": {
      "op": "POP"
    },
    "5634": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5635": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5636": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5638": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5639": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20647,
        20648
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5641": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5643": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5644": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5645": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5646": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5647": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5648": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5649": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5651": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "MUL",
      "path": "15"
    },
    "5652": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5654": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "ADD",
      "path": "15"
    },
    "5655": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5656": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "ADD",
      "path": "15"
    },
    "5657": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5659": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5660": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5661": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5662": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1631"
    },
    "5665": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5666": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5667": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5669": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "ADD",
      "path": "15"
    },
    "5670": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5672": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5673": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "MUL",
      "path": "15"
    },
    "5674": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5675": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5676": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5677": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5678": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "ADD",
      "path": "15"
    },
    "5679": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5680": {
      "op": "POP"
    },
    "5681": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20633,
        20649
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5684": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5685": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5687": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5688": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20689,
        20690
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5690": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5692": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5693": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5694": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5695": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5696": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5697": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5698": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5700": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "MUL",
      "path": "15"
    },
    "5701": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5703": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "ADD",
      "path": "15"
    },
    "5704": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5705": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "ADD",
      "path": "15"
    },
    "5706": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5708": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5709": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5710": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5711": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1662"
    },
    "5714": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5715": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5716": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5718": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "ADD",
      "path": "15"
    },
    "5719": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5721": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5722": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "MUL",
      "path": "15"
    },
    "5723": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5724": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5725": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5726": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5727": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "ADD",
      "path": "15"
    },
    "5728": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5729": {
      "op": "POP"
    },
    "5730": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20677,
        20691
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5733": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5734": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5736": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5737": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20731,
        20732
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5739": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5741": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5742": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5743": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5744": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5745": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5746": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5747": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5749": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "MUL",
      "path": "15"
    },
    "5750": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5752": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "ADD",
      "path": "15"
    },
    "5753": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5754": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "ADD",
      "path": "15"
    },
    "5755": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5757": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5758": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5759": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5760": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1693"
    },
    "5763": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5764": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5765": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5767": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "ADD",
      "path": "15"
    },
    "5768": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5770": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5771": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "MUL",
      "path": "15"
    },
    "5772": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5773": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "5774": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5775": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "5776": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "ADD",
      "path": "15"
    },
    "5777": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20717,
        20733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5782": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5783": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5785": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "ADD",
      "path": "15"
    },
    "5786": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5787": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5788": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5789": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20375,
        20874
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5790": {
      "op": "POP"
    },
    "5791": {
      "fn": "Registry.createLendCallData",
      "offset": [
        20370,
        20874
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "5792": {
      "fn": "Registry.createLendCallData",
      "offset": [
        19990,
        20881
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "5793": {
      "op": "POP"
    },
    "5794": {
      "op": "POP"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "op": "POP"
    },
    "5797": {
      "op": "POP"
    },
    "5798": {
      "op": "POP"
    },
    "5799": {
      "fn": "Registry.createLendCallData",
      "jump": "o",
      "offset": [
        19990,
        20881
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5800": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13235,
        14459
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5801": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13315,
        13322
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5802": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13315,
        13322
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5803": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13298,
        14453
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5804": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13328,
        13330
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5805": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13328,
        13336
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5807": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13328,
        13336
      ],
      "op": "ADD",
      "path": "15"
    },
    "5808": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13328,
        13336
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5809": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13324,
        13325
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5810": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13324,
        13336
      ],
      "op": "LT",
      "path": "15"
    },
    "5811": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13298,
        14453
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5812": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13298,
        14453
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "5815": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13298,
        14453
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5816": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13357,
        13382
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5818": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13452
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5819": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13463
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5821": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13463
      ],
      "op": "ADD",
      "path": "15"
    },
    "5822": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13463
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5823": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13464,
        13466
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5824": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13464,
        13471
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5826": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13464,
        13471
      ],
      "op": "ADD",
      "path": "15"
    },
    "5827": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13464,
        13471
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5828": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5829": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5830": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5831": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "LT",
      "path": "15"
    },
    "5832": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16D3"
    },
    "5835": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5836": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16D3"
    },
    "5839": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5842": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13450,
        13472
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5843": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5844": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5846": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "MUL",
      "path": "15"
    },
    "5847": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5849": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "ADD",
      "path": "15"
    },
    "5850": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "ADD",
      "path": "15"
    },
    "5851": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13450,
        13472
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5852": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13496
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5853": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13504
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5855": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13504
      ],
      "op": "ADD",
      "path": "15"
    },
    "5856": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13504
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5857": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13505,
        13506
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5858": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5859": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5860": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5861": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "LT",
      "path": "15"
    },
    "5862": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16F1"
    },
    "5865": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5866": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16F1"
    },
    "5869": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5872": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13494,
        13507
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5873": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5874": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5876": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "MUL",
      "path": "15"
    },
    "5877": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5879": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "ADD",
      "path": "15"
    },
    "5880": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "ADD",
      "path": "15"
    },
    "5881": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13494,
        13507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5882": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13531
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5883": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13541
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5886": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13541
      ],
      "op": "ADD",
      "path": "15"
    },
    "5887": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13541
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5888": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13542,
        13543
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5889": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5890": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5891": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5892": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "LT",
      "path": "15"
    },
    "5893": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1710"
    },
    "5896": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5897": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1710"
    },
    "5900": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5903": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13529,
        13544
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5904": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5905": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5907": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "MUL",
      "path": "15"
    },
    "5908": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5910": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "ADD",
      "path": "15"
    },
    "5911": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "ADD",
      "path": "15"
    },
    "5912": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13529,
        13544
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5913": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5915": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5916": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5918": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "ADD",
      "path": "15"
    },
    "5919": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x172A"
    },
    "5922": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "5923": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5924": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5925": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5926": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "5929": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13412,
        13562
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5930": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5931": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5933": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5934": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5936": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5937": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5938": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SUB",
      "path": "15"
    },
    "5939": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SUB",
      "path": "15"
    },
    "5940": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5941": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5942": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5943": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "5945": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13412,
        13562
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5946": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13385,
        13576
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5947": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13385,
        13576
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5948": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13385,
        13576
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5949": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13385,
        13576
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5951": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13385,
        13576
      ],
      "op": "ADD",
      "path": "15"
    },
    "5952": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13385,
        13576
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "5953": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13357,
        13576
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5954": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13357,
        13576
      ],
      "op": "POP",
      "path": "15"
    },
    "5955": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13590,
        13615
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5957": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13685
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5958": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13696
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5960": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13696
      ],
      "op": "ADD",
      "path": "15"
    },
    "5961": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13696
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5962": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13697,
        13699
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5963": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13697,
        13704
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5965": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13697,
        13704
      ],
      "op": "ADD",
      "path": "15"
    },
    "5966": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13697,
        13704
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5967": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5968": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5969": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5970": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "LT",
      "path": "15"
    },
    "5971": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x175E"
    },
    "5974": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5975": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x175E"
    },
    "5978": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "5981": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13683,
        13705
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5982": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5983": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5985": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "MUL",
      "path": "15"
    },
    "5986": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "5988": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "ADD",
      "path": "15"
    },
    "5989": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "ADD",
      "path": "15"
    },
    "5990": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13683,
        13705
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5991": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13729
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5992": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13737
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "5994": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13737
      ],
      "op": "ADD",
      "path": "15"
    },
    "5995": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13737
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5996": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13738,
        13739
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5997": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5998": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5999": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6000": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "LT",
      "path": "15"
    },
    "6001": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x177C"
    },
    "6004": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6005": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x177C"
    },
    "6008": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "6011": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13727,
        13740
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6012": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6013": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6015": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "MUL",
      "path": "15"
    },
    "6016": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6018": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "ADD",
      "path": "15"
    },
    "6019": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "ADD",
      "path": "15"
    },
    "6020": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13727,
        13740
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6021": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13764
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6022": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13774
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x120"
    },
    "6025": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13774
      ],
      "op": "ADD",
      "path": "15"
    },
    "6026": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13774
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6027": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13775,
        13776
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6028": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6029": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6030": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6031": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "LT",
      "path": "15"
    },
    "6032": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x179B"
    },
    "6035": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6036": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x179B"
    },
    "6039": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "6042": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13762,
        13777
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6043": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6044": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6046": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "MUL",
      "path": "15"
    },
    "6047": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6049": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "ADD",
      "path": "15"
    },
    "6050": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "ADD",
      "path": "15"
    },
    "6051": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13762,
        13777
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6052": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6054": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6055": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6057": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "ADD",
      "path": "15"
    },
    "6058": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x17B5"
    },
    "6061": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6062": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6063": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6064": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6065": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "6068": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13645,
        13795
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6069": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6070": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6072": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6073": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6076": {
      "op": "NOT"
    },
    "6077": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6078": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6079": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "SUB",
      "path": "15"
    },
    "6080": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "ADD",
      "path": "15"
    },
    "6081": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6082": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6083": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6084": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6085": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6086": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6087": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6088": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6090": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6091": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6092": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "ADD",
      "path": "15"
    },
    "6093": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6094": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13823,
        13856
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6096": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6097": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6098": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6099": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13867
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "6101": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6102": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6103": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6104": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6105": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6106": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6107": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6108": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6109": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13944
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6111": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6112": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6113": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6114": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6115": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6116": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13936,
        13963
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6117": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 38,
      "value": "0xE0"
    },
    "6119": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6120": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "ADD",
      "path": "15"
    },
    "6121": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6122": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "6123": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6124": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6125": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6126": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6127": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13618,
        13809
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "6128": {
      "op": "POP"
    },
    "6129": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6130": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6131": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x180E"
    },
    "6134": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6135": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6136": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13859,
        13886
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6137": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6138": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13645,
        13795
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6139": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6141": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "AND",
      "path": "15"
    },
    "6142": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6144": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6145": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "GT",
      "path": "15"
    },
    "6146": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6147": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "6150": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6151": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "6154": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "6157": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13977,
        14001
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6158": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13977,
        14001
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6159": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 39,
      "value": "0x40"
    },
    "6161": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6162": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6163": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6165": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6166": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "ADD",
      "path": "15"
    },
    "6167": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6168": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6169": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6170": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6177": {
      "op": "SHL"
    },
    "6178": {
      "op": "SUB"
    },
    "6179": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6180": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "AND",
      "path": "15"
    },
    "6181": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6182": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6187": {
      "op": "SHL"
    },
    "6188": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6189": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DIV",
      "path": "15"
    },
    "6190": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6192": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "AND",
      "path": "15"
    },
    "6193": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6195": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6196": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "ADD",
      "path": "15"
    },
    "6197": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6202": {
      "op": "SHL"
    },
    "6203": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6204": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DIV",
      "path": "15"
    },
    "6205": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6210": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "AND",
      "path": "15"
    },
    "6211": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6212": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6213": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "ADD",
      "path": "15"
    },
    "6214": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6215": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6216": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6217": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6222": {
      "op": "SHL"
    },
    "6223": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6224": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6225": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DIV",
      "path": "15"
    },
    "6226": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6229": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "AND",
      "path": "15"
    },
    "6230": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6232": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6233": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "ADD",
      "path": "15"
    },
    "6234": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6235": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1863"
    },
    "6238": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6239": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F78"
    },
    "6242": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14015,
        14039
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6243": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14015,
        14039
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6244": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 40,
      "value": "0x40"
    },
    "6246": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6247": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6248": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6250": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6251": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "ADD",
      "path": "15"
    },
    "6252": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6253": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6254": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6255": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "SUB"
    },
    "6264": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6265": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "AND",
      "path": "15"
    },
    "6266": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6267": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6272": {
      "op": "SHL"
    },
    "6273": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6274": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DIV",
      "path": "15"
    },
    "6275": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6277": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "AND",
      "path": "15"
    },
    "6278": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6280": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6281": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "ADD",
      "path": "15"
    },
    "6282": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6287": {
      "op": "SHL"
    },
    "6288": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6289": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DIV",
      "path": "15"
    },
    "6290": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6295": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "AND",
      "path": "15"
    },
    "6296": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6297": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6298": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "ADD",
      "path": "15"
    },
    "6299": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6300": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6301": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6302": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6309": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6310": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DIV",
      "path": "15"
    },
    "6311": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6314": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "AND",
      "path": "15"
    },
    "6315": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6317": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6318": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "ADD",
      "path": "15"
    },
    "6319": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6320": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18B9"
    },
    "6323": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6324": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14080,
        14095
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6325": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FFE"
    },
    "6328": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14053,
        14096
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6329": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14053,
        14096
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6330": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 41,
      "value": "0x40"
    },
    "6332": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6333": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6334": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "6336": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6337": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6338": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6339": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6340": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6341": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6342": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6343": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19D7"
    },
    "6346": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6347": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6348": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14133,
        14140
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6349": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14133,
        14140
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6350": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6351": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6352": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6354": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6355": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6357": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6358": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "GT",
      "path": "15"
    },
    "6359": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6360": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18E3"
    },
    "6363": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6364": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18E3"
    },
    "6367": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "6370": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6371": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6372": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "6374": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6375": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "GT",
      "path": "15"
    },
    "6376": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6377": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18F4"
    },
    "6380": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6381": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x18F4"
    },
    "6384": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "6387": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6388": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6389": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6390": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6391": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6392": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6399": {
      "op": "SHL"
    },
    "6400": {
      "op": "SUB"
    },
    "6401": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6404": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6405": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6406": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6407": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6409": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6410": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6411": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6412": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6418": {
      "op": "SHL"
    },
    "6419": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6420": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6421": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6422": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6423": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6425": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6426": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6427": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6434": {
      "op": "SHL"
    },
    "6435": {
      "op": "SUB"
    },
    "6436": {
      "op": "NOT"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6441": {
      "op": "SHL"
    },
    "6442": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6443": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6444": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "6446": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SHL",
      "path": "15"
    },
    "6447": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6448": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6450": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6451": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6452": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6453": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6460": {
      "op": "SHL"
    },
    "6461": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6462": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6463": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6464": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6465": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6467": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6468": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6469": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6474": {
      "op": "SHL"
    },
    "6475": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6476": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6477": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6478": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "6480": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6481": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6482": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6483": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "6485": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6486": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6487": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6488": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6493": {
      "op": "SHL"
    },
    "6494": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6495": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6496": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6497": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6498": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "6500": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6501": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "GT",
      "path": "15"
    },
    "6502": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6503": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1972"
    },
    "6506": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6507": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1972"
    },
    "6510": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "6513": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6514": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6515": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "6517": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6518": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "GT",
      "path": "15"
    },
    "6519": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6520": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1983"
    },
    "6523": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6524": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1983"
    },
    "6527": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "6530": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6531": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6532": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6533": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6534": {
      "op": "POP"
    },
    "6535": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6537": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6538": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6539": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6541": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6542": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6543": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6544": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6545": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6546": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6553": {
      "op": "SHL"
    },
    "6554": {
      "op": "SUB"
    },
    "6555": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6556": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6557": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6558": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6563": {
      "op": "SHL"
    },
    "6564": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6565": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6566": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "6568": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6569": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6571": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6572": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6573": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6578": {
      "op": "SHL"
    },
    "6579": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6580": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6581": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "6586": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6587": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6588": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6589": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6590": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6591": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6592": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "6593": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6598": {
      "op": "SHL"
    },
    "6599": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6600": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6601": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DIV",
      "path": "15"
    },
    "6602": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6605": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "AND",
      "path": "15"
    },
    "6606": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6608": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6609": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "ADD",
      "path": "15"
    },
    "6610": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6611": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14132
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3054"
    },
    "6614": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6615": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14110,
        14150
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6616": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14210
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 42
    },
    "6617": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14220
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "6620": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14220
      ],
      "op": "ADD",
      "path": "15"
    },
    "6621": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14220
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6622": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14221,
        14222
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6623": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6624": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6625": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6626": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "LT",
      "path": "15"
    },
    "6627": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19EE"
    },
    "6630": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6631": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x19EE"
    },
    "6634": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "6637": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14208,
        14223
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6638": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6639": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6641": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "MUL",
      "path": "15"
    },
    "6642": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6644": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "ADD",
      "path": "15"
    },
    "6645": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "ADD",
      "path": "15"
    },
    "6646": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14208,
        14223
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6647": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x4630B53A4335803B2A4F9C1CE896F4CADBF909907810E496EDA17614483D7B94"
    },
    "6680": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14248,
        14263
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "6681": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6683": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6684": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A31"
    },
    "6687": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6688": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6689": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6694": {
      "op": "SWAP2"
    },
    "6695": {
      "op": "SWAP1"
    },
    "6696": {
      "op": "SWAP2"
    },
    "6697": {
      "op": "AND"
    },
    "6698": {
      "op": "DUP2"
    },
    "6699": {
      "op": "MSTORE"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6702": {
      "op": "ADD"
    },
    "6703": {
      "op": "SWAP1"
    },
    "6704": {
      "op": "JUMP"
    },
    "6705": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6706": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6708": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6709": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6710": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6711": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "SUB",
      "path": "15"
    },
    "6712": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6713": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14169,
        14278
      ],
      "op": "LOG2",
      "path": "15"
    },
    "6714": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 43
    },
    "6715": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6716": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14357
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6717": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14357
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6718": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14394
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A5C"
    },
    "6721": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6722": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "6729": {
      "op": "SHL"
    },
    "6730": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6731": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6732": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "DIV",
      "path": "15"
    },
    "6733": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6734": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "AND",
      "path": "15"
    },
    "6735": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14376,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6740": {
      "op": "SHL"
    },
    "6741": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14357
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6742": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14357
      ],
      "op": "DIV",
      "path": "15"
    },
    "6743": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14357
      ],
      "op": "AND",
      "path": "15"
    },
    "6744": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14394
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x46DD"
    },
    "6747": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        14334,
        14394
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6748": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14334,
        14394
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6749": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6750": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6751": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "6754": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6755": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6756": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6757": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "AND",
      "path": "15"
    },
    "6758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6762": {
      "op": "SHL"
    },
    "6763": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "MUL",
      "path": "15"
    },
    "6764": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6769": {
      "op": "SHL"
    },
    "6770": {
      "op": "NOT"
    },
    "6771": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6772": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6773": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "AND",
      "path": "15"
    },
    "6774": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "OR",
      "path": "15"
    },
    "6775": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6776": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6777": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14394
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6778": {
      "op": "POP"
    },
    "6779": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14292,
        14315
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6781": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "SWAP1",
      "path": "15",
      "statement": 44
    },
    "6782": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6783": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6784": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14423
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "6786": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6788": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6789": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6791": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6792": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14415,
        14442
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "6793": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14408,
        14442
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6794": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14408,
        14442
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6801": {
      "op": "SHL"
    },
    "6802": {
      "op": "SUB"
    },
    "6803": {
      "op": "NOT"
    },
    "6804": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14408,
        14442
      ],
      "op": "AND",
      "path": "15"
    },
    "6805": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14408,
        14442
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6806": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        14408,
        14442
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "6807": {
      "op": "POP"
    },
    "6808": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 45
    },
    "6809": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AA1"
    },
    "6812": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6813": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "6816": {
      "fn": "Registry.handleClaimRent",
      "jump": "i",
      "offset": [
        13338,
        13341
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6817": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6818": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6819": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "POP",
      "path": "15"
    },
    "6820": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13338,
        13341
      ],
      "op": "POP",
      "path": "15"
    },
    "6821": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13298,
        14453
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x16AB"
    },
    "6824": {
      "fn": "Registry.handleClaimRent",
      "offset": [
        13298,
        14453
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6825": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7769,
        9259
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6826": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7897,
        7904
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6827": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7897,
        7904
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6828": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6830": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6831": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "ADD",
      "path": "15"
    },
    "6832": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7894
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6833": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7869
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6835": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7869
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6836": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1ABC"
    },
    "6839": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6840": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "6843": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7886,
        7904
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6844": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7886,
        7904
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6851": {
      "op": "SHL"
    },
    "6852": {
      "op": "SUB"
    },
    "6853": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6854": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "GT",
      "path": "15"
    },
    "6855": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6856": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AD3"
    },
    "6859": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6860": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AD3"
    },
    "6863": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x490A"
    },
    "6866": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6867": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6868": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6870": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6871": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6872": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6873": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6874": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6875": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6876": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6878": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MUL",
      "path": "15"
    },
    "6879": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6881": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "15"
    },
    "6882": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6883": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "15"
    },
    "6884": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6886": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6887": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6888": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6889": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1AFC"
    },
    "6892": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6893": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6894": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6896": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "15"
    },
    "6897": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6899": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6900": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "MUL",
      "path": "15"
    },
    "6901": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP1",
      "path": "15"
    },
    "6902": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "6903": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6904": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "6905": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "ADD",
      "path": "15"
    },
    "6906": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6907": {
      "op": "POP"
    },
    "6908": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7872,
        7905
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8004,
        8011
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6911": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8004,
        8011
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6912": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7905
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6913": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7841,
        7905
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "6914": {
      "op": "POP"
    },
    "6915": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7915,
        7948
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6917": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7915,
        7948
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6918": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6919": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8019
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6920": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8025
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6922": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8025
      ],
      "op": "ADD",
      "path": "15"
    },
    "6923": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8017,
        8025
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6924": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8013,
        8014
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6925": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8013,
        8025
      ],
      "op": "LT",
      "path": "15"
    },
    "6926": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6927": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E3E"
    },
    "6930": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6931": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8046,
        8071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6933": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8141
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6934": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "6936": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8152
      ],
      "op": "ADD",
      "path": "15"
    },
    "6937": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6938": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8155
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6939": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8160
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6941": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8160
      ],
      "op": "ADD",
      "path": "15"
    },
    "6942": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8153,
        8160
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6943": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6944": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6945": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6946": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "LT",
      "path": "15"
    },
    "6947": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B2E"
    },
    "6950": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6951": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B2E"
    },
    "6954": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "6957": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6958": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6959": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6961": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "MUL",
      "path": "15"
    },
    "6962": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6964": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "ADD",
      "path": "15"
    },
    "6965": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "ADD",
      "path": "15"
    },
    "6966": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8139,
        8161
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6967": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8185
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6968": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8193
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "6970": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8193
      ],
      "op": "ADD",
      "path": "15"
    },
    "6971": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8193
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6972": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8194,
        8195
      ],
      "op": "DUP4",
      "path": "15"
    },
    "6973": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6974": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6975": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6976": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "LT",
      "path": "15"
    },
    "6977": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B4C"
    },
    "6980": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6981": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B4C"
    },
    "6984": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "6987": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8183,
        8196
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6988": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6989": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6991": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "MUL",
      "path": "15"
    },
    "6992": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "6994": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "ADD",
      "path": "15"
    },
    "6995": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "ADD",
      "path": "15"
    },
    "6996": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8183,
        8196
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6997": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8220
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6998": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8230
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7001": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8230
      ],
      "op": "ADD",
      "path": "15"
    },
    "7002": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8230
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7003": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8231,
        8232
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7004": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7005": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7006": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7007": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "LT",
      "path": "15"
    },
    "7008": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B6B"
    },
    "7011": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7012": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B6B"
    },
    "7015": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7018": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8218,
        8233
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7019": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7020": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7022": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "MUL",
      "path": "15"
    },
    "7023": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7025": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "ADD",
      "path": "15"
    },
    "7026": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "ADD",
      "path": "15"
    },
    "7027": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8218,
        8233
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7028": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7030": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7031": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7033": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "ADD",
      "path": "15"
    },
    "7034": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B85"
    },
    "7037": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7038": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7039": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7040": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7041": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "7044": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8101,
        8251
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7045": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7046": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7048": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7049": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7052": {
      "op": "NOT"
    },
    "7053": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7054": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7055": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SUB",
      "path": "15"
    },
    "7056": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "ADD",
      "path": "15"
    },
    "7057": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7058": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7059": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7060": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7061": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7062": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7063": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7064": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8101,
        8251
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7066": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7067": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7068": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "ADD",
      "path": "15"
    },
    "7069": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7070": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8279,
        8302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7072": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7073": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7074": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7075": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8313
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7077": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7078": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7079": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7080": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7081": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7082": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 46
    },
    "7083": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7084": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7085": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8074,
        8265
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7086": {
      "op": "POP"
    },
    "7087": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8305,
        8332
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7088": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7090": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "AND",
      "path": "15"
    },
    "7091": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8392,
        8411
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7093": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7094": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "GT",
      "path": "15"
    },
    "7095": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7096": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BC3"
    },
    "7099": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7100": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BC3"
    },
    "7103": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7106": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7107": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7108": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8373
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7109": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8385
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7111": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8385
      ],
      "op": "ADD",
      "path": "15"
    },
    "7112": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8385
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7113": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8386,
        8387
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7114": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7115": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7116": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7117": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "LT",
      "path": "15"
    },
    "7118": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BD9"
    },
    "7121": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7122": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BD9"
    },
    "7125": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7128": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8371,
        8388
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7129": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7130": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7132": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "MUL",
      "path": "15"
    },
    "7133": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7135": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "ADD",
      "path": "15"
    },
    "7136": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "ADD",
      "path": "15"
    },
    "7137": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8388
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7138": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7140": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7141": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "GT",
      "path": "15"
    },
    "7142": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7143": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BF2"
    },
    "7146": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7147": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1BF2"
    },
    "7150": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7153": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7154": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7155": {
      "branch": 135,
      "fn": "Registry.handleStopLend",
      "offset": [
        8371,
        8411
      ],
      "op": "EQ",
      "path": "15"
    },
    "7156": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C0F"
    },
    "7159": {
      "branch": 135,
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7160": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7162": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7169": {
      "op": "SHL"
    },
    "7170": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7171": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7172": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7174": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "ADD",
      "path": "15"
    },
    "7175": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "7178": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7179": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x456A"
    },
    "7182": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8346,
        8472
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7183": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8346,
        8472
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7184": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 47
    },
    "7185": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7190": {
      "op": "SHL"
    },
    "7191": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7192": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "DIV",
      "path": "15"
    },
    "7193": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7196": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7197": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7198": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8618
      ],
      "op": "AND",
      "path": "15"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7203": {
      "op": "SHL"
    },
    "7204": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7205": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7206": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "DIV",
      "path": "15"
    },
    "7207": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8622,
        8645
      ],
      "op": "AND",
      "path": "15"
    },
    "7208": {
      "branch": 136,
      "fn": "Registry.handleStopLend",
      "offset": [
        8600,
        8645
      ],
      "op": "EQ",
      "path": "15"
    },
    "7209": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C6D"
    },
    "7212": {
      "branch": 136,
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7213": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7215": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7222": {
      "op": "SHL"
    },
    "7223": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7224": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7227": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "7229": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7230": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "ADD",
      "path": "15"
    },
    "7231": {
      "op": "MSTORE"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "7234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7236": {
      "op": "DUP3"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "MSTORE"
    },
    "7239": {
      "op": "PUSH22",
      "value": "0x14995391950E8E9858DD1A5D995B1E481C995B9D1959"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7264": {
      "op": "SHL"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7267": {
      "op": "DUP3"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "MSTORE"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7272": {
      "op": "ADD"
    },
    "7273": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "7276": {
      "op": "JUMP"
    },
    "7277": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8575,
        8701
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7278": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 48,
      "value": "0x40"
    },
    "7280": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7281": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7282": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7284": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7285": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "ADD",
      "path": "15"
    },
    "7286": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7287": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7288": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7289": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7290": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7291": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1C97"
    },
    "7294": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7295": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7296": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8731,
        8738
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7297": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8731,
        8738
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7298": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7299": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7300": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7302": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "AND",
      "path": "15"
    },
    "7303": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7305": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7306": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "GT",
      "path": "15"
    },
    "7307": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7308": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "7311": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7312": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "7315": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7318": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8715,
        8739
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7319": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8715,
        8739
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7320": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 49,
      "value": "0x40"
    },
    "7322": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7323": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7324": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7326": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7327": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7328": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7329": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7330": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7331": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7332": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7333": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D6A"
    },
    "7336": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7337": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7338": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8771,
        8778
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7339": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8771,
        8778
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7340": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7341": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7342": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7344": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7345": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7347": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7348": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "15"
    },
    "7349": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7350": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CC1"
    },
    "7353": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7354": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CC1"
    },
    "7357": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7360": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7361": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7362": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "7364": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7365": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "15"
    },
    "7366": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7367": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CD2"
    },
    "7370": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7371": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1CD2"
    },
    "7374": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7377": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7378": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7379": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7380": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7381": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7382": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7389": {
      "op": "SHL"
    },
    "7390": {
      "op": "SUB"
    },
    "7391": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7394": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7395": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "15"
    },
    "7396": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7397": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7399": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7400": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7401": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7402": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7408": {
      "op": "SHL"
    },
    "7409": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7410": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "15"
    },
    "7411": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7412": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7413": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7415": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7416": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7417": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7424": {
      "op": "SHL"
    },
    "7425": {
      "op": "SUB"
    },
    "7426": {
      "op": "NOT"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7431": {
      "op": "SHL"
    },
    "7432": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7433": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "15"
    },
    "7434": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "7436": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SHL",
      "path": "15"
    },
    "7437": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7438": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7440": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7441": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7442": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7443": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7450": {
      "op": "SHL"
    },
    "7451": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7452": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "15"
    },
    "7453": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7454": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7455": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7457": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP6",
      "path": "15"
    },
    "7458": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7459": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7462": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7464": {
      "op": "SHL"
    },
    "7465": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7466": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "15"
    },
    "7467": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7468": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "7470": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7471": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7472": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7473": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "7475": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7476": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7477": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ADD",
      "path": "15"
    },
    "7478": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7481": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7483": {
      "op": "SHL"
    },
    "7484": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7485": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7486": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DIV",
      "path": "15"
    },
    "7487": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "AND",
      "path": "15"
    },
    "7488": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "7490": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7491": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "15"
    },
    "7492": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7493": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D50"
    },
    "7496": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7497": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D50"
    },
    "7500": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7503": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7504": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7505": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "7507": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7508": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "GT",
      "path": "15"
    },
    "7509": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7510": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D61"
    },
    "7513": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7514": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D61"
    },
    "7517": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "7520": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7521": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7522": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7523": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7524": {
      "op": "POP"
    },
    "7525": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8780,
        8790
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7526": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8770
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31F3"
    },
    "7529": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7530": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8753,
        8791
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7531": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 50
    },
    "7532": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7533": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8821,
        8828
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7534": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8821,
        8828
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7539": {
      "op": "SHL"
    },
    "7540": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7541": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7542": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "DIV",
      "path": "15"
    },
    "7543": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "7546": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "AND",
      "path": "15"
    },
    "7547": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8832,
        8850
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7548": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8816
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7549": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8816
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7550": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D87"
    },
    "7553": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7554": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8818
      ],
      "op": "DUP7",
      "path": "15"
    },
    "7555": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "7558": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8817,
        8828
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7559": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8817,
        8828
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7560": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7561": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7562": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7563": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "LT",
      "path": "15"
    },
    "7564": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D97"
    },
    "7567": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7568": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1D97"
    },
    "7571": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7574": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8805,
        8829
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7575": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7576": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7578": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7579": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7580": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "MUL",
      "path": "15"
    },
    "7581": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7582": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7583": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7584": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "ADD",
      "path": "15"
    },
    "7585": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8829
      ],
      "op": "ADD",
      "path": "15"
    },
    "7586": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8805,
        8850
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7587": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 51
    },
    "7588": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7589": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7592": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "DUP8",
      "path": "15",
      "statement": 52
    },
    "7593": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "ADD",
      "path": "15"
    },
    "7594": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7595": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7596": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7597": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "7599": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7600": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7601": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "AND",
      "path": "15"
    },
    "7602": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8878,
        8897
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "7603": {
      "op": "POP"
    },
    "7604": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8947
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7605": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8948,
        8949
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7606": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8948,
        8949
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7607": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7608": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "LT",
      "path": "15"
    },
    "7609": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DC4"
    },
    "7612": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7613": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1DC4"
    },
    "7616": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7619": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8935,
        8950
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7620": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7621": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7623": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "MUL",
      "path": "15"
    },
    "7624": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7626": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "ADD",
      "path": "15"
    },
    "7627": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "ADD",
      "path": "15"
    },
    "7628": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8935,
        8950
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7629": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0xD0234BC8DD7E933F60CBC1E90FC139A8A9683AF1CB92743607DAFB9DFB70059B"
    },
    "7662": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8959,
        8974
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "7663": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7665": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7666": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E07"
    },
    "7669": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7670": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7671": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7676": {
      "op": "SWAP2"
    },
    "7677": {
      "op": "SWAP1"
    },
    "7678": {
      "op": "SWAP2"
    },
    "7679": {
      "op": "AND"
    },
    "7680": {
      "op": "DUP2"
    },
    "7681": {
      "op": "MSTORE"
    },
    "7682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7684": {
      "op": "ADD"
    },
    "7685": {
      "op": "SWAP1"
    },
    "7686": {
      "op": "JUMP"
    },
    "7687": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7688": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7690": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7691": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7692": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7693": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SUB",
      "path": "15"
    },
    "7694": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7695": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8916,
        8976
      ],
      "op": "LOG2",
      "path": "15"
    },
    "7696": {
      "op": "POP"
    },
    "7697": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 53,
      "value": "0x0"
    },
    "7699": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7700": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7701": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7702": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9005
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "7704": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7706": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7707": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7709": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7710": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8997,
        9024
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7711": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7712": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "7719": {
      "op": "SHL"
    },
    "7720": {
      "op": "SUB"
    },
    "7721": {
      "op": "NOT"
    },
    "7722": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "AND",
      "path": "15"
    },
    "7723": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7724": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8990,
        9024
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "7725": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 54
    },
    "7726": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E36"
    },
    "7729": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7730": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "7733": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        8027,
        8030
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7734": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7735": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7736": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "POP",
      "path": "15"
    },
    "7737": {
      "fn": "Registry.handleStopLend",
      "offset": [
        8027,
        8030
      ],
      "op": "POP",
      "path": "15"
    },
    "7738": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1B06"
    },
    "7741": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7742": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7743": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7987,
        9035
      ],
      "op": "POP",
      "path": "15"
    },
    "7744": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9044,
        9252
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 55,
      "value": "0x1E71"
    },
    "7747": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9070,
        9072
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7748": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9094,
        9098
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "7749": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9113,
        9123
      ],
      "op": "CALLER",
      "path": "15"
    },
    "7750": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9137,
        9179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E5E"
    },
    "7753": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9148
      ],
      "op": "DUP8",
      "path": "15"
    },
    "7754": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9156
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7756": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9156
      ],
      "op": "ADD",
      "path": "15"
    },
    "7757": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9146,
        9156
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7758": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9160
      ],
      "op": "DUP9",
      "path": "15"
    },
    "7759": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9165
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7761": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9165
      ],
      "op": "ADD",
      "path": "15"
    },
    "7762": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9158,
        9165
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7763": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9169
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7764": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9175
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7766": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9175
      ],
      "op": "ADD",
      "path": "15"
    },
    "7767": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9167,
        9175
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7768": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9177,
        9178
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7770": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9137,
        9145
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D38"
    },
    "7773": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        9137,
        9179
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7774": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9137,
        9179
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7775": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9215,
        9222
      ],
      "op": "DUP8",
      "path": "15"
    },
    "7776": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9215,
        9222
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7777": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7779": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7780": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "ADD",
      "path": "15"
    },
    "7781": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9224,
        9232
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7782": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9193,
        9242
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1570"
    },
    "7785": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9193,
        9242
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7786": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9202,
        9213
      ],
      "op": "DUP10",
      "path": "15"
    },
    "7787": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9202,
        9213
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7788": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9215,
        9222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7789": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9193,
        9201
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D38"
    },
    "7792": {
      "fn": "Registry.handleStopLend",
      "jump": "i",
      "offset": [
        9193,
        9242
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7793": {
      "fn": "Registry.handleStopLend",
      "offset": [
        9044,
        9252
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7794": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7831,
        9259
      ],
      "op": "POP",
      "path": "15"
    },
    "7795": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7831,
        9259
      ],
      "op": "POP",
      "path": "15"
    },
    "7796": {
      "fn": "Registry.handleStopLend",
      "offset": [
        7769,
        9259
      ],
      "op": "POP",
      "path": "15"
    },
    "7797": {
      "fn": "Registry.handleStopLend",
      "jump": "o",
      "offset": [
        7769,
        9259
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7798": {
      "fn": "Registry.handleRent",
      "offset": [
        9265,
        11728
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7799": {
      "fn": "Registry.handleRent",
      "offset": [
        9350,
        9357
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7800": {
      "fn": "Registry.handleRent",
      "offset": [
        9350,
        9357
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7801": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11722
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7802": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9365
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7803": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9371
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7805": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9371
      ],
      "op": "ADD",
      "path": "15"
    },
    "7806": {
      "fn": "Registry.handleRent",
      "offset": [
        9363,
        9371
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7807": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9360
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7808": {
      "fn": "Registry.handleRent",
      "offset": [
        9359,
        9371
      ],
      "op": "LT",
      "path": "15"
    },
    "7809": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11722
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "7810": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11722
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "7813": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11722
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7814": {
      "fn": "Registry.handleRent",
      "offset": [
        9392,
        9417
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7816": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9487
      ],
      "op": "DUP3",
      "path": "15"
    },
    "7817": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9498
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7819": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9498
      ],
      "op": "ADD",
      "path": "15"
    },
    "7820": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9498
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7821": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9501
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7822": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9506
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7824": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9506
      ],
      "op": "ADD",
      "path": "15"
    },
    "7825": {
      "fn": "Registry.handleRent",
      "offset": [
        9499,
        9506
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7826": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7827": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7828": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7829": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "LT",
      "path": "15"
    },
    "7830": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EA1"
    },
    "7833": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7834": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EA1"
    },
    "7837": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7840": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9485,
        9507
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7841": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7842": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7844": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "MUL",
      "path": "15"
    },
    "7845": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7847": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "ADD",
      "path": "15"
    },
    "7848": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "ADD",
      "path": "15"
    },
    "7849": {
      "fn": "Registry.handleRent",
      "offset": [
        9485,
        9507
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7850": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9531
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7851": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9539
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7853": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9539
      ],
      "op": "ADD",
      "path": "15"
    },
    "7854": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9539
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7855": {
      "fn": "Registry.handleRent",
      "offset": [
        9540,
        9541
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7856": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7857": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7858": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7859": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "LT",
      "path": "15"
    },
    "7860": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EBF"
    },
    "7863": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7864": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EBF"
    },
    "7867": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7870": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9529,
        9542
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7871": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7872": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7874": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "MUL",
      "path": "15"
    },
    "7875": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7877": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "ADD",
      "path": "15"
    },
    "7878": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "ADD",
      "path": "15"
    },
    "7879": {
      "fn": "Registry.handleRent",
      "offset": [
        9529,
        9542
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7880": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9566
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7881": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9576
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "7884": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9576
      ],
      "op": "ADD",
      "path": "15"
    },
    "7885": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9576
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7886": {
      "fn": "Registry.handleRent",
      "offset": [
        9577,
        9578
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7887": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7888": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7889": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7890": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "LT",
      "path": "15"
    },
    "7891": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EDE"
    },
    "7894": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7895": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EDE"
    },
    "7898": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7901": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9564,
        9579
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7902": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7903": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7905": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "MUL",
      "path": "15"
    },
    "7906": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7908": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "ADD",
      "path": "15"
    },
    "7909": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "ADD",
      "path": "15"
    },
    "7910": {
      "fn": "Registry.handleRent",
      "offset": [
        9564,
        9579
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7911": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7913": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7914": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7916": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "ADD",
      "path": "15"
    },
    "7917": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1EF8"
    },
    "7920": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "7921": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "7922": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "7923": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7924": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "7927": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9447,
        9597
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7928": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7929": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7931": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7932": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7934": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7935": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7936": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SUB",
      "path": "15"
    },
    "7937": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SUB",
      "path": "15"
    },
    "7938": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7939": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7940": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7941": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "7943": {
      "fn": "Registry.handleRent",
      "offset": [
        9447,
        9597
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "7944": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "DUP1",
      "path": "15"
    },
    "7945": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7946": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7947": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7949": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "ADD",
      "path": "15"
    },
    "7950": {
      "fn": "Registry.handleRent",
      "offset": [
        9420,
        9611
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "7951": {
      "fn": "Registry.handleRent",
      "offset": [
        9392,
        9611
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "7952": {
      "fn": "Registry.handleRent",
      "offset": [
        9392,
        9611
      ],
      "op": "POP",
      "path": "15"
    },
    "7953": {
      "fn": "Registry.handleRent",
      "offset": [
        9625,
        9650
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7955": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9720
      ],
      "op": "DUP4",
      "path": "15"
    },
    "7956": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9731
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "7958": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9731
      ],
      "op": "ADD",
      "path": "15"
    },
    "7959": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9731
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7960": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9734
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7961": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9739
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "7963": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9739
      ],
      "op": "ADD",
      "path": "15"
    },
    "7964": {
      "fn": "Registry.handleRent",
      "offset": [
        9732,
        9739
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7965": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7966": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7967": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7968": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "LT",
      "path": "15"
    },
    "7969": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F2C"
    },
    "7972": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "7973": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F2C"
    },
    "7976": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "7979": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9718,
        9740
      ],
      "op": "JUMP",
      "path": "15"
    },
    "7980": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "7981": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7983": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "MUL",
      "path": "15"
    },
    "7984": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "7986": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "ADD",
      "path": "15"
    },
    "7987": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "ADD",
      "path": "15"
    },
    "7988": {
      "fn": "Registry.handleRent",
      "offset": [
        9718,
        9740
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7989": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9764
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7990": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9772
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "7992": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9772
      ],
      "op": "ADD",
      "path": "15"
    },
    "7993": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9772
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7994": {
      "fn": "Registry.handleRent",
      "offset": [
        9773,
        9774
      ],
      "op": "DUP5",
      "path": "15"
    },
    "7995": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7996": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "7997": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "DUP2",
      "path": "15"
    },
    "7998": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "LT",
      "path": "15"
    },
    "7999": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F4A"
    },
    "8002": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8003": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F4A"
    },
    "8006": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "8009": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9762,
        9775
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8010": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8011": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8013": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "MUL",
      "path": "15"
    },
    "8014": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8016": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "ADD",
      "path": "15"
    },
    "8017": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "ADD",
      "path": "15"
    },
    "8018": {
      "fn": "Registry.handleRent",
      "offset": [
        9762,
        9775
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8019": {
      "fn": "Registry.handleRent",
      "offset": [
        9797,
        9806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8021": {
      "fn": "Registry.handleRent",
      "offset": [
        9797,
        9806
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8022": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8024": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8025": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8027": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "ADD",
      "path": "15"
    },
    "8028": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1F67"
    },
    "8031": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8032": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8033": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8034": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8035": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4436"
    },
    "8038": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9680,
        9824
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8039": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8040": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8042": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8043": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8046": {
      "op": "NOT"
    },
    "8047": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8048": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8049": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SUB",
      "path": "15"
    },
    "8050": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "ADD",
      "path": "15"
    },
    "8051": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8052": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8053": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8054": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8055": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8056": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8057": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8058": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8060": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8061": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8062": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "ADD",
      "path": "15"
    },
    "8063": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8064": {
      "fn": "Registry.handleRent",
      "offset": [
        9852,
        9885
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8066": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8067": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8068": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8069": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9896
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "8071": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8072": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8073": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8074": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8075": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8076": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8077": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8078": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8079": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9973
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "8081": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8082": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8083": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8084": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8085": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8086": {
      "fn": "Registry.handleRent",
      "offset": [
        9965,
        9992
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8087": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 56,
      "value": "0xE0"
    },
    "8089": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8090": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "ADD",
      "path": "15"
    },
    "8091": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8092": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8093": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8094": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8095": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8096": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8097": {
      "fn": "Registry.handleRent",
      "offset": [
        9653,
        9838
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8098": {
      "op": "POP"
    },
    "8099": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8100": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8101": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FC0"
    },
    "8104": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8105": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8106": {
      "fn": "Registry.handleRent",
      "offset": [
        9888,
        9915
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8107": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8108": {
      "fn": "Registry.handleRent",
      "offset": [
        9680,
        9824
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8109": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8111": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "AND",
      "path": "15"
    },
    "8112": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8114": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8115": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "GT",
      "path": "15"
    },
    "8116": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8117": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "8120": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8121": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x931"
    },
    "8124": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8127": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10006,
        10030
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8128": {
      "fn": "Registry.handleRent",
      "offset": [
        10006,
        10030
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8129": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 57,
      "value": "0x40"
    },
    "8131": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8132": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8133": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8135": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8136": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "15"
    },
    "8137": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8138": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8139": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8140": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8147": {
      "op": "SHL"
    },
    "8148": {
      "op": "SUB"
    },
    "8149": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8150": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "15"
    },
    "8151": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8152": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8157": {
      "op": "SHL"
    },
    "8158": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8159": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DIV",
      "path": "15"
    },
    "8160": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8162": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "15"
    },
    "8163": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8165": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8166": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "15"
    },
    "8167": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8170": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8172": {
      "op": "SHL"
    },
    "8173": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8174": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DIV",
      "path": "15"
    },
    "8175": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "8180": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "15"
    },
    "8181": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8182": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8183": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "15"
    },
    "8184": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8185": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8186": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8187": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "8192": {
      "op": "SHL"
    },
    "8193": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8194": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8195": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DIV",
      "path": "15"
    },
    "8196": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8199": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "AND",
      "path": "15"
    },
    "8200": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8202": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8203": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "ADD",
      "path": "15"
    },
    "8204": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8205": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2015"
    },
    "8208": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8209": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10056
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x324C"
    },
    "8212": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10044,
        10065
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8213": {
      "fn": "Registry.handleRent",
      "offset": [
        10044,
        10065
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8214": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 58,
      "value": "0x40"
    },
    "8216": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8217": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8218": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8220": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8221": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8222": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8223": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8224": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8225": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8226": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8227": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20EA"
    },
    "8230": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8231": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8232": {
      "fn": "Registry.handleRent",
      "offset": [
        10096,
        10103
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8233": {
      "fn": "Registry.handleRent",
      "offset": [
        10096,
        10103
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8234": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8235": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8236": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8238": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8239": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8241": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8242": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "15"
    },
    "8243": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8244": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x203F"
    },
    "8247": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8248": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x203F"
    },
    "8251": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8254": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8255": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8256": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8258": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8259": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "15"
    },
    "8260": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8261": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2050"
    },
    "8264": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8265": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2050"
    },
    "8268": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8271": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8272": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8273": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8274": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8275": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8276": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8283": {
      "op": "SHL"
    },
    "8284": {
      "op": "SUB"
    },
    "8285": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "8288": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8289": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "15"
    },
    "8290": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8291": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8293": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8294": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8295": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8296": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "8302": {
      "op": "SHL"
    },
    "8303": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8304": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "15"
    },
    "8305": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8306": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8307": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8309": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8310": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8311": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8318": {
      "op": "SHL"
    },
    "8319": {
      "op": "SUB"
    },
    "8320": {
      "op": "NOT"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8325": {
      "op": "SHL"
    },
    "8326": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8327": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "15"
    },
    "8328": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8330": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SHL",
      "path": "15"
    },
    "8331": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8332": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "8334": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8335": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8336": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8337": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8344": {
      "op": "SHL"
    },
    "8345": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8346": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "15"
    },
    "8347": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8348": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8349": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "8351": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP6",
      "path": "15"
    },
    "8352": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8353": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8358": {
      "op": "SHL"
    },
    "8359": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8360": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "15"
    },
    "8361": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8362": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "8364": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP5",
      "path": "15"
    },
    "8365": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8366": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8367": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "8369": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8370": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8371": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ADD",
      "path": "15"
    },
    "8372": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8377": {
      "op": "SHL"
    },
    "8378": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8379": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8380": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DIV",
      "path": "15"
    },
    "8381": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "AND",
      "path": "15"
    },
    "8382": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8384": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8385": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "15"
    },
    "8386": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8387": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20CE"
    },
    "8390": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8391": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20CE"
    },
    "8394": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8397": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8398": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8399": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8401": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8402": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "GT",
      "path": "15"
    },
    "8403": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8404": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20DF"
    },
    "8407": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8408": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20DF"
    },
    "8411": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8414": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8415": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8416": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8417": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8418": {
      "op": "POP"
    },
    "8419": {
      "fn": "Registry.handleRent",
      "offset": [
        10105,
        10107
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8420": {
      "fn": "Registry.handleRent",
      "offset": [
        10109,
        10110
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8421": {
      "fn": "Registry.handleRent",
      "offset": [
        10112,
        10122
      ],
      "op": "CALLER",
      "path": "15"
    },
    "8422": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32FF"
    },
    "8425": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8426": {
      "fn": "Registry.handleRent",
      "offset": [
        10079,
        10123
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8427": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 59
    },
    "8428": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8429": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8431": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "AND",
      "path": "15"
    },
    "8432": {
      "fn": "Registry.handleRent",
      "offset": [
        10183,
        10202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8434": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8435": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "GT",
      "path": "15"
    },
    "8436": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8437": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2100"
    },
    "8440": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8441": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2100"
    },
    "8444": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8447": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8448": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8449": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10164
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8450": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10176
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8452": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10176
      ],
      "op": "ADD",
      "path": "15"
    },
    "8453": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10176
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8454": {
      "fn": "Registry.handleRent",
      "offset": [
        10177,
        10178
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8455": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8456": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8457": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8458": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "LT",
      "path": "15"
    },
    "8459": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2116"
    },
    "8462": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8463": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2116"
    },
    "8466": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "8469": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10162,
        10179
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8470": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8471": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8473": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "MUL",
      "path": "15"
    },
    "8474": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8476": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "ADD",
      "path": "15"
    },
    "8477": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "ADD",
      "path": "15"
    },
    "8478": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10179
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8479": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "8481": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8482": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "GT",
      "path": "15"
    },
    "8483": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8484": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x212F"
    },
    "8487": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8488": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x212F"
    },
    "8491": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8494": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8495": {
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8496": {
      "branch": 137,
      "fn": "Registry.handleRent",
      "offset": [
        10162,
        10202
      ],
      "op": "EQ",
      "path": "15"
    },
    "8497": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x214C"
    },
    "8500": {
      "branch": 137,
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8501": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8503": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8510": {
      "op": "SHL"
    },
    "8511": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8512": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8513": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8515": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "ADD",
      "path": "15"
    },
    "8516": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "8519": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8520": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x456A"
    },
    "8523": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10137,
        10263
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8524": {
      "fn": "Registry.handleRent",
      "offset": [
        10137,
        10263
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8525": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 60
    },
    "8526": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8527": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "8530": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8531": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "ADD",
      "path": "15"
    },
    "8532": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10315
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8533": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8534": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8539": {
      "op": "SHL"
    },
    "8540": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8541": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8542": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "DIV",
      "path": "15"
    },
    "8543": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "8546": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "AND",
      "path": "15"
    },
    "8547": {
      "fn": "Registry.handleRent",
      "offset": [
        10322,
        10345
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8548": {
      "fn": "Registry.handleRent",
      "offset": [
        10316,
        10317
      ],
      "op": "DUP8",
      "path": "15"
    },
    "8549": {
      "fn": "Registry.handleRent",
      "offset": [
        10316,
        10317
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8550": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8551": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "LT",
      "path": "15"
    },
    "8552": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2173"
    },
    "8555": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8556": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2173"
    },
    "8559": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "8562": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10302,
        10318
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8563": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8564": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8566": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "MUL",
      "path": "15"
    },
    "8567": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8569": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "ADD",
      "path": "15"
    },
    "8570": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "ADD",
      "path": "15"
    },
    "8571": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10318
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8572": {
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10345
      ],
      "op": "GT",
      "path": "15"
    },
    "8573": {
      "branch": 138,
      "fn": "Registry.handleRent",
      "offset": [
        10302,
        10345
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8574": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21C9"
    },
    "8577": {
      "branch": 138,
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8578": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8580": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8587": {
      "op": "SHL"
    },
    "8588": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8589": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8592": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8594": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8595": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "ADD",
      "path": "15"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8601": {
      "op": "DUP3"
    },
    "8602": {
      "op": "ADD"
    },
    "8603": {
      "op": "MSTORE"
    },
    "8604": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C69642072656E7420616D6F756E74000000000000"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8639": {
      "op": "DUP3"
    },
    "8640": {
      "op": "ADD"
    },
    "8641": {
      "op": "MSTORE"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8644": {
      "op": "ADD"
    },
    "8645": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "8648": {
      "op": "JUMP"
    },
    "8649": {
      "fn": "Registry.handleRent",
      "offset": [
        10277,
        10405
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8650": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8651": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8652": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8654": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10439
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8659": {
      "op": "SHL"
    },
    "8660": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8661": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "DIV",
      "path": "15"
    },
    "8662": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8664": {
      "fn": "Registry.handleRent",
      "offset": [
        10448,
        10468
      ],
      "op": "AND",
      "path": "15"
    },
    "8665": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "8667": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8668": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "GT",
      "path": "15"
    },
    "8669": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8670": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21E9"
    },
    "8673": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8674": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21E9"
    },
    "8677": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "8680": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10442,
        10469
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8681": {
      "fn": "Registry.handleRent",
      "offset": [
        10442,
        10469
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8682": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10503
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8684": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8685": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8686": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8688": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8689": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8696": {
      "op": "SHL"
    },
    "8697": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8698": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8701": {
      "op": "DUP5"
    },
    "8702": {
      "op": "AND"
    },
    "8703": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8705": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8706": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "15"
    },
    "8707": {
      "op": "MSTORE"
    },
    "8708": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10469
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "8709": {
      "fn": "Registry.handleRent",
      "offset": [
        10419,
        10469
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8710": {
      "op": "POP"
    },
    "8711": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10503
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8712": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10503
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8719": {
      "op": "SHL"
    },
    "8720": {
      "op": "SUB"
    },
    "8721": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8722": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8723": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "AND",
      "path": "15"
    },
    "8724": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10514
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8725": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10530
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "8730": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10530
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8733": {
      "op": "ADD"
    },
    "8734": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8736": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8738": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8739": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8740": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8741": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SUB",
      "path": "15"
    },
    "8742": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8743": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8744": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8745": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "8746": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8747": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8748": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8749": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2235"
    },
    "8752": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8753": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8755": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8756": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8757": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8758": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8759": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "GAS",
      "path": "15"
    },
    "8760": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "8761": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8762": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8763": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8764": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2249"
    },
    "8767": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8768": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8769": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8771": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8772": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "8773": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8774": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8776": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8777": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8778": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8779": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8780": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8781": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8782": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8784": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8785": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8786": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8788": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "NOT",
      "path": "15"
    },
    "8789": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8791": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8792": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "15"
    },
    "8793": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "AND",
      "path": "15"
    },
    "8794": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8795": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "15"
    },
    "8796": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8797": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8799": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8800": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8801": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8802": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "ADD",
      "path": "15"
    },
    "8803": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8804": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x226D"
    },
    "8807": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8808": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8809": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E0F"
    },
    "8812": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8813": {
      "fn": "Registry.handleRent",
      "offset": [
        10506,
        10546
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8814": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10546
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8815": {
      "fn": "Registry.handleRent",
      "offset": [
        10483,
        10546
      ],
      "op": "POP",
      "path": "15"
    },
    "8816": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10576
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8818": {
      "fn": "Registry.handleRent",
      "offset": [
        10585,
        10597
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8825": {
      "op": "SHL"
    },
    "8826": {
      "op": "SUB"
    },
    "8827": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10607
      ],
      "op": "AND",
      "path": "15"
    },
    "8828": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10607
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "8833": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8835": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8836": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8837": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "8842": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "AND",
      "path": "15"
    },
    "8843": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8845": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SHL",
      "path": "15"
    },
    "8846": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8847": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8848": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "8850": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "15"
    },
    "8851": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8853": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8855": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8856": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8857": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8858": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SUB",
      "path": "15"
    },
    "8859": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8860": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8861": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8862": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "8863": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8864": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8865": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8866": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22AA"
    },
    "8869": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8870": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8872": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8873": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8874": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8875": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "15"
    },
    "8876": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "GAS",
      "path": "15"
    },
    "8877": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "8878": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8879": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8880": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "8881": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22BE"
    },
    "8884": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8885": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8886": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8888": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8889": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "8890": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8891": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8893": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "REVERT",
      "path": "15"
    },
    "8894": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8895": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "15"
    },
    "8896": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "15"
    },
    "8897": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "15"
    },
    "8898": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "15"
    },
    "8899": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8901": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8902": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "8903": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8905": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "NOT",
      "path": "15"
    },
    "8906": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "8908": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8909": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "15"
    },
    "8910": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "AND",
      "path": "15"
    },
    "8911": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8912": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "15"
    },
    "8913": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8914": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8916": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8917": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "POP",
      "path": "15"
    },
    "8918": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8919": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "ADD",
      "path": "15"
    },
    "8920": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8921": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22E2"
    },
    "8924": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8925": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8926": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43DE"
    },
    "8929": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8930": {
      "fn": "Registry.handleRent",
      "offset": [
        10579,
        10609
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8931": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "8933": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "AND",
      "path": "15"
    },
    "8934": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8935": {
      "op": "POP"
    },
    "8936": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10654
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8938": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10669
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x22F4"
    },
    "8941": {
      "fn": "Registry.handleRent",
      "offset": [
        10560,
        10609
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8942": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10659
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "8944": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10669
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4780"
    },
    "8947": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10657,
        10669
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8948": {
      "fn": "Registry.handleRent",
      "offset": [
        10657,
        10669
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8949": {
      "fn": "Registry.handleRent",
      "offset": [
        10760,
        10782
      ],
      "op": "DUP7",
      "path": "15"
    },
    "8950": {
      "fn": "Registry.handleRent",
      "offset": [
        10760,
        10782
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8951": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10669
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8952": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10669
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8953": {
      "op": "POP"
    },
    "8954": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10704
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8956": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10704
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8957": {
      "fn": "Registry.handleRent",
      "offset": [
        10748,
        10790
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2310"
    },
    "8960": {
      "fn": "Registry.handleRent",
      "offset": [
        10748,
        10790
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8963": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8965": {
      "op": "SHL"
    },
    "8966": {
      "fn": "Registry.handleRent",
      "offset": [
        10760,
        10782
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8967": {
      "fn": "Registry.handleRent",
      "offset": [
        10760,
        10782
      ],
      "op": "DIV",
      "path": "15"
    },
    "8968": {
      "fn": "Registry.handleRent",
      "offset": [
        10760,
        10782
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "8970": {
      "fn": "Registry.handleRent",
      "offset": [
        10760,
        10782
      ],
      "op": "SHL",
      "path": "15"
    },
    "8971": {
      "fn": "Registry.handleRent",
      "offset": [
        10641,
        10669
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8972": {
      "fn": "Registry.handleRent",
      "offset": [
        10748,
        10759
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3473"
    },
    "8975": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10748,
        10790
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8976": {
      "fn": "Registry.handleRent",
      "offset": [
        10748,
        10790
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8977": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10709
      ],
      "op": "DUP12",
      "path": "15"
    },
    "8978": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10722
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "8981": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10722
      ],
      "op": "ADD",
      "path": "15"
    },
    "8982": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10722
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8983": {
      "fn": "Registry.handleRent",
      "offset": [
        10723,
        10724
      ],
      "op": "DUP12",
      "path": "15"
    },
    "8984": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8985": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "8986": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8987": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "LT",
      "path": "15"
    },
    "8988": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2327"
    },
    "8991": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "8992": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2327"
    },
    "8995": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "8998": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10707,
        10725
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8999": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9000": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9002": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "MUL",
      "path": "15"
    },
    "9003": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9005": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "ADD",
      "path": "15"
    },
    "9006": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "ADD",
      "path": "15"
    },
    "9007": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9008": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9010": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "AND",
      "path": "15"
    },
    "9011": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x233C"
    },
    "9014": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9015": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9016": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "9019": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10707,
        10790
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9020": {
      "fn": "Registry.handleRent",
      "offset": [
        10707,
        10790
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9021": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10790
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9022": {
      "fn": "Registry.handleRent",
      "offset": [
        10687,
        10790
      ],
      "op": "POP",
      "path": "15"
    },
    "9023": {
      "fn": "Registry.handleRent",
      "offset": [
        10828,
        10829
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 61,
      "value": "0x0"
    },
    "9025": {
      "fn": "Registry.handleRent",
      "offset": [
        10816,
        10825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9026": {
      "branch": 139,
      "fn": "Registry.handleRent",
      "offset": [
        10816,
        10829
      ],
      "op": "GT",
      "path": "15"
    },
    "9027": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x235E"
    },
    "9030": {
      "branch": 139,
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9031": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9033": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9040": {
      "op": "SHL"
    },
    "9041": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9042": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9043": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9045": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "ADD",
      "path": "15"
    },
    "9046": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "9049": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9050": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45D8"
    },
    "9053": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10808,
        10859
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9054": {
      "fn": "Registry.handleRent",
      "offset": [
        10808,
        10859
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9055": {
      "fn": "Registry.handleRent",
      "offset": [
        10877,
        11029
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 62,
      "value": "0x2373"
    },
    "9058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9064": {
      "op": "SHL"
    },
    "9065": {
      "op": "SUB"
    },
    "9066": {
      "fn": "Registry.handleRent",
      "offset": [
        10877,
        10913
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9067": {
      "fn": "Registry.handleRent",
      "offset": [
        10877,
        10913
      ],
      "op": "AND",
      "path": "15"
    },
    "9068": {
      "fn": "Registry.handleRent",
      "offset": [
        10935,
        10945
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9069": {
      "fn": "Registry.handleRent",
      "offset": [
        10975,
        10979
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "9070": {
      "fn": "Registry.handleRent",
      "offset": [
        11002,
        11011
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9071": {
      "fn": "Registry.handleRent",
      "offset": [
        10877,
        10913
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3502"
    },
    "9074": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        10877,
        11029
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9075": {
      "fn": "Registry.handleRent",
      "offset": [
        10877,
        11029
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9076": {
      "fn": "Registry.handleRent",
      "offset": [
        10623,
        11044
      ],
      "op": "POP",
      "path": "15"
    },
    "9077": {
      "fn": "Registry.handleRent",
      "offset": [
        10623,
        11044
      ],
      "op": "POP",
      "path": "15"
    },
    "9078": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x40"
    },
    "9080": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9081": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9082": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "9084": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9085": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9087": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9088": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9089": {
      "fn": "Registry.handleRent",
      "offset": [
        11146,
        11156
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9096": {
      "op": "SHL"
    },
    "9097": {
      "op": "SUB"
    },
    "9098": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9099": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9100": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9101": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9103": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9104": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11244
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9105": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11257
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "9108": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11257
      ],
      "op": "ADD",
      "path": "15"
    },
    "9109": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11257
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9110": {
      "fn": "Registry.handleRent",
      "offset": [
        11258,
        11259
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9111": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9112": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9113": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9114": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "LT",
      "path": "15"
    },
    "9115": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A6"
    },
    "9118": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9119": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23A6"
    },
    "9122": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "9125": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11242,
        11260
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9126": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9127": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9129": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "MUL",
      "path": "15"
    },
    "9130": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9132": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "ADD",
      "path": "15"
    },
    "9133": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "ADD",
      "path": "15"
    },
    "9134": {
      "fn": "Registry.handleRent",
      "offset": [
        11242,
        11260
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9135": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9137": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9138": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9139": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9140": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9142": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9143": {
      "fn": "Registry.handleRent",
      "offset": [
        11295,
        11310
      ],
      "op": "TIMESTAMP",
      "path": "15"
    },
    "9144": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "9149": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9150": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9151": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9152": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9154": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9155": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11195
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9156": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11206
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "9159": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11206
      ],
      "op": "ADD",
      "path": "15"
    },
    "9160": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11206
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9161": {
      "fn": "Registry.handleRent",
      "offset": [
        11207,
        11208
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9162": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9163": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9164": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9165": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "LT",
      "path": "15"
    },
    "9166": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23D9"
    },
    "9169": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9170": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23D9"
    },
    "9173": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "9176": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11193,
        11209
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9177": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9178": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9180": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9181": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9182": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "MUL",
      "path": "15"
    },
    "9183": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9184": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9185": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9186": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "ADD",
      "path": "15"
    },
    "9187": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9188": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "ADD",
      "path": "15"
    },
    "9189": {
      "fn": "Registry.handleRent",
      "offset": [
        11193,
        11209
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9190": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9192": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9193": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9194": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9195": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9196": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9197": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9198": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9200": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9201": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9202": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9203": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11065
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x8"
    },
    "9205": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9206": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9207": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9209": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9210": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9211": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9212": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11084
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9213": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9214": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9215": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9216": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9217": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9218": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9219": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9220": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9221": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9222": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9223": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9224": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9225": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9227": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9228": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9229": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "ADD",
      "path": "15"
    },
    "9230": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9231": {
      "fn": "Registry.handleRent",
      "offset": [
        11087,
        11326
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9234": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9239": {
      "op": "SHL"
    },
    "9240": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MUL",
      "path": "15"
    },
    "9241": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9244": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "9246": {
      "op": "SHL"
    },
    "9247": {
      "op": "NOT"
    },
    "9248": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "9253": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9254": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP8",
      "path": "15"
    },
    "9255": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9260": {
      "op": "SHL"
    },
    "9261": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MUL",
      "path": "15"
    },
    "9262": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9263": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9264": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9265": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9266": {
      "op": "PUSH6",
      "value": "0xFFFFFFFFFFFF"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9275": {
      "op": "SHL"
    },
    "9276": {
      "op": "NOT"
    },
    "9277": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9278": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9279": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "9280": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9285": {
      "op": "SHL"
    },
    "9286": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "MUL",
      "path": "15"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9293": {
      "op": "SHL"
    },
    "9294": {
      "op": "SUB"
    },
    "9295": {
      "op": "NOT"
    },
    "9296": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9297": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9298": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9305": {
      "op": "SHL"
    },
    "9306": {
      "op": "SUB"
    },
    "9307": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9308": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9309": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9310": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "OR",
      "path": "15"
    },
    "9311": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9312": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9313": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9314": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "OR",
      "path": "15"
    },
    "9315": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "AND",
      "path": "15"
    },
    "9316": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9317": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9318": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9319": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "OR",
      "path": "15"
    },
    "9320": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9321": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9322": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9323": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "OR",
      "path": "15"
    },
    "9324": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9325": {
      "fn": "Registry.handleRent",
      "offset": [
        11057,
        11326
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9326": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11423
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 64,
      "value": "0x160"
    },
    "9329": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11423
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9330": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11423
      ],
      "op": "ADD",
      "path": "15"
    },
    "9331": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11423
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9332": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9333": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9334": {
      "fn": "Registry.handleRent",
      "offset": [
        11424,
        11425
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9335": {
      "fn": "Registry.handleRent",
      "offset": [
        11424,
        11425
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9336": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9337": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "LT",
      "path": "15"
    },
    "9338": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2485"
    },
    "9341": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9342": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2485"
    },
    "9345": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "9348": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11410,
        11426
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9349": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9350": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9352": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "MUL",
      "path": "15"
    },
    "9353": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9355": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "ADD",
      "path": "15"
    },
    "9356": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "ADD",
      "path": "15"
    },
    "9357": {
      "fn": "Registry.handleRent",
      "offset": [
        11410,
        11426
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9358": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9360": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "AND",
      "path": "15"
    },
    "9361": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x7"
    },
    "9363": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9365": {
      "fn": "Registry.handleRent",
      "offset": [
        11349,
        11366
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9366": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9367": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9368": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9370": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "ADD",
      "path": "15"
    },
    "9371": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9372": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9373": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9374": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9376": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "ADD",
      "path": "15"
    },
    "9377": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9379": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11367
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9380": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11383
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9382": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11383
      ],
      "op": "ADD",
      "path": "15"
    },
    "9383": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11383
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1C"
    },
    "9385": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9386": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9387": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9388": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9389": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9390": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9391": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9394": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "EXP",
      "path": "15"
    },
    "9395": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9396": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DIV",
      "path": "15"
    },
    "9397": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9400": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "AND",
      "path": "15"
    },
    "9401": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24C2"
    },
    "9404": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9405": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9406": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4847"
    },
    "9409": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11340,
        11440
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9410": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9411": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9412": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "POP",
      "path": "15"
    },
    "9413": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9416": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "EXP",
      "path": "15"
    },
    "9417": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9418": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9419": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9420": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9423": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "MUL",
      "path": "15"
    },
    "9424": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "NOT",
      "path": "15"
    },
    "9425": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "AND",
      "path": "15"
    },
    "9426": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9427": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9428": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "9431": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "AND",
      "path": "15"
    },
    "9432": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "MUL",
      "path": "15"
    },
    "9433": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "OR",
      "path": "15"
    },
    "9434": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9435": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9436": {
      "fn": "Registry.handleRent",
      "offset": [
        11340,
        11440
      ],
      "op": "POP",
      "path": "15"
    },
    "9437": {
      "fn": "Registry.handleRent",
      "offset": [
        11552,
        11561
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 65,
      "value": "0x4"
    },
    "9439": {
      "fn": "Registry.handleRent",
      "offset": [
        11552,
        11561
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9440": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11521
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9441": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11531
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9444": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11531
      ],
      "op": "ADD",
      "path": "15"
    },
    "9445": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11531
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9446": {
      "fn": "Registry.handleRent",
      "offset": [
        11532,
        11533
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9447": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9448": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9449": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9450": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "LT",
      "path": "15"
    },
    "9451": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24F6"
    },
    "9454": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9455": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x24F6"
    },
    "9458": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "9461": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11519,
        11534
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9462": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9463": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9465": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "MUL",
      "path": "15"
    },
    "9466": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9468": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "ADD",
      "path": "15"
    },
    "9469": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "ADD",
      "path": "15"
    },
    "9470": {
      "fn": "Registry.handleRent",
      "offset": [
        11519,
        11534
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9471": {
      "fn": "Registry.handleRent",
      "offset": [
        11491,
        11501
      ],
      "op": "CALLER",
      "path": "15"
    },
    "9472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9478": {
      "op": "SHL"
    },
    "9479": {
      "op": "SUB"
    },
    "9480": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "AND",
      "path": "15"
    },
    "9481": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x61E1A1E6F89EABA4BA0119B0023BD32B1BB0412AB96CCD8D0588A3E98A097631"
    },
    "9514": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11587
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9515": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11598
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x160"
    },
    "9518": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11598
      ],
      "op": "ADD",
      "path": "15"
    },
    "9519": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11598
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9520": {
      "fn": "Registry.handleRent",
      "offset": [
        11599,
        11600
      ],
      "op": "DUP13",
      "path": "15"
    },
    "9521": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9522": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9523": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9524": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "LT",
      "path": "15"
    },
    "9525": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2540"
    },
    "9528": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9529": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2540"
    },
    "9532": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "9535": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11585,
        11601
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9536": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9537": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9539": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "MUL",
      "path": "15"
    },
    "9540": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9542": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "ADD",
      "path": "15"
    },
    "9543": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "ADD",
      "path": "15"
    },
    "9544": {
      "fn": "Registry.handleRent",
      "offset": [
        11585,
        11601
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9545": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11622
      ],
      "op": "DUP14",
      "path": "15"
    },
    "9546": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11635
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "9549": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11635
      ],
      "op": "ADD",
      "path": "15"
    },
    "9550": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11635
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9551": {
      "fn": "Registry.handleRent",
      "offset": [
        11636,
        11637
      ],
      "op": "DUP14",
      "path": "15"
    },
    "9552": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9553": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9554": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9555": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "LT",
      "path": "15"
    },
    "9556": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x255F"
    },
    "9559": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9560": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x255F"
    },
    "9563": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "9566": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11620,
        11638
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9567": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9568": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9570": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9571": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9572": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "MUL",
      "path": "15"
    },
    "9573": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9574": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9575": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9576": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "ADD",
      "path": "15"
    },
    "9577": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9578": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "ADD",
      "path": "15"
    },
    "9579": {
      "fn": "Registry.handleRent",
      "offset": [
        11620,
        11638
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9580": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "DUP11",
      "path": "15"
    },
    "9581": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9582": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9584": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9585": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9588": {
      "op": "SWAP6"
    },
    "9589": {
      "op": "DUP7"
    },
    "9590": {
      "op": "AND"
    },
    "9591": {
      "op": "DUP2"
    },
    "9592": {
      "op": "MSTORE"
    },
    "9593": {
      "op": "SWAP5"
    },
    "9594": {
      "op": "SWAP1"
    },
    "9595": {
      "op": "SWAP3"
    },
    "9596": {
      "op": "AND"
    },
    "9597": {
      "op": "SWAP3"
    },
    "9598": {
      "op": "DUP5"
    },
    "9599": {
      "op": "ADD"
    },
    "9600": {
      "op": "SWAP3"
    },
    "9601": {
      "op": "SWAP1"
    },
    "9602": {
      "op": "SWAP3"
    },
    "9603": {
      "op": "MSTORE"
    },
    "9604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9608": {
      "op": "SHL"
    },
    "9609": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9610": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9611": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "DIV",
      "path": "15"
    },
    "9612": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "9617": {
      "fn": "Registry.handleRent",
      "offset": [
        11656,
        11672
      ],
      "op": "AND",
      "path": "15"
    },
    "9618": {
      "op": "SWAP1"
    },
    "9619": {
      "op": "DUP3"
    },
    "9620": {
      "op": "ADD"
    },
    "9621": {
      "op": "MSTORE"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9624": {
      "op": "ADD"
    },
    "9625": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9627": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9628": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9629": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9630": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "SUB",
      "path": "15"
    },
    "9631": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9632": {
      "fn": "Registry.handleRent",
      "offset": [
        11459,
        11686
      ],
      "op": "LOG4",
      "path": "15"
    },
    "9633": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11709
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 66,
      "value": "0x4"
    },
    "9635": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9636": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9637": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9638": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9640": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25B0"
    },
    "9643": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9644": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "9647": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        11700,
        11711
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9648": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9649": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9650": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9651": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "POP",
      "path": "15"
    },
    "9652": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9653": {
      "fn": "Registry.handleRent",
      "offset": [
        11700,
        11711
      ],
      "op": "POP",
      "path": "15"
    },
    "9654": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9655": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9656": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9657": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9658": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9659": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9660": {
      "fn": "Registry.handleRent",
      "offset": [
        9378,
        11722
      ],
      "op": "POP",
      "path": "15"
    },
    "9661": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 67
    },
    "9662": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9663": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25C7"
    },
    "9666": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9667": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "9670": {
      "fn": "Registry.handleRent",
      "jump": "i",
      "offset": [
        9373,
        9376
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9671": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9672": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9673": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "POP",
      "path": "15"
    },
    "9674": {
      "fn": "Registry.handleRent",
      "offset": [
        9373,
        9376
      ],
      "op": "POP",
      "path": "15"
    },
    "9675": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11722
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E79"
    },
    "9678": {
      "fn": "Registry.handleRent",
      "offset": [
        9333,
        11722
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9679": {
      "fn": "Registry.createRentCallData",
      "offset": [
        20887,
        21729
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9680": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21177,
        21195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x25D7"
    },
    "9683": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21177,
        21195
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3A88"
    },
    "9686": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21177,
        21195
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9687": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21177,
        21195
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9688": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 68,
      "value": "0x40"
    },
    "9690": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9691": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9692": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1A0"
    },
    "9695": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9696": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9698": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9699": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9700": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21241,
        21242
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9702": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9703": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9704": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9706": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9707": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21263,
        21264
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "9709": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9710": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9711": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9713": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9714": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21291,
        21302
      ],
      "op": "DUP9",
      "path": "15"
    },
    "9715": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9716": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9717": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9719": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9720": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21328,
        21338
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9721": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9722": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9723": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9725": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9726": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21361,
        21368
      ],
      "op": "DUP7",
      "path": "15"
    },
    "9727": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9728": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9729": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9731": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9732": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21408,
        21409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9740": {
      "op": "SHL"
    },
    "9741": {
      "op": "SUB"
    },
    "9742": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9743": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "GT",
      "path": "15"
    },
    "9744": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9745": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x261C"
    },
    "9748": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9749": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x261C"
    },
    "9752": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x490A"
    },
    "9755": {
      "fn": "Registry.createRentCallData",
      "jump": "i",
      "offset": [
        21394,
        21410
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9756": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9757": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9759": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9760": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9761": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9762": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9763": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9764": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9765": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9767": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "MUL",
      "path": "15"
    },
    "9768": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9770": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "ADD",
      "path": "15"
    },
    "9771": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9772": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "ADD",
      "path": "15"
    },
    "9773": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9775": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9776": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9777": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9778": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2645"
    },
    "9781": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9782": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9783": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9785": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "ADD",
      "path": "15"
    },
    "9786": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9788": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9789": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "MUL",
      "path": "15"
    },
    "9790": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9791": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9792": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9793": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9794": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "ADD",
      "path": "15"
    },
    "9795": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9796": {
      "op": "POP"
    },
    "9797": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21394,
        21410
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9798": {
      "op": "POP"
    },
    "9799": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9800": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9801": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9803": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9804": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21605,
        21606
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9806": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9808": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9809": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9810": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9811": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9812": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9813": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9814": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9816": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "MUL",
      "path": "15"
    },
    "9817": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9819": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "ADD",
      "path": "15"
    },
    "9820": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9821": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "ADD",
      "path": "15"
    },
    "9822": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9824": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9825": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9826": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9827": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2676"
    },
    "9830": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9831": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9832": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9834": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "ADD",
      "path": "15"
    },
    "9835": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9837": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9838": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "MUL",
      "path": "15"
    },
    "9839": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9840": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9841": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9842": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9843": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "ADD",
      "path": "15"
    },
    "9844": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9845": {
      "op": "POP"
    },
    "9846": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21593,
        21607
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9847": {
      "op": "POP"
    },
    "9848": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9849": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9850": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9852": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9853": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21650,
        21651
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9855": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9857": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9858": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9859": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9860": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9861": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9862": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9863": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9865": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "MUL",
      "path": "15"
    },
    "9866": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9868": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "ADD",
      "path": "15"
    },
    "9869": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9870": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "ADD",
      "path": "15"
    },
    "9871": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9873": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9874": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9875": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9876": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x26A7"
    },
    "9879": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9880": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9881": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9883": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "ADD",
      "path": "15"
    },
    "9884": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9886": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9887": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "MUL",
      "path": "15"
    },
    "9888": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9889": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "9890": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9891": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "9892": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "ADD",
      "path": "15"
    },
    "9893": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9894": {
      "op": "POP"
    },
    "9895": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21637,
        21652
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9896": {
      "op": "POP"
    },
    "9897": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9898": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9899": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9901": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9902": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9903": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9904": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9905": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9906": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9907": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9908": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9910": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9911": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9914": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9915": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9916": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9917": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9918": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "DUP10",
      "path": "15"
    },
    "9919": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "ADD",
      "path": "15"
    },
    "9920": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9921": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21470,
        21486
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9922": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9923": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9924": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9925": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9926": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9927": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9928": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9929": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "9931": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9932": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9933": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9934": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9935": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "9936": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9937": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "9939": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9940": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9941": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9942": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9943": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9944": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9945": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9946": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9947": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9948": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9949": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9950": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9951": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9952": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "ADD",
      "path": "15"
    },
    "9953": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9954": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9955": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21680,
        21711
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9956": {
      "op": "POP"
    },
    "9957": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "9959": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9960": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9961": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "ADD",
      "path": "15"
    },
    "9962": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21212,
        21722
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9963": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21207,
        21722
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "9964": {
      "fn": "Registry.createRentCallData",
      "offset": [
        21207,
        21722
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "9965": {
      "op": "POP"
    },
    "9966": {
      "op": "POP"
    },
    "9967": {
      "op": "POP"
    },
    "9968": {
      "fn": "Registry.createRentCallData",
      "jump": "o",
      "offset": [
        20887,
        21729
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9969": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24184,
        24451
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9970": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24256,
        24298
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 69,
      "value": "0x26FE"
    },
    "9973": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24276,
        24283
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9974": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24276,
        24297
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9976": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24276,
        24297
      ],
      "op": "ADD",
      "path": "15"
    },
    "9977": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24276,
        24297
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9978": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24256,
        24275
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x356D"
    },
    "9981": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24256,
        24298
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9982": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24256,
        24298
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9983": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24316,
        24339
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 70,
      "value": "0x40"
    },
    "9985": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24316,
        24339
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9986": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24316,
        24339
      ],
      "op": "ADD",
      "path": "15"
    },
    "9987": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24316,
        24339
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9988": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24316,
        24344
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9990": {
      "branch": 140,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24316,
        24344
      ],
      "op": "AND",
      "path": "15"
    },
    "9991": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2749"
    },
    "9994": {
      "branch": 140,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9995": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9997": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10004": {
      "op": "SHL"
    },
    "10005": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10006": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10009": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10011": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10012": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "ADD",
      "path": "15"
    },
    "10013": {
      "op": "MSTORE"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10018": {
      "op": "DUP3"
    },
    "10019": {
      "op": "ADD"
    },
    "10020": {
      "op": "MSTORE"
    },
    "10021": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A6475726174696F6E207A65726F"
    },
    "10042": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10044": {
      "op": "SHL"
    },
    "10045": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10047": {
      "op": "DUP3"
    },
    "10048": {
      "op": "ADD"
    },
    "10049": {
      "op": "MSTORE"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10052": {
      "op": "ADD"
    },
    "10053": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10056": {
      "op": "JUMP"
    },
    "10057": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24308,
        24369
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10058": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24387,
        24409
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 71,
      "value": "0x60"
    },
    "10060": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24387,
        24409
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10061": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24387,
        24409
      ],
      "op": "ADD",
      "path": "15"
    },
    "10062": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24387,
        24409
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10069": {
      "op": "SHL"
    },
    "10070": {
      "op": "SUB"
    },
    "10071": {
      "op": "NOT"
    },
    "10072": {
      "branch": 141,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24387,
        24414
      ],
      "op": "AND",
      "path": "15"
    },
    "10073": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "10076": {
      "branch": 141,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10077": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10079": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10086": {
      "op": "SHL"
    },
    "10087": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10088": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10089": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10091": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "ADD",
      "path": "15"
    },
    "10092": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10095": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10096": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24379,
        24444
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45D8"
    },
    "10099": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24379,
        24444
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10100": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        25972,
        26313
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10101": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26153,
        26162
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 72
    },
    "10102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10108": {
      "op": "SHL"
    },
    "10109": {
      "op": "SUB"
    },
    "10110": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26162
      ],
      "op": "AND",
      "path": "15"
    },
    "10111": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26135
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10112": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26149
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10114": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26149
      ],
      "op": "ADD",
      "path": "15"
    },
    "10115": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26149
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10122": {
      "op": "SHL"
    },
    "10123": {
      "op": "SUB"
    },
    "10124": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26162
      ],
      "op": "AND",
      "path": "15"
    },
    "10125": {
      "branch": 142,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26128,
        26162
      ],
      "op": "EQ",
      "path": "15"
    },
    "10126": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27CD"
    },
    "10129": {
      "branch": 142,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10130": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10132": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10139": {
      "op": "SHL"
    },
    "10140": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10141": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10144": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10146": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10147": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "ADD",
      "path": "15"
    },
    "10148": {
      "op": "MSTORE"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10153": {
      "op": "DUP3"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "MSTORE"
    },
    "10156": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103932B73A32B9"
    },
    "10174": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "10176": {
      "op": "SHL"
    },
    "10177": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10179": {
      "op": "DUP3"
    },
    "10180": {
      "op": "ADD"
    },
    "10181": {
      "op": "MSTORE"
    },
    "10182": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10184": {
      "op": "ADD"
    },
    "10185": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10188": {
      "op": "JUMP"
    },
    "10189": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26120,
        26184
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10190": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26216,
        26257
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 73,
      "value": "0x27D7"
    },
    "10193": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26233,
        26240
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10194": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26242,
        26256
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10195": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26216,
        26232
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35B9"
    },
    "10198": {
      "fn": "Registry.ensureIsReturnable",
      "jump": "i",
      "offset": [
        26216,
        26257
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10199": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26216,
        26257
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10200": {
      "branch": 143,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26215,
        26257
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10201": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1E71"
    },
    "10204": {
      "branch": 143,
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10205": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10207": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10214": {
      "op": "SHL"
    },
    "10215": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10216": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10219": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10221": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10222": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "ADD",
      "path": "15"
    },
    "10223": {
      "op": "MSTORE"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10228": {
      "op": "DUP3"
    },
    "10229": {
      "op": "ADD"
    },
    "10230": {
      "op": "MSTORE"
    },
    "10231": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A706173742072657475726E2064617465000000000000000000"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10266": {
      "op": "DUP3"
    },
    "10267": {
      "op": "ADD"
    },
    "10268": {
      "op": "MSTORE"
    },
    "10269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10271": {
      "op": "ADD"
    },
    "10272": {
      "fn": "Registry.ensureIsReturnable",
      "offset": [
        26194,
        26306
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10275": {
      "op": "JUMP"
    },
    "10276": {
      "fn": "Registry.distributePayments",
      "offset": [
        15626,
        16819
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10277": {
      "fn": "Registry.distributePayments",
      "offset": [
        15801,
        15821
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10279": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        15837
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10280": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        15850
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "10282": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        15850
      ],
      "op": "ADD",
      "path": "15"
    },
    "10283": {
      "fn": "Registry.distributePayments",
      "offset": [
        15830,
        15850
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10284": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "10286": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10287": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "GT",
      "path": "15"
    },
    "10288": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10289": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x283C"
    },
    "10292": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10293": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x283C"
    },
    "10296": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "10299": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15824,
        15851
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10300": {
      "fn": "Registry.distributePayments",
      "offset": [
        15824,
        15851
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10301": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15877
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10303": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15888
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10304": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15888
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10305": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10307": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10308": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "10313": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10315": {
      "op": "SHL"
    },
    "10316": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10317": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10318": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10320": {
      "op": "DUP5"
    },
    "10321": {
      "op": "AND"
    },
    "10322": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10324": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10325": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ADD",
      "path": "15"
    },
    "10326": {
      "op": "MSTORE"
    },
    "10327": {
      "fn": "Registry.distributePayments",
      "offset": [
        15801,
        15851
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10328": {
      "fn": "Registry.distributePayments",
      "offset": [
        15801,
        15851
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "10329": {
      "op": "POP"
    },
    "10330": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15877
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10331": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15877
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10338": {
      "op": "SHL"
    },
    "10339": {
      "op": "SUB"
    },
    "10340": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15888
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10341": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15888
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10342": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15888
      ],
      "op": "AND",
      "path": "15"
    },
    "10343": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15888
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10344": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15904
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "10349": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15904
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10352": {
      "op": "ADD"
    },
    "10353": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10355": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10357": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10358": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10359": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10360": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "SUB",
      "path": "15"
    },
    "10361": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10362": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10363": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10364": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "10365": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10366": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10367": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10368": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2888"
    },
    "10371": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10372": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10374": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10375": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10376": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10377": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10378": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "GAS",
      "path": "15"
    },
    "10379": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "10380": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10381": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10382": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10383": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x289C"
    },
    "10386": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10387": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10388": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10390": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10391": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "10392": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10393": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10395": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10396": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10397": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10398": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10399": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10400": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10401": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10403": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10404": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10405": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10407": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "NOT",
      "path": "15"
    },
    "10408": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10410": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10411": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ADD",
      "path": "15"
    },
    "10412": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "AND",
      "path": "15"
    },
    "10413": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10414": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ADD",
      "path": "15"
    },
    "10415": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10416": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10418": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10419": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10420": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10421": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "ADD",
      "path": "15"
    },
    "10422": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10423": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28C0"
    },
    "10426": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10427": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10428": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E0F"
    },
    "10431": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15880,
        15920
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10432": {
      "fn": "Registry.distributePayments",
      "offset": [
        15880,
        15920
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10433": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15920
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10434": {
      "fn": "Registry.distributePayments",
      "offset": [
        15861,
        15920
      ],
      "op": "POP",
      "path": "15"
    },
    "10435": {
      "fn": "Registry.distributePayments",
      "offset": [
        15930,
        15946
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10437": {
      "fn": "Registry.distributePayments",
      "offset": [
        15955,
        15963
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10444": {
      "op": "SHL"
    },
    "10445": {
      "op": "SUB"
    },
    "10446": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15973
      ],
      "op": "AND",
      "path": "15"
    },
    "10447": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15973
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "10452": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10454": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10455": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10456": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "10461": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "AND",
      "path": "15"
    },
    "10462": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "10464": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "SHL",
      "path": "15"
    },
    "10465": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10466": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10467": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10469": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ADD",
      "path": "15"
    },
    "10470": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10472": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10474": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10475": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10476": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10477": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "SUB",
      "path": "15"
    },
    "10478": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10479": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP7",
      "path": "15"
    },
    "10480": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10481": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "10482": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10483": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10484": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10485": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28FD"
    },
    "10488": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10489": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10491": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10492": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10493": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10494": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "POP",
      "path": "15"
    },
    "10495": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "GAS",
      "path": "15"
    },
    "10496": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "10497": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10498": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10499": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10500": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2911"
    },
    "10503": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10504": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10505": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10507": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10508": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "10509": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10510": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10512": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "REVERT",
      "path": "15"
    },
    "10513": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10514": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "POP",
      "path": "15"
    },
    "10515": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "POP",
      "path": "15"
    },
    "10516": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "POP",
      "path": "15"
    },
    "10517": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "POP",
      "path": "15"
    },
    "10518": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10520": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10521": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "10522": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10524": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "NOT",
      "path": "15"
    },
    "10525": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "10527": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10528": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ADD",
      "path": "15"
    },
    "10529": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "AND",
      "path": "15"
    },
    "10530": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10531": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ADD",
      "path": "15"
    },
    "10532": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10533": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10535": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10536": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "POP",
      "path": "15"
    },
    "10537": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10538": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "ADD",
      "path": "15"
    },
    "10539": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10540": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2935"
    },
    "10543": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10544": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10545": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43DE"
    },
    "10548": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        15949,
        15975
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10549": {
      "fn": "Registry.distributePayments",
      "offset": [
        15949,
        15975
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10550": {
      "fn": "Registry.distributePayments",
      "offset": [
        15930,
        15975
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10552": {
      "fn": "Registry.distributePayments",
      "offset": [
        15930,
        15975
      ],
      "op": "AND",
      "path": "15"
    },
    "10553": {
      "fn": "Registry.distributePayments",
      "offset": [
        15930,
        15975
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10554": {
      "op": "POP"
    },
    "10555": {
      "fn": "Registry.distributePayments",
      "offset": [
        15985,
        15998
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10557": {
      "fn": "Registry.distributePayments",
      "offset": [
        16001,
        16013
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2947"
    },
    "10560": {
      "fn": "Registry.distributePayments",
      "offset": [
        15930,
        15975
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10561": {
      "fn": "Registry.distributePayments",
      "offset": [
        16001,
        16003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "10563": {
      "fn": "Registry.distributePayments",
      "offset": [
        16001,
        16013
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4780"
    },
    "10566": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16001,
        16013
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10567": {
      "fn": "Registry.distributePayments",
      "offset": [
        16001,
        16013
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10568": {
      "fn": "Registry.distributePayments",
      "offset": [
        15985,
        16013
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10569": {
      "fn": "Registry.distributePayments",
      "offset": [
        15985,
        16013
      ],
      "op": "POP",
      "path": "15"
    },
    "10570": {
      "fn": "Registry.distributePayments",
      "offset": [
        16023,
        16040
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10572": {
      "fn": "Registry.distributePayments",
      "offset": [
        16043,
        16085
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2959"
    },
    "10575": {
      "fn": "Registry.distributePayments",
      "offset": [
        16055,
        16062
      ],
      "op": "DUP9",
      "path": "15"
    },
    "10576": {
      "fn": "Registry.distributePayments",
      "offset": [
        16055,
        16077
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "10578": {
      "fn": "Registry.distributePayments",
      "offset": [
        16055,
        16077
      ],
      "op": "ADD",
      "path": "15"
    },
    "10579": {
      "fn": "Registry.distributePayments",
      "offset": [
        16055,
        16077
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10580": {
      "fn": "Registry.distributePayments",
      "offset": [
        16079,
        16084
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10581": {
      "fn": "Registry.distributePayments",
      "offset": [
        16043,
        16054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3473"
    },
    "10584": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16043,
        16085
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10585": {
      "fn": "Registry.distributePayments",
      "offset": [
        16043,
        16085
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10586": {
      "fn": "Registry.distributePayments",
      "offset": [
        16023,
        16085
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10587": {
      "fn": "Registry.distributePayments",
      "offset": [
        16023,
        16085
      ],
      "op": "POP",
      "path": "15"
    },
    "10588": {
      "fn": "Registry.distributePayments",
      "offset": [
        16095,
        16117
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10590": {
      "fn": "Registry.distributePayments",
      "offset": [
        16132,
        16139
      ],
      "op": "DUP8",
      "path": "15"
    },
    "10591": {
      "fn": "Registry.distributePayments",
      "offset": [
        16132,
        16152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10593": {
      "fn": "Registry.distributePayments",
      "offset": [
        16132,
        16152
      ],
      "op": "ADD",
      "path": "15"
    },
    "10594": {
      "fn": "Registry.distributePayments",
      "offset": [
        16132,
        16152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10595": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "10597": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "AND",
      "path": "15"
    },
    "10598": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16129
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10599": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2970"
    },
    "10602": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10603": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10604": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "10607": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16120,
        16152
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10608": {
      "fn": "Registry.distributePayments",
      "offset": [
        16120,
        16152
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10609": {
      "fn": "Registry.distributePayments",
      "offset": [
        16095,
        16152
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10610": {
      "op": "POP"
    },
    "10611": {
      "fn": "Registry.distributePayments",
      "offset": [
        16162,
        16183
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10613": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x15180"
    },
    "10617": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16220
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2982"
    },
    "10620": {
      "fn": "Registry.distributePayments",
      "offset": [
        16211,
        16220
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10621": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16208
      ],
      "op": "DUP11",
      "path": "15"
    },
    "10622": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16220
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "10625": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16187,
        16220
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10626": {
      "fn": "Registry.distributePayments",
      "offset": [
        16187,
        16220
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10627": {
      "fn": "Registry.distributePayments",
      "offset": [
        16186,
        16250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x298C"
    },
    "10630": {
      "fn": "Registry.distributePayments",
      "offset": [
        16186,
        16250
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10631": {
      "fn": "Registry.distributePayments",
      "offset": [
        16186,
        16250
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10632": {
      "fn": "Registry.distributePayments",
      "offset": [
        16186,
        16250
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x471B"
    },
    "10635": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16186,
        16250
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10636": {
      "fn": "Registry.distributePayments",
      "offset": [
        16186,
        16250
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10637": {
      "fn": "Registry.distributePayments",
      "offset": [
        16162,
        16250
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10638": {
      "fn": "Registry.distributePayments",
      "offset": [
        16162,
        16250
      ],
      "op": "POP",
      "path": "15"
    },
    "10639": {
      "fn": "Registry.distributePayments",
      "offset": [
        16285,
        16286
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 74,
      "value": "0x0"
    },
    "10641": {
      "fn": "Registry.distributePayments",
      "offset": [
        16268,
        16282
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10642": {
      "branch": 144,
      "fn": "Registry.distributePayments",
      "offset": [
        16268,
        16286
      ],
      "op": "GT",
      "path": "15"
    },
    "10643": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29EA"
    },
    "10646": {
      "branch": 144,
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10647": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10649": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10650": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10654": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10656": {
      "op": "SHL"
    },
    "10657": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10658": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10661": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10663": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10664": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "ADD",
      "path": "15"
    },
    "10665": {
      "op": "MSTORE"
    },
    "10666": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10670": {
      "op": "DUP3"
    },
    "10671": {
      "op": "ADD"
    },
    "10672": {
      "op": "MSTORE"
    },
    "10673": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F74616C2072656E746572207061796D656E74206973207A"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10708": {
      "op": "DUP3"
    },
    "10709": {
      "op": "ADD"
    },
    "10710": {
      "op": "MSTORE"
    },
    "10711": {
      "op": "PUSH3",
      "value": "0x65726F"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "10717": {
      "op": "SHL"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10720": {
      "op": "DUP3"
    },
    "10721": {
      "op": "ADD"
    },
    "10722": {
      "op": "MSTORE"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10725": {
      "op": "ADD"
    },
    "10726": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10729": {
      "op": "JUMP"
    },
    "10730": {
      "fn": "Registry.distributePayments",
      "offset": [
        16260,
        16326
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10731": {
      "fn": "Registry.distributePayments",
      "offset": [
        16360,
        16361
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 75,
      "value": "0x0"
    },
    "10733": {
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16357
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10734": {
      "branch": 145,
      "fn": "Registry.distributePayments",
      "offset": [
        16344,
        16361
      ],
      "op": "GT",
      "path": "15"
    },
    "10735": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A3A"
    },
    "10738": {
      "branch": 145,
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10739": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10741": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10748": {
      "op": "SHL"
    },
    "10749": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10750": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10753": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10755": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10756": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "ADD",
      "path": "15"
    },
    "10757": {
      "op": "MSTORE"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10762": {
      "op": "DUP3"
    },
    "10763": {
      "op": "ADD"
    },
    "10764": {
      "op": "MSTORE"
    },
    "10765": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E646572207061796D656E74206973207A65726F000000"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10800": {
      "op": "DUP3"
    },
    "10801": {
      "op": "ADD"
    },
    "10802": {
      "op": "MSTORE"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10805": {
      "op": "ADD"
    },
    "10806": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "10809": {
      "op": "JUMP"
    },
    "10810": {
      "fn": "Registry.distributePayments",
      "offset": [
        16336,
        16395
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10811": {
      "fn": "Registry.distributePayments",
      "offset": [
        16405,
        16426
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10813": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A46"
    },
    "10816": {
      "fn": "Registry.distributePayments",
      "offset": [
        16446,
        16459
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10817": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16443
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10818": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16459
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "10821": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16429,
        16459
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10822": {
      "fn": "Registry.distributePayments",
      "offset": [
        16429,
        16459
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10823": {
      "fn": "Registry.distributePayments",
      "offset": [
        16405,
        16459
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10824": {
      "fn": "Registry.distributePayments",
      "offset": [
        16405,
        16459
      ],
      "op": "POP",
      "path": "15"
    },
    "10825": {
      "fn": "Registry.distributePayments",
      "offset": [
        16473,
        16480
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "10827": {
      "fn": "Registry.distributePayments",
      "offset": [
        16473,
        16480
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10828": {
      "fn": "Registry.distributePayments",
      "offset": [
        16484,
        16485
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10830": {
      "branch": 146,
      "fn": "Registry.distributePayments",
      "offset": [
        16473,
        16485
      ],
      "op": "EQ",
      "path": "15"
    },
    "10831": {
      "fn": "Registry.distributePayments",
      "offset": [
        16469,
        16614
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A72"
    },
    "10834": {
      "branch": 146,
      "fn": "Registry.distributePayments",
      "offset": [
        16469,
        16614
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10835": {
      "fn": "Registry.distributePayments",
      "offset": [
        16501,
        16517
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10837": {
      "fn": "Registry.distributePayments",
      "offset": [
        16520,
        16564
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A62"
    },
    "10840": {
      "fn": "Registry.distributePayments",
      "offset": [
        16528,
        16541
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10841": {
      "fn": "Registry.distributePayments",
      "offset": [
        16543,
        16550
      ],
      "op": "DUP14",
      "path": "15"
    },
    "10842": {
      "fn": "Registry.distributePayments",
      "offset": [
        16543,
        16563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "10844": {
      "fn": "Registry.distributePayments",
      "offset": [
        16543,
        16563
      ],
      "op": "ADD",
      "path": "15"
    },
    "10845": {
      "fn": "Registry.distributePayments",
      "offset": [
        16543,
        16563
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10846": {
      "fn": "Registry.distributePayments",
      "offset": [
        16520,
        16527
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3647"
    },
    "10849": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16520,
        16564
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10850": {
      "fn": "Registry.distributePayments",
      "offset": [
        16520,
        16564
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10851": {
      "fn": "Registry.distributePayments",
      "offset": [
        16501,
        16564
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10852": {
      "op": "POP"
    },
    "10853": {
      "fn": "Registry.distributePayments",
      "offset": [
        16578,
        16603
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 76,
      "value": "0x2A6E"
    },
    "10856": {
      "fn": "Registry.distributePayments",
      "offset": [
        16501,
        16564
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10857": {
      "fn": "Registry.distributePayments",
      "offset": [
        16578,
        16603
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10858": {
      "fn": "Registry.distributePayments",
      "offset": [
        16578,
        16603
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "10861": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16578,
        16603
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10862": {
      "fn": "Registry.distributePayments",
      "offset": [
        16578,
        16603
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10863": {
      "fn": "Registry.distributePayments",
      "offset": [
        16578,
        16603
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10864": {
      "fn": "Registry.distributePayments",
      "offset": [
        16578,
        16603
      ],
      "op": "POP",
      "path": "15"
    },
    "10865": {
      "fn": "Registry.distributePayments",
      "offset": [
        16487,
        16614
      ],
      "op": "POP",
      "path": "15"
    },
    "10866": {
      "fn": "Registry.distributePayments",
      "offset": [
        16469,
        16614
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10867": {
      "fn": "Registry.distributePayments",
      "offset": [
        16652,
        16673
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 77,
      "value": "0x20"
    },
    "10869": {
      "fn": "Registry.distributePayments",
      "offset": [
        16652,
        16673
      ],
      "op": "DUP12",
      "path": "15"
    },
    "10870": {
      "fn": "Registry.distributePayments",
      "offset": [
        16652,
        16673
      ],
      "op": "ADD",
      "path": "15"
    },
    "10871": {
      "fn": "Registry.distributePayments",
      "offset": [
        16652,
        16673
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10872": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16689
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A8C"
    },
    "10875": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16689
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10882": {
      "op": "SHL"
    },
    "10883": {
      "op": "SUB"
    },
    "10884": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16651
      ],
      "op": "DUP10",
      "path": "15"
    },
    "10885": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16651
      ],
      "op": "AND",
      "path": "15"
    },
    "10886": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16651
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10887": {
      "fn": "Registry.distributePayments",
      "offset": [
        16675,
        16688
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10888": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16651
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3724"
    },
    "10891": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16623,
        16689
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10892": {
      "fn": "Registry.distributePayments",
      "offset": [
        16623,
        16689
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10893": {
      "fn": "Registry.distributePayments",
      "offset": [
        16703,
        16720
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10894": {
      "branch": 147,
      "fn": "Registry.distributePayments",
      "offset": [
        16703,
        16720
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10895": {
      "fn": "Registry.distributePayments",
      "offset": [
        16699,
        16813
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA9"
    },
    "10898": {
      "branch": 147,
      "fn": "Registry.distributePayments",
      "offset": [
        16699,
        16813
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10899": {
      "fn": "Registry.distributePayments",
      "offset": [
        16765,
        16786
      ],
      "op": "DUP10",
      "path": "15",
      "statement": 78
    },
    "10900": {
      "fn": "Registry.distributePayments",
      "offset": [
        16765,
        16786
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10901": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16802
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2AA9"
    },
    "10904": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16802
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10911": {
      "op": "SHL"
    },
    "10912": {
      "op": "SUB"
    },
    "10913": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16764
      ],
      "op": "DUP10",
      "path": "15"
    },
    "10914": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16764
      ],
      "op": "AND",
      "path": "15"
    },
    "10915": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16764
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10916": {
      "fn": "Registry.distributePayments",
      "offset": [
        16788,
        16801
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10917": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16764
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3724"
    },
    "10920": {
      "fn": "Registry.distributePayments",
      "jump": "i",
      "offset": [
        16736,
        16802
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10921": {
      "fn": "Registry.distributePayments",
      "offset": [
        16736,
        16802
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10922": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10923": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10924": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10925": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10926": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10927": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10928": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10929": {
      "fn": "Registry.distributePayments",
      "offset": [
        15791,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10930": {
      "fn": "Registry.distributePayments",
      "offset": [
        15626,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10931": {
      "fn": "Registry.distributePayments",
      "offset": [
        15626,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10932": {
      "fn": "Registry.distributePayments",
      "offset": [
        15626,
        16819
      ],
      "op": "POP",
      "path": "15"
    },
    "10933": {
      "fn": "Registry.distributePayments",
      "jump": "o",
      "offset": [
        15626,
        16819
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10934": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        24985,
        25435
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10935": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25092,
        25093
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 79,
      "value": "0x0"
    },
    "10937": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25075
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10938": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25086
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "10940": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25086
      ],
      "op": "ADD",
      "path": "15"
    },
    "10941": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25086
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10942": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25087,
        25088
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10943": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10944": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10945": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10946": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "LT",
      "path": "15"
    },
    "10947": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2ACE"
    },
    "10950": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10951": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2ACE"
    },
    "10954": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "10957": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25073,
        25089
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10958": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10959": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10961": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "MUL",
      "path": "15"
    },
    "10962": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10964": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "ADD",
      "path": "15"
    },
    "10965": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "ADD",
      "path": "15"
    },
    "10966": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25089
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10967": {
      "branch": 148,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25073,
        25093
      ],
      "op": "GT",
      "path": "15"
    },
    "10968": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B23"
    },
    "10971": {
      "branch": 148,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10972": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10974": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10975": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10979": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10981": {
      "op": "SHL"
    },
    "10982": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10983": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10986": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10988": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10989": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "ADD",
      "path": "15"
    },
    "10990": {
      "op": "MSTORE"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10995": {
      "op": "DUP3"
    },
    "10996": {
      "op": "ADD"
    },
    "10997": {
      "op": "MSTORE"
    },
    "10998": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6C656E6420616D6F756E74206973207A65726F000000000000"
    },
    "11031": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11033": {
      "op": "DUP3"
    },
    "11034": {
      "op": "ADD"
    },
    "11035": {
      "op": "MSTORE"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11038": {
      "op": "ADD"
    },
    "11039": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11042": {
      "op": "JUMP"
    },
    "11043": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25065,
        25124
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11044": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25162,
        25177
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 80,
      "value": "0xFF"
    },
    "11046": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25177
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11047": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25177
      ],
      "op": "AND",
      "path": "15"
    },
    "11048": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25144
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11049": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25155
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA0"
    },
    "11051": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25155
      ],
      "op": "ADD",
      "path": "15"
    },
    "11052": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25155
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11053": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25156,
        25157
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11054": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11055": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11056": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11057": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "LT",
      "path": "15"
    },
    "11058": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3D"
    },
    "11061": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11062": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B3D"
    },
    "11065": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11068": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25142,
        25158
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11069": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11070": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11072": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "MUL",
      "path": "15"
    },
    "11073": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11075": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "ADD",
      "path": "15"
    },
    "11076": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "ADD",
      "path": "15"
    },
    "11077": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25158
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11078": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25177
      ],
      "op": "GT",
      "path": "15"
    },
    "11079": {
      "branch": 149,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25142,
        25177
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11080": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B63"
    },
    "11083": {
      "branch": 149,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11084": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11086": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11087": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11093": {
      "op": "SHL"
    },
    "11094": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11095": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11096": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11098": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "ADD",
      "path": "15"
    },
    "11099": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11102": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11103": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460F"
    },
    "11106": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25134,
        25198
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11107": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25134,
        25198
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11108": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25240,
        25241
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 81,
      "value": "0x0"
    },
    "11110": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25218
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11111": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25234
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "11113": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25234
      ],
      "op": "ADD",
      "path": "15"
    },
    "11114": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25234
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11115": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25235,
        25236
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11116": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11117": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11118": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11119": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "LT",
      "path": "15"
    },
    "11120": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B7B"
    },
    "11123": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11124": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B7B"
    },
    "11127": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11130": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25216,
        25237
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11131": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11132": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11134": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "MUL",
      "path": "15"
    },
    "11135": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11137": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "ADD",
      "path": "15"
    },
    "11138": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "ADD",
      "path": "15"
    },
    "11139": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25237
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11140": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25241
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11142": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25241
      ],
      "op": "AND",
      "path": "15"
    },
    "11143": {
      "branch": 150,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25216,
        25241
      ],
      "op": "GT",
      "path": "15"
    },
    "11144": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BA3"
    },
    "11147": {
      "branch": 150,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11148": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11150": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11157": {
      "op": "SHL"
    },
    "11158": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11159": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11160": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11162": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "ADD",
      "path": "15"
    },
    "11163": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11166": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11167": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45A1"
    },
    "11170": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25208,
        25269
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11171": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25208,
        25269
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11172": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25312,
        25327
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 82,
      "value": "0xFF"
    },
    "11174": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25327
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11175": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25327
      ],
      "op": "AND",
      "path": "15"
    },
    "11176": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25289
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11177": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25305
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "11179": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25305
      ],
      "op": "ADD",
      "path": "15"
    },
    "11180": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25305
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11181": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25306,
        25307
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11182": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11183": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11184": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11185": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "LT",
      "path": "15"
    },
    "11186": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BBD"
    },
    "11189": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11190": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BBD"
    },
    "11193": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11196": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25287,
        25308
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11197": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11198": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11200": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "MUL",
      "path": "15"
    },
    "11201": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11203": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "ADD",
      "path": "15"
    },
    "11204": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "ADD",
      "path": "15"
    },
    "11205": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25308
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11206": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25327
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11208": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25327
      ],
      "op": "AND",
      "path": "15"
    },
    "11209": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25327
      ],
      "op": "GT",
      "path": "15"
    },
    "11210": {
      "branch": 151,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25287,
        25327
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11211": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BE6"
    },
    "11214": {
      "branch": 151,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11215": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11217": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11224": {
      "op": "SHL"
    },
    "11225": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11226": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11227": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11229": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "ADD",
      "path": "15"
    },
    "11230": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11233": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11234": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460F"
    },
    "11237": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25279,
        25348
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11238": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25279,
        25348
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11239": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25397,
        25398
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 83,
      "value": "0x0"
    },
    "11241": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25375
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11242": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25390
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "11244": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25390
      ],
      "op": "ADD",
      "path": "15"
    },
    "11245": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25390
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11246": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25391,
        25392
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11247": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11248": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11249": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11250": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "LT",
      "path": "15"
    },
    "11251": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BFE"
    },
    "11254": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11255": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BFE"
    },
    "11258": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11261": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25373,
        25393
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11262": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11263": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11265": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "MUL",
      "path": "15"
    },
    "11266": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11268": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "ADD",
      "path": "15"
    },
    "11269": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "ADD",
      "path": "15"
    },
    "11270": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25373,
        25393
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11271": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25366,
        25394
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "11273": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25366,
        25394
      ],
      "op": "SHR",
      "path": "15"
    },
    "11274": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25366,
        25398
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "11279": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25366,
        25398
      ],
      "op": "AND",
      "path": "15"
    },
    "11280": {
      "branch": 152,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25366,
        25398
      ],
      "op": "GT",
      "path": "15"
    },
    "11281": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "11284": {
      "branch": 152,
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11285": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11287": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11294": {
      "op": "SHL"
    },
    "11295": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11296": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11297": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11299": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "ADD",
      "path": "15"
    },
    "11300": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11303": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11304": {
      "fn": "Registry.ensureIsLendable",
      "offset": [
        25358,
        25428
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45D8"
    },
    "11307": {
      "fn": "Registry.ensureIsLendable",
      "jump": "i",
      "offset": [
        25358,
        25428
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11308": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23912,
        24178
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11309": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23981,
        24020
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 84,
      "value": "0x2C39"
    },
    "11312": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23998,
        24005
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11313": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23998,
        24019
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11315": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23998,
        24019
      ],
      "op": "ADD",
      "path": "15"
    },
    "11316": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23998,
        24019
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11317": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23981,
        23997
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3754"
    },
    "11320": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        23981,
        24020
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11321": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        23981,
        24020
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11322": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24061
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 85,
      "value": "0x40"
    },
    "11324": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24061
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11325": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24061
      ],
      "op": "ADD",
      "path": "15"
    },
    "11326": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24061
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11327": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24066
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11329": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24066
      ],
      "op": "AND",
      "path": "15"
    },
    "11330": {
      "branch": 153,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24038,
        24066
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11331": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2C89"
    },
    "11334": {
      "branch": 153,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11335": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11337": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11344": {
      "op": "SHL"
    },
    "11345": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11346": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11349": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11351": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11352": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "ADD",
      "path": "15"
    },
    "11353": {
      "op": "MSTORE"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11358": {
      "op": "DUP3"
    },
    "11359": {
      "op": "ADD"
    },
    "11360": {
      "op": "MSTORE"
    },
    "11361": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11388": {
      "op": "SHL"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11391": {
      "op": "DUP3"
    },
    "11392": {
      "op": "ADD"
    },
    "11393": {
      "op": "MSTORE"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11396": {
      "op": "ADD"
    },
    "11397": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11400": {
      "op": "JUMP"
    },
    "11401": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24030,
        24095
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11402": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24113,
        24135
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 86,
      "value": "0x60"
    },
    "11404": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24113,
        24135
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11405": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24113,
        24135
      ],
      "op": "ADD",
      "path": "15"
    },
    "11406": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24113,
        24135
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11413": {
      "op": "SHL"
    },
    "11414": {
      "op": "SUB"
    },
    "11415": {
      "op": "NOT"
    },
    "11416": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24113,
        24140
      ],
      "op": "AND",
      "path": "15"
    },
    "11417": {
      "branch": 154,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24113,
        24140
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11418": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "11421": {
      "branch": 154,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11422": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11424": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11431": {
      "op": "SHL"
    },
    "11432": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11433": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11436": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11438": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11439": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "ADD",
      "path": "15"
    },
    "11440": {
      "op": "MSTORE"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11445": {
      "op": "DUP3"
    },
    "11446": {
      "op": "ADD"
    },
    "11447": {
      "op": "MSTORE"
    },
    "11448": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206E6F74207A65726F000000000000"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11483": {
      "op": "DUP3"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "MSTORE"
    },
    "11486": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11488": {
      "op": "ADD"
    },
    "11489": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24105,
        24171
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11492": {
      "op": "JUMP"
    },
    "11493": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26714,
        26843
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11494": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26806,
        26807
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 87,
      "value": "0x0"
    },
    "11496": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26794,
        26803
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11497": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26794,
        26807
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11499": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26794,
        26807
      ],
      "op": "AND",
      "path": "15"
    },
    "11500": {
      "branch": 155,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26794,
        26807
      ],
      "op": "GT",
      "path": "15"
    },
    "11501": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "11504": {
      "branch": 155,
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11505": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11507": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11514": {
      "op": "SHL"
    },
    "11515": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11516": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11519": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11521": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11522": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "ADD",
      "path": "15"
    },
    "11523": {
      "op": "MSTORE"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11528": {
      "op": "DUP3"
    },
    "11529": {
      "op": "ADD"
    },
    "11530": {
      "op": "MSTORE"
    },
    "11531": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A746F6B656E2069732073656E74696E656C0000000000000000"
    },
    "11564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11566": {
      "op": "DUP3"
    },
    "11567": {
      "op": "ADD"
    },
    "11568": {
      "op": "MSTORE"
    },
    "11569": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11571": {
      "op": "ADD"
    },
    "11572": {
      "fn": "Registry.ensureTokenNotSentinel",
      "offset": [
        26786,
        26836
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "11575": {
      "op": "JUMP"
    },
    "11576": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11577": {
      "fn": "Registry.sliceArr",
      "offset": [
        23286,
        23304
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "11579": {
      "fn": "Registry.sliceArr",
      "offset": [
        23334,
        23347
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 88,
      "value": "0x2D44"
    },
    "11582": {
      "fn": "Registry.sliceArr",
      "offset": [
        23341,
        23347
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11583": {
      "fn": "Registry.sliceArr",
      "offset": [
        23334,
        23338
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11584": {
      "fn": "Registry.sliceArr",
      "offset": [
        23334,
        23347
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "11587": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23334,
        23347
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11588": {
      "fn": "Registry.sliceArr",
      "offset": [
        23334,
        23347
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11593": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11595": {
      "op": "SHL"
    },
    "11596": {
      "op": "SUB"
    },
    "11597": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11598": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "GT",
      "path": "15"
    },
    "11599": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11600": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D5B"
    },
    "11603": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11604": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D5B"
    },
    "11607": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x490A"
    },
    "11610": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23320,
        23348
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11611": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11612": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11614": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11615": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11616": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11617": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11618": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11619": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11620": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11622": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "MUL",
      "path": "15"
    },
    "11623": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11625": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "ADD",
      "path": "15"
    },
    "11626": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11627": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "ADD",
      "path": "15"
    },
    "11628": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11630": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11631": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11632": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11633": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D84"
    },
    "11636": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11637": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11638": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11640": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "ADD",
      "path": "15"
    },
    "11641": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11643": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11644": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "MUL",
      "path": "15"
    },
    "11645": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11646": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "11647": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11648": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "CALLDATACOPY",
      "path": "15"
    },
    "11649": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "ADD",
      "path": "15"
    },
    "11650": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11651": {
      "op": "POP"
    },
    "11652": {
      "fn": "Registry.sliceArr",
      "offset": [
        23320,
        23348
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11653": {
      "op": "POP"
    },
    "11654": {
      "fn": "Registry.sliceArr",
      "offset": [
        23316,
        23348
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11655": {
      "op": "POP"
    },
    "11656": {
      "fn": "Registry.sliceArr",
      "offset": [
        23375,
        23381
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11657": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11658": {
      "fn": "Registry.sliceArr",
      "offset": [
        23387,
        23391
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11659": {
      "fn": "Registry.sliceArr",
      "offset": [
        23383,
        23384
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11660": {
      "fn": "Registry.sliceArr",
      "offset": [
        23383,
        23391
      ],
      "op": "LT",
      "path": "15"
    },
    "11661": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11662": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DEE"
    },
    "11665": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11666": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23431
      ],
      "op": "DUP6",
      "path": "15",
      "statement": 89
    },
    "11667": {
      "fn": "Registry.sliceArr",
      "offset": [
        23432,
        23445
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D9C"
    },
    "11670": {
      "fn": "Registry.sliceArr",
      "offset": [
        23436,
        23445
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11671": {
      "fn": "Registry.sliceArr",
      "offset": [
        23432,
        23433
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11672": {
      "fn": "Registry.sliceArr",
      "offset": [
        23432,
        23445
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "11675": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23432,
        23445
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11676": {
      "fn": "Registry.sliceArr",
      "offset": [
        23432,
        23445
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11677": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11678": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11679": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11680": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "LT",
      "path": "15"
    },
    "11681": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DAC"
    },
    "11684": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11685": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DAC"
    },
    "11688": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11691": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23428,
        23446
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11692": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11693": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11695": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "MUL",
      "path": "15"
    },
    "11696": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11698": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "ADD",
      "path": "15"
    },
    "11699": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "ADD",
      "path": "15"
    },
    "11700": {
      "fn": "Registry.sliceArr",
      "offset": [
        23428,
        23446
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11701": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23413
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11702": {
      "fn": "Registry.sliceArr",
      "offset": [
        23418,
        23424
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11703": {
      "fn": "Registry.sliceArr",
      "offset": [
        23414,
        23415
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11704": {
      "fn": "Registry.sliceArr",
      "offset": [
        23414,
        23424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DC1"
    },
    "11707": {
      "fn": "Registry.sliceArr",
      "offset": [
        23414,
        23424
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11708": {
      "fn": "Registry.sliceArr",
      "offset": [
        23414,
        23424
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11709": {
      "fn": "Registry.sliceArr",
      "offset": [
        23414,
        23424
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "11712": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23414,
        23424
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11713": {
      "fn": "Registry.sliceArr",
      "offset": [
        23414,
        23424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11714": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11715": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11716": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11717": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "LT",
      "path": "15"
    },
    "11718": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DD1"
    },
    "11721": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11722": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DD1"
    },
    "11725": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11728": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23412,
        23425
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11729": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11730": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11732": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11733": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11734": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "MUL",
      "path": "15"
    },
    "11735": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11736": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11737": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11738": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "ADD",
      "path": "15"
    },
    "11739": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23425
      ],
      "op": "ADD",
      "path": "15"
    },
    "11740": {
      "fn": "Registry.sliceArr",
      "offset": [
        23412,
        23446
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11741": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 90
    },
    "11742": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2DE6"
    },
    "11745": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11746": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48AD"
    },
    "11749": {
      "fn": "Registry.sliceArr",
      "jump": "i",
      "offset": [
        23393,
        23396
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11750": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11751": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11752": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "POP",
      "path": "15"
    },
    "11753": {
      "fn": "Registry.sliceArr",
      "offset": [
        23393,
        23396
      ],
      "op": "POP",
      "path": "15"
    },
    "11754": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2D89"
    },
    "11757": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11758": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11759": {
      "fn": "Registry.sliceArr",
      "offset": [
        23358,
        23457
      ],
      "op": "POP",
      "path": "15"
    },
    "11760": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "11761": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "11762": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "POP",
      "path": "15"
    },
    "11763": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "POP",
      "path": "15"
    },
    "11764": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "POP",
      "path": "15"
    },
    "11765": {
      "fn": "Registry.sliceArr",
      "offset": [
        23137,
        23463
      ],
      "op": "POP",
      "path": "15"
    },
    "11766": {
      "fn": "Registry.sliceArr",
      "jump": "o",
      "offset": [
        23137,
        23463
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11767": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17611,
        18239
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11768": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17829,
        17855
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11770": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17816
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11772": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17816
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11773": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17816
      ],
      "op": "ADD",
      "path": "15"
    },
    "11774": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17816
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11775": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17817,
        17824
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11776": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17817,
        17824
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11777": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11778": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11779": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11780": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "LT",
      "path": "15"
    },
    "11781": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E10"
    },
    "11784": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11785": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E10"
    },
    "11788": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11791": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17802,
        17825
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11792": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11793": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11795": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "MUL",
      "path": "15"
    },
    "11796": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11798": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "ADD",
      "path": "15"
    },
    "11799": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "ADD",
      "path": "15"
    },
    "11800": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17825
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11801": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "11803": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11804": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "GT",
      "path": "15"
    },
    "11805": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11806": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E29"
    },
    "11809": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11810": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E29"
    },
    "11813": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "11816": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17802,
        17855
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11817": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11818": {
      "branch": 156,
      "fn": "Registry.safeTransfer",
      "offset": [
        17802,
        17855
      ],
      "op": "EQ",
      "path": "15"
    },
    "11819": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17798,
        18233
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11820": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17798,
        18233
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EEF"
    },
    "11823": {
      "branch": 156,
      "fn": "Registry.safeTransfer",
      "offset": [
        17798,
        18233
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11824": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17892
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 91,
      "value": "0x60"
    },
    "11826": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17892
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11827": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17892
      ],
      "op": "ADD",
      "path": "15"
    },
    "11828": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17892
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11829": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17893,
        17900
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11830": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17893,
        17900
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11831": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11832": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11833": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11834": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "LT",
      "path": "15"
    },
    "11835": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E46"
    },
    "11838": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11839": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E46"
    },
    "11842": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11845": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17879,
        17901
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11846": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11847": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11849": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "MUL",
      "path": "15"
    },
    "11850": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11852": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "ADD",
      "path": "15"
    },
    "11853": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "ADD",
      "path": "15"
    },
    "11854": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17879,
        17901
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11861": {
      "op": "SHL"
    },
    "11862": {
      "op": "SUB"
    },
    "11863": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        17915
      ],
      "op": "AND",
      "path": "15"
    },
    "11864": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        17915
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x23B872DD"
    },
    "11869": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17933,
        17937
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11870": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17955,
        17957
      ],
      "op": "DUP6",
      "path": "15"
    },
    "11871": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17977
      ],
      "op": "DUP9",
      "path": "15"
    },
    "11872": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "11874": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17985
      ],
      "op": "ADD",
      "path": "15"
    },
    "11875": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17985
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11876": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17986,
        17988
      ],
      "op": "DUP10",
      "path": "15"
    },
    "11877": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17986,
        17993
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11879": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17986,
        17993
      ],
      "op": "ADD",
      "path": "15"
    },
    "11880": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17986,
        17993
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11881": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11882": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11883": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11884": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "LT",
      "path": "15"
    },
    "11885": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E78"
    },
    "11888": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11889": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2E78"
    },
    "11892": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "11895": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        17975,
        17994
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11896": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11897": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11899": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11900": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11901": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "MUL",
      "path": "15"
    },
    "11902": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11903": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11904": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11905": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "ADD",
      "path": "15"
    },
    "11906": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "ADD",
      "path": "15"
    },
    "11907": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17975,
        17994
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11908": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11910": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11915": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11917": {
      "op": "SHL"
    },
    "11918": {
      "op": "SUB"
    },
    "11919": {
      "op": "NOT"
    },
    "11920": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "11922": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP7",
      "path": "15"
    },
    "11923": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11924": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "SHL",
      "path": "15"
    },
    "11925": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "AND",
      "path": "15"
    },
    "11926": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11927": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11934": {
      "op": "SHL"
    },
    "11935": {
      "op": "SUB"
    },
    "11936": {
      "op": "SWAP4"
    },
    "11937": {
      "op": "DUP5"
    },
    "11938": {
      "op": "AND"
    },
    "11939": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11941": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11942": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "ADD",
      "path": "15"
    },
    "11943": {
      "op": "MSTORE"
    },
    "11944": {
      "op": "SWAP3"
    },
    "11945": {
      "op": "SWAP1"
    },
    "11946": {
      "op": "SWAP2"
    },
    "11947": {
      "op": "AND"
    },
    "11948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11950": {
      "op": "DUP4"
    },
    "11951": {
      "op": "ADD"
    },
    "11952": {
      "op": "MSTORE"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11955": {
      "op": "DUP3"
    },
    "11956": {
      "op": "ADD"
    },
    "11957": {
      "op": "MSTORE"
    },
    "11958": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11960": {
      "op": "ADD"
    },
    "11961": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11963": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11965": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11966": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11967": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11968": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "SUB",
      "path": "15"
    },
    "11969": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11970": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11972": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP8",
      "path": "15"
    },
    "11973": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11974": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "11975": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11976": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11977": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11978": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2ED2"
    },
    "11981": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11982": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11984": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11985": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "REVERT",
      "path": "15"
    },
    "11986": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11987": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "POP",
      "path": "15"
    },
    "11988": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "GAS",
      "path": "15"
    },
    "11989": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "CALL",
      "path": "15"
    },
    "11990": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11991": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11992": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11993": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2EE6"
    },
    "11996": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11997": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "11998": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12000": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12001": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12002": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12003": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12005": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12006": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12007": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "POP",
      "path": "15"
    },
    "12008": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "POP",
      "path": "15"
    },
    "12009": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "POP",
      "path": "15"
    },
    "12010": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17871,
        18008
      ],
      "op": "POP",
      "path": "15"
    },
    "12011": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17798,
        18233
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x44A"
    },
    "12014": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17798,
        18233
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12015": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17798,
        18233
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12016": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18061
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 92,
      "value": "0x60"
    },
    "12018": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18061
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12019": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18061
      ],
      "op": "ADD",
      "path": "15"
    },
    "12020": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18061
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12021": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18062,
        18069
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12022": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18062,
        18069
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12023": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12024": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12025": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12026": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "LT",
      "path": "15"
    },
    "12027": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F06"
    },
    "12030": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12031": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F06"
    },
    "12034": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "12037": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18048,
        18070
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12038": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12039": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12041": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "MUL",
      "path": "15"
    },
    "12042": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12044": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "ADD",
      "path": "15"
    },
    "12045": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "ADD",
      "path": "15"
    },
    "12046": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18048,
        18070
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12053": {
      "op": "SHL"
    },
    "12054": {
      "op": "SUB"
    },
    "12055": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18093
      ],
      "op": "AND",
      "path": "15"
    },
    "12056": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18093
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x2EB2C2D6"
    },
    "12061": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18111,
        18115
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12062": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18133,
        18135
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12063": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18153,
        18160
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12064": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18178,
        18188
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12065": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12067": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12068": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12069": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12074": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "AND",
      "path": "15"
    },
    "12075": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "12077": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SHL",
      "path": "15"
    },
    "12078": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12079": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12080": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12082": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "ADD",
      "path": "15"
    },
    "12083": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F3F"
    },
    "12086": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "12087": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "12088": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "12089": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12090": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12091": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x447C"
    },
    "12094": {
      "fn": "Registry.safeTransfer",
      "jump": "i",
      "offset": [
        18039,
        18222
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12095": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12096": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12098": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12100": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12101": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12102": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12103": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "SUB",
      "path": "15"
    },
    "12104": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12105": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12107": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12108": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12109": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12110": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12111": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12112": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12113": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F59"
    },
    "12116": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12117": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12119": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12120": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12121": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12122": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "POP",
      "path": "15"
    },
    "12123": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "GAS",
      "path": "15"
    },
    "12124": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "CALL",
      "path": "15"
    },
    "12125": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12126": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12127": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12128": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F6D"
    },
    "12131": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12132": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12133": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12135": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12136": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12137": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12138": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12140": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12141": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12142": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "POP",
      "path": "15"
    },
    "12143": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "POP",
      "path": "15"
    },
    "12144": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "POP",
      "path": "15"
    },
    "12145": {
      "fn": "Registry.safeTransfer",
      "offset": [
        18039,
        18222
      ],
      "op": "POP",
      "path": "15"
    },
    "12146": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17611,
        18239
      ],
      "op": "POP",
      "path": "15"
    },
    "12147": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17611,
        18239
      ],
      "op": "POP",
      "path": "15"
    },
    "12148": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17611,
        18239
      ],
      "op": "POP",
      "path": "15"
    },
    "12149": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17611,
        18239
      ],
      "op": "POP",
      "path": "15"
    },
    "12150": {
      "fn": "Registry.safeTransfer",
      "offset": [
        17611,
        18239
      ],
      "op": "POP",
      "path": "15"
    },
    "12151": {
      "fn": "Registry.safeTransfer",
      "jump": "o",
      "offset": [
        17611,
        18239
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12152": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24719,
        24979
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12153": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24811,
        24832
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 93
    },
    "12154": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24811,
        24832
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12155": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24791,
        24833
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F83"
    },
    "12158": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24791,
        24833
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12159": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24791,
        24810
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x356D"
    },
    "12162": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24791,
        24833
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12163": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24791,
        24833
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12164": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24851,
        24871
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 94,
      "value": "0x20"
    },
    "12166": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24851,
        24871
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12167": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24851,
        24871
      ],
      "op": "ADD",
      "path": "15"
    },
    "12168": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24851,
        24871
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12169": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24851,
        24876
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12171": {
      "branch": 157,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24851,
        24876
      ],
      "op": "AND",
      "path": "15"
    },
    "12172": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2FA7"
    },
    "12175": {
      "branch": 157,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12176": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12178": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12185": {
      "op": "SHL"
    },
    "12186": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12187": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12188": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12190": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "ADD",
      "path": "15"
    },
    "12191": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12194": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12195": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45A1"
    },
    "12198": {
      "fn": "Registry.ensureIsNotNull",
      "jump": "i",
      "offset": [
        24843,
        24904
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12199": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24843,
        24904
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12200": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24922,
        24938
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 95,
      "value": "0x40"
    },
    "12202": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24922,
        24938
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12203": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24922,
        24938
      ],
      "op": "ADD",
      "path": "15"
    },
    "12204": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24922,
        24938
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12205": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24922,
        24943
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12210": {
      "branch": 158,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24922,
        24943
      ],
      "op": "AND",
      "path": "15"
    },
    "12211": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "12214": {
      "branch": 158,
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12215": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12217": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12224": {
      "op": "SHL"
    },
    "12225": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12226": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12229": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12231": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12232": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "ADD",
      "path": "15"
    },
    "12233": {
      "op": "MSTORE"
    },
    "12234": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "12236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12238": {
      "op": "DUP3"
    },
    "12239": {
      "op": "ADD"
    },
    "12240": {
      "op": "MSTORE"
    },
    "12241": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206973207A65726F0000000000000000"
    },
    "12274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12276": {
      "op": "DUP3"
    },
    "12277": {
      "op": "ADD"
    },
    "12278": {
      "op": "MSTORE"
    },
    "12279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12281": {
      "op": "ADD"
    },
    "12282": {
      "fn": "Registry.ensureIsNotNull",
      "offset": [
        24914,
        24972
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12285": {
      "op": "JUMP"
    },
    "12286": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26849,
        27103
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12287": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27000,
        27041
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 96,
      "value": "0x3008"
    },
    "12290": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27017,
        27024
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12291": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27026,
        27040
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12292": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27000,
        27016
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x35B9"
    },
    "12295": {
      "fn": "Registry.ensureIsClaimable",
      "jump": "i",
      "offset": [
        27000,
        27041
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12296": {
      "branch": 159,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        27000,
        27041
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12297": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "12300": {
      "branch": 159,
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12301": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12303": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12304": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12308": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12310": {
      "op": "SHL"
    },
    "12311": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12312": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12315": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12317": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12318": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "ADD",
      "path": "15"
    },
    "12319": {
      "op": "MSTORE"
    },
    "12320": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "12322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12324": {
      "op": "DUP3"
    },
    "12325": {
      "op": "ADD"
    },
    "12326": {
      "op": "MSTORE"
    },
    "12327": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72657475726E2064617465206E6F7420706173736564000000"
    },
    "12360": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12362": {
      "op": "DUP3"
    },
    "12363": {
      "op": "ADD"
    },
    "12364": {
      "op": "MSTORE"
    },
    "12365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12367": {
      "op": "ADD"
    },
    "12368": {
      "fn": "Registry.ensureIsClaimable",
      "offset": [
        26979,
        27096
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12371": {
      "op": "JUMP"
    },
    "12372": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16825,
        17605
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12373": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16965,
        16985
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12375": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16994,
        17001
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12376": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16994,
        17014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xC0"
    },
    "12378": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16994,
        17014
      ],
      "op": "ADD",
      "path": "15"
    },
    "12379": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16994,
        17014
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12380": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "12382": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12383": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "GT",
      "path": "15"
    },
    "12384": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12385": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x306C"
    },
    "12388": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12389": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x306C"
    },
    "12392": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "12395": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        16988,
        17015
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12396": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16988,
        17015
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12397": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17025,
        17043
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12399": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17060
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12400": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17060
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12401": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12403": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12404": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "12409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12411": {
      "op": "SHL"
    },
    "12412": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12413": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12414": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12416": {
      "op": "DUP5"
    },
    "12417": {
      "op": "AND"
    },
    "12418": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12420": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12421": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ADD",
      "path": "15"
    },
    "12422": {
      "op": "MSTORE"
    },
    "12423": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16965,
        17015
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "12424": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        16965,
        17015
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "12425": {
      "op": "POP"
    },
    "12426": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17025,
        17043
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12427": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17025,
        17043
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12434": {
      "op": "SHL"
    },
    "12435": {
      "op": "SUB"
    },
    "12436": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12437": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17060
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12438": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17060
      ],
      "op": "AND",
      "path": "15"
    },
    "12439": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17060
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12440": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17076
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "12445": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17076
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12448": {
      "op": "ADD"
    },
    "12449": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12451": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12453": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12454": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12455": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12456": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "SUB",
      "path": "15"
    },
    "12457": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12458": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12459": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12460": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12461": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12462": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12463": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12464": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30B8"
    },
    "12467": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12468": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12470": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12471": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12472": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12473": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "POP",
      "path": "15"
    },
    "12474": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "GAS",
      "path": "15"
    },
    "12475": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "12476": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12477": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12478": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12479": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30CC"
    },
    "12482": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12483": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12484": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12486": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12487": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12488": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12489": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12491": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12492": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12493": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "POP",
      "path": "15"
    },
    "12494": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "POP",
      "path": "15"
    },
    "12495": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "POP",
      "path": "15"
    },
    "12496": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "POP",
      "path": "15"
    },
    "12497": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12499": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12500": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12501": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12503": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "NOT",
      "path": "15"
    },
    "12504": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12506": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12507": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ADD",
      "path": "15"
    },
    "12508": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "AND",
      "path": "15"
    },
    "12509": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12510": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ADD",
      "path": "15"
    },
    "12511": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12512": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12514": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12515": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "POP",
      "path": "15"
    },
    "12516": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12517": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "ADD",
      "path": "15"
    },
    "12518": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12519": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x30F0"
    },
    "12522": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12523": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12524": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E0F"
    },
    "12527": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17052,
        17092
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12528": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17052,
        17092
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12529": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17025,
        17093
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12530": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17025,
        17093
      ],
      "op": "POP",
      "path": "15"
    },
    "12531": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17103,
        17119
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12533": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17128,
        17140
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12540": {
      "op": "SHL"
    },
    "12541": {
      "op": "SUB"
    },
    "12542": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17150
      ],
      "op": "AND",
      "path": "15"
    },
    "12543": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17150
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x313CE567"
    },
    "12548": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12550": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12551": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12552": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12557": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "AND",
      "path": "15"
    },
    "12558": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "12560": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "SHL",
      "path": "15"
    },
    "12561": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12562": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12563": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12565": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ADD",
      "path": "15"
    },
    "12566": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12568": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12570": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12571": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12572": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12573": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "SUB",
      "path": "15"
    },
    "12574": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12575": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12576": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12577": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "12578": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12579": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12580": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12581": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x312D"
    },
    "12584": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12585": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12587": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12588": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12589": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12590": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "POP",
      "path": "15"
    },
    "12591": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "GAS",
      "path": "15"
    },
    "12592": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "12593": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12594": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12595": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12596": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3141"
    },
    "12599": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12600": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12601": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12603": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12604": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "12605": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12606": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12608": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "REVERT",
      "path": "15"
    },
    "12609": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12610": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "POP",
      "path": "15"
    },
    "12611": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "POP",
      "path": "15"
    },
    "12612": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "POP",
      "path": "15"
    },
    "12613": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "POP",
      "path": "15"
    },
    "12614": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12616": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12617": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "12618": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12620": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "NOT",
      "path": "15"
    },
    "12621": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "12623": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12624": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ADD",
      "path": "15"
    },
    "12625": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "AND",
      "path": "15"
    },
    "12626": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12627": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ADD",
      "path": "15"
    },
    "12628": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12629": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12631": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12632": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "POP",
      "path": "15"
    },
    "12633": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12634": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "ADD",
      "path": "15"
    },
    "12635": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12636": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3165"
    },
    "12639": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12640": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12641": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x43DE"
    },
    "12644": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17122,
        17152
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12645": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17122,
        17152
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12646": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17103,
        17152
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12648": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17103,
        17152
      ],
      "op": "AND",
      "path": "15"
    },
    "12649": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17103,
        17152
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12650": {
      "op": "POP"
    },
    "12651": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17162,
        17175
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12653": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17178,
        17190
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3177"
    },
    "12656": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17103,
        17152
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12657": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17178,
        17180
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xA"
    },
    "12659": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17178,
        17190
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4780"
    },
    "12662": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17178,
        17190
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12663": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17178,
        17190
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12664": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17162,
        17190
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12665": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17162,
        17190
      ],
      "op": "POP",
      "path": "15"
    },
    "12666": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17200,
        17217
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12668": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17220,
        17262
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3189"
    },
    "12671": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17232,
        17239
      ],
      "op": "DUP8",
      "path": "15"
    },
    "12672": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17232,
        17254
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "12674": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17232,
        17254
      ],
      "op": "ADD",
      "path": "15"
    },
    "12675": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17232,
        17254
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12676": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17256,
        17261
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12677": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17220,
        17231
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3473"
    },
    "12680": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17220,
        17262
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12681": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17220,
        17262
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12682": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17200,
        17262
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12683": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17200,
        17262
      ],
      "op": "POP",
      "path": "15"
    },
    "12684": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17272,
        17288
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12686": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17303,
        17310
      ],
      "op": "DUP7",
      "path": "15"
    },
    "12687": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17303,
        17323
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12689": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17303,
        17323
      ],
      "op": "ADD",
      "path": "15"
    },
    "12690": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17303,
        17323
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12691": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12693": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "AND",
      "path": "15"
    },
    "12694": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17300
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12695": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31A0"
    },
    "12698": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12699": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12700": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "12703": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17291,
        17323
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12704": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17291,
        17323
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12705": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17272,
        17323
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12706": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17272,
        17323
      ],
      "op": "POP",
      "path": "15"
    },
    "12707": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17333,
        17349
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12709": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17367,
        17374
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x6"
    },
    "12711": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17367,
        17374
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "12712": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17378,
        17379
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "12714": {
      "branch": 160,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17367,
        17379
      ],
      "op": "EQ",
      "path": "15"
    },
    "12715": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17363,
        17520
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31CF"
    },
    "12718": {
      "branch": 160,
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17363,
        17520
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12719": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17406,
        17509
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 97,
      "value": "0x31CC"
    },
    "12722": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17431,
        17439
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12723": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17480,
        17494
      ],
      "op": "DUP9",
      "path": "15"
    },
    "12724": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12726": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "AND",
      "path": "15"
    },
    "12727": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "12729": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12730": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "GT",
      "path": "15"
    },
    "12731": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12732": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31C7"
    },
    "12735": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12736": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31C7"
    },
    "12739": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "12742": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17457,
        17495
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12743": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17457,
        17495
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12744": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17406,
        17413
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3647"
    },
    "12747": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17406,
        17509
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12748": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17406,
        17509
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12749": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17395,
        17509
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12750": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17395,
        17509
      ],
      "op": "POP",
      "path": "15"
    },
    "12751": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17363,
        17520
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12752": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17555,
        17576
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 98,
      "value": "0x20"
    },
    "12754": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17555,
        17576
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12755": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17555,
        17576
      ],
      "op": "ADD",
      "path": "15"
    },
    "12756": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17555,
        17576
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12757": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17598
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2F6D"
    },
    "12760": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12761": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17578,
        17597
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x31E2"
    },
    "12764": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17589,
        17597
      ],
      "op": "DUP4",
      "path": "15"
    },
    "12765": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17578,
        17586
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12766": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17578,
        17597
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "12769": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17578,
        17597
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12770": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17578,
        17597
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12777": {
      "op": "SHL"
    },
    "12778": {
      "op": "SUB"
    },
    "12779": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17554
      ],
      "op": "DUP10",
      "path": "15"
    },
    "12780": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17554
      ],
      "op": "AND",
      "path": "15"
    },
    "12781": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17554
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12782": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17598
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12783": {
      "fn": "Registry.distributeClaimPayment",
      "offset": [
        17529,
        17554
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3724"
    },
    "12786": {
      "fn": "Registry.distributeClaimPayment",
      "jump": "i",
      "offset": [
        17529,
        17598
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12787": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26319,
        26503
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12788": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26465,
        26474
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 99
    },
    "12789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12795": {
      "op": "SHL"
    },
    "12796": {
      "op": "SUB"
    },
    "12797": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26474
      ],
      "op": "AND",
      "path": "15"
    },
    "12798": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26447
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12799": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26461
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12801": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26461
      ],
      "op": "ADD",
      "path": "15"
    },
    "12802": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26461
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12809": {
      "op": "SHL"
    },
    "12810": {
      "op": "SUB"
    },
    "12811": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26474
      ],
      "op": "AND",
      "path": "15"
    },
    "12812": {
      "branch": 161,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26440,
        26474
      ],
      "op": "EQ",
      "path": "15"
    },
    "12813": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "12816": {
      "branch": 161,
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12817": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12819": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12826": {
      "op": "SHL"
    },
    "12827": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12828": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12831": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12833": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12834": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "ADD",
      "path": "15"
    },
    "12835": {
      "op": "MSTORE"
    },
    "12836": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12840": {
      "op": "DUP3"
    },
    "12841": {
      "op": "ADD"
    },
    "12842": {
      "op": "MSTORE"
    },
    "12843": {
      "op": "PUSH17",
      "value": "0x2932A7232A1D1D3737BA103632B73232B9"
    },
    "12861": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "12863": {
      "op": "SHL"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12866": {
      "op": "DUP3"
    },
    "12867": {
      "op": "ADD"
    },
    "12868": {
      "op": "MSTORE"
    },
    "12869": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12871": {
      "op": "ADD"
    },
    "12872": {
      "fn": "Registry.ensureIsStoppable",
      "offset": [
        26432,
        26496
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12875": {
      "op": "JUMP"
    },
    "12876": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24457,
        24713
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12877": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24543,
        24564
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 100
    },
    "12878": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24543,
        24564
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12879": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24526,
        24565
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3257"
    },
    "12882": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24526,
        24565
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12883": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24526,
        24542
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3754"
    },
    "12886": {
      "fn": "Registry.ensureIsNull",
      "jump": "i",
      "offset": [
        24526,
        24565
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12887": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24526,
        24565
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12888": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24603
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 101,
      "value": "0x20"
    },
    "12890": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24603
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12891": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24603
      ],
      "op": "ADD",
      "path": "15"
    },
    "12892": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24603
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12893": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24608
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "12895": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24608
      ],
      "op": "AND",
      "path": "15"
    },
    "12896": {
      "branch": 162,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24583,
        24608
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12897": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x32A7"
    },
    "12900": {
      "branch": 162,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12901": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12903": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12910": {
      "op": "SHL"
    },
    "12911": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12912": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12915": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "12917": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "DUP3",
      "path": "15"
    },
    "12918": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "ADD",
      "path": "15"
    },
    "12919": {
      "op": "MSTORE"
    },
    "12920": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "12922": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12924": {
      "op": "DUP3"
    },
    "12925": {
      "op": "ADD"
    },
    "12926": {
      "op": "MSTORE"
    },
    "12927": {
      "op": "PUSH24",
      "value": "0x52654E46543A3A6475726174696F6E206E6F74207A65726F"
    },
    "12952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12954": {
      "op": "SHL"
    },
    "12955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12957": {
      "op": "DUP3"
    },
    "12958": {
      "op": "ADD"
    },
    "12959": {
      "op": "MSTORE"
    },
    "12960": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12962": {
      "op": "ADD"
    },
    "12963": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "12966": {
      "op": "JUMP"
    },
    "12967": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24575,
        24637
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12968": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24671
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 102,
      "value": "0x40"
    },
    "12970": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24671
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12971": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24671
      ],
      "op": "ADD",
      "path": "15"
    },
    "12972": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24671
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12973": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24676
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "12978": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24676
      ],
      "op": "AND",
      "path": "15"
    },
    "12979": {
      "branch": 163,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24655,
        24676
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "12980": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "12983": {
      "branch": 163,
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "12984": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12986": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12993": {
      "op": "SHL"
    },
    "12994": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "DUP2",
      "path": "15"
    },
    "12995": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12998": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13000": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13001": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "ADD",
      "path": "15"
    },
    "13002": {
      "op": "MSTORE"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13007": {
      "op": "DUP3"
    },
    "13008": {
      "op": "ADD"
    },
    "13009": {
      "op": "MSTORE"
    },
    "13010": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E746564206174206E6F74207A65726F00000000000000"
    },
    "13043": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13045": {
      "op": "DUP3"
    },
    "13046": {
      "op": "ADD"
    },
    "13047": {
      "op": "MSTORE"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13050": {
      "op": "ADD"
    },
    "13051": {
      "fn": "Registry.ensureIsNull",
      "offset": [
        24647,
        24706
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13054": {
      "op": "JUMP"
    },
    "13055": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25441,
        25966
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13056": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25623,
        25630
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 103
    },
    "13057": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25623,
        25644
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13059": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25623,
        25644
      ],
      "op": "ADD",
      "path": "15"
    },
    "13060": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25623,
        25644
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13067": {
      "op": "SHL"
    },
    "13068": {
      "op": "SUB"
    },
    "13069": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25610,
        25644
      ],
      "op": "AND",
      "path": "15"
    },
    "13070": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25610,
        25619
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13077": {
      "op": "SHL"
    },
    "13078": {
      "op": "SUB"
    },
    "13079": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25610,
        25644
      ],
      "op": "AND",
      "path": "15"
    },
    "13080": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25610,
        25644
      ],
      "op": "EQ",
      "path": "15"
    },
    "13081": {
      "branch": 164,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25610,
        25644
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13082": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3365"
    },
    "13085": {
      "branch": 164,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13086": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13088": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13095": {
      "op": "SHL"
    },
    "13096": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13097": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13100": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13102": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13103": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "ADD",
      "path": "15"
    },
    "13104": {
      "op": "MSTORE"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13109": {
      "op": "DUP3"
    },
    "13110": {
      "op": "ADD"
    },
    "13111": {
      "op": "MSTORE"
    },
    "13112": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A63616E742072656E74206F776E206E66740000000000000000"
    },
    "13145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13147": {
      "op": "DUP3"
    },
    "13148": {
      "op": "ADD"
    },
    "13149": {
      "op": "MSTORE"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13152": {
      "op": "ADD"
    },
    "13153": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13156": {
      "op": "JUMP"
    },
    "13157": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25602,
        25673
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13158": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25713,
        25728
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 104,
      "value": "0xFF"
    },
    "13160": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25728
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13161": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25728
      ],
      "op": "AND",
      "path": "15"
    },
    "13162": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25693
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13163": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25706
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13166": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25706
      ],
      "op": "ADD",
      "path": "15"
    },
    "13167": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25706
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13168": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25707,
        25708
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13169": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13170": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13171": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13172": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "LT",
      "path": "15"
    },
    "13173": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3380"
    },
    "13176": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13177": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3380"
    },
    "13180": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "13183": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25691,
        25709
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13184": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13185": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13187": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "MUL",
      "path": "15"
    },
    "13188": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13190": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "ADD",
      "path": "15"
    },
    "13191": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "ADD",
      "path": "15"
    },
    "13192": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25709
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13193": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13195": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25728
      ],
      "op": "AND",
      "path": "15"
    },
    "13196": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25728
      ],
      "op": "GT",
      "path": "15"
    },
    "13197": {
      "branch": 165,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25691,
        25728
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13198": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33A9"
    },
    "13201": {
      "branch": 165,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13202": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13204": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13211": {
      "op": "SHL"
    },
    "13212": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13213": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13214": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13216": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "ADD",
      "path": "15"
    },
    "13217": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13220": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13221": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x460F"
    },
    "13224": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25683,
        25749
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13225": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25683,
        25749
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13226": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25788,
        25789
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 105,
      "value": "0x0"
    },
    "13228": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25769
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13229": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25782
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13232": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25782
      ],
      "op": "ADD",
      "path": "15"
    },
    "13233": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25782
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13234": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25783,
        25784
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13235": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13236": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13237": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13238": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "LT",
      "path": "15"
    },
    "13239": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33C2"
    },
    "13242": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13243": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33C2"
    },
    "13246": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "13249": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25767,
        25785
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13250": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13251": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13253": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "MUL",
      "path": "15"
    },
    "13254": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13256": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "ADD",
      "path": "15"
    },
    "13257": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "ADD",
      "path": "15"
    },
    "13258": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25785
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13259": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25789
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13261": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25789
      ],
      "op": "AND",
      "path": "15"
    },
    "13262": {
      "branch": 166,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25767,
        25789
      ],
      "op": "GT",
      "path": "15"
    },
    "13263": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x33EA"
    },
    "13266": {
      "branch": 166,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13267": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13269": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13270": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13276": {
      "op": "SHL"
    },
    "13277": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13278": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13279": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13281": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "ADD",
      "path": "15"
    },
    "13282": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13285": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13286": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x45A1"
    },
    "13289": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25759,
        25817
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13290": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25759,
        25817
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13291": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25870,
        25877
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 106
    },
    "13292": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25870,
        25893
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13294": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25870,
        25893
      ],
      "op": "ADD",
      "path": "15"
    },
    "13295": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25870,
        25893
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13296": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25893
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13298": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25893
      ],
      "op": "AND",
      "path": "15"
    },
    "13299": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25850
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13300": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25863
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x140"
    },
    "13303": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25863
      ],
      "op": "ADD",
      "path": "15"
    },
    "13304": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25863
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13305": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25864,
        25865
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13306": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13307": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13308": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13309": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "LT",
      "path": "15"
    },
    "13310": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3409"
    },
    "13313": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13314": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3409"
    },
    "13317": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48F4"
    },
    "13320": {
      "fn": "Registry.ensureIsRentable",
      "jump": "i",
      "offset": [
        25848,
        25866
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13321": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13322": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13324": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "MUL",
      "path": "15"
    },
    "13325": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13327": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "ADD",
      "path": "15"
    },
    "13328": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "ADD",
      "path": "15"
    },
    "13329": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25866
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13330": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25893
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13332": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25893
      ],
      "op": "AND",
      "path": "15"
    },
    "13333": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25893
      ],
      "op": "GT",
      "path": "15"
    },
    "13334": {
      "branch": 167,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25848,
        25893
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13335": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x708"
    },
    "13338": {
      "branch": 167,
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13339": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13341": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13348": {
      "op": "SHL"
    },
    "13349": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13350": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13353": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13355": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13356": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "ADD",
      "path": "15"
    },
    "13357": {
      "op": "MSTORE"
    },
    "13358": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "13360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13362": {
      "op": "DUP3"
    },
    "13363": {
      "op": "ADD"
    },
    "13364": {
      "op": "MSTORE"
    },
    "13365": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74206475726174696F6E206578636565647320616C6C"
    },
    "13398": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13400": {
      "op": "DUP3"
    },
    "13401": {
      "op": "ADD"
    },
    "13402": {
      "op": "MSTORE"
    },
    "13403": {
      "op": "PUSH8",
      "value": "0xDEEECAC840DAC2F"
    },
    "13412": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "13414": {
      "op": "SHL"
    },
    "13415": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13417": {
      "op": "DUP3"
    },
    "13418": {
      "op": "ADD"
    },
    "13419": {
      "op": "MSTORE"
    },
    "13420": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13422": {
      "op": "ADD"
    },
    "13423": {
      "fn": "Registry.ensureIsRentable",
      "offset": [
        25827,
        25959
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13426": {
      "op": "JUMP"
    },
    "13427": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22550,
        23131
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13428": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22646,
        22653
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13430": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22669,
        22706
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 107,
      "value": "0x347F"
    },
    "13433": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22693,
        22698
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13434": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22700,
        22705
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13435": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22669,
        22692
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37AB"
    },
    "13438": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22669,
        22706
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13439": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22669,
        22706
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13440": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22731,
        22752
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xF0"
    },
    "13442": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22731,
        22752
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13443": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22731,
        22752
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13444": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22731,
        22752
      ],
      "op": "SHR",
      "path": "15"
    },
    "13445": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22779,
        22806
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13448": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22779,
        22806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xE0"
    },
    "13450": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22779,
        22806
      ],
      "op": "DUP6",
      "path": "15"
    },
    "13451": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22779,
        22806
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13452": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22779,
        22806
      ],
      "op": "SHR",
      "path": "15"
    },
    "13453": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22779,
        22806
      ],
      "op": "AND",
      "path": "15"
    },
    "13454": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22716,
        22728
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13456": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22839,
        22852
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x349B"
    },
    "13459": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22847,
        22852
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "13462": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22839,
        22844
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13463": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22839,
        22852
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x471B"
    },
    "13466": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        22839,
        22852
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13467": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22839,
        22852
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13468": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22816,
        22852
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13469": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22816,
        22852
      ],
      "op": "POP",
      "path": "15"
    },
    "13470": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22874,
        22878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270F"
    },
    "13473": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22866,
        22871
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13474": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22866,
        22878
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13477": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22866,
        22878
      ],
      "op": "AND",
      "path": "15"
    },
    "13478": {
      "branch": 168,
      "fn": "Registry.unpackPrice",
      "offset": [
        22866,
        22878
      ],
      "op": "GT",
      "path": "15"
    },
    "13479": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22862,
        22917
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13480": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22862,
        22917
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34B1"
    },
    "13483": {
      "branch": 168,
      "fn": "Registry.unpackPrice",
      "offset": [
        22862,
        22917
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13484": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22902,
        22906
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 108,
      "value": "0x270F"
    },
    "13487": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22894,
        22906
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "13488": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22894,
        22906
      ],
      "op": "POP",
      "path": "15"
    },
    "13489": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22862,
        22917
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13490": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22940,
        22944
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x270F"
    },
    "13493": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22930,
        22937
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13494": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22930,
        22944
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13497": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22930,
        22944
      ],
      "op": "AND",
      "path": "15"
    },
    "13498": {
      "branch": 169,
      "fn": "Registry.unpackPrice",
      "offset": [
        22930,
        22944
      ],
      "op": "GT",
      "path": "15"
    },
    "13499": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22926,
        22985
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13500": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22926,
        22985
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34C5"
    },
    "13503": {
      "branch": 169,
      "fn": "Registry.unpackPrice",
      "offset": [
        22926,
        22985
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13504": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22970,
        22974
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 109,
      "value": "0x270F"
    },
    "13507": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22960,
        22974
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13508": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22960,
        22974
      ],
      "op": "POP",
      "path": "15"
    },
    "13509": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22926,
        22985
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13510": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22994,
        23003
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13512": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23006,
        23019
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34D5"
    },
    "13515": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23014,
        23019
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13516": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23006,
        23019
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13519": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23006,
        23019
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13520": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23006,
        23019
      ],
      "op": "AND",
      "path": "15"
    },
    "13521": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23006,
        23019
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "13524": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23006,
        23019
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13525": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23006,
        23019
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13526": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22994,
        23019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13527": {
      "op": "POP"
    },
    "13528": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23029,
        23038
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13530": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23041,
        23063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34E7"
    },
    "13533": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23051,
        23063
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13534": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23041,
        23063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFFFF"
    },
    "13537": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23041,
        23063
      ],
      "op": "DUP7",
      "path": "15"
    },
    "13538": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23041,
        23063
      ],
      "op": "AND",
      "path": "15"
    },
    "13539": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23041,
        23063
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "13542": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23041,
        23063
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13543": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23041,
        23063
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13544": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23029,
        23063
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13545": {
      "op": "POP"
    },
    "13546": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23073,
        23090
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13548": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23093,
        23098
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x34F5"
    },
    "13551": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23029,
        23063
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13552": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23093,
        23094
      ],
      "op": "DUP5",
      "path": "15"
    },
    "13553": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23093,
        23098
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4703"
    },
    "13556": {
      "fn": "Registry.unpackPrice",
      "jump": "i",
      "offset": [
        23093,
        23098
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13557": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23093,
        23098
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13558": {
      "fn": "Registry.unpackPrice",
      "offset": [
        23073,
        23098
      ],
      "op": "SWAP10",
      "path": "15"
    },
    "13559": {
      "fn": "Registry.unpackPrice",
      "offset": [
        22550,
        23131
      ],
      "op": "SWAP9",
      "path": "15"
    },
    "13560": {
      "op": "POP"
    },
    "13561": {
      "op": "POP"
    },
    "13562": {
      "op": "POP"
    },
    "13563": {
      "op": "POP"
    },
    "13564": {
      "op": "POP"
    },
    "13565": {
      "op": "POP"
    },
    "13566": {
      "op": "POP"
    },
    "13567": {
      "op": "POP"
    },
    "13568": {
      "op": "POP"
    },
    "13569": {
      "fn": "Registry.unpackPrice",
      "jump": "o",
      "offset": [
        22550,
        23131
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13570": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1086
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13571": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 110,
      "value": "0x40"
    },
    "13573": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "13574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13580": {
      "op": "SHL"
    },
    "13581": {
      "op": "SUB"
    },
    "13582": {
      "op": "DUP1"
    },
    "13583": {
      "op": "DUP6"
    },
    "13584": {
      "op": "AND"
    },
    "13585": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "13587": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP4",
      "path": "7"
    },
    "13588": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "13589": {
      "op": "MSTORE"
    },
    "13590": {
      "op": "DUP4"
    },
    "13591": {
      "op": "AND"
    },
    "13592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13594": {
      "op": "DUP3"
    },
    "13595": {
      "op": "ADD"
    },
    "13596": {
      "op": "MSTORE"
    },
    "13597": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13599": {
      "op": "DUP2"
    },
    "13600": {
      "op": "ADD"
    },
    "13601": {
      "op": "DUP3"
    },
    "13602": {
      "op": "SWAP1"
    },
    "13603": {
      "op": "MSTORE"
    },
    "13604": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x708"
    },
    "13607": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1079
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13608": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "DUP6",
      "path": "7"
    },
    "13609": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1003,
        1008
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13610": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "13615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13617": {
      "op": "SHL"
    },
    "13618": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1033,
        1060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13619": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13621": {
      "op": "ADD"
    },
    "13622": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "13623": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "13625": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13626": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "13627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13629": {
      "op": "NOT"
    },
    "13630": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13631": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP5",
      "path": "7"
    },
    "13632": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SUB",
      "path": "7"
    },
    "13633": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "13634": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13635": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13636": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13637": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13638": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13639": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "13641": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP2",
      "path": "7"
    },
    "13642": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "ADD",
      "path": "7"
    },
    "13643": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "DUP1",
      "path": "7"
    },
    "13644": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13651": {
      "op": "SHL"
    },
    "13652": {
      "op": "SUB"
    },
    "13653": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "13654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13658": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13660": {
      "op": "SHL"
    },
    "13661": {
      "op": "SUB"
    },
    "13662": {
      "op": "NOT"
    },
    "13663": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13664": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "13665": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "AND",
      "path": "7"
    },
    "13666": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "13667": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13668": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "13669": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "OR",
      "path": "7"
    },
    "13670": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "13671": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "13672": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1010,
        1078
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "13673": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        983,
        1002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x383C"
    },
    "13676": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        983,
        1079
      ],
      "op": "JUMP",
      "path": "7"
    },
    "13677": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23651,
        23774
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13684": {
      "op": "SHL"
    },
    "13685": {
      "op": "SUB"
    },
    "13686": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23725,
        23743
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 111
    },
    "13687": {
      "branch": 170,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23725,
        23743
      ],
      "op": "AND",
      "path": "15"
    },
    "13688": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "13691": {
      "branch": 170,
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13692": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13694": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13701": {
      "op": "SHL"
    },
    "13702": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13703": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13706": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13708": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13709": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "ADD",
      "path": "15"
    },
    "13710": {
      "op": "MSTORE"
    },
    "13711": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "13713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13715": {
      "op": "DUP3"
    },
    "13716": {
      "op": "ADD"
    },
    "13717": {
      "op": "MSTORE"
    },
    "13718": {
      "op": "PUSH19",
      "value": "0x52654E46543A3A7A65726F2061646472657373"
    },
    "13738": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "13740": {
      "op": "SHL"
    },
    "13741": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13743": {
      "op": "DUP3"
    },
    "13744": {
      "op": "ADD"
    },
    "13745": {
      "op": "MSTORE"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13748": {
      "op": "ADD"
    },
    "13749": {
      "fn": "Registry.ensureIsNotZeroAddr",
      "offset": [
        23717,
        23767
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13752": {
      "op": "JUMP"
    },
    "13753": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27109,
        27407
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13754": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27222,
        27226
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13756": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27260,
        27267
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 112
    },
    "13757": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27260,
        27276
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13759": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27260,
        27276
      ],
      "op": "ADD",
      "path": "15"
    },
    "13760": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27260,
        27276
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13761": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27250,
        27276
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "13766": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27250,
        27276
      ],
      "op": "AND",
      "path": "15"
    },
    "13767": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27250,
        27257
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13768": {
      "branch": 171,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27250,
        27276
      ],
      "op": "GT",
      "path": "15"
    },
    "13769": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3614"
    },
    "13772": {
      "branch": 171,
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13773": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13775": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13782": {
      "op": "SHL"
    },
    "13783": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13784": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13787": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13789": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13790": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "ADD",
      "path": "15"
    },
    "13791": {
      "op": "MSTORE"
    },
    "13792": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "13794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13796": {
      "op": "DUP3"
    },
    "13797": {
      "op": "ADD"
    },
    "13798": {
      "op": "MSTORE"
    },
    "13799": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F77206265666F72652072656E7465640000000000000000"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13834": {
      "op": "DUP3"
    },
    "13835": {
      "op": "ADD"
    },
    "13836": {
      "op": "MSTORE"
    },
    "13837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13839": {
      "op": "ADD"
    },
    "13840": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "13843": {
      "op": "JUMP"
    },
    "13844": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27242,
        27305
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13845": {
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x15180"
    },
    "13849": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27370
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 113
    },
    "13850": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27383
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "13852": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27383
      ],
      "op": "ADD",
      "path": "15"
    },
    "13853": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27383
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13854": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "13856": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "AND",
      "path": "15"
    },
    "13857": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x362A"
    },
    "13860": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13861": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13862": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "13865": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27363,
        27400
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13866": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27363,
        27400
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13867": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27344,
        27360
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13869": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27344,
        27360
      ],
      "op": "DUP5",
      "path": "15"
    },
    "13870": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27344,
        27360
      ],
      "op": "ADD",
      "path": "15"
    },
    "13871": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27344,
        27360
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13872": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27360
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x363F"
    },
    "13875": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27360
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13876": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27360
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xFFFFFFFF"
    },
    "13881": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27360
      ],
      "op": "AND",
      "path": "15"
    },
    "13882": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27341
      ],
      "op": "DUP5",
      "path": "15"
    },
    "13883": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27360
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x486A"
    },
    "13886": {
      "fn": "Registry.isPastReturnDate",
      "jump": "i",
      "offset": [
        27334,
        27360
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13887": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27360
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13888": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27400
      ],
      "op": "GT",
      "path": "15"
    },
    "13889": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27334,
        27400
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "13890": {
      "fn": "Registry.isPastReturnDate",
      "offset": [
        27109,
        27407
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "13891": {
      "op": "POP"
    },
    "13892": {
      "op": "POP"
    },
    "13893": {
      "op": "POP"
    },
    "13894": {
      "fn": "Registry.isPastReturnDate",
      "jump": "o",
      "offset": [
        27109,
        27407
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13895": {
      "fn": "Registry.takeFee",
      "offset": [
        15262,
        15620
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13896": {
      "fn": "Registry.takeFee",
      "offset": [
        15366,
        15377
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13898": {
      "fn": "Registry.takeFee",
      "offset": [
        15409,
        15416
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 114,
      "value": "0x6"
    },
    "13900": {
      "fn": "Registry.takeFee",
      "offset": [
        15409,
        15416
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "13901": {
      "fn": "Registry.takeFee",
      "offset": [
        15399,
        15406
      ],
      "op": "DUP4",
      "path": "15"
    },
    "13902": {
      "fn": "Registry.takeFee",
      "offset": [
        15399,
        15416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3657"
    },
    "13905": {
      "fn": "Registry.takeFee",
      "offset": [
        15399,
        15416
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13906": {
      "fn": "Registry.takeFee",
      "offset": [
        15399,
        15416
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13907": {
      "fn": "Registry.takeFee",
      "offset": [
        15399,
        15416
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4828"
    },
    "13910": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15399,
        15416
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13911": {
      "fn": "Registry.takeFee",
      "offset": [
        15399,
        15416
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13912": {
      "fn": "Registry.takeFee",
      "offset": [
        15393,
        15416
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13913": {
      "op": "POP"
    },
    "13914": {
      "fn": "Registry.takeFee",
      "offset": [
        15426,
        15438
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 115,
      "value": "0x3665"
    },
    "13917": {
      "fn": "Registry.takeFee",
      "offset": [
        15433,
        15438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2710"
    },
    "13920": {
      "fn": "Registry.takeFee",
      "offset": [
        15393,
        15416
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13921": {
      "fn": "Registry.takeFee",
      "offset": [
        15426,
        15438
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x471B"
    },
    "13924": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15426,
        15438
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13925": {
      "fn": "Registry.takeFee",
      "offset": [
        15426,
        15438
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13926": {
      "fn": "Registry.takeFee",
      "offset": [
        15426,
        15438
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13927": {
      "fn": "Registry.takeFee",
      "offset": [
        15426,
        15438
      ],
      "op": "POP",
      "path": "15"
    },
    "13928": {
      "fn": "Registry.takeFee",
      "offset": [
        15448,
        15468
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13930": {
      "fn": "Registry.takeFee",
      "offset": [
        15477,
        15489
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13931": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x3"
    },
    "13933": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13934": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "GT",
      "path": "15"
    },
    "13935": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "13936": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x367B"
    },
    "13939": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "13940": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x367B"
    },
    "13943": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x48DE"
    },
    "13946": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15471,
        15490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "13947": {
      "fn": "Registry.takeFee",
      "offset": [
        15471,
        15490
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "13948": {
      "fn": "Registry.takeFee",
      "offset": [
        15500,
        15514
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "13950": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15531
      ],
      "op": "DUP1",
      "path": "15"
    },
    "13951": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15531
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "13952": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "13954": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "13955": {
      "op": "PUSH4",
      "value": "0xC6EE427F"
    },
    "13960": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13962": {
      "op": "SHL"
    },
    "13963": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP2",
      "path": "15"
    },
    "13964": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "13965": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13967": {
      "op": "DUP5"
    },
    "13968": {
      "op": "AND"
    },
    "13969": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "13971": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP3",
      "path": "15"
    },
    "13972": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ADD",
      "path": "15"
    },
    "13973": {
      "op": "MSTORE"
    },
    "13974": {
      "fn": "Registry.takeFee",
      "offset": [
        15448,
        15490
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "13975": {
      "fn": "Registry.takeFee",
      "offset": [
        15448,
        15490
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "13976": {
      "op": "POP"
    },
    "13977": {
      "fn": "Registry.takeFee",
      "offset": [
        15500,
        15514
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13978": {
      "fn": "Registry.takeFee",
      "offset": [
        15500,
        15514
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13985": {
      "op": "SHL"
    },
    "13986": {
      "op": "SUB"
    },
    "13987": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15531
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13988": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15531
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "13989": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15531
      ],
      "op": "AND",
      "path": "15"
    },
    "13990": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15531
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13991": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15547
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0xC6EE427F"
    },
    "13996": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15547
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "13997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13999": {
      "op": "ADD"
    },
    "14000": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "14002": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14004": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14005": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14006": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP4",
      "path": "15"
    },
    "14007": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "SUB",
      "path": "15"
    },
    "14008": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14009": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP7",
      "path": "15"
    },
    "14010": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14011": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "14012": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14013": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14014": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14015": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36C7"
    },
    "14018": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14019": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14021": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14022": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "REVERT",
      "path": "15"
    },
    "14023": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14024": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "POP",
      "path": "15"
    },
    "14025": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "GAS",
      "path": "15"
    },
    "14026": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "14027": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14028": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14029": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14030": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36DB"
    },
    "14033": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14034": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "14035": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14037": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14038": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "14039": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "14040": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "14042": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "REVERT",
      "path": "15"
    },
    "14043": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14044": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "POP",
      "path": "15"
    },
    "14045": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "POP",
      "path": "15"
    },
    "14046": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "POP",
      "path": "15"
    },
    "14047": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "POP",
      "path": "15"
    },
    "14048": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14050": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14051": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "14052": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "14054": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "NOT",
      "path": "15"
    },
    "14055": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "14057": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14058": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ADD",
      "path": "15"
    },
    "14059": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "AND",
      "path": "15"
    },
    "14060": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14061": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ADD",
      "path": "15"
    },
    "14062": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14063": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14065": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14066": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "POP",
      "path": "15"
    },
    "14067": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14068": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "ADD",
      "path": "15"
    },
    "14069": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14070": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x36FF"
    },
    "14073": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14074": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14075": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3E0F"
    },
    "14078": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15523,
        15563
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14079": {
      "fn": "Registry.takeFee",
      "offset": [
        15523,
        15563
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14080": {
      "fn": "Registry.takeFee",
      "offset": [
        15596,
        15607
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 116,
      "value": "0x2"
    },
    "14082": {
      "fn": "Registry.takeFee",
      "offset": [
        15596,
        15607
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "14083": {
      "fn": "Registry.takeFee",
      "offset": [
        15500,
        15564
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14084": {
      "fn": "Registry.takeFee",
      "offset": [
        15500,
        15564
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14085": {
      "op": "POP"
    },
    "14086": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15613
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x371C"
    },
    "14089": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15613
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14096": {
      "op": "SHL"
    },
    "14097": {
      "op": "SUB"
    },
    "14098": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15595
      ],
      "op": "DUP1",
      "path": "15"
    },
    "14099": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15595
      ],
      "op": "DUP5",
      "path": "15"
    },
    "14100": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15595
      ],
      "op": "AND",
      "path": "15"
    },
    "14101": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15595
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14102": {
      "fn": "Registry.takeFee",
      "offset": [
        15596,
        15607
      ],
      "op": "AND",
      "path": "15"
    },
    "14103": {
      "fn": "Registry.takeFee",
      "offset": [
        15609,
        15612
      ],
      "op": "DUP6",
      "path": "15"
    },
    "14104": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15595
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3724"
    },
    "14107": {
      "fn": "Registry.takeFee",
      "jump": "i",
      "offset": [
        15574,
        15613
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14108": {
      "fn": "Registry.takeFee",
      "offset": [
        15574,
        15613
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14109": {
      "fn": "Registry.takeFee",
      "offset": [
        15383,
        15620
      ],
      "op": "POP",
      "path": "15"
    },
    "14110": {
      "fn": "Registry.takeFee",
      "offset": [
        15383,
        15620
      ],
      "op": "POP",
      "path": "15"
    },
    "14111": {
      "fn": "Registry.takeFee",
      "offset": [
        15262,
        15620
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "14112": {
      "fn": "Registry.takeFee",
      "offset": [
        15262,
        15620
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "14113": {
      "fn": "Registry.takeFee",
      "offset": [
        15262,
        15620
      ],
      "op": "POP",
      "path": "15"
    },
    "14114": {
      "fn": "Registry.takeFee",
      "offset": [
        15262,
        15620
      ],
      "op": "POP",
      "path": "15"
    },
    "14115": {
      "fn": "Registry.takeFee",
      "jump": "o",
      "offset": [
        15262,
        15620
      ],
      "op": "JUMP",
      "path": "15"
    },
    "14116": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        634,
        839
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14117": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 117,
      "value": "0x40"
    },
    "14119": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14126": {
      "op": "SHL"
    },
    "14127": {
      "op": "SUB"
    },
    "14128": {
      "op": "DUP4"
    },
    "14129": {
      "op": "AND"
    },
    "14130": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "14132": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14133": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "7"
    },
    "14134": {
      "op": "MSTORE"
    },
    "14135": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14137": {
      "op": "DUP2"
    },
    "14138": {
      "op": "ADD"
    },
    "14139": {
      "op": "DUP3"
    },
    "14140": {
      "op": "SWAP1"
    },
    "14141": {
      "op": "MSTORE"
    },
    "14142": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E71"
    },
    "14145": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14146": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "7"
    },
    "14147": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14148": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "14153": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14155": {
      "op": "SHL"
    },
    "14156": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        796,
        819
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14159": {
      "op": "ADD"
    },
    "14160": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3536"
    },
    "14163": {
      "op": "JUMP"
    },
    "14164": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23780,
        23906
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14171": {
      "op": "SHL"
    },
    "14172": {
      "op": "SUB"
    },
    "14173": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23851,
        23869
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 118
    },
    "14174": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23851,
        23869
      ],
      "op": "AND",
      "path": "15"
    },
    "14175": {
      "branch": 172,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23851,
        23869
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14176": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1575"
    },
    "14179": {
      "branch": 172,
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14180": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14182": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14189": {
      "op": "SHL"
    },
    "14190": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14191": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14194": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14196": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14197": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "ADD",
      "path": "15"
    },
    "14198": {
      "op": "MSTORE"
    },
    "14199": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "14201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14203": {
      "op": "DUP3"
    },
    "14204": {
      "op": "ADD"
    },
    "14205": {
      "op": "MSTORE"
    },
    "14206": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6E6F742061207A65726F206164647265737300000000000000"
    },
    "14239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14241": {
      "op": "DUP3"
    },
    "14242": {
      "op": "ADD"
    },
    "14243": {
      "op": "MSTORE"
    },
    "14244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14246": {
      "op": "ADD"
    },
    "14247": {
      "fn": "Registry.ensureIsZeroAddr",
      "offset": [
        23843,
        23899
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14250": {
      "op": "JUMP"
    },
    "14251": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26509,
        26708
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14252": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26602,
        26615
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 119,
      "value": "0xE0"
    },
    "14254": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26602,
        26615
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14255": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26602,
        26615
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "14256": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26602,
        26615
      ],
      "op": "SHR",
      "path": "15"
    },
    "14257": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x37F3"
    },
    "14260": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14261": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14263": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14270": {
      "op": "SHL"
    },
    "14271": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14272": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14275": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14277": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14278": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "ADD",
      "path": "15"
    },
    "14279": {
      "op": "MSTORE"
    },
    "14280": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14284": {
      "op": "DUP3"
    },
    "14285": {
      "op": "ADD"
    },
    "14286": {
      "op": "MSTORE"
    },
    "14287": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207072696365"
    },
    "14308": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14310": {
      "op": "SHL"
    },
    "14311": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14313": {
      "op": "DUP3"
    },
    "14314": {
      "op": "ADD"
    },
    "14315": {
      "op": "MSTORE"
    },
    "14316": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14318": {
      "op": "ADD"
    },
    "14319": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14322": {
      "op": "JUMP"
    },
    "14323": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26594,
        26644
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "14324": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26671,
        26676
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 120,
      "value": "0x2710"
    },
    "14327": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26662,
        26667
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14328": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26662,
        26676
      ],
      "op": "LT",
      "path": "15"
    },
    "14329": {
      "branch": 173,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26662,
        26676
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "14330": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD14"
    },
    "14333": {
      "branch": 173,
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "14334": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "14336": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "14337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14343": {
      "op": "SHL"
    },
    "14344": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "DUP2",
      "path": "15"
    },
    "14345": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "14346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14348": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "14350": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "DUP3",
      "path": "15"
    },
    "14351": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "ADD",
      "path": "15"
    },
    "14352": {
      "op": "MSTORE"
    },
    "14353": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14357": {
      "op": "DUP3"
    },
    "14358": {
      "op": "ADD"
    },
    "14359": {
      "op": "MSTORE"
    },
    "14360": {
      "op": "PUSH20",
      "value": "0x52654E46543A3A696E76616C6964207363616C65"
    },
    "14381": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14383": {
      "op": "SHL"
    },
    "14384": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14386": {
      "op": "DUP3"
    },
    "14387": {
      "op": "ADD"
    },
    "14388": {
      "op": "MSTORE"
    },
    "14389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14391": {
      "op": "ADD"
    },
    "14392": {
      "fn": "Registry.ensureIsUnpackablePrice",
      "offset": [
        26654,
        26701
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x429"
    },
    "14395": {
      "op": "JUMP"
    },
    "14396": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3140,
        3846
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14397": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3582
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14399": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3891"
    },
    "14402": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3613,
        3617
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14403": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14405": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14406": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14407": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14409": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "14410": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14412": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14413": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14414": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14416": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14417": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14418": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14420": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "ADD",
      "path": "7"
    },
    "14421": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "14454": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14455": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14456": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "POP",
      "path": "7"
    },
    "14457": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3593,
        3598
      ],
      "op": "DUP6",
      "path": "7"
    },
    "14458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14464": {
      "op": "SHL"
    },
    "14465": {
      "op": "SUB"
    },
    "14466": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "AND",
      "path": "7"
    },
    "14467": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x390E"
    },
    "14470": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3612
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14471": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "14472": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14473": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14474": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "14479": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "AND",
      "path": "7"
    },
    "14480": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3585,
        3654
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3685
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14485": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3559,
        3654
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14486": {
      "op": "POP"
    },
    "14487": {
      "branch": 177,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3668,
        3689
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "14488": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E71"
    },
    "14491": {
      "branch": 177,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3664,
        3840
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "14492": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3763,
        3773
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 121
    },
    "14493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP1",
      "path": "7"
    },
    "14494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "14496": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "14497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14498": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "ADD",
      "path": "7"
    },
    "14501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14502": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38AF"
    },
    "14505": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "14506": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "14507": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x438D"
    },
    "14510": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMP",
      "path": "7"
    },
    "14511": {
      "branch": 178,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3752,
        3782
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "14512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E71"
    },
    "14515": {
      "branch": 178,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "14516": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "14518": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "14519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14525": {
      "op": "SHL"
    },
    "14526": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP2",
      "path": "7"
    },
    "14527": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "14528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14530": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "14532": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "DUP3",
      "path": "7"
    },
    "14533": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "ADD",
      "path": "7"
    },
    "14534": {
      "op": "MSTORE"
    },
    "14535": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "14537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14539": {
      "op": "DUP3"
    },
    "14540": {
      "op": "ADD"
    },
    "14541": {
      "op": "MSTORE"
    },
    "14542": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "14575": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14577": {
      "op": "DUP3"
    },
    "14578": {
      "op": "ADD"
    },
    "14579": {
      "op": "MSTORE"
    },
    "14580": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "14591": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "14593": {
      "op": "SHL"
    },
    "14594": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14596": {
      "op": "DUP3"
    },
    "14597": {
      "op": "ADD"
    },
    "14598": {
      "op": "MSTORE"
    },
    "14599": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14601": {
      "op": "ADD"
    },
    "14602": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3744,
        3829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x429"
    },
    "14605": {
      "op": "JUMP"
    },
    "14606": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14607": {
      "fn": "Address.functionCall",
      "offset": [
        3594,
        3606
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "14609": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 122,
      "value": "0x391D"
    },
    "14612": {
      "fn": "Address.functionCall",
      "offset": [
        3647,
        3653
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14613": {
      "fn": "Address.functionCall",
      "offset": [
        3655,
        3659
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14614": {
      "fn": "Address.functionCall",
      "offset": [
        3661,
        3662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14616": {
      "fn": "Address.functionCall",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP6",
      "path": "11"
    },
    "14617": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3646
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3927"
    },
    "14620": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14621": {
      "fn": "Address.functionCall",
      "offset": [
        3625,
        3677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14622": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "14623": {
      "fn": "Address.functionCall",
      "offset": [
        3618,
        3677
      ],
      "op": "POP",
      "path": "11"
    },
    "14624": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14625": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "14626": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "14627": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "14628": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "14629": {
      "fn": "Address.functionCall",
      "offset": [
        3461,
        3684
      ],
      "op": "POP",
      "path": "11"
    },
    "14630": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3461,
        3684
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4713,
        4725
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "14634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4770,
        4775
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 123
    },
    "14635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4766
      ],
      "op": "SELFBALANCE",
      "path": "11"
    },
    "14636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "LT",
      "path": "11"
    },
    "14637": {
      "branch": 174,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4745,
        4775
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "14638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3988"
    },
    "14641": {
      "branch": 174,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "14642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14651": {
      "op": "SHL"
    },
    "14652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP2",
      "path": "11"
    },
    "14653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "14654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "14658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "ADD",
      "path": "11"
    },
    "14660": {
      "op": "MSTORE"
    },
    "14661": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "14663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14665": {
      "op": "DUP3"
    },
    "14666": {
      "op": "ADD"
    },
    "14667": {
      "op": "MSTORE"
    },
    "14668": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "14701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14703": {
      "op": "DUP3"
    },
    "14704": {
      "op": "ADD"
    },
    "14705": {
      "op": "MSTORE"
    },
    "14706": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "14713": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "14715": {
      "op": "SHL"
    },
    "14716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14718": {
      "op": "DUP3"
    },
    "14719": {
      "op": "ADD"
    },
    "14720": {
      "op": "MSTORE"
    },
    "14721": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14723": {
      "op": "ADD"
    },
    "14724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "14727": {
      "op": "JUMP"
    },
    "14728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4737,
        4818
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14729": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14730": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "14731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 124,
      "value": "0x39D6"
    },
    "14734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "14735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14744": {
      "op": "SHL"
    },
    "14745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP2",
      "path": "11"
    },
    "14746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "14747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "14751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "ADD",
      "path": "11"
    },
    "14753": {
      "op": "MSTORE"
    },
    "14754": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "14756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14758": {
      "op": "DUP3"
    },
    "14759": {
      "op": "ADD"
    },
    "14760": {
      "op": "MSTORE"
    },
    "14761": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "14794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14796": {
      "op": "DUP3"
    },
    "14797": {
      "op": "ADD"
    },
    "14798": {
      "op": "MSTORE"
    },
    "14799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14801": {
      "op": "ADD"
    },
    "14802": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "14805": {
      "op": "JUMP"
    },
    "14806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4828,
        4888
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4900,
        4912
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14809": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4914,
        4937
      ],
      "op": "DUP1",
      "path": "11"
    },
    "14810": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4947
      ],
      "op": "DUP7",
      "path": "11"
    },
    "14811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14817": {
      "op": "SHL"
    },
    "14818": {
      "op": "SUB"
    },
    "14819": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4952
      ],
      "op": "AND",
      "path": "11"
    },
    "14820": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        4965
      ],
      "op": "DUP6",
      "path": "11"
    },
    "14821": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4967,
        4971
      ],
      "op": "DUP8",
      "path": "11"
    },
    "14822": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14824": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14825": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x39F2"
    },
    "14828": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "14829": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "14830": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4460"
    },
    "14833": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14834": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14835": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14837": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14839": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14840": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "11"
    },
    "14841": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP4",
      "path": "11"
    },
    "14842": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SUB",
      "path": "11"
    },
    "14843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "14844": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP6",
      "path": "11"
    },
    "14845": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP8",
      "path": "11"
    },
    "14846": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "GAS",
      "path": "11"
    },
    "14847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "CALL",
      "path": "11"
    },
    "14848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "14849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "14853": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP1",
      "path": "11"
    },
    "14854": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14856": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP2",
      "path": "11"
    },
    "14857": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "EQ",
      "path": "11"
    },
    "14858": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A2F"
    },
    "14861": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "14862": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14864": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14865": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "14866": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14867": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "14869": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "NOT",
      "path": "11"
    },
    "14870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "14872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "14873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "14874": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "AND",
      "path": "11"
    },
    "14875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14876": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "14877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14879": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "14880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "14881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14882": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "14883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "14884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "14888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "ADD",
      "path": "11"
    },
    "14890": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "14891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A34"
    },
    "14894": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14895": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "14898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "14899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14901": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4941,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14902": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "14903": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "14905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4899,
        4972
      ],
      "op": "POP",
      "path": "11"
    },
    "14906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 125,
      "value": "0x3A44"
    },
    "14909": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5006,
        5013
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5015,
        5025
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5027,
        5039
      ],
      "op": "DUP7",
      "path": "11"
    },
    "14912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5005
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A4F"
    },
    "14915": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14916": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4989,
        5040
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14917": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4982,
        5040
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "14918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4548,
        5047
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "14919": {
      "op": "POP"
    },
    "14920": {
      "op": "POP"
    },
    "14921": {
      "op": "POP"
    },
    "14922": {
      "op": "POP"
    },
    "14923": {
      "op": "POP"
    },
    "14924": {
      "op": "POP"
    },
    "14925": {
      "op": "POP"
    },
    "14926": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4548,
        5047
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14927": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7161,
        7853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14928": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7307,
        7319
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "14930": {
      "branch": 175,
      "fn": "Address.verifyCallResult",
      "offset": [
        7335,
        7342
      ],
      "op": "DUP4",
      "path": "11"
    },
    "14931": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "14932": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A5E"
    },
    "14935": {
      "branch": 175,
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "14936": {
      "op": "POP"
    },
    "14937": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7365,
        7375
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 126
    },
    "14938": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3920"
    },
    "14941": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7358,
        7375
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14942": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7331,
        7847
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14943": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14944": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7493
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14945": {
      "branch": 176,
      "fn": "Address.verifyCallResult",
      "offset": [
        7476,
        7497
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "14946": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A6E"
    },
    "14949": {
      "branch": 176,
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "14950": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14951": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7664,
        7681
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14952": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7730,
        7745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "14953": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7717,
        7727
      ],
      "op": "DUP5",
      "path": "11"
    },
    "14954": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7713,
        7715
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "14956": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7709,
        7728
      ],
      "op": "ADD",
      "path": "11"
    },
    "14957": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7702,
        7746
      ],
      "op": "REVERT",
      "path": "11"
    },
    "14958": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7472,
        7837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14959": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7809,
        7821
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 127
    },
    "14960": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "14962": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "14963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14969": {
      "op": "SHL"
    },
    "14970": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "DUP2",
      "path": "11"
    },
    "14971": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "14972": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "14974": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "ADD",
      "path": "11"
    },
    "14975": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x429"
    },
    "14978": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "14979": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "14980": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7802,
        7822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4537"
    },
    "14983": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        7802,
        7822
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14984": {
      "op": "JUMPDEST"
    },
    "14985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14987": {
      "op": "MLOAD"
    },
    "14988": {
      "op": "DUP1"
    },
    "14989": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "14992": {
      "op": "ADD"
    },
    "14993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14995": {
      "op": "MSTORE"
    },
    "14996": {
      "op": "DUP1"
    },
    "14997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14999": {
      "op": "DUP2"
    },
    "15000": {
      "op": "MSTORE"
    },
    "15001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15003": {
      "op": "ADD"
    },
    "15004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15006": {
      "op": "DUP2"
    },
    "15007": {
      "op": "MSTORE"
    },
    "15008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15010": {
      "op": "ADD"
    },
    "15011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15013": {
      "op": "DUP2"
    },
    "15014": {
      "op": "MSTORE"
    },
    "15015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15017": {
      "op": "ADD"
    },
    "15018": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15020": {
      "op": "DUP2"
    },
    "15021": {
      "op": "MSTORE"
    },
    "15022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15024": {
      "op": "ADD"
    },
    "15025": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15027": {
      "op": "DUP2"
    },
    "15028": {
      "op": "MSTORE"
    },
    "15029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15031": {
      "op": "ADD"
    },
    "15032": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15034": {
      "op": "DUP2"
    },
    "15035": {
      "op": "MSTORE"
    },
    "15036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15038": {
      "op": "ADD"
    },
    "15039": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15041": {
      "op": "DUP2"
    },
    "15042": {
      "op": "MSTORE"
    },
    "15043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15045": {
      "op": "ADD"
    },
    "15046": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15048": {
      "op": "DUP2"
    },
    "15049": {
      "op": "MSTORE"
    },
    "15050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15052": {
      "op": "ADD"
    },
    "15053": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15055": {
      "op": "DUP2"
    },
    "15056": {
      "op": "MSTORE"
    },
    "15057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15059": {
      "op": "ADD"
    },
    "15060": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15062": {
      "op": "DUP2"
    },
    "15063": {
      "op": "MSTORE"
    },
    "15064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15066": {
      "op": "ADD"
    },
    "15067": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15069": {
      "op": "DUP2"
    },
    "15070": {
      "op": "MSTORE"
    },
    "15071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15073": {
      "op": "ADD"
    },
    "15074": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15076": {
      "op": "DUP2"
    },
    "15077": {
      "op": "MSTORE"
    },
    "15078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15080": {
      "op": "ADD"
    },
    "15081": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15083": {
      "op": "DUP2"
    },
    "15084": {
      "op": "MSTORE"
    },
    "15085": {
      "op": "POP"
    },
    "15086": {
      "op": "SWAP1"
    },
    "15087": {
      "jump": "o",
      "op": "JUMP"
    },
    "15088": {
      "op": "JUMPDEST"
    },
    "15089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15091": {
      "op": "DUP3"
    },
    "15092": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15094": {
      "op": "DUP4"
    },
    "15095": {
      "op": "ADD"
    },
    "15096": {
      "op": "SLT"
    },
    "15097": {
      "op": "PUSH2",
      "value": "0x3B01"
    },
    "15100": {
      "op": "JUMPI"
    },
    "15101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15103": {
      "op": "DUP1"
    },
    "15104": {
      "op": "REVERT"
    },
    "15105": {
      "op": "JUMPDEST"
    },
    "15106": {
      "op": "DUP2"
    },
    "15107": {
      "op": "CALLDATALOAD"
    },
    "15108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15110": {
      "op": "PUSH2",
      "value": "0x3B16"
    },
    "15113": {
      "op": "PUSH2",
      "value": "0x3B11"
    },
    "15116": {
      "op": "DUP4"
    },
    "15117": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "15120": {
      "jump": "i",
      "op": "JUMP"
    },
    "15121": {
      "op": "JUMPDEST"
    },
    "15122": {
      "op": "PUSH2",
      "value": "0x468A"
    },
    "15125": {
      "jump": "i",
      "op": "JUMP"
    },
    "15126": {
      "op": "JUMPDEST"
    },
    "15127": {
      "op": "DUP1"
    },
    "15128": {
      "op": "DUP4"
    },
    "15129": {
      "op": "DUP3"
    },
    "15130": {
      "op": "MSTORE"
    },
    "15131": {
      "op": "DUP3"
    },
    "15132": {
      "op": "DUP3"
    },
    "15133": {
      "op": "ADD"
    },
    "15134": {
      "op": "SWAP2"
    },
    "15135": {
      "op": "POP"
    },
    "15136": {
      "op": "DUP3"
    },
    "15137": {
      "op": "DUP7"
    },
    "15138": {
      "op": "ADD"
    },
    "15139": {
      "op": "DUP8"
    },
    "15140": {
      "op": "DUP5"
    },
    "15141": {
      "op": "DUP7"
    },
    "15142": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15144": {
      "op": "SHL"
    },
    "15145": {
      "op": "DUP10"
    },
    "15146": {
      "op": "ADD"
    },
    "15147": {
      "op": "ADD"
    },
    "15148": {
      "op": "GT"
    },
    "15149": {
      "op": "ISZERO"
    },
    "15150": {
      "op": "PUSH2",
      "value": "0x3B36"
    },
    "15153": {
      "op": "JUMPI"
    },
    "15154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15156": {
      "op": "DUP1"
    },
    "15157": {
      "op": "REVERT"
    },
    "15158": {
      "op": "JUMPDEST"
    },
    "15159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15161": {
      "op": "JUMPDEST"
    },
    "15162": {
      "op": "DUP6"
    },
    "15163": {
      "op": "DUP2"
    },
    "15164": {
      "op": "LT"
    },
    "15165": {
      "op": "ISZERO"
    },
    "15166": {
      "op": "PUSH2",
      "value": "0x3B5E"
    },
    "15169": {
      "op": "JUMPI"
    },
    "15170": {
      "op": "DUP2"
    },
    "15171": {
      "op": "CALLDATALOAD"
    },
    "15172": {
      "op": "PUSH2",
      "value": "0x3B4C"
    },
    "15175": {
      "op": "DUP2"
    },
    "15176": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "15179": {
      "jump": "i",
      "op": "JUMP"
    },
    "15180": {
      "op": "JUMPDEST"
    },
    "15181": {
      "op": "DUP5"
    },
    "15182": {
      "op": "MSTORE"
    },
    "15183": {
      "op": "SWAP3"
    },
    "15184": {
      "op": "DUP5"
    },
    "15185": {
      "op": "ADD"
    },
    "15186": {
      "op": "SWAP3"
    },
    "15187": {
      "op": "SWAP1"
    },
    "15188": {
      "op": "DUP5"
    },
    "15189": {
      "op": "ADD"
    },
    "15190": {
      "op": "SWAP1"
    },
    "15191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15193": {
      "op": "ADD"
    },
    "15194": {
      "op": "PUSH2",
      "value": "0x3B39"
    },
    "15197": {
      "op": "JUMP"
    },
    "15198": {
      "op": "JUMPDEST"
    },
    "15199": {
      "op": "POP"
    },
    "15200": {
      "op": "SWAP1"
    },
    "15201": {
      "op": "SWAP8"
    },
    "15202": {
      "op": "SWAP7"
    },
    "15203": {
      "op": "POP"
    },
    "15204": {
      "op": "POP"
    },
    "15205": {
      "op": "POP"
    },
    "15206": {
      "op": "POP"
    },
    "15207": {
      "op": "POP"
    },
    "15208": {
      "op": "POP"
    },
    "15209": {
      "op": "POP"
    },
    "15210": {
      "jump": "o",
      "op": "JUMP"
    },
    "15211": {
      "op": "JUMPDEST"
    },
    "15212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15214": {
      "op": "DUP3"
    },
    "15215": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15217": {
      "op": "DUP4"
    },
    "15218": {
      "op": "ADD"
    },
    "15219": {
      "op": "SLT"
    },
    "15220": {
      "op": "PUSH2",
      "value": "0x3B7C"
    },
    "15223": {
      "op": "JUMPI"
    },
    "15224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15226": {
      "op": "DUP1"
    },
    "15227": {
      "op": "REVERT"
    },
    "15228": {
      "op": "JUMPDEST"
    },
    "15229": {
      "op": "DUP2"
    },
    "15230": {
      "op": "CALLDATALOAD"
    },
    "15231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15233": {
      "op": "PUSH2",
      "value": "0x3B8C"
    },
    "15236": {
      "op": "PUSH2",
      "value": "0x3B11"
    },
    "15239": {
      "op": "DUP4"
    },
    "15240": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "15243": {
      "jump": "i",
      "op": "JUMP"
    },
    "15244": {
      "op": "JUMPDEST"
    },
    "15245": {
      "op": "DUP1"
    },
    "15246": {
      "op": "DUP4"
    },
    "15247": {
      "op": "DUP3"
    },
    "15248": {
      "op": "MSTORE"
    },
    "15249": {
      "op": "DUP3"
    },
    "15250": {
      "op": "DUP3"
    },
    "15251": {
      "op": "ADD"
    },
    "15252": {
      "op": "SWAP2"
    },
    "15253": {
      "op": "POP"
    },
    "15254": {
      "op": "DUP3"
    },
    "15255": {
      "op": "DUP7"
    },
    "15256": {
      "op": "ADD"
    },
    "15257": {
      "op": "DUP8"
    },
    "15258": {
      "op": "DUP5"
    },
    "15259": {
      "op": "DUP7"
    },
    "15260": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15262": {
      "op": "SHL"
    },
    "15263": {
      "op": "DUP10"
    },
    "15264": {
      "op": "ADD"
    },
    "15265": {
      "op": "ADD"
    },
    "15266": {
      "op": "GT"
    },
    "15267": {
      "op": "ISZERO"
    },
    "15268": {
      "op": "PUSH2",
      "value": "0x3BAC"
    },
    "15271": {
      "op": "JUMPI"
    },
    "15272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15274": {
      "op": "DUP1"
    },
    "15275": {
      "op": "REVERT"
    },
    "15276": {
      "op": "JUMPDEST"
    },
    "15277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15279": {
      "op": "JUMPDEST"
    },
    "15280": {
      "op": "DUP6"
    },
    "15281": {
      "op": "DUP2"
    },
    "15282": {
      "op": "LT"
    },
    "15283": {
      "op": "ISZERO"
    },
    "15284": {
      "op": "PUSH2",
      "value": "0x3B5E"
    },
    "15287": {
      "op": "JUMPI"
    },
    "15288": {
      "op": "PUSH2",
      "value": "0x3BC0"
    },
    "15291": {
      "op": "DUP3"
    },
    "15292": {
      "op": "PUSH2",
      "value": "0x3D83"
    },
    "15295": {
      "jump": "i",
      "op": "JUMP"
    },
    "15296": {
      "op": "JUMPDEST"
    },
    "15297": {
      "op": "DUP5"
    },
    "15298": {
      "op": "MSTORE"
    },
    "15299": {
      "op": "SWAP3"
    },
    "15300": {
      "op": "DUP5"
    },
    "15301": {
      "op": "ADD"
    },
    "15302": {
      "op": "SWAP3"
    },
    "15303": {
      "op": "SWAP1"
    },
    "15304": {
      "op": "DUP5"
    },
    "15305": {
      "op": "ADD"
    },
    "15306": {
      "op": "SWAP1"
    },
    "15307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15309": {
      "op": "ADD"
    },
    "15310": {
      "op": "PUSH2",
      "value": "0x3BAF"
    },
    "15313": {
      "op": "JUMP"
    },
    "15314": {
      "op": "JUMPDEST"
    },
    "15315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15317": {
      "op": "DUP3"
    },
    "15318": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15320": {
      "op": "DUP4"
    },
    "15321": {
      "op": "ADD"
    },
    "15322": {
      "op": "SLT"
    },
    "15323": {
      "op": "PUSH2",
      "value": "0x3BE3"
    },
    "15326": {
      "op": "JUMPI"
    },
    "15327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15329": {
      "op": "DUP1"
    },
    "15330": {
      "op": "REVERT"
    },
    "15331": {
      "op": "JUMPDEST"
    },
    "15332": {
      "op": "DUP2"
    },
    "15333": {
      "op": "CALLDATALOAD"
    },
    "15334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15336": {
      "op": "PUSH2",
      "value": "0x3BF3"
    },
    "15339": {
      "op": "PUSH2",
      "value": "0x3B11"
    },
    "15342": {
      "op": "DUP4"
    },
    "15343": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "15346": {
      "jump": "i",
      "op": "JUMP"
    },
    "15347": {
      "op": "JUMPDEST"
    },
    "15348": {
      "op": "DUP1"
    },
    "15349": {
      "op": "DUP4"
    },
    "15350": {
      "op": "DUP3"
    },
    "15351": {
      "op": "MSTORE"
    },
    "15352": {
      "op": "DUP3"
    },
    "15353": {
      "op": "DUP3"
    },
    "15354": {
      "op": "ADD"
    },
    "15355": {
      "op": "SWAP2"
    },
    "15356": {
      "op": "POP"
    },
    "15357": {
      "op": "DUP3"
    },
    "15358": {
      "op": "DUP7"
    },
    "15359": {
      "op": "ADD"
    },
    "15360": {
      "op": "DUP8"
    },
    "15361": {
      "op": "DUP5"
    },
    "15362": {
      "op": "DUP7"
    },
    "15363": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15365": {
      "op": "SHL"
    },
    "15366": {
      "op": "DUP10"
    },
    "15367": {
      "op": "ADD"
    },
    "15368": {
      "op": "ADD"
    },
    "15369": {
      "op": "GT"
    },
    "15370": {
      "op": "ISZERO"
    },
    "15371": {
      "op": "PUSH2",
      "value": "0x3C13"
    },
    "15374": {
      "op": "JUMPI"
    },
    "15375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15377": {
      "op": "DUP1"
    },
    "15378": {
      "op": "REVERT"
    },
    "15379": {
      "op": "JUMPDEST"
    },
    "15380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15382": {
      "op": "DUP1"
    },
    "15383": {
      "op": "JUMPDEST"
    },
    "15384": {
      "op": "DUP7"
    },
    "15385": {
      "op": "DUP2"
    },
    "15386": {
      "op": "LT"
    },
    "15387": {
      "op": "ISZERO"
    },
    "15388": {
      "op": "PUSH2",
      "value": "0x3C3F"
    },
    "15391": {
      "op": "JUMPI"
    },
    "15392": {
      "op": "DUP3"
    },
    "15393": {
      "op": "CALLDATALOAD"
    },
    "15394": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "15396": {
      "op": "DUP2"
    },
    "15397": {
      "op": "LT"
    },
    "15398": {
      "op": "PUSH2",
      "value": "0x3C2D"
    },
    "15401": {
      "op": "JUMPI"
    },
    "15402": {
      "op": "DUP3"
    },
    "15403": {
      "op": "DUP4"
    },
    "15404": {
      "op": "REVERT"
    },
    "15405": {
      "op": "JUMPDEST"
    },
    "15406": {
      "op": "DUP6"
    },
    "15407": {
      "op": "MSTORE"
    },
    "15408": {
      "op": "SWAP4"
    },
    "15409": {
      "op": "DUP6"
    },
    "15410": {
      "op": "ADD"
    },
    "15411": {
      "op": "SWAP4"
    },
    "15412": {
      "op": "SWAP2"
    },
    "15413": {
      "op": "DUP6"
    },
    "15414": {
      "op": "ADD"
    },
    "15415": {
      "op": "SWAP2"
    },
    "15416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15418": {
      "op": "ADD"
    },
    "15419": {
      "op": "PUSH2",
      "value": "0x3C17"
    },
    "15422": {
      "op": "JUMP"
    },
    "15423": {
      "op": "JUMPDEST"
    },
    "15424": {
      "op": "POP"
    },
    "15425": {
      "op": "SWAP2"
    },
    "15426": {
      "op": "SWAP9"
    },
    "15427": {
      "op": "SWAP8"
    },
    "15428": {
      "op": "POP"
    },
    "15429": {
      "op": "POP"
    },
    "15430": {
      "op": "POP"
    },
    "15431": {
      "op": "POP"
    },
    "15432": {
      "op": "POP"
    },
    "15433": {
      "op": "POP"
    },
    "15434": {
      "op": "POP"
    },
    "15435": {
      "op": "POP"
    },
    "15436": {
      "jump": "o",
      "op": "JUMP"
    },
    "15437": {
      "op": "JUMPDEST"
    },
    "15438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15440": {
      "op": "DUP3"
    },
    "15441": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15443": {
      "op": "DUP4"
    },
    "15444": {
      "op": "ADD"
    },
    "15445": {
      "op": "SLT"
    },
    "15446": {
      "op": "PUSH2",
      "value": "0x3C5E"
    },
    "15449": {
      "op": "JUMPI"
    },
    "15450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15452": {
      "op": "DUP1"
    },
    "15453": {
      "op": "REVERT"
    },
    "15454": {
      "op": "JUMPDEST"
    },
    "15455": {
      "op": "DUP2"
    },
    "15456": {
      "op": "CALLDATALOAD"
    },
    "15457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15459": {
      "op": "PUSH2",
      "value": "0x3C6E"
    },
    "15462": {
      "op": "PUSH2",
      "value": "0x3B11"
    },
    "15465": {
      "op": "DUP4"
    },
    "15466": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "15469": {
      "jump": "i",
      "op": "JUMP"
    },
    "15470": {
      "op": "JUMPDEST"
    },
    "15471": {
      "op": "DUP1"
    },
    "15472": {
      "op": "DUP4"
    },
    "15473": {
      "op": "DUP3"
    },
    "15474": {
      "op": "MSTORE"
    },
    "15475": {
      "op": "DUP3"
    },
    "15476": {
      "op": "DUP3"
    },
    "15477": {
      "op": "ADD"
    },
    "15478": {
      "op": "SWAP2"
    },
    "15479": {
      "op": "POP"
    },
    "15480": {
      "op": "DUP3"
    },
    "15481": {
      "op": "DUP7"
    },
    "15482": {
      "op": "ADD"
    },
    "15483": {
      "op": "DUP8"
    },
    "15484": {
      "op": "DUP5"
    },
    "15485": {
      "op": "DUP7"
    },
    "15486": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15488": {
      "op": "SHL"
    },
    "15489": {
      "op": "DUP10"
    },
    "15490": {
      "op": "ADD"
    },
    "15491": {
      "op": "ADD"
    },
    "15492": {
      "op": "GT"
    },
    "15493": {
      "op": "ISZERO"
    },
    "15494": {
      "op": "PUSH2",
      "value": "0x3C8E"
    },
    "15497": {
      "op": "JUMPI"
    },
    "15498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15500": {
      "op": "DUP1"
    },
    "15501": {
      "op": "REVERT"
    },
    "15502": {
      "op": "JUMPDEST"
    },
    "15503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15505": {
      "op": "DUP1"
    },
    "15506": {
      "op": "JUMPDEST"
    },
    "15507": {
      "op": "DUP7"
    },
    "15508": {
      "op": "DUP2"
    },
    "15509": {
      "op": "LT"
    },
    "15510": {
      "op": "ISZERO"
    },
    "15511": {
      "op": "PUSH2",
      "value": "0x3C3F"
    },
    "15514": {
      "op": "JUMPI"
    },
    "15515": {
      "op": "DUP3"
    },
    "15516": {
      "op": "CALLDATALOAD"
    },
    "15517": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15519": {
      "op": "DUP2"
    },
    "15520": {
      "op": "LT"
    },
    "15521": {
      "op": "PUSH2",
      "value": "0x3CA8"
    },
    "15524": {
      "op": "JUMPI"
    },
    "15525": {
      "op": "DUP3"
    },
    "15526": {
      "op": "DUP4"
    },
    "15527": {
      "op": "REVERT"
    },
    "15528": {
      "op": "JUMPDEST"
    },
    "15529": {
      "op": "DUP6"
    },
    "15530": {
      "op": "MSTORE"
    },
    "15531": {
      "op": "SWAP4"
    },
    "15532": {
      "op": "DUP6"
    },
    "15533": {
      "op": "ADD"
    },
    "15534": {
      "op": "SWAP4"
    },
    "15535": {
      "op": "SWAP2"
    },
    "15536": {
      "op": "DUP6"
    },
    "15537": {
      "op": "ADD"
    },
    "15538": {
      "op": "SWAP2"
    },
    "15539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15541": {
      "op": "ADD"
    },
    "15542": {
      "op": "PUSH2",
      "value": "0x3C92"
    },
    "15545": {
      "op": "JUMP"
    },
    "15546": {
      "op": "JUMPDEST"
    },
    "15547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15549": {
      "op": "DUP3"
    },
    "15550": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15552": {
      "op": "DUP4"
    },
    "15553": {
      "op": "ADD"
    },
    "15554": {
      "op": "SLT"
    },
    "15555": {
      "op": "PUSH2",
      "value": "0x3CCB"
    },
    "15558": {
      "op": "JUMPI"
    },
    "15559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15561": {
      "op": "DUP1"
    },
    "15562": {
      "op": "REVERT"
    },
    "15563": {
      "op": "JUMPDEST"
    },
    "15564": {
      "op": "DUP2"
    },
    "15565": {
      "op": "CALLDATALOAD"
    },
    "15566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15568": {
      "op": "PUSH2",
      "value": "0x3CDB"
    },
    "15571": {
      "op": "PUSH2",
      "value": "0x3B11"
    },
    "15574": {
      "op": "DUP4"
    },
    "15575": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "15578": {
      "jump": "i",
      "op": "JUMP"
    },
    "15579": {
      "op": "JUMPDEST"
    },
    "15580": {
      "op": "DUP1"
    },
    "15581": {
      "op": "DUP4"
    },
    "15582": {
      "op": "DUP3"
    },
    "15583": {
      "op": "MSTORE"
    },
    "15584": {
      "op": "DUP3"
    },
    "15585": {
      "op": "DUP3"
    },
    "15586": {
      "op": "ADD"
    },
    "15587": {
      "op": "SWAP2"
    },
    "15588": {
      "op": "POP"
    },
    "15589": {
      "op": "DUP3"
    },
    "15590": {
      "op": "DUP7"
    },
    "15591": {
      "op": "ADD"
    },
    "15592": {
      "op": "DUP8"
    },
    "15593": {
      "op": "DUP5"
    },
    "15594": {
      "op": "DUP7"
    },
    "15595": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15597": {
      "op": "SHL"
    },
    "15598": {
      "op": "DUP10"
    },
    "15599": {
      "op": "ADD"
    },
    "15600": {
      "op": "ADD"
    },
    "15601": {
      "op": "GT"
    },
    "15602": {
      "op": "ISZERO"
    },
    "15603": {
      "op": "PUSH2",
      "value": "0x3CFB"
    },
    "15606": {
      "op": "JUMPI"
    },
    "15607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15609": {
      "op": "DUP1"
    },
    "15610": {
      "op": "REVERT"
    },
    "15611": {
      "op": "JUMPDEST"
    },
    "15612": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15614": {
      "op": "JUMPDEST"
    },
    "15615": {
      "op": "DUP6"
    },
    "15616": {
      "op": "DUP2"
    },
    "15617": {
      "op": "LT"
    },
    "15618": {
      "op": "ISZERO"
    },
    "15619": {
      "op": "PUSH2",
      "value": "0x3B5E"
    },
    "15622": {
      "op": "JUMPI"
    },
    "15623": {
      "op": "DUP2"
    },
    "15624": {
      "op": "CALLDATALOAD"
    },
    "15625": {
      "op": "DUP5"
    },
    "15626": {
      "op": "MSTORE"
    },
    "15627": {
      "op": "SWAP3"
    },
    "15628": {
      "op": "DUP5"
    },
    "15629": {
      "op": "ADD"
    },
    "15630": {
      "op": "SWAP3"
    },
    "15631": {
      "op": "SWAP1"
    },
    "15632": {
      "op": "DUP5"
    },
    "15633": {
      "op": "ADD"
    },
    "15634": {
      "op": "SWAP1"
    },
    "15635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15637": {
      "op": "ADD"
    },
    "15638": {
      "op": "PUSH2",
      "value": "0x3CFE"
    },
    "15641": {
      "op": "JUMP"
    },
    "15642": {
      "op": "JUMPDEST"
    },
    "15643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15645": {
      "op": "DUP3"
    },
    "15646": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15648": {
      "op": "DUP4"
    },
    "15649": {
      "op": "ADD"
    },
    "15650": {
      "op": "SLT"
    },
    "15651": {
      "op": "PUSH2",
      "value": "0x3D2B"
    },
    "15654": {
      "op": "JUMPI"
    },
    "15655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15657": {
      "op": "DUP1"
    },
    "15658": {
      "op": "REVERT"
    },
    "15659": {
      "op": "JUMPDEST"
    },
    "15660": {
      "op": "DUP2"
    },
    "15661": {
      "op": "CALLDATALOAD"
    },
    "15662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15664": {
      "op": "PUSH2",
      "value": "0x3D3B"
    },
    "15667": {
      "op": "PUSH2",
      "value": "0x3B11"
    },
    "15670": {
      "op": "DUP4"
    },
    "15671": {
      "op": "PUSH2",
      "value": "0x46BA"
    },
    "15674": {
      "jump": "i",
      "op": "JUMP"
    },
    "15675": {
      "op": "JUMPDEST"
    },
    "15676": {
      "op": "DUP1"
    },
    "15677": {
      "op": "DUP4"
    },
    "15678": {
      "op": "DUP3"
    },
    "15679": {
      "op": "MSTORE"
    },
    "15680": {
      "op": "DUP3"
    },
    "15681": {
      "op": "DUP3"
    },
    "15682": {
      "op": "ADD"
    },
    "15683": {
      "op": "SWAP2"
    },
    "15684": {
      "op": "POP"
    },
    "15685": {
      "op": "DUP3"
    },
    "15686": {
      "op": "DUP7"
    },
    "15687": {
      "op": "ADD"
    },
    "15688": {
      "op": "DUP8"
    },
    "15689": {
      "op": "DUP5"
    },
    "15690": {
      "op": "DUP7"
    },
    "15691": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15693": {
      "op": "SHL"
    },
    "15694": {
      "op": "DUP10"
    },
    "15695": {
      "op": "ADD"
    },
    "15696": {
      "op": "ADD"
    },
    "15697": {
      "op": "GT"
    },
    "15698": {
      "op": "ISZERO"
    },
    "15699": {
      "op": "PUSH2",
      "value": "0x3D5B"
    },
    "15702": {
      "op": "JUMPI"
    },
    "15703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15705": {
      "op": "DUP1"
    },
    "15706": {
      "op": "REVERT"
    },
    "15707": {
      "op": "JUMPDEST"
    },
    "15708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15710": {
      "op": "JUMPDEST"
    },
    "15711": {
      "op": "DUP6"
    },
    "15712": {
      "op": "DUP2"
    },
    "15713": {
      "op": "LT"
    },
    "15714": {
      "op": "ISZERO"
    },
    "15715": {
      "op": "PUSH2",
      "value": "0x3B5E"
    },
    "15718": {
      "op": "JUMPI"
    },
    "15719": {
      "op": "DUP2"
    },
    "15720": {
      "op": "CALLDATALOAD"
    },
    "15721": {
      "op": "PUSH2",
      "value": "0x3D71"
    },
    "15724": {
      "op": "DUP2"
    },
    "15725": {
      "op": "PUSH2",
      "value": "0x4943"
    },
    "15728": {
      "jump": "i",
      "op": "JUMP"
    },
    "15729": {
      "op": "JUMPDEST"
    },
    "15730": {
      "op": "DUP5"
    },
    "15731": {
      "op": "MSTORE"
    },
    "15732": {
      "op": "SWAP3"
    },
    "15733": {
      "op": "DUP5"
    },
    "15734": {
      "op": "ADD"
    },
    "15735": {
      "op": "SWAP3"
    },
    "15736": {
      "op": "SWAP1"
    },
    "15737": {
      "op": "DUP5"
    },
    "15738": {
      "op": "ADD"
    },
    "15739": {
      "op": "SWAP1"
    },
    "15740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15742": {
      "op": "ADD"
    },
    "15743": {
      "op": "PUSH2",
      "value": "0x3D5E"
    },
    "15746": {
      "op": "JUMP"
    },
    "15747": {
      "op": "JUMPDEST"
    },
    "15748": {
      "op": "DUP1"
    },
    "15749": {
      "op": "CALLDATALOAD"
    },
    "15750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15754": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15756": {
      "op": "SHL"
    },
    "15757": {
      "op": "SUB"
    },
    "15758": {
      "op": "NOT"
    },
    "15759": {
      "op": "DUP2"
    },
    "15760": {
      "op": "AND"
    },
    "15761": {
      "op": "DUP2"
    },
    "15762": {
      "op": "EQ"
    },
    "15763": {
      "op": "PUSH2",
      "value": "0x3D9B"
    },
    "15766": {
      "op": "JUMPI"
    },
    "15767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15769": {
      "op": "DUP1"
    },
    "15770": {
      "op": "REVERT"
    },
    "15771": {
      "op": "JUMPDEST"
    },
    "15772": {
      "op": "SWAP2"
    },
    "15773": {
      "op": "SWAP1"
    },
    "15774": {
      "op": "POP"
    },
    "15775": {
      "jump": "o",
      "op": "JUMP"
    },
    "15776": {
      "op": "JUMPDEST"
    },
    "15777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15779": {
      "op": "DUP3"
    },
    "15780": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15782": {
      "op": "DUP4"
    },
    "15783": {
      "op": "ADD"
    },
    "15784": {
      "op": "SLT"
    },
    "15785": {
      "op": "PUSH2",
      "value": "0x3DB1"
    },
    "15788": {
      "op": "JUMPI"
    },
    "15789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15791": {
      "op": "DUP1"
    },
    "15792": {
      "op": "REVERT"
    },
    "15793": {
      "op": "JUMPDEST"
    },
    "15794": {
      "op": "DUP2"
    },
    "15795": {
      "op": "CALLDATALOAD"
    },
    "15796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15800": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15802": {
      "op": "SHL"
    },
    "15803": {
      "op": "SUB"
    },
    "15804": {
      "op": "DUP2"
    },
    "15805": {
      "op": "GT"
    },
    "15806": {
      "op": "ISZERO"
    },
    "15807": {
      "op": "PUSH2",
      "value": "0x3DCA"
    },
    "15810": {
      "op": "JUMPI"
    },
    "15811": {
      "op": "PUSH2",
      "value": "0x3DCA"
    },
    "15814": {
      "op": "PUSH2",
      "value": "0x490A"
    },
    "15817": {
      "jump": "i",
      "op": "JUMP"
    },
    "15818": {
      "op": "JUMPDEST"
    },
    "15819": {
      "op": "PUSH2",
      "value": "0x3DDD"
    },
    "15822": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15824": {
      "op": "DUP3"
    },
    "15825": {
      "op": "ADD"
    },
    "15826": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15828": {
      "op": "NOT"
    },
    "15829": {
      "op": "AND"
    },
    "15830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15832": {
      "op": "ADD"
    },
    "15833": {
      "op": "PUSH2",
      "value": "0x468A"
    },
    "15836": {
      "jump": "i",
      "op": "JUMP"
    },
    "15837": {
      "op": "JUMPDEST"
    },
    "15838": {
      "op": "DUP2"
    },
    "15839": {
      "op": "DUP2"
    },
    "15840": {
      "op": "MSTORE"
    },
    "15841": {
      "op": "DUP5"
    },
    "15842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15844": {
      "op": "DUP4"
    },
    "15845": {
      "op": "DUP7"
    },
    "15846": {
      "op": "ADD"
    },
    "15847": {
      "op": "ADD"
    },
    "15848": {
      "op": "GT"
    },
    "15849": {
      "op": "ISZERO"
    },
    "15850": {
      "op": "PUSH2",
      "value": "0x3DF2"
    },
    "15853": {
      "op": "JUMPI"
    },
    "15854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15856": {
      "op": "DUP1"
    },
    "15857": {
      "op": "REVERT"
    },
    "15858": {
      "op": "JUMPDEST"
    },
    "15859": {
      "op": "DUP2"
    },
    "15860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15862": {
      "op": "DUP6"
    },
    "15863": {
      "op": "ADD"
    },
    "15864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15866": {
      "op": "DUP4"
    },
    "15867": {
      "op": "ADD"
    },
    "15868": {
      "op": "CALLDATACOPY"
    },
    "15869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15871": {
      "op": "SWAP2"
    },
    "15872": {
      "op": "DUP2"
    },
    "15873": {
      "op": "ADD"
    },
    "15874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15876": {
      "op": "ADD"
    },
    "15877": {
      "op": "SWAP2"
    },
    "15878": {
      "op": "SWAP1"
    },
    "15879": {
      "op": "SWAP2"
    },
    "15880": {
      "op": "MSTORE"
    },
    "15881": {
      "op": "SWAP4"
    },
    "15882": {
      "op": "SWAP3"
    },
    "15883": {
      "op": "POP"
    },
    "15884": {
      "op": "POP"
    },
    "15885": {
      "op": "POP"
    },
    "15886": {
      "jump": "o",
      "op": "JUMP"
    },
    "15887": {
      "op": "JUMPDEST"
    },
    "15888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15892": {
      "op": "DUP3"
    },
    "15893": {
      "op": "DUP5"
    },
    "15894": {
      "op": "SUB"
    },
    "15895": {
      "op": "SLT"
    },
    "15896": {
      "op": "ISZERO"
    },
    "15897": {
      "op": "PUSH2",
      "value": "0x3E21"
    },
    "15900": {
      "op": "JUMPI"
    },
    "15901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15903": {
      "op": "DUP1"
    },
    "15904": {
      "op": "REVERT"
    },
    "15905": {
      "op": "JUMPDEST"
    },
    "15906": {
      "op": "DUP2"
    },
    "15907": {
      "op": "MLOAD"
    },
    "15908": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "15911": {
      "op": "DUP2"
    },
    "15912": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "15915": {
      "jump": "i",
      "op": "JUMP"
    },
    "15916": {
      "op": "JUMPDEST"
    },
    "15917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15921": {
      "op": "DUP3"
    },
    "15922": {
      "op": "DUP5"
    },
    "15923": {
      "op": "SUB"
    },
    "15924": {
      "op": "SLT"
    },
    "15925": {
      "op": "ISZERO"
    },
    "15926": {
      "op": "PUSH2",
      "value": "0x3E3E"
    },
    "15929": {
      "op": "JUMPI"
    },
    "15930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15932": {
      "op": "DUP1"
    },
    "15933": {
      "op": "REVERT"
    },
    "15934": {
      "op": "JUMPDEST"
    },
    "15935": {
      "op": "DUP2"
    },
    "15936": {
      "op": "CALLDATALOAD"
    },
    "15937": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "15940": {
      "op": "DUP2"
    },
    "15941": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "15944": {
      "jump": "i",
      "op": "JUMP"
    },
    "15945": {
      "op": "JUMPDEST"
    },
    "15946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15948": {
      "op": "DUP1"
    },
    "15949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15951": {
      "op": "DUP1"
    },
    "15952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15956": {
      "op": "DUP7"
    },
    "15957": {
      "op": "DUP9"
    },
    "15958": {
      "op": "SUB"
    },
    "15959": {
      "op": "SLT"
    },
    "15960": {
      "op": "ISZERO"
    },
    "15961": {
      "op": "PUSH2",
      "value": "0x3E61"
    },
    "15964": {
      "op": "JUMPI"
    },
    "15965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15967": {
      "op": "DUP1"
    },
    "15968": {
      "op": "REVERT"
    },
    "15969": {
      "op": "JUMPDEST"
    },
    "15970": {
      "op": "DUP6"
    },
    "15971": {
      "op": "CALLDATALOAD"
    },
    "15972": {
      "op": "PUSH2",
      "value": "0x3E6C"
    },
    "15975": {
      "op": "DUP2"
    },
    "15976": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "15979": {
      "jump": "i",
      "op": "JUMP"
    },
    "15980": {
      "op": "JUMPDEST"
    },
    "15981": {
      "op": "SWAP5"
    },
    "15982": {
      "op": "POP"
    },
    "15983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15985": {
      "op": "DUP7"
    },
    "15986": {
      "op": "ADD"
    },
    "15987": {
      "op": "CALLDATALOAD"
    },
    "15988": {
      "op": "PUSH2",
      "value": "0x3E7C"
    },
    "15991": {
      "op": "DUP2"
    },
    "15992": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "15995": {
      "jump": "i",
      "op": "JUMP"
    },
    "15996": {
      "op": "JUMPDEST"
    },
    "15997": {
      "op": "SWAP4"
    },
    "15998": {
      "op": "POP"
    },
    "15999": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16001": {
      "op": "DUP7"
    },
    "16002": {
      "op": "ADD"
    },
    "16003": {
      "op": "CALLDATALOAD"
    },
    "16004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16010": {
      "op": "SHL"
    },
    "16011": {
      "op": "SUB"
    },
    "16012": {
      "op": "DUP1"
    },
    "16013": {
      "op": "DUP3"
    },
    "16014": {
      "op": "GT"
    },
    "16015": {
      "op": "ISZERO"
    },
    "16016": {
      "op": "PUSH2",
      "value": "0x3E98"
    },
    "16019": {
      "op": "JUMPI"
    },
    "16020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16022": {
      "op": "DUP1"
    },
    "16023": {
      "op": "REVERT"
    },
    "16024": {
      "op": "JUMPDEST"
    },
    "16025": {
      "op": "PUSH2",
      "value": "0x3EA4"
    },
    "16028": {
      "op": "DUP10"
    },
    "16029": {
      "op": "DUP4"
    },
    "16030": {
      "op": "DUP11"
    },
    "16031": {
      "op": "ADD"
    },
    "16032": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16035": {
      "jump": "i",
      "op": "JUMP"
    },
    "16036": {
      "op": "JUMPDEST"
    },
    "16037": {
      "op": "SWAP5"
    },
    "16038": {
      "op": "POP"
    },
    "16039": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16041": {
      "op": "DUP9"
    },
    "16042": {
      "op": "ADD"
    },
    "16043": {
      "op": "CALLDATALOAD"
    },
    "16044": {
      "op": "SWAP2"
    },
    "16045": {
      "op": "POP"
    },
    "16046": {
      "op": "DUP1"
    },
    "16047": {
      "op": "DUP3"
    },
    "16048": {
      "op": "GT"
    },
    "16049": {
      "op": "ISZERO"
    },
    "16050": {
      "op": "PUSH2",
      "value": "0x3EBA"
    },
    "16053": {
      "op": "JUMPI"
    },
    "16054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16056": {
      "op": "DUP1"
    },
    "16057": {
      "op": "REVERT"
    },
    "16058": {
      "op": "JUMPDEST"
    },
    "16059": {
      "op": "PUSH2",
      "value": "0x3EC6"
    },
    "16062": {
      "op": "DUP10"
    },
    "16063": {
      "op": "DUP4"
    },
    "16064": {
      "op": "DUP11"
    },
    "16065": {
      "op": "ADD"
    },
    "16066": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16069": {
      "jump": "i",
      "op": "JUMP"
    },
    "16070": {
      "op": "JUMPDEST"
    },
    "16071": {
      "op": "SWAP4"
    },
    "16072": {
      "op": "POP"
    },
    "16073": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16075": {
      "op": "DUP9"
    },
    "16076": {
      "op": "ADD"
    },
    "16077": {
      "op": "CALLDATALOAD"
    },
    "16078": {
      "op": "SWAP2"
    },
    "16079": {
      "op": "POP"
    },
    "16080": {
      "op": "DUP1"
    },
    "16081": {
      "op": "DUP3"
    },
    "16082": {
      "op": "GT"
    },
    "16083": {
      "op": "ISZERO"
    },
    "16084": {
      "op": "PUSH2",
      "value": "0x3EDC"
    },
    "16087": {
      "op": "JUMPI"
    },
    "16088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16090": {
      "op": "DUP1"
    },
    "16091": {
      "op": "REVERT"
    },
    "16092": {
      "op": "JUMPDEST"
    },
    "16093": {
      "op": "POP"
    },
    "16094": {
      "op": "PUSH2",
      "value": "0x3EE9"
    },
    "16097": {
      "op": "DUP9"
    },
    "16098": {
      "op": "DUP3"
    },
    "16099": {
      "op": "DUP10"
    },
    "16100": {
      "op": "ADD"
    },
    "16101": {
      "op": "PUSH2",
      "value": "0x3DA0"
    },
    "16104": {
      "jump": "i",
      "op": "JUMP"
    },
    "16105": {
      "op": "JUMPDEST"
    },
    "16106": {
      "op": "SWAP2"
    },
    "16107": {
      "op": "POP"
    },
    "16108": {
      "op": "POP"
    },
    "16109": {
      "op": "SWAP3"
    },
    "16110": {
      "op": "SWAP6"
    },
    "16111": {
      "op": "POP"
    },
    "16112": {
      "op": "SWAP3"
    },
    "16113": {
      "op": "SWAP6"
    },
    "16114": {
      "op": "SWAP1"
    },
    "16115": {
      "op": "SWAP4"
    },
    "16116": {
      "op": "POP"
    },
    "16117": {
      "jump": "o",
      "op": "JUMP"
    },
    "16118": {
      "op": "JUMPDEST"
    },
    "16119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16121": {
      "op": "DUP1"
    },
    "16122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16124": {
      "op": "DUP1"
    },
    "16125": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16127": {
      "op": "DUP6"
    },
    "16128": {
      "op": "DUP8"
    },
    "16129": {
      "op": "SUB"
    },
    "16130": {
      "op": "SLT"
    },
    "16131": {
      "op": "ISZERO"
    },
    "16132": {
      "op": "PUSH2",
      "value": "0x3F0C"
    },
    "16135": {
      "op": "JUMPI"
    },
    "16136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16138": {
      "op": "DUP1"
    },
    "16139": {
      "op": "REVERT"
    },
    "16140": {
      "op": "JUMPDEST"
    },
    "16141": {
      "op": "DUP5"
    },
    "16142": {
      "op": "CALLDATALOAD"
    },
    "16143": {
      "op": "PUSH2",
      "value": "0x3F17"
    },
    "16146": {
      "op": "DUP2"
    },
    "16147": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "16150": {
      "jump": "i",
      "op": "JUMP"
    },
    "16151": {
      "op": "JUMPDEST"
    },
    "16152": {
      "op": "SWAP4"
    },
    "16153": {
      "op": "POP"
    },
    "16154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16156": {
      "op": "DUP6"
    },
    "16157": {
      "op": "ADD"
    },
    "16158": {
      "op": "CALLDATALOAD"
    },
    "16159": {
      "op": "PUSH2",
      "value": "0x3F27"
    },
    "16162": {
      "op": "DUP2"
    },
    "16163": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "16166": {
      "jump": "i",
      "op": "JUMP"
    },
    "16167": {
      "op": "JUMPDEST"
    },
    "16168": {
      "op": "SWAP3"
    },
    "16169": {
      "op": "POP"
    },
    "16170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16172": {
      "op": "DUP6"
    },
    "16173": {
      "op": "ADD"
    },
    "16174": {
      "op": "CALLDATALOAD"
    },
    "16175": {
      "op": "SWAP2"
    },
    "16176": {
      "op": "POP"
    },
    "16177": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16179": {
      "op": "DUP6"
    },
    "16180": {
      "op": "ADD"
    },
    "16181": {
      "op": "CALLDATALOAD"
    },
    "16182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16188": {
      "op": "SHL"
    },
    "16189": {
      "op": "SUB"
    },
    "16190": {
      "op": "DUP2"
    },
    "16191": {
      "op": "GT"
    },
    "16192": {
      "op": "ISZERO"
    },
    "16193": {
      "op": "PUSH2",
      "value": "0x3F49"
    },
    "16196": {
      "op": "JUMPI"
    },
    "16197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16199": {
      "op": "DUP1"
    },
    "16200": {
      "op": "REVERT"
    },
    "16201": {
      "op": "JUMPDEST"
    },
    "16202": {
      "op": "PUSH2",
      "value": "0x3F55"
    },
    "16205": {
      "op": "DUP8"
    },
    "16206": {
      "op": "DUP3"
    },
    "16207": {
      "op": "DUP9"
    },
    "16208": {
      "op": "ADD"
    },
    "16209": {
      "op": "PUSH2",
      "value": "0x3DA0"
    },
    "16212": {
      "jump": "i",
      "op": "JUMP"
    },
    "16213": {
      "op": "JUMPDEST"
    },
    "16214": {
      "op": "SWAP2"
    },
    "16215": {
      "op": "POP"
    },
    "16216": {
      "op": "POP"
    },
    "16217": {
      "op": "SWAP3"
    },
    "16218": {
      "op": "SWAP6"
    },
    "16219": {
      "op": "SWAP2"
    },
    "16220": {
      "op": "SWAP5"
    },
    "16221": {
      "op": "POP"
    },
    "16222": {
      "op": "SWAP3"
    },
    "16223": {
      "op": "POP"
    },
    "16224": {
      "jump": "o",
      "op": "JUMP"
    },
    "16225": {
      "op": "JUMPDEST"
    },
    "16226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16228": {
      "op": "DUP1"
    },
    "16229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16231": {
      "op": "DUP1"
    },
    "16232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16236": {
      "op": "DUP7"
    },
    "16237": {
      "op": "DUP9"
    },
    "16238": {
      "op": "SUB"
    },
    "16239": {
      "op": "SLT"
    },
    "16240": {
      "op": "ISZERO"
    },
    "16241": {
      "op": "PUSH2",
      "value": "0x3F79"
    },
    "16244": {
      "op": "JUMPI"
    },
    "16245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16247": {
      "op": "DUP1"
    },
    "16248": {
      "op": "REVERT"
    },
    "16249": {
      "op": "JUMPDEST"
    },
    "16250": {
      "op": "DUP6"
    },
    "16251": {
      "op": "CALLDATALOAD"
    },
    "16252": {
      "op": "PUSH2",
      "value": "0x3F84"
    },
    "16255": {
      "op": "DUP2"
    },
    "16256": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "16259": {
      "jump": "i",
      "op": "JUMP"
    },
    "16260": {
      "op": "JUMPDEST"
    },
    "16261": {
      "op": "SWAP5"
    },
    "16262": {
      "op": "POP"
    },
    "16263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16265": {
      "op": "DUP7"
    },
    "16266": {
      "op": "ADD"
    },
    "16267": {
      "op": "CALLDATALOAD"
    },
    "16268": {
      "op": "PUSH2",
      "value": "0x3F94"
    },
    "16271": {
      "op": "DUP2"
    },
    "16272": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "16275": {
      "jump": "i",
      "op": "JUMP"
    },
    "16276": {
      "op": "JUMPDEST"
    },
    "16277": {
      "op": "SWAP4"
    },
    "16278": {
      "op": "POP"
    },
    "16279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16281": {
      "op": "DUP7"
    },
    "16282": {
      "op": "ADD"
    },
    "16283": {
      "op": "CALLDATALOAD"
    },
    "16284": {
      "op": "SWAP3"
    },
    "16285": {
      "op": "POP"
    },
    "16286": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16288": {
      "op": "DUP7"
    },
    "16289": {
      "op": "ADD"
    },
    "16290": {
      "op": "CALLDATALOAD"
    },
    "16291": {
      "op": "SWAP2"
    },
    "16292": {
      "op": "POP"
    },
    "16293": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16295": {
      "op": "DUP7"
    },
    "16296": {
      "op": "ADD"
    },
    "16297": {
      "op": "CALLDATALOAD"
    },
    "16298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16304": {
      "op": "SHL"
    },
    "16305": {
      "op": "SUB"
    },
    "16306": {
      "op": "DUP2"
    },
    "16307": {
      "op": "GT"
    },
    "16308": {
      "op": "ISZERO"
    },
    "16309": {
      "op": "PUSH2",
      "value": "0x3FBD"
    },
    "16312": {
      "op": "JUMPI"
    },
    "16313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16315": {
      "op": "DUP1"
    },
    "16316": {
      "op": "REVERT"
    },
    "16317": {
      "op": "JUMPDEST"
    },
    "16318": {
      "op": "PUSH2",
      "value": "0x3EE9"
    },
    "16321": {
      "op": "DUP9"
    },
    "16322": {
      "op": "DUP3"
    },
    "16323": {
      "op": "DUP10"
    },
    "16324": {
      "op": "ADD"
    },
    "16325": {
      "op": "PUSH2",
      "value": "0x3DA0"
    },
    "16328": {
      "jump": "i",
      "op": "JUMP"
    },
    "16329": {
      "op": "JUMPDEST"
    },
    "16330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16332": {
      "op": "DUP1"
    },
    "16333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16335": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16337": {
      "op": "DUP5"
    },
    "16338": {
      "op": "DUP7"
    },
    "16339": {
      "op": "SUB"
    },
    "16340": {
      "op": "SLT"
    },
    "16341": {
      "op": "ISZERO"
    },
    "16342": {
      "op": "PUSH2",
      "value": "0x3FDE"
    },
    "16345": {
      "op": "JUMPI"
    },
    "16346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16348": {
      "op": "DUP1"
    },
    "16349": {
      "op": "REVERT"
    },
    "16350": {
      "op": "JUMPDEST"
    },
    "16351": {
      "op": "DUP4"
    },
    "16352": {
      "op": "CALLDATALOAD"
    },
    "16353": {
      "op": "PUSH2",
      "value": "0x3FE9"
    },
    "16356": {
      "op": "DUP2"
    },
    "16357": {
      "op": "PUSH2",
      "value": "0x4920"
    },
    "16360": {
      "jump": "i",
      "op": "JUMP"
    },
    "16361": {
      "op": "JUMPDEST"
    },
    "16362": {
      "op": "SWAP6"
    },
    "16363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16365": {
      "op": "DUP6"
    },
    "16366": {
      "op": "ADD"
    },
    "16367": {
      "op": "CALLDATALOAD"
    },
    "16368": {
      "op": "SWAP6"
    },
    "16369": {
      "op": "POP"
    },
    "16370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16372": {
      "op": "SWAP1"
    },
    "16373": {
      "op": "SWAP5"
    },
    "16374": {
      "op": "ADD"
    },
    "16375": {
      "op": "CALLDATALOAD"
    },
    "16376": {
      "op": "SWAP4"
    },
    "16377": {
      "op": "SWAP3"
    },
    "16378": {
      "op": "POP"
    },
    "16379": {
      "op": "POP"
    },
    "16380": {
      "op": "POP"
    },
    "16381": {
      "jump": "o",
      "op": "JUMP"
    },
    "16382": {
      "op": "JUMPDEST"
    },
    "16383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16385": {
      "op": "DUP1"
    },
    "16386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16388": {
      "op": "DUP1"
    },
    "16389": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16391": {
      "op": "DUP6"
    },
    "16392": {
      "op": "DUP8"
    },
    "16393": {
      "op": "SUB"
    },
    "16394": {
      "op": "SLT"
    },
    "16395": {
      "op": "ISZERO"
    },
    "16396": {
      "op": "PUSH2",
      "value": "0x4014"
    },
    "16399": {
      "op": "JUMPI"
    },
    "16400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16402": {
      "op": "DUP1"
    },
    "16403": {
      "op": "REVERT"
    },
    "16404": {
      "op": "JUMPDEST"
    },
    "16405": {
      "op": "DUP5"
    },
    "16406": {
      "op": "CALLDATALOAD"
    },
    "16407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16411": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16413": {
      "op": "SHL"
    },
    "16414": {
      "op": "SUB"
    },
    "16415": {
      "op": "DUP1"
    },
    "16416": {
      "op": "DUP3"
    },
    "16417": {
      "op": "GT"
    },
    "16418": {
      "op": "ISZERO"
    },
    "16419": {
      "op": "PUSH2",
      "value": "0x402B"
    },
    "16422": {
      "op": "JUMPI"
    },
    "16423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16425": {
      "op": "DUP1"
    },
    "16426": {
      "op": "REVERT"
    },
    "16427": {
      "op": "JUMPDEST"
    },
    "16428": {
      "op": "PUSH2",
      "value": "0x4037"
    },
    "16431": {
      "op": "DUP9"
    },
    "16432": {
      "op": "DUP4"
    },
    "16433": {
      "op": "DUP10"
    },
    "16434": {
      "op": "ADD"
    },
    "16435": {
      "op": "PUSH2",
      "value": "0x3BD2"
    },
    "16438": {
      "jump": "i",
      "op": "JUMP"
    },
    "16439": {
      "op": "JUMPDEST"
    },
    "16440": {
      "op": "SWAP6"
    },
    "16441": {
      "op": "POP"
    },
    "16442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16444": {
      "op": "DUP8"
    },
    "16445": {
      "op": "ADD"
    },
    "16446": {
      "op": "CALLDATALOAD"
    },
    "16447": {
      "op": "SWAP2"
    },
    "16448": {
      "op": "POP"
    },
    "16449": {
      "op": "DUP1"
    },
    "16450": {
      "op": "DUP3"
    },
    "16451": {
      "op": "GT"
    },
    "16452": {
      "op": "ISZERO"
    },
    "16453": {
      "op": "PUSH2",
      "value": "0x404D"
    },
    "16456": {
      "op": "JUMPI"
    },
    "16457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16459": {
      "op": "DUP1"
    },
    "16460": {
      "op": "REVERT"
    },
    "16461": {
      "op": "JUMPDEST"
    },
    "16462": {
      "op": "PUSH2",
      "value": "0x4059"
    },
    "16465": {
      "op": "DUP9"
    },
    "16466": {
      "op": "DUP4"
    },
    "16467": {
      "op": "DUP10"
    },
    "16468": {
      "op": "ADD"
    },
    "16469": {
      "op": "PUSH2",
      "value": "0x3AF0"
    },
    "16472": {
      "jump": "i",
      "op": "JUMP"
    },
    "16473": {
      "op": "JUMPDEST"
    },
    "16474": {
      "op": "SWAP5"
    },
    "16475": {
      "op": "POP"
    },
    "16476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16478": {
      "op": "DUP8"
    },
    "16479": {
      "op": "ADD"
    },
    "16480": {
      "op": "CALLDATALOAD"
    },
    "16481": {
      "op": "SWAP2"
    },
    "16482": {
      "op": "POP"
    },
    "16483": {
      "op": "DUP1"
    },
    "16484": {
      "op": "DUP3"
    },
    "16485": {
      "op": "GT"
    },
    "16486": {
      "op": "ISZERO"
    },
    "16487": {
      "op": "PUSH2",
      "value": "0x406F"
    },
    "16490": {
      "op": "JUMPI"
    },
    "16491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16493": {
      "op": "DUP1"
    },
    "16494": {
      "op": "REVERT"
    },
    "16495": {
      "op": "JUMPDEST"
    },
    "16496": {
      "op": "PUSH2",
      "value": "0x407B"
    },
    "16499": {
      "op": "DUP9"
    },
    "16500": {
      "op": "DUP4"
    },
    "16501": {
      "op": "DUP10"
    },
    "16502": {
      "op": "ADD"
    },
    "16503": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16506": {
      "jump": "i",
      "op": "JUMP"
    },
    "16507": {
      "op": "JUMPDEST"
    },
    "16508": {
      "op": "SWAP4"
    },
    "16509": {
      "op": "POP"
    },
    "16510": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16512": {
      "op": "DUP8"
    },
    "16513": {
      "op": "ADD"
    },
    "16514": {
      "op": "CALLDATALOAD"
    },
    "16515": {
      "op": "SWAP2"
    },
    "16516": {
      "op": "POP"
    },
    "16517": {
      "op": "DUP1"
    },
    "16518": {
      "op": "DUP3"
    },
    "16519": {
      "op": "GT"
    },
    "16520": {
      "op": "ISZERO"
    },
    "16521": {
      "op": "PUSH2",
      "value": "0x4091"
    },
    "16524": {
      "op": "JUMPI"
    },
    "16525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16527": {
      "op": "DUP1"
    },
    "16528": {
      "op": "REVERT"
    },
    "16529": {
      "op": "JUMPDEST"
    },
    "16530": {
      "op": "POP"
    },
    "16531": {
      "op": "PUSH2",
      "value": "0x3F55"
    },
    "16534": {
      "op": "DUP8"
    },
    "16535": {
      "op": "DUP3"
    },
    "16536": {
      "op": "DUP9"
    },
    "16537": {
      "op": "ADD"
    },
    "16538": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16541": {
      "jump": "i",
      "op": "JUMP"
    },
    "16542": {
      "op": "JUMPDEST"
    },
    "16543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16545": {
      "op": "DUP1"
    },
    "16546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16548": {
      "op": "DUP1"
    },
    "16549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16553": {
      "op": "DUP7"
    },
    "16554": {
      "op": "DUP9"
    },
    "16555": {
      "op": "SUB"
    },
    "16556": {
      "op": "SLT"
    },
    "16557": {
      "op": "ISZERO"
    },
    "16558": {
      "op": "PUSH2",
      "value": "0x40B6"
    },
    "16561": {
      "op": "JUMPI"
    },
    "16562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16564": {
      "op": "DUP1"
    },
    "16565": {
      "op": "REVERT"
    },
    "16566": {
      "op": "JUMPDEST"
    },
    "16567": {
      "op": "DUP6"
    },
    "16568": {
      "op": "CALLDATALOAD"
    },
    "16569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16573": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16575": {
      "op": "SHL"
    },
    "16576": {
      "op": "SUB"
    },
    "16577": {
      "op": "DUP1"
    },
    "16578": {
      "op": "DUP3"
    },
    "16579": {
      "op": "GT"
    },
    "16580": {
      "op": "ISZERO"
    },
    "16581": {
      "op": "PUSH2",
      "value": "0x40CD"
    },
    "16584": {
      "op": "JUMPI"
    },
    "16585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16587": {
      "op": "DUP1"
    },
    "16588": {
      "op": "REVERT"
    },
    "16589": {
      "op": "JUMPDEST"
    },
    "16590": {
      "op": "PUSH2",
      "value": "0x40D9"
    },
    "16593": {
      "op": "DUP10"
    },
    "16594": {
      "op": "DUP4"
    },
    "16595": {
      "op": "DUP11"
    },
    "16596": {
      "op": "ADD"
    },
    "16597": {
      "op": "PUSH2",
      "value": "0x3BD2"
    },
    "16600": {
      "jump": "i",
      "op": "JUMP"
    },
    "16601": {
      "op": "JUMPDEST"
    },
    "16602": {
      "op": "SWAP7"
    },
    "16603": {
      "op": "POP"
    },
    "16604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16606": {
      "op": "DUP9"
    },
    "16607": {
      "op": "ADD"
    },
    "16608": {
      "op": "CALLDATALOAD"
    },
    "16609": {
      "op": "SWAP2"
    },
    "16610": {
      "op": "POP"
    },
    "16611": {
      "op": "DUP1"
    },
    "16612": {
      "op": "DUP3"
    },
    "16613": {
      "op": "GT"
    },
    "16614": {
      "op": "ISZERO"
    },
    "16615": {
      "op": "PUSH2",
      "value": "0x40EF"
    },
    "16618": {
      "op": "JUMPI"
    },
    "16619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16621": {
      "op": "DUP1"
    },
    "16622": {
      "op": "REVERT"
    },
    "16623": {
      "op": "JUMPDEST"
    },
    "16624": {
      "op": "PUSH2",
      "value": "0x40FB"
    },
    "16627": {
      "op": "DUP10"
    },
    "16628": {
      "op": "DUP4"
    },
    "16629": {
      "op": "DUP11"
    },
    "16630": {
      "op": "ADD"
    },
    "16631": {
      "op": "PUSH2",
      "value": "0x3AF0"
    },
    "16634": {
      "jump": "i",
      "op": "JUMP"
    },
    "16635": {
      "op": "JUMPDEST"
    },
    "16636": {
      "op": "SWAP6"
    },
    "16637": {
      "op": "POP"
    },
    "16638": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16640": {
      "op": "DUP9"
    },
    "16641": {
      "op": "ADD"
    },
    "16642": {
      "op": "CALLDATALOAD"
    },
    "16643": {
      "op": "SWAP2"
    },
    "16644": {
      "op": "POP"
    },
    "16645": {
      "op": "DUP1"
    },
    "16646": {
      "op": "DUP3"
    },
    "16647": {
      "op": "GT"
    },
    "16648": {
      "op": "ISZERO"
    },
    "16649": {
      "op": "PUSH2",
      "value": "0x4111"
    },
    "16652": {
      "op": "JUMPI"
    },
    "16653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16655": {
      "op": "DUP1"
    },
    "16656": {
      "op": "REVERT"
    },
    "16657": {
      "op": "JUMPDEST"
    },
    "16658": {
      "op": "PUSH2",
      "value": "0x411D"
    },
    "16661": {
      "op": "DUP10"
    },
    "16662": {
      "op": "DUP4"
    },
    "16663": {
      "op": "DUP11"
    },
    "16664": {
      "op": "ADD"
    },
    "16665": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16668": {
      "jump": "i",
      "op": "JUMP"
    },
    "16669": {
      "op": "JUMPDEST"
    },
    "16670": {
      "op": "SWAP5"
    },
    "16671": {
      "op": "POP"
    },
    "16672": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16674": {
      "op": "DUP9"
    },
    "16675": {
      "op": "ADD"
    },
    "16676": {
      "op": "CALLDATALOAD"
    },
    "16677": {
      "op": "SWAP2"
    },
    "16678": {
      "op": "POP"
    },
    "16679": {
      "op": "DUP1"
    },
    "16680": {
      "op": "DUP3"
    },
    "16681": {
      "op": "GT"
    },
    "16682": {
      "op": "ISZERO"
    },
    "16683": {
      "op": "PUSH2",
      "value": "0x4133"
    },
    "16686": {
      "op": "JUMPI"
    },
    "16687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16689": {
      "op": "DUP1"
    },
    "16690": {
      "op": "REVERT"
    },
    "16691": {
      "op": "JUMPDEST"
    },
    "16692": {
      "op": "PUSH2",
      "value": "0x413F"
    },
    "16695": {
      "op": "DUP10"
    },
    "16696": {
      "op": "DUP4"
    },
    "16697": {
      "op": "DUP11"
    },
    "16698": {
      "op": "ADD"
    },
    "16699": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16702": {
      "jump": "i",
      "op": "JUMP"
    },
    "16703": {
      "op": "JUMPDEST"
    },
    "16704": {
      "op": "SWAP4"
    },
    "16705": {
      "op": "POP"
    },
    "16706": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16708": {
      "op": "DUP9"
    },
    "16709": {
      "op": "ADD"
    },
    "16710": {
      "op": "CALLDATALOAD"
    },
    "16711": {
      "op": "SWAP2"
    },
    "16712": {
      "op": "POP"
    },
    "16713": {
      "op": "DUP1"
    },
    "16714": {
      "op": "DUP3"
    },
    "16715": {
      "op": "GT"
    },
    "16716": {
      "op": "ISZERO"
    },
    "16717": {
      "op": "PUSH2",
      "value": "0x4155"
    },
    "16720": {
      "op": "JUMPI"
    },
    "16721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16723": {
      "op": "DUP1"
    },
    "16724": {
      "op": "REVERT"
    },
    "16725": {
      "op": "JUMPDEST"
    },
    "16726": {
      "op": "POP"
    },
    "16727": {
      "op": "PUSH2",
      "value": "0x3EE9"
    },
    "16730": {
      "op": "DUP9"
    },
    "16731": {
      "op": "DUP3"
    },
    "16732": {
      "op": "DUP10"
    },
    "16733": {
      "op": "ADD"
    },
    "16734": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16737": {
      "jump": "i",
      "op": "JUMP"
    },
    "16738": {
      "op": "JUMPDEST"
    },
    "16739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16741": {
      "op": "DUP1"
    },
    "16742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16744": {
      "op": "DUP1"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16747": {
      "op": "DUP1"
    },
    "16748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16752": {
      "op": "DUP9"
    },
    "16753": {
      "op": "DUP11"
    },
    "16754": {
      "op": "SUB"
    },
    "16755": {
      "op": "SLT"
    },
    "16756": {
      "op": "ISZERO"
    },
    "16757": {
      "op": "PUSH2",
      "value": "0x417D"
    },
    "16760": {
      "op": "JUMPI"
    },
    "16761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16763": {
      "op": "DUP1"
    },
    "16764": {
      "op": "REVERT"
    },
    "16765": {
      "op": "JUMPDEST"
    },
    "16766": {
      "op": "DUP8"
    },
    "16767": {
      "op": "CALLDATALOAD"
    },
    "16768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16774": {
      "op": "SHL"
    },
    "16775": {
      "op": "SUB"
    },
    "16776": {
      "op": "DUP1"
    },
    "16777": {
      "op": "DUP3"
    },
    "16778": {
      "op": "GT"
    },
    "16779": {
      "op": "ISZERO"
    },
    "16780": {
      "op": "PUSH2",
      "value": "0x4194"
    },
    "16783": {
      "op": "JUMPI"
    },
    "16784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16786": {
      "op": "DUP1"
    },
    "16787": {
      "op": "REVERT"
    },
    "16788": {
      "op": "JUMPDEST"
    },
    "16789": {
      "op": "PUSH2",
      "value": "0x41A0"
    },
    "16792": {
      "op": "DUP12"
    },
    "16793": {
      "op": "DUP4"
    },
    "16794": {
      "op": "DUP13"
    },
    "16795": {
      "op": "ADD"
    },
    "16796": {
      "op": "PUSH2",
      "value": "0x3BD2"
    },
    "16799": {
      "jump": "i",
      "op": "JUMP"
    },
    "16800": {
      "op": "JUMPDEST"
    },
    "16801": {
      "op": "SWAP9"
    },
    "16802": {
      "op": "POP"
    },
    "16803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16805": {
      "op": "DUP11"
    },
    "16806": {
      "op": "ADD"
    },
    "16807": {
      "op": "CALLDATALOAD"
    },
    "16808": {
      "op": "SWAP2"
    },
    "16809": {
      "op": "POP"
    },
    "16810": {
      "op": "DUP1"
    },
    "16811": {
      "op": "DUP3"
    },
    "16812": {
      "op": "GT"
    },
    "16813": {
      "op": "ISZERO"
    },
    "16814": {
      "op": "PUSH2",
      "value": "0x41B6"
    },
    "16817": {
      "op": "JUMPI"
    },
    "16818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16820": {
      "op": "DUP1"
    },
    "16821": {
      "op": "REVERT"
    },
    "16822": {
      "op": "JUMPDEST"
    },
    "16823": {
      "op": "PUSH2",
      "value": "0x41C2"
    },
    "16826": {
      "op": "DUP12"
    },
    "16827": {
      "op": "DUP4"
    },
    "16828": {
      "op": "DUP13"
    },
    "16829": {
      "op": "ADD"
    },
    "16830": {
      "op": "PUSH2",
      "value": "0x3AF0"
    },
    "16833": {
      "jump": "i",
      "op": "JUMP"
    },
    "16834": {
      "op": "JUMPDEST"
    },
    "16835": {
      "op": "SWAP8"
    },
    "16836": {
      "op": "POP"
    },
    "16837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16839": {
      "op": "DUP11"
    },
    "16840": {
      "op": "ADD"
    },
    "16841": {
      "op": "CALLDATALOAD"
    },
    "16842": {
      "op": "SWAP2"
    },
    "16843": {
      "op": "POP"
    },
    "16844": {
      "op": "DUP1"
    },
    "16845": {
      "op": "DUP3"
    },
    "16846": {
      "op": "GT"
    },
    "16847": {
      "op": "ISZERO"
    },
    "16848": {
      "op": "PUSH2",
      "value": "0x41D8"
    },
    "16851": {
      "op": "JUMPI"
    },
    "16852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16854": {
      "op": "DUP1"
    },
    "16855": {
      "op": "REVERT"
    },
    "16856": {
      "op": "JUMPDEST"
    },
    "16857": {
      "op": "PUSH2",
      "value": "0x41E4"
    },
    "16860": {
      "op": "DUP12"
    },
    "16861": {
      "op": "DUP4"
    },
    "16862": {
      "op": "DUP13"
    },
    "16863": {
      "op": "ADD"
    },
    "16864": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16867": {
      "jump": "i",
      "op": "JUMP"
    },
    "16868": {
      "op": "JUMPDEST"
    },
    "16869": {
      "op": "SWAP7"
    },
    "16870": {
      "op": "POP"
    },
    "16871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16873": {
      "op": "DUP11"
    },
    "16874": {
      "op": "ADD"
    },
    "16875": {
      "op": "CALLDATALOAD"
    },
    "16876": {
      "op": "SWAP2"
    },
    "16877": {
      "op": "POP"
    },
    "16878": {
      "op": "DUP1"
    },
    "16879": {
      "op": "DUP3"
    },
    "16880": {
      "op": "GT"
    },
    "16881": {
      "op": "ISZERO"
    },
    "16882": {
      "op": "PUSH2",
      "value": "0x41FA"
    },
    "16885": {
      "op": "JUMPI"
    },
    "16886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16888": {
      "op": "DUP1"
    },
    "16889": {
      "op": "REVERT"
    },
    "16890": {
      "op": "JUMPDEST"
    },
    "16891": {
      "op": "PUSH2",
      "value": "0x4206"
    },
    "16894": {
      "op": "DUP12"
    },
    "16895": {
      "op": "DUP4"
    },
    "16896": {
      "op": "DUP13"
    },
    "16897": {
      "op": "ADD"
    },
    "16898": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "16901": {
      "jump": "i",
      "op": "JUMP"
    },
    "16902": {
      "op": "JUMPDEST"
    },
    "16903": {
      "op": "SWAP6"
    },
    "16904": {
      "op": "POP"
    },
    "16905": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16907": {
      "op": "DUP11"
    },
    "16908": {
      "op": "ADD"
    },
    "16909": {
      "op": "CALLDATALOAD"
    },
    "16910": {
      "op": "SWAP2"
    },
    "16911": {
      "op": "POP"
    },
    "16912": {
      "op": "DUP1"
    },
    "16913": {
      "op": "DUP3"
    },
    "16914": {
      "op": "GT"
    },
    "16915": {
      "op": "ISZERO"
    },
    "16916": {
      "op": "PUSH2",
      "value": "0x421C"
    },
    "16919": {
      "op": "JUMPI"
    },
    "16920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16922": {
      "op": "DUP1"
    },
    "16923": {
      "op": "REVERT"
    },
    "16924": {
      "op": "JUMPDEST"
    },
    "16925": {
      "op": "PUSH2",
      "value": "0x4228"
    },
    "16928": {
      "op": "DUP12"
    },
    "16929": {
      "op": "DUP4"
    },
    "16930": {
      "op": "DUP13"
    },
    "16931": {
      "op": "ADD"
    },
    "16932": {
      "op": "PUSH2",
      "value": "0x3D1A"
    },
    "16935": {
      "jump": "i",
      "op": "JUMP"
    },
    "16936": {
      "op": "JUMPDEST"
    },
    "16937": {
      "op": "SWAP5"
    },
    "16938": {
      "op": "POP"
    },
    "16939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16941": {
      "op": "DUP11"
    },
    "16942": {
      "op": "ADD"
    },
    "16943": {
      "op": "CALLDATALOAD"
    },
    "16944": {
      "op": "SWAP2"
    },
    "16945": {
      "op": "POP"
    },
    "16946": {
      "op": "DUP1"
    },
    "16947": {
      "op": "DUP3"
    },
    "16948": {
      "op": "GT"
    },
    "16949": {
      "op": "ISZERO"
    },
    "16950": {
      "op": "PUSH2",
      "value": "0x423E"
    },
    "16953": {
      "op": "JUMPI"
    },
    "16954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16956": {
      "op": "DUP1"
    },
    "16957": {
      "op": "REVERT"
    },
    "16958": {
      "op": "JUMPDEST"
    },
    "16959": {
      "op": "PUSH2",
      "value": "0x424A"
    },
    "16962": {
      "op": "DUP12"
    },
    "16963": {
      "op": "DUP4"
    },
    "16964": {
      "op": "DUP13"
    },
    "16965": {
      "op": "ADD"
    },
    "16966": {
      "op": "PUSH2",
      "value": "0x3B6B"
    },
    "16969": {
      "jump": "i",
      "op": "JUMP"
    },
    "16970": {
      "op": "JUMPDEST"
    },
    "16971": {
      "op": "SWAP4"
    },
    "16972": {
      "op": "POP"
    },
    "16973": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16975": {
      "op": "DUP11"
    },
    "16976": {
      "op": "ADD"
    },
    "16977": {
      "op": "CALLDATALOAD"
    },
    "16978": {
      "op": "SWAP2"
    },
    "16979": {
      "op": "POP"
    },
    "16980": {
      "op": "DUP1"
    },
    "16981": {
      "op": "DUP3"
    },
    "16982": {
      "op": "GT"
    },
    "16983": {
      "op": "ISZERO"
    },
    "16984": {
      "op": "PUSH2",
      "value": "0x4260"
    },
    "16987": {
      "op": "JUMPI"
    },
    "16988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16990": {
      "op": "DUP1"
    },
    "16991": {
      "op": "REVERT"
    },
    "16992": {
      "op": "JUMPDEST"
    },
    "16993": {
      "op": "POP"
    },
    "16994": {
      "op": "PUSH2",
      "value": "0x426D"
    },
    "16997": {
      "op": "DUP11"
    },
    "16998": {
      "op": "DUP3"
    },
    "16999": {
      "op": "DUP12"
    },
    "17000": {
      "op": "ADD"
    },
    "17001": {
      "op": "PUSH2",
      "value": "0x3C4D"
    },
    "17004": {
      "jump": "i",
      "op": "JUMP"
    },
    "17005": {
      "op": "JUMPDEST"
    },
    "17006": {
      "op": "SWAP2"
    },
    "17007": {
      "op": "POP"
    },
    "17008": {
      "op": "POP"
    },
    "17009": {
      "op": "SWAP3"
    },
    "17010": {
      "op": "SWAP6"
    },
    "17011": {
      "op": "SWAP9"
    },
    "17012": {
      "op": "SWAP2"
    },
    "17013": {
      "op": "SWAP5"
    },
    "17014": {
      "op": "SWAP8"
    },
    "17015": {
      "op": "POP"
    },
    "17016": {
      "op": "SWAP3"
    },
    "17017": {
      "op": "SWAP6"
    },
    "17018": {
      "op": "POP"
    },
    "17019": {
      "jump": "o",
      "op": "JUMP"
    },
    "17020": {
      "op": "JUMPDEST"
    },
    "17021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17023": {
      "op": "DUP1"
    },
    "17024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17026": {
      "op": "DUP1"
    },
    "17027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17029": {
      "op": "DUP1"
    },
    "17030": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17032": {
      "op": "DUP8"
    },
    "17033": {
      "op": "DUP10"
    },
    "17034": {
      "op": "SUB"
    },
    "17035": {
      "op": "SLT"
    },
    "17036": {
      "op": "ISZERO"
    },
    "17037": {
      "op": "PUSH2",
      "value": "0x4295"
    },
    "17040": {
      "op": "JUMPI"
    },
    "17041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17043": {
      "op": "DUP1"
    },
    "17044": {
      "op": "REVERT"
    },
    "17045": {
      "op": "JUMPDEST"
    },
    "17046": {
      "op": "DUP7"
    },
    "17047": {
      "op": "CALLDATALOAD"
    },
    "17048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17054": {
      "op": "SHL"
    },
    "17055": {
      "op": "SUB"
    },
    "17056": {
      "op": "DUP1"
    },
    "17057": {
      "op": "DUP3"
    },
    "17058": {
      "op": "GT"
    },
    "17059": {
      "op": "ISZERO"
    },
    "17060": {
      "op": "PUSH2",
      "value": "0x42AC"
    },
    "17063": {
      "op": "JUMPI"
    },
    "17064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17066": {
      "op": "DUP1"
    },
    "17067": {
      "op": "REVERT"
    },
    "17068": {
      "op": "JUMPDEST"
    },
    "17069": {
      "op": "PUSH2",
      "value": "0x42B8"
    },
    "17072": {
      "op": "DUP11"
    },
    "17073": {
      "op": "DUP4"
    },
    "17074": {
      "op": "DUP12"
    },
    "17075": {
      "op": "ADD"
    },
    "17076": {
      "op": "PUSH2",
      "value": "0x3BD2"
    },
    "17079": {
      "jump": "i",
      "op": "JUMP"
    },
    "17080": {
      "op": "JUMPDEST"
    },
    "17081": {
      "op": "SWAP8"
    },
    "17082": {
      "op": "POP"
    },
    "17083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17085": {
      "op": "DUP10"
    },
    "17086": {
      "op": "ADD"
    },
    "17087": {
      "op": "CALLDATALOAD"
    },
    "17088": {
      "op": "SWAP2"
    },
    "17089": {
      "op": "POP"
    },
    "17090": {
      "op": "DUP1"
    },
    "17091": {
      "op": "DUP3"
    },
    "17092": {
      "op": "GT"
    },
    "17093": {
      "op": "ISZERO"
    },
    "17094": {
      "op": "PUSH2",
      "value": "0x42CE"
    },
    "17097": {
      "op": "JUMPI"
    },
    "17098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17100": {
      "op": "DUP1"
    },
    "17101": {
      "op": "REVERT"
    },
    "17102": {
      "op": "JUMPDEST"
    },
    "17103": {
      "op": "PUSH2",
      "value": "0x42DA"
    },
    "17106": {
      "op": "DUP11"
    },
    "17107": {
      "op": "DUP4"
    },
    "17108": {
      "op": "DUP12"
    },
    "17109": {
      "op": "ADD"
    },
    "17110": {
      "op": "PUSH2",
      "value": "0x3AF0"
    },
    "17113": {
      "jump": "i",
      "op": "JUMP"
    },
    "17114": {
      "op": "JUMPDEST"
    },
    "17115": {
      "op": "SWAP7"
    },
    "17116": {
      "op": "POP"
    },
    "17117": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17119": {
      "op": "DUP10"
    },
    "17120": {
      "op": "ADD"
    },
    "17121": {
      "op": "CALLDATALOAD"
    },
    "17122": {
      "op": "SWAP2"
    },
    "17123": {
      "op": "POP"
    },
    "17124": {
      "op": "DUP1"
    },
    "17125": {
      "op": "DUP3"
    },
    "17126": {
      "op": "GT"
    },
    "17127": {
      "op": "ISZERO"
    },
    "17128": {
      "op": "PUSH2",
      "value": "0x42F0"
    },
    "17131": {
      "op": "JUMPI"
    },
    "17132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17134": {
      "op": "DUP1"
    },
    "17135": {
      "op": "REVERT"
    },
    "17136": {
      "op": "JUMPDEST"
    },
    "17137": {
      "op": "PUSH2",
      "value": "0x42FC"
    },
    "17140": {
      "op": "DUP11"
    },
    "17141": {
      "op": "DUP4"
    },
    "17142": {
      "op": "DUP12"
    },
    "17143": {
      "op": "ADD"
    },
    "17144": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "17147": {
      "jump": "i",
      "op": "JUMP"
    },
    "17148": {
      "op": "JUMPDEST"
    },
    "17149": {
      "op": "SWAP6"
    },
    "17150": {
      "op": "POP"
    },
    "17151": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17153": {
      "op": "DUP10"
    },
    "17154": {
      "op": "ADD"
    },
    "17155": {
      "op": "CALLDATALOAD"
    },
    "17156": {
      "op": "SWAP2"
    },
    "17157": {
      "op": "POP"
    },
    "17158": {
      "op": "DUP1"
    },
    "17159": {
      "op": "DUP3"
    },
    "17160": {
      "op": "GT"
    },
    "17161": {
      "op": "ISZERO"
    },
    "17162": {
      "op": "PUSH2",
      "value": "0x4312"
    },
    "17165": {
      "op": "JUMPI"
    },
    "17166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17168": {
      "op": "DUP1"
    },
    "17169": {
      "op": "REVERT"
    },
    "17170": {
      "op": "JUMPDEST"
    },
    "17171": {
      "op": "PUSH2",
      "value": "0x431E"
    },
    "17174": {
      "op": "DUP11"
    },
    "17175": {
      "op": "DUP4"
    },
    "17176": {
      "op": "DUP12"
    },
    "17177": {
      "op": "ADD"
    },
    "17178": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "17181": {
      "jump": "i",
      "op": "JUMP"
    },
    "17182": {
      "op": "JUMPDEST"
    },
    "17183": {
      "op": "SWAP5"
    },
    "17184": {
      "op": "POP"
    },
    "17185": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17187": {
      "op": "DUP10"
    },
    "17188": {
      "op": "ADD"
    },
    "17189": {
      "op": "CALLDATALOAD"
    },
    "17190": {
      "op": "SWAP2"
    },
    "17191": {
      "op": "POP"
    },
    "17192": {
      "op": "DUP1"
    },
    "17193": {
      "op": "DUP3"
    },
    "17194": {
      "op": "GT"
    },
    "17195": {
      "op": "ISZERO"
    },
    "17196": {
      "op": "PUSH2",
      "value": "0x4334"
    },
    "17199": {
      "op": "JUMPI"
    },
    "17200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17202": {
      "op": "DUP1"
    },
    "17203": {
      "op": "REVERT"
    },
    "17204": {
      "op": "JUMPDEST"
    },
    "17205": {
      "op": "PUSH2",
      "value": "0x4340"
    },
    "17208": {
      "op": "DUP11"
    },
    "17209": {
      "op": "DUP4"
    },
    "17210": {
      "op": "DUP12"
    },
    "17211": {
      "op": "ADD"
    },
    "17212": {
      "op": "PUSH2",
      "value": "0x3D1A"
    },
    "17215": {
      "jump": "i",
      "op": "JUMP"
    },
    "17216": {
      "op": "JUMPDEST"
    },
    "17217": {
      "op": "SWAP4"
    },
    "17218": {
      "op": "POP"
    },
    "17219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17221": {
      "op": "DUP10"
    },
    "17222": {
      "op": "ADD"
    },
    "17223": {
      "op": "CALLDATALOAD"
    },
    "17224": {
      "op": "SWAP2"
    },
    "17225": {
      "op": "POP"
    },
    "17226": {
      "op": "DUP1"
    },
    "17227": {
      "op": "DUP3"
    },
    "17228": {
      "op": "GT"
    },
    "17229": {
      "op": "ISZERO"
    },
    "17230": {
      "op": "PUSH2",
      "value": "0x4356"
    },
    "17233": {
      "op": "JUMPI"
    },
    "17234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17236": {
      "op": "DUP1"
    },
    "17237": {
      "op": "REVERT"
    },
    "17238": {
      "op": "JUMPDEST"
    },
    "17239": {
      "op": "POP"
    },
    "17240": {
      "op": "PUSH2",
      "value": "0x4363"
    },
    "17243": {
      "op": "DUP10"
    },
    "17244": {
      "op": "DUP3"
    },
    "17245": {
      "op": "DUP11"
    },
    "17246": {
      "op": "ADD"
    },
    "17247": {
      "op": "PUSH2",
      "value": "0x3CBA"
    },
    "17250": {
      "jump": "i",
      "op": "JUMP"
    },
    "17251": {
      "op": "JUMPDEST"
    },
    "17252": {
      "op": "SWAP2"
    },
    "17253": {
      "op": "POP"
    },
    "17254": {
      "op": "POP"
    },
    "17255": {
      "op": "SWAP3"
    },
    "17256": {
      "op": "SWAP6"
    },
    "17257": {
      "op": "POP"
    },
    "17258": {
      "op": "SWAP3"
    },
    "17259": {
      "op": "SWAP6"
    },
    "17260": {
      "op": "POP"
    },
    "17261": {
      "op": "SWAP3"
    },
    "17262": {
      "op": "SWAP6"
    },
    "17263": {
      "jump": "o",
      "op": "JUMP"
    },
    "17264": {
      "op": "JUMPDEST"
    },
    "17265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17269": {
      "op": "DUP3"
    },
    "17270": {
      "op": "DUP5"
    },
    "17271": {
      "op": "SUB"
    },
    "17272": {
      "op": "SLT"
    },
    "17273": {
      "op": "ISZERO"
    },
    "17274": {
      "op": "PUSH2",
      "value": "0x4382"
    },
    "17277": {
      "op": "JUMPI"
    },
    "17278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17280": {
      "op": "DUP1"
    },
    "17281": {
      "op": "REVERT"
    },
    "17282": {
      "op": "JUMPDEST"
    },
    "17283": {
      "op": "DUP2"
    },
    "17284": {
      "op": "CALLDATALOAD"
    },
    "17285": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "17288": {
      "op": "DUP2"
    },
    "17289": {
      "op": "PUSH2",
      "value": "0x4935"
    },
    "17292": {
      "jump": "i",
      "op": "JUMP"
    },
    "17293": {
      "op": "JUMPDEST"
    },
    "17294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17298": {
      "op": "DUP3"
    },
    "17299": {
      "op": "DUP5"
    },
    "17300": {
      "op": "SUB"
    },
    "17301": {
      "op": "SLT"
    },
    "17302": {
      "op": "ISZERO"
    },
    "17303": {
      "op": "PUSH2",
      "value": "0x439F"
    },
    "17306": {
      "op": "JUMPI"
    },
    "17307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17309": {
      "op": "DUP1"
    },
    "17310": {
      "op": "REVERT"
    },
    "17311": {
      "op": "JUMPDEST"
    },
    "17312": {
      "op": "DUP2"
    },
    "17313": {
      "op": "MLOAD"
    },
    "17314": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "17317": {
      "op": "DUP2"
    },
    "17318": {
      "op": "PUSH2",
      "value": "0x4935"
    },
    "17321": {
      "jump": "i",
      "op": "JUMP"
    },
    "17322": {
      "op": "JUMPDEST"
    },
    "17323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17327": {
      "op": "DUP3"
    },
    "17328": {
      "op": "DUP5"
    },
    "17329": {
      "op": "SUB"
    },
    "17330": {
      "op": "SLT"
    },
    "17331": {
      "op": "ISZERO"
    },
    "17332": {
      "op": "PUSH2",
      "value": "0x43BC"
    },
    "17335": {
      "op": "JUMPI"
    },
    "17336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17338": {
      "op": "DUP1"
    },
    "17339": {
      "op": "REVERT"
    },
    "17340": {
      "op": "JUMPDEST"
    },
    "17341": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "17344": {
      "op": "DUP3"
    },
    "17345": {
      "op": "PUSH2",
      "value": "0x3D83"
    },
    "17348": {
      "jump": "i",
      "op": "JUMP"
    },
    "17349": {
      "op": "JUMPDEST"
    },
    "17350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17354": {
      "op": "DUP3"
    },
    "17355": {
      "op": "DUP5"
    },
    "17356": {
      "op": "SUB"
    },
    "17357": {
      "op": "SLT"
    },
    "17358": {
      "op": "ISZERO"
    },
    "17359": {
      "op": "PUSH2",
      "value": "0x43D7"
    },
    "17362": {
      "op": "JUMPI"
    },
    "17363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17365": {
      "op": "DUP1"
    },
    "17366": {
      "op": "REVERT"
    },
    "17367": {
      "op": "JUMPDEST"
    },
    "17368": {
      "op": "POP"
    },
    "17369": {
      "op": "CALLDATALOAD"
    },
    "17370": {
      "op": "SWAP2"
    },
    "17371": {
      "op": "SWAP1"
    },
    "17372": {
      "op": "POP"
    },
    "17373": {
      "jump": "o",
      "op": "JUMP"
    },
    "17374": {
      "op": "JUMPDEST"
    },
    "17375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17379": {
      "op": "DUP3"
    },
    "17380": {
      "op": "DUP5"
    },
    "17381": {
      "op": "SUB"
    },
    "17382": {
      "op": "SLT"
    },
    "17383": {
      "op": "ISZERO"
    },
    "17384": {
      "op": "PUSH2",
      "value": "0x43F0"
    },
    "17387": {
      "op": "JUMPI"
    },
    "17388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17390": {
      "op": "DUP1"
    },
    "17391": {
      "op": "REVERT"
    },
    "17392": {
      "op": "JUMPDEST"
    },
    "17393": {
      "op": "DUP2"
    },
    "17394": {
      "op": "MLOAD"
    },
    "17395": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "17398": {
      "op": "DUP2"
    },
    "17399": {
      "op": "PUSH2",
      "value": "0x4943"
    },
    "17402": {
      "jump": "i",
      "op": "JUMP"
    },
    "17403": {
      "op": "JUMPDEST"
    },
    "17404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17406": {
      "op": "DUP2"
    },
    "17407": {
      "op": "MLOAD"
    },
    "17408": {
      "op": "DUP1"
    },
    "17409": {
      "op": "DUP5"
    },
    "17410": {
      "op": "MSTORE"
    },
    "17411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17413": {
      "op": "DUP1"
    },
    "17414": {
      "op": "DUP6"
    },
    "17415": {
      "op": "ADD"
    },
    "17416": {
      "op": "SWAP5"
    },
    "17417": {
      "op": "POP"
    },
    "17418": {
      "op": "DUP1"
    },
    "17419": {
      "op": "DUP5"
    },
    "17420": {
      "op": "ADD"
    },
    "17421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17423": {
      "op": "JUMPDEST"
    },
    "17424": {
      "op": "DUP4"
    },
    "17425": {
      "op": "DUP2"
    },
    "17426": {
      "op": "LT"
    },
    "17427": {
      "op": "ISZERO"
    },
    "17428": {
      "op": "PUSH2",
      "value": "0x442B"
    },
    "17431": {
      "op": "JUMPI"
    },
    "17432": {
      "op": "DUP2"
    },
    "17433": {
      "op": "MLOAD"
    },
    "17434": {
      "op": "DUP8"
    },
    "17435": {
      "op": "MSTORE"
    },
    "17436": {
      "op": "SWAP6"
    },
    "17437": {
      "op": "DUP3"
    },
    "17438": {
      "op": "ADD"
    },
    "17439": {
      "op": "SWAP6"
    },
    "17440": {
      "op": "SWAP1"
    },
    "17441": {
      "op": "DUP3"
    },
    "17442": {
      "op": "ADD"
    },
    "17443": {
      "op": "SWAP1"
    },
    "17444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17446": {
      "op": "ADD"
    },
    "17447": {
      "op": "PUSH2",
      "value": "0x440F"
    },
    "17450": {
      "op": "JUMP"
    },
    "17451": {
      "op": "JUMPDEST"
    },
    "17452": {
      "op": "POP"
    },
    "17453": {
      "op": "SWAP5"
    },
    "17454": {
      "op": "SWAP6"
    },
    "17455": {
      "op": "SWAP5"
    },
    "17456": {
      "op": "POP"
    },
    "17457": {
      "op": "POP"
    },
    "17458": {
      "op": "POP"
    },
    "17459": {
      "op": "POP"
    },
    "17460": {
      "op": "POP"
    },
    "17461": {
      "jump": "o",
      "op": "JUMP"
    },
    "17462": {
      "op": "JUMPDEST"
    },
    "17463": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17465": {
      "op": "SWAP4"
    },
    "17466": {
      "op": "SWAP1"
    },
    "17467": {
      "op": "SWAP4"
    },
    "17468": {
      "op": "SHL"
    },
    "17469": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "17482": {
      "op": "NOT"
    },
    "17483": {
      "op": "AND"
    },
    "17484": {
      "op": "DUP4"
    },
    "17485": {
      "op": "MSTORE"
    },
    "17486": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17488": {
      "op": "DUP4"
    },
    "17489": {
      "op": "ADD"
    },
    "17490": {
      "op": "SWAP2"
    },
    "17491": {
      "op": "SWAP1"
    },
    "17492": {
      "op": "SWAP2"
    },
    "17493": {
      "op": "MSTORE"
    },
    "17494": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "17496": {
      "op": "DUP3"
    },
    "17497": {
      "op": "ADD"
    },
    "17498": {
      "op": "MSTORE"
    },
    "17499": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "17501": {
      "op": "ADD"
    },
    "17502": {
      "op": "SWAP1"
    },
    "17503": {
      "jump": "o",
      "op": "JUMP"
    },
    "17504": {
      "op": "JUMPDEST"
    },
    "17505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17507": {
      "op": "DUP3"
    },
    "17508": {
      "op": "MLOAD"
    },
    "17509": {
      "op": "PUSH2",
      "value": "0x4472"
    },
    "17512": {
      "op": "DUP2"
    },
    "17513": {
      "op": "DUP5"
    },
    "17514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17516": {
      "op": "DUP8"
    },
    "17517": {
      "op": "ADD"
    },
    "17518": {
      "op": "PUSH2",
      "value": "0x4881"
    },
    "17521": {
      "jump": "i",
      "op": "JUMP"
    },
    "17522": {
      "op": "JUMPDEST"
    },
    "17523": {
      "op": "SWAP2"
    },
    "17524": {
      "op": "SWAP1"
    },
    "17525": {
      "op": "SWAP2"
    },
    "17526": {
      "op": "ADD"
    },
    "17527": {
      "op": "SWAP3"
    },
    "17528": {
      "op": "SWAP2"
    },
    "17529": {
      "op": "POP"
    },
    "17530": {
      "op": "POP"
    },
    "17531": {
      "jump": "o",
      "op": "JUMP"
    },
    "17532": {
      "op": "JUMPDEST"
    },
    "17533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17539": {
      "op": "SHL"
    },
    "17540": {
      "op": "SUB"
    },
    "17541": {
      "op": "DUP6"
    },
    "17542": {
      "op": "DUP2"
    },
    "17543": {
      "op": "AND"
    },
    "17544": {
      "op": "DUP3"
    },
    "17545": {
      "op": "MSTORE"
    },
    "17546": {
      "op": "DUP5"
    },
    "17547": {
      "op": "AND"
    },
    "17548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17550": {
      "op": "DUP3"
    },
    "17551": {
      "op": "ADD"
    },
    "17552": {
      "op": "MSTORE"
    },
    "17553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17557": {
      "op": "DUP3"
    },
    "17558": {
      "op": "ADD"
    },
    "17559": {
      "op": "DUP2"
    },
    "17560": {
      "op": "SWAP1"
    },
    "17561": {
      "op": "MSTORE"
    },
    "17562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17564": {
      "op": "SWAP1"
    },
    "17565": {
      "op": "PUSH2",
      "value": "0x44A8"
    },
    "17568": {
      "op": "SWAP1"
    },
    "17569": {
      "op": "DUP4"
    },
    "17570": {
      "op": "ADD"
    },
    "17571": {
      "op": "DUP6"
    },
    "17572": {
      "op": "PUSH2",
      "value": "0x43FB"
    },
    "17575": {
      "jump": "i",
      "op": "JUMP"
    },
    "17576": {
      "op": "JUMPDEST"
    },
    "17577": {
      "op": "DUP3"
    },
    "17578": {
      "op": "DUP2"
    },
    "17579": {
      "op": "SUB"
    },
    "17580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17582": {
      "op": "DUP5"
    },
    "17583": {
      "op": "ADD"
    },
    "17584": {
      "op": "MSTORE"
    },
    "17585": {
      "op": "PUSH2",
      "value": "0x44BA"
    },
    "17588": {
      "op": "DUP2"
    },
    "17589": {
      "op": "DUP6"
    },
    "17590": {
      "op": "PUSH2",
      "value": "0x43FB"
    },
    "17593": {
      "jump": "i",
      "op": "JUMP"
    },
    "17594": {
      "op": "JUMPDEST"
    },
    "17595": {
      "op": "DUP4"
    },
    "17596": {
      "op": "DUP2"
    },
    "17597": {
      "op": "SUB"
    },
    "17598": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17600": {
      "op": "SWAP1"
    },
    "17601": {
      "op": "SWAP5"
    },
    "17602": {
      "op": "ADD"
    },
    "17603": {
      "op": "SWAP4"
    },
    "17604": {
      "op": "SWAP1"
    },
    "17605": {
      "op": "SWAP4"
    },
    "17606": {
      "op": "MSTORE"
    },
    "17607": {
      "op": "POP"
    },
    "17608": {
      "op": "POP"
    },
    "17609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17611": {
      "op": "DUP2"
    },
    "17612": {
      "op": "MSTORE"
    },
    "17613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17615": {
      "op": "ADD"
    },
    "17616": {
      "op": "SWAP5"
    },
    "17617": {
      "op": "SWAP4"
    },
    "17618": {
      "op": "POP"
    },
    "17619": {
      "op": "POP"
    },
    "17620": {
      "op": "POP"
    },
    "17621": {
      "op": "POP"
    },
    "17622": {
      "jump": "o",
      "op": "JUMP"
    },
    "17623": {
      "op": "JUMPDEST"
    },
    "17624": {
      "op": "DUP7"
    },
    "17625": {
      "op": "ISZERO"
    },
    "17626": {
      "op": "ISZERO"
    },
    "17627": {
      "op": "DUP2"
    },
    "17628": {
      "op": "MSTORE"
    },
    "17629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17631": {
      "op": "DUP2"
    },
    "17632": {
      "op": "ADD"
    },
    "17633": {
      "op": "DUP7"
    },
    "17634": {
      "op": "SWAP1"
    },
    "17635": {
      "op": "MSTORE"
    },
    "17636": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17638": {
      "op": "DUP6"
    },
    "17639": {
      "op": "DUP2"
    },
    "17640": {
      "op": "AND"
    },
    "17641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17643": {
      "op": "DUP4"
    },
    "17644": {
      "op": "ADD"
    },
    "17645": {
      "op": "MSTORE"
    },
    "17646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17652": {
      "op": "SHL"
    },
    "17653": {
      "op": "SUB"
    },
    "17654": {
      "op": "NOT"
    },
    "17655": {
      "op": "DUP6"
    },
    "17656": {
      "op": "AND"
    },
    "17657": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17659": {
      "op": "DUP4"
    },
    "17660": {
      "op": "ADD"
    },
    "17661": {
      "op": "MSTORE"
    },
    "17662": {
      "op": "DUP4"
    },
    "17663": {
      "op": "AND"
    },
    "17664": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17666": {
      "op": "DUP3"
    },
    "17667": {
      "op": "ADD"
    },
    "17668": {
      "op": "MSTORE"
    },
    "17669": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17671": {
      "op": "DUP2"
    },
    "17672": {
      "op": "ADD"
    },
    "17673": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17675": {
      "op": "DUP4"
    },
    "17676": {
      "op": "LT"
    },
    "17677": {
      "op": "PUSH2",
      "value": "0x4526"
    },
    "17680": {
      "op": "JUMPI"
    },
    "17681": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17688": {
      "op": "SHL"
    },
    "17689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17691": {
      "op": "MSTORE"
    },
    "17692": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "17694": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17696": {
      "op": "MSTORE"
    },
    "17697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17701": {
      "op": "REVERT"
    },
    "17702": {
      "op": "JUMPDEST"
    },
    "17703": {
      "op": "DUP3"
    },
    "17704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17706": {
      "op": "DUP4"
    },
    "17707": {
      "op": "ADD"
    },
    "17708": {
      "op": "MSTORE"
    },
    "17709": {
      "op": "SWAP8"
    },
    "17710": {
      "op": "SWAP7"
    },
    "17711": {
      "op": "POP"
    },
    "17712": {
      "op": "POP"
    },
    "17713": {
      "op": "POP"
    },
    "17714": {
      "op": "POP"
    },
    "17715": {
      "op": "POP"
    },
    "17716": {
      "op": "POP"
    },
    "17717": {
      "op": "POP"
    },
    "17718": {
      "jump": "o",
      "op": "JUMP"
    },
    "17719": {
      "op": "JUMPDEST"
    },
    "17720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17722": {
      "op": "DUP2"
    },
    "17723": {
      "op": "MSTORE"
    },
    "17724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17726": {
      "op": "DUP3"
    },
    "17727": {
      "op": "MLOAD"
    },
    "17728": {
      "op": "DUP1"
    },
    "17729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17731": {
      "op": "DUP5"
    },
    "17732": {
      "op": "ADD"
    },
    "17733": {
      "op": "MSTORE"
    },
    "17734": {
      "op": "PUSH2",
      "value": "0x4556"
    },
    "17737": {
      "op": "DUP2"
    },
    "17738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17740": {
      "op": "DUP6"
    },
    "17741": {
      "op": "ADD"
    },
    "17742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17744": {
      "op": "DUP8"
    },
    "17745": {
      "op": "ADD"
    },
    "17746": {
      "op": "PUSH2",
      "value": "0x4881"
    },
    "17749": {
      "jump": "i",
      "op": "JUMP"
    },
    "17750": {
      "op": "JUMPDEST"
    },
    "17751": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17753": {
      "op": "ADD"
    },
    "17754": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17756": {
      "op": "NOT"
    },
    "17757": {
      "op": "AND"
    },
    "17758": {
      "op": "SWAP2"
    },
    "17759": {
      "op": "SWAP1"
    },
    "17760": {
      "op": "SWAP2"
    },
    "17761": {
      "op": "ADD"
    },
    "17762": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17764": {
      "op": "ADD"
    },
    "17765": {
      "op": "SWAP3"
    },
    "17766": {
      "op": "SWAP2"
    },
    "17767": {
      "op": "POP"
    },
    "17768": {
      "op": "POP"
    },
    "17769": {
      "jump": "o",
      "op": "JUMP"
    },
    "17770": {
      "op": "JUMPDEST"
    },
    "17771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17773": {
      "op": "DUP1"
    },
    "17774": {
      "op": "DUP3"
    },
    "17775": {
      "op": "MSTORE"
    },
    "17776": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "17778": {
      "op": "SWAP1"
    },
    "17779": {
      "op": "DUP3"
    },
    "17780": {
      "op": "ADD"
    },
    "17781": {
      "op": "MSTORE"
    },
    "17782": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A696E76616C6964206E6674207374616E646172640000000000"
    },
    "17815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17817": {
      "op": "DUP3"
    },
    "17818": {
      "op": "ADD"
    },
    "17819": {
      "op": "MSTORE"
    },
    "17820": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17822": {
      "op": "ADD"
    },
    "17823": {
      "op": "SWAP1"
    },
    "17824": {
      "jump": "o",
      "op": "JUMP"
    },
    "17825": {
      "op": "JUMPDEST"
    },
    "17826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17828": {
      "op": "DUP1"
    },
    "17829": {
      "op": "DUP3"
    },
    "17830": {
      "op": "MSTORE"
    },
    "17831": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "17833": {
      "op": "SWAP1"
    },
    "17834": {
      "op": "DUP3"
    },
    "17835": {
      "op": "ADD"
    },
    "17836": {
      "op": "MSTORE"
    },
    "17837": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A6475726174696F6E206973207A65726F000000000000000000"
    },
    "17870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17872": {
      "op": "DUP3"
    },
    "17873": {
      "op": "ADD"
    },
    "17874": {
      "op": "MSTORE"
    },
    "17875": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17877": {
      "op": "ADD"
    },
    "17878": {
      "op": "SWAP1"
    },
    "17879": {
      "jump": "o",
      "op": "JUMP"
    },
    "17880": {
      "op": "JUMPDEST"
    },
    "17881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17883": {
      "op": "DUP1"
    },
    "17884": {
      "op": "DUP3"
    },
    "17885": {
      "op": "MSTORE"
    },
    "17886": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "17888": {
      "op": "SWAP1"
    },
    "17889": {
      "op": "DUP3"
    },
    "17890": {
      "op": "ADD"
    },
    "17891": {
      "op": "MSTORE"
    },
    "17892": {
      "op": "PUSH32",
      "value": "0x52654E46543A3A72656E74207072696365206973207A65726F00000000000000"
    },
    "17925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17927": {
      "op": "DUP3"
    },
    "17928": {
      "op": "ADD"
    },
    "17929": {
      "op": "MSTORE"
    },
    "17930": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17932": {
      "op": "ADD"
    },
    "17933": {
      "op": "SWAP1"
    },
    "17934": {
      "jump": "o",
      "op": "JUMP"
    },
    "17935": {
      "op": "JUMPDEST"
    },
    "17936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17938": {
      "op": "DUP1"
    },
    "17939": {
      "op": "DUP3"
    },
    "17940": {
      "op": "MSTORE"
    },
    "17941": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "17943": {
      "op": "SWAP1"
    },
    "17944": {
      "op": "DUP3"
    },
    "17945": {
      "op": "ADD"
    },
    "17946": {
      "op": "MSTORE"
    },
    "17947": {
      "op": "PUSH16",
      "value": "0xA4CA9C8CA87474DCDEE840EAD2DCE87"
    },
    "17964": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "17966": {
      "op": "SHL"
    },
    "17967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17969": {
      "op": "DUP3"
    },
    "17970": {
      "op": "ADD"
    },
    "17971": {
      "op": "MSTORE"
    },
    "17972": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17974": {
      "op": "ADD"
    },
    "17975": {
      "op": "SWAP1"
    },
    "17976": {
      "jump": "o",
      "op": "JUMP"
    },
    "17977": {
      "op": "JUMPDEST"
    },
    "17978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17980": {
      "op": "DUP1"
    },
    "17981": {
      "op": "DUP3"
    },
    "17982": {
      "op": "MSTORE"
    },
    "17983": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "17985": {
      "op": "SWAP1"
    },
    "17986": {
      "op": "DUP3"
    },
    "17987": {
      "op": "ADD"
    },
    "17988": {
      "op": "MSTORE"
    },
    "17989": {
      "op": "PUSH13",
      "value": "0x14995391950E8E9C185D5CD959"
    },
    "18003": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "18005": {
      "op": "SHL"
    },
    "18006": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18008": {
      "op": "DUP3"
    },
    "18009": {
      "op": "ADD"
    },
    "18010": {
      "op": "MSTORE"
    },
    "18011": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18013": {
      "op": "ADD"
    },
    "18014": {
      "op": "SWAP1"
    },
    "18015": {
      "jump": "o",
      "op": "JUMP"
    },
    "18016": {
      "op": "JUMPDEST"
    },
    "18017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18019": {
      "op": "DUP1"
    },
    "18020": {
      "op": "DUP3"
    },
    "18021": {
      "op": "MSTORE"
    },
    "18022": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "18024": {
      "op": "SWAP1"
    },
    "18025": {
      "op": "DUP3"
    },
    "18026": {
      "op": "ADD"
    },
    "18027": {
      "op": "MSTORE"
    },
    "18028": {
      "op": "PUSH16",
      "value": "0x2932A7232A1D1D3737BA1030B236B4B7"
    },
    "18045": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "18047": {
      "op": "SHL"
    },
    "18048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18050": {
      "op": "DUP3"
    },
    "18051": {
      "op": "ADD"
    },
    "18052": {
      "op": "MSTORE"
    },
    "18053": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18055": {
      "op": "ADD"
    },
    "18056": {
      "op": "SWAP1"
    },
    "18057": {
      "jump": "o",
      "op": "JUMP"
    },
    "18058": {
      "op": "JUMPDEST"
    },
    "18059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18061": {
      "op": "MLOAD"
    },
    "18062": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18064": {
      "op": "DUP3"
    },
    "18065": {
      "op": "ADD"
    },
    "18066": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18068": {
      "op": "NOT"
    },
    "18069": {
      "op": "AND"
    },
    "18070": {
      "op": "DUP2"
    },
    "18071": {
      "op": "ADD"
    },
    "18072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18076": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18078": {
      "op": "SHL"
    },
    "18079": {
      "op": "SUB"
    },
    "18080": {
      "op": "DUP2"
    },
    "18081": {
      "op": "GT"
    },
    "18082": {
      "op": "DUP3"
    },
    "18083": {
      "op": "DUP3"
    },
    "18084": {
      "op": "LT"
    },
    "18085": {
      "op": "OR"
    },
    "18086": {
      "op": "ISZERO"
    },
    "18087": {
      "op": "PUSH2",
      "value": "0x46B2"
    },
    "18090": {
      "op": "JUMPI"
    },
    "18091": {
      "op": "PUSH2",
      "value": "0x46B2"
    },
    "18094": {
      "op": "PUSH2",
      "value": "0x490A"
    },
    "18097": {
      "jump": "i",
      "op": "JUMP"
    },
    "18098": {
      "op": "JUMPDEST"
    },
    "18099": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18101": {
      "op": "MSTORE"
    },
    "18102": {
      "op": "SWAP2"
    },
    "18103": {
      "op": "SWAP1"
    },
    "18104": {
      "op": "POP"
    },
    "18105": {
      "jump": "o",
      "op": "JUMP"
    },
    "18106": {
      "op": "JUMPDEST"
    },
    "18107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18113": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18115": {
      "op": "SHL"
    },
    "18116": {
      "op": "SUB"
    },
    "18117": {
      "op": "DUP3"
    },
    "18118": {
      "op": "GT"
    },
    "18119": {
      "op": "ISZERO"
    },
    "18120": {
      "op": "PUSH2",
      "value": "0x46D3"
    },
    "18123": {
      "op": "JUMPI"
    },
    "18124": {
      "op": "PUSH2",
      "value": "0x46D3"
    },
    "18127": {
      "op": "PUSH2",
      "value": "0x490A"
    },
    "18130": {
      "jump": "i",
      "op": "JUMP"
    },
    "18131": {
      "op": "JUMPDEST"
    },
    "18132": {
      "op": "POP"
    },
    "18133": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18135": {
      "op": "SHL"
    },
    "18136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18138": {
      "op": "ADD"
    },
    "18139": {
      "op": "SWAP1"
    },
    "18140": {
      "jump": "o",
      "op": "JUMP"
    },
    "18141": {
      "op": "JUMPDEST"
    },
    "18142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18144": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18147": {
      "op": "DUP1"
    },
    "18148": {
      "op": "DUP4"
    },
    "18149": {
      "op": "AND"
    },
    "18150": {
      "op": "DUP2"
    },
    "18151": {
      "op": "DUP6"
    },
    "18152": {
      "op": "AND"
    },
    "18153": {
      "op": "DUP1"
    },
    "18154": {
      "op": "DUP4"
    },
    "18155": {
      "op": "SUB"
    },
    "18156": {
      "op": "DUP3"
    },
    "18157": {
      "op": "GT"
    },
    "18158": {
      "op": "ISZERO"
    },
    "18159": {
      "op": "PUSH2",
      "value": "0x46FA"
    },
    "18162": {
      "op": "JUMPI"
    },
    "18163": {
      "op": "PUSH2",
      "value": "0x46FA"
    },
    "18166": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18169": {
      "jump": "i",
      "op": "JUMP"
    },
    "18170": {
      "op": "JUMPDEST"
    },
    "18171": {
      "op": "ADD"
    },
    "18172": {
      "op": "SWAP5"
    },
    "18173": {
      "op": "SWAP4"
    },
    "18174": {
      "op": "POP"
    },
    "18175": {
      "op": "POP"
    },
    "18176": {
      "op": "POP"
    },
    "18177": {
      "op": "POP"
    },
    "18178": {
      "jump": "o",
      "op": "JUMP"
    },
    "18179": {
      "op": "JUMPDEST"
    },
    "18180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18182": {
      "op": "DUP3"
    },
    "18183": {
      "op": "NOT"
    },
    "18184": {
      "op": "DUP3"
    },
    "18185": {
      "op": "GT"
    },
    "18186": {
      "op": "ISZERO"
    },
    "18187": {
      "op": "PUSH2",
      "value": "0x4716"
    },
    "18190": {
      "op": "JUMPI"
    },
    "18191": {
      "op": "PUSH2",
      "value": "0x4716"
    },
    "18194": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18197": {
      "jump": "i",
      "op": "JUMP"
    },
    "18198": {
      "op": "JUMPDEST"
    },
    "18199": {
      "op": "POP"
    },
    "18200": {
      "op": "ADD"
    },
    "18201": {
      "op": "SWAP1"
    },
    "18202": {
      "jump": "o",
      "op": "JUMP"
    },
    "18203": {
      "op": "JUMPDEST"
    },
    "18204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18206": {
      "op": "DUP3"
    },
    "18207": {
      "op": "PUSH2",
      "value": "0x4738"
    },
    "18210": {
      "op": "JUMPI"
    },
    "18211": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18218": {
      "op": "SHL"
    },
    "18219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18221": {
      "op": "MSTORE"
    },
    "18222": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "18224": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18226": {
      "op": "MSTORE"
    },
    "18227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18231": {
      "op": "REVERT"
    },
    "18232": {
      "op": "JUMPDEST"
    },
    "18233": {
      "op": "POP"
    },
    "18234": {
      "op": "DIV"
    },
    "18235": {
      "op": "SWAP1"
    },
    "18236": {
      "jump": "o",
      "op": "JUMP"
    },
    "18237": {
      "op": "JUMPDEST"
    },
    "18238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18240": {
      "op": "DUP2"
    },
    "18241": {
      "op": "DUP2"
    },
    "18242": {
      "op": "JUMPDEST"
    },
    "18243": {
      "op": "DUP1"
    },
    "18244": {
      "op": "DUP6"
    },
    "18245": {
      "op": "GT"
    },
    "18246": {
      "op": "ISZERO"
    },
    "18247": {
      "op": "PUSH2",
      "value": "0x4778"
    },
    "18250": {
      "op": "JUMPI"
    },
    "18251": {
      "op": "DUP2"
    },
    "18252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18254": {
      "op": "NOT"
    },
    "18255": {
      "op": "DIV"
    },
    "18256": {
      "op": "DUP3"
    },
    "18257": {
      "op": "GT"
    },
    "18258": {
      "op": "ISZERO"
    },
    "18259": {
      "op": "PUSH2",
      "value": "0x475E"
    },
    "18262": {
      "op": "JUMPI"
    },
    "18263": {
      "op": "PUSH2",
      "value": "0x475E"
    },
    "18266": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18269": {
      "jump": "i",
      "op": "JUMP"
    },
    "18270": {
      "op": "JUMPDEST"
    },
    "18271": {
      "op": "DUP1"
    },
    "18272": {
      "op": "DUP6"
    },
    "18273": {
      "op": "AND"
    },
    "18274": {
      "op": "ISZERO"
    },
    "18275": {
      "op": "PUSH2",
      "value": "0x476B"
    },
    "18278": {
      "op": "JUMPI"
    },
    "18279": {
      "op": "SWAP2"
    },
    "18280": {
      "op": "DUP2"
    },
    "18281": {
      "op": "MUL"
    },
    "18282": {
      "op": "SWAP2"
    },
    "18283": {
      "op": "JUMPDEST"
    },
    "18284": {
      "op": "SWAP4"
    },
    "18285": {
      "op": "DUP5"
    },
    "18286": {
      "op": "SHR"
    },
    "18287": {
      "op": "SWAP4"
    },
    "18288": {
      "op": "SWAP1"
    },
    "18289": {
      "op": "DUP1"
    },
    "18290": {
      "op": "MUL"
    },
    "18291": {
      "op": "SWAP1"
    },
    "18292": {
      "op": "PUSH2",
      "value": "0x4742"
    },
    "18295": {
      "op": "JUMP"
    },
    "18296": {
      "op": "JUMPDEST"
    },
    "18297": {
      "op": "POP"
    },
    "18298": {
      "op": "SWAP3"
    },
    "18299": {
      "op": "POP"
    },
    "18300": {
      "op": "SWAP3"
    },
    "18301": {
      "op": "SWAP1"
    },
    "18302": {
      "op": "POP"
    },
    "18303": {
      "jump": "o",
      "op": "JUMP"
    },
    "18304": {
      "op": "JUMPDEST"
    },
    "18305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18307": {
      "op": "PUSH2",
      "value": "0x3920"
    },
    "18310": {
      "op": "DUP4"
    },
    "18311": {
      "op": "DUP4"
    },
    "18312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18314": {
      "op": "DUP3"
    },
    "18315": {
      "op": "PUSH2",
      "value": "0x4796"
    },
    "18318": {
      "op": "JUMPI"
    },
    "18319": {
      "op": "POP"
    },
    "18320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18322": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18325": {
      "op": "JUMP"
    },
    "18326": {
      "op": "JUMPDEST"
    },
    "18327": {
      "op": "DUP2"
    },
    "18328": {
      "op": "PUSH2",
      "value": "0x47A3"
    },
    "18331": {
      "op": "JUMPI"
    },
    "18332": {
      "op": "POP"
    },
    "18333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18335": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18338": {
      "op": "JUMP"
    },
    "18339": {
      "op": "JUMPDEST"
    },
    "18340": {
      "op": "DUP2"
    },
    "18341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18343": {
      "op": "DUP2"
    },
    "18344": {
      "op": "EQ"
    },
    "18345": {
      "op": "PUSH2",
      "value": "0x47B9"
    },
    "18348": {
      "op": "JUMPI"
    },
    "18349": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "18351": {
      "op": "DUP2"
    },
    "18352": {
      "op": "EQ"
    },
    "18353": {
      "op": "PUSH2",
      "value": "0x47C3"
    },
    "18356": {
      "op": "JUMPI"
    },
    "18357": {
      "op": "PUSH2",
      "value": "0x47DF"
    },
    "18360": {
      "op": "JUMP"
    },
    "18361": {
      "op": "JUMPDEST"
    },
    "18362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18364": {
      "op": "SWAP2"
    },
    "18365": {
      "op": "POP"
    },
    "18366": {
      "op": "POP"
    },
    "18367": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18370": {
      "op": "JUMP"
    },
    "18371": {
      "op": "JUMPDEST"
    },
    "18372": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18374": {
      "op": "DUP5"
    },
    "18375": {
      "op": "GT"
    },
    "18376": {
      "op": "ISZERO"
    },
    "18377": {
      "op": "PUSH2",
      "value": "0x47D4"
    },
    "18380": {
      "op": "JUMPI"
    },
    "18381": {
      "op": "PUSH2",
      "value": "0x47D4"
    },
    "18384": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18387": {
      "jump": "i",
      "op": "JUMP"
    },
    "18388": {
      "op": "JUMPDEST"
    },
    "18389": {
      "op": "POP"
    },
    "18390": {
      "op": "POP"
    },
    "18391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18393": {
      "op": "DUP3"
    },
    "18394": {
      "op": "SHL"
    },
    "18395": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18398": {
      "op": "JUMP"
    },
    "18399": {
      "op": "JUMPDEST"
    },
    "18400": {
      "op": "POP"
    },
    "18401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18403": {
      "op": "DUP4"
    },
    "18404": {
      "op": "LT"
    },
    "18405": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "18408": {
      "op": "DUP4"
    },
    "18409": {
      "op": "LT"
    },
    "18410": {
      "op": "AND"
    },
    "18411": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "18413": {
      "op": "DUP5"
    },
    "18414": {
      "op": "LT"
    },
    "18415": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "18417": {
      "op": "DUP5"
    },
    "18418": {
      "op": "LT"
    },
    "18419": {
      "op": "AND"
    },
    "18420": {
      "op": "OR"
    },
    "18421": {
      "op": "ISZERO"
    },
    "18422": {
      "op": "PUSH2",
      "value": "0x4802"
    },
    "18425": {
      "op": "JUMPI"
    },
    "18426": {
      "op": "POP"
    },
    "18427": {
      "op": "DUP2"
    },
    "18428": {
      "op": "DUP2"
    },
    "18429": {
      "op": "EXP"
    },
    "18430": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "18433": {
      "op": "JUMP"
    },
    "18434": {
      "op": "JUMPDEST"
    },
    "18435": {
      "op": "PUSH2",
      "value": "0x480C"
    },
    "18438": {
      "op": "DUP4"
    },
    "18439": {
      "op": "DUP4"
    },
    "18440": {
      "op": "PUSH2",
      "value": "0x473D"
    },
    "18443": {
      "jump": "i",
      "op": "JUMP"
    },
    "18444": {
      "op": "JUMPDEST"
    },
    "18445": {
      "op": "DUP1"
    },
    "18446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18448": {
      "op": "NOT"
    },
    "18449": {
      "op": "DIV"
    },
    "18450": {
      "op": "DUP3"
    },
    "18451": {
      "op": "GT"
    },
    "18452": {
      "op": "ISZERO"
    },
    "18453": {
      "op": "PUSH2",
      "value": "0x4820"
    },
    "18456": {
      "op": "JUMPI"
    },
    "18457": {
      "op": "PUSH2",
      "value": "0x4820"
    },
    "18460": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18463": {
      "jump": "i",
      "op": "JUMP"
    },
    "18464": {
      "op": "JUMPDEST"
    },
    "18465": {
      "op": "MUL"
    },
    "18466": {
      "op": "SWAP4"
    },
    "18467": {
      "op": "SWAP3"
    },
    "18468": {
      "op": "POP"
    },
    "18469": {
      "op": "POP"
    },
    "18470": {
      "op": "POP"
    },
    "18471": {
      "jump": "o",
      "op": "JUMP"
    },
    "18472": {
      "op": "JUMPDEST"
    },
    "18473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18475": {
      "op": "DUP2"
    },
    "18476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18478": {
      "op": "NOT"
    },
    "18479": {
      "op": "DIV"
    },
    "18480": {
      "op": "DUP4"
    },
    "18481": {
      "op": "GT"
    },
    "18482": {
      "op": "DUP3"
    },
    "18483": {
      "op": "ISZERO"
    },
    "18484": {
      "op": "ISZERO"
    },
    "18485": {
      "op": "AND"
    },
    "18486": {
      "op": "ISZERO"
    },
    "18487": {
      "op": "PUSH2",
      "value": "0x4842"
    },
    "18490": {
      "op": "JUMPI"
    },
    "18491": {
      "op": "PUSH2",
      "value": "0x4842"
    },
    "18494": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18497": {
      "jump": "i",
      "op": "JUMP"
    },
    "18498": {
      "op": "JUMPDEST"
    },
    "18499": {
      "op": "POP"
    },
    "18500": {
      "op": "MUL"
    },
    "18501": {
      "op": "SWAP1"
    },
    "18502": {
      "jump": "o",
      "op": "JUMP"
    },
    "18503": {
      "op": "JUMPDEST"
    },
    "18504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18506": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "18509": {
      "op": "DUP4"
    },
    "18510": {
      "op": "DUP2"
    },
    "18511": {
      "op": "AND"
    },
    "18512": {
      "op": "SWAP1"
    },
    "18513": {
      "op": "DUP4"
    },
    "18514": {
      "op": "AND"
    },
    "18515": {
      "op": "DUP2"
    },
    "18516": {
      "op": "DUP2"
    },
    "18517": {
      "op": "LT"
    },
    "18518": {
      "op": "ISZERO"
    },
    "18519": {
      "op": "PUSH2",
      "value": "0x4862"
    },
    "18522": {
      "op": "JUMPI"
    },
    "18523": {
      "op": "PUSH2",
      "value": "0x4862"
    },
    "18526": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18529": {
      "jump": "i",
      "op": "JUMP"
    },
    "18530": {
      "op": "JUMPDEST"
    },
    "18531": {
      "op": "SUB"
    },
    "18532": {
      "op": "SWAP4"
    },
    "18533": {
      "op": "SWAP3"
    },
    "18534": {
      "op": "POP"
    },
    "18535": {
      "op": "POP"
    },
    "18536": {
      "op": "POP"
    },
    "18537": {
      "jump": "o",
      "op": "JUMP"
    },
    "18538": {
      "op": "JUMPDEST"
    },
    "18539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18541": {
      "op": "DUP3"
    },
    "18542": {
      "op": "DUP3"
    },
    "18543": {
      "op": "LT"
    },
    "18544": {
      "op": "ISZERO"
    },
    "18545": {
      "op": "PUSH2",
      "value": "0x487C"
    },
    "18548": {
      "op": "JUMPI"
    },
    "18549": {
      "op": "PUSH2",
      "value": "0x487C"
    },
    "18552": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18555": {
      "jump": "i",
      "op": "JUMP"
    },
    "18556": {
      "op": "JUMPDEST"
    },
    "18557": {
      "op": "POP"
    },
    "18558": {
      "op": "SUB"
    },
    "18559": {
      "op": "SWAP1"
    },
    "18560": {
      "jump": "o",
      "op": "JUMP"
    },
    "18561": {
      "op": "JUMPDEST"
    },
    "18562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18564": {
      "op": "JUMPDEST"
    },
    "18565": {
      "op": "DUP4"
    },
    "18566": {
      "op": "DUP2"
    },
    "18567": {
      "op": "LT"
    },
    "18568": {
      "op": "ISZERO"
    },
    "18569": {
      "op": "PUSH2",
      "value": "0x489C"
    },
    "18572": {
      "op": "JUMPI"
    },
    "18573": {
      "op": "DUP2"
    },
    "18574": {
      "op": "DUP2"
    },
    "18575": {
      "op": "ADD"
    },
    "18576": {
      "op": "MLOAD"
    },
    "18577": {
      "op": "DUP4"
    },
    "18578": {
      "op": "DUP3"
    },
    "18579": {
      "op": "ADD"
    },
    "18580": {
      "op": "MSTORE"
    },
    "18581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18583": {
      "op": "ADD"
    },
    "18584": {
      "op": "PUSH2",
      "value": "0x4884"
    },
    "18587": {
      "op": "JUMP"
    },
    "18588": {
      "op": "JUMPDEST"
    },
    "18589": {
      "op": "DUP4"
    },
    "18590": {
      "op": "DUP2"
    },
    "18591": {
      "op": "GT"
    },
    "18592": {
      "op": "ISZERO"
    },
    "18593": {
      "op": "PUSH2",
      "value": "0x708"
    },
    "18596": {
      "op": "JUMPI"
    },
    "18597": {
      "op": "POP"
    },
    "18598": {
      "op": "POP"
    },
    "18599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18601": {
      "op": "SWAP2"
    },
    "18602": {
      "op": "ADD"
    },
    "18603": {
      "op": "MSTORE"
    },
    "18604": {
      "jump": "o",
      "op": "JUMP"
    },
    "18605": {
      "op": "JUMPDEST"
    },
    "18606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18610": {
      "op": "NOT"
    },
    "18611": {
      "op": "DUP3"
    },
    "18612": {
      "op": "EQ"
    },
    "18613": {
      "op": "ISZERO"
    },
    "18614": {
      "op": "PUSH2",
      "value": "0x48C1"
    },
    "18617": {
      "op": "JUMPI"
    },
    "18618": {
      "op": "PUSH2",
      "value": "0x48C1"
    },
    "18621": {
      "op": "PUSH2",
      "value": "0x48C8"
    },
    "18624": {
      "jump": "i",
      "op": "JUMP"
    },
    "18625": {
      "op": "JUMPDEST"
    },
    "18626": {
      "op": "POP"
    },
    "18627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18629": {
      "op": "ADD"
    },
    "18630": {
      "op": "SWAP1"
    },
    "18631": {
      "jump": "o",
      "op": "JUMP"
    },
    "18632": {
      "op": "JUMPDEST"
    },
    "18633": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18640": {
      "op": "SHL"
    },
    "18641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18643": {
      "op": "MSTORE"
    },
    "18644": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "18646": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18648": {
      "op": "MSTORE"
    },
    "18649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18653": {
      "op": "REVERT"
    },
    "18654": {
      "op": "JUMPDEST"
    },
    "18655": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18662": {
      "op": "SHL"
    },
    "18663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18665": {
      "op": "MSTORE"
    },
    "18666": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "18668": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18670": {
      "op": "MSTORE"
    },
    "18671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18675": {
      "op": "REVERT"
    },
    "18676": {
      "op": "JUMPDEST"
    },
    "18677": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18684": {
      "op": "SHL"
    },
    "18685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18687": {
      "op": "MSTORE"
    },
    "18688": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "18690": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18692": {
      "op": "MSTORE"
    },
    "18693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18697": {
      "op": "REVERT"
    },
    "18698": {
      "op": "JUMPDEST"
    },
    "18699": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "18704": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18706": {
      "op": "SHL"
    },
    "18707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18709": {
      "op": "MSTORE"
    },
    "18710": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "18712": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "18714": {
      "op": "MSTORE"
    },
    "18715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "18717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18719": {
      "op": "REVERT"
    },
    "18720": {
      "op": "JUMPDEST"
    },
    "18721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18727": {
      "op": "SHL"
    },
    "18728": {
      "op": "SUB"
    },
    "18729": {
      "op": "DUP2"
    },
    "18730": {
      "op": "AND"
    },
    "18731": {
      "op": "DUP2"
    },
    "18732": {
      "op": "EQ"
    },
    "18733": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "18736": {
      "op": "JUMPI"
    },
    "18737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18739": {
      "op": "DUP1"
    },
    "18740": {
      "op": "REVERT"
    },
    "18741": {
      "op": "JUMPDEST"
    },
    "18742": {
      "op": "DUP1"
    },
    "18743": {
      "op": "ISZERO"
    },
    "18744": {
      "op": "ISZERO"
    },
    "18745": {
      "op": "DUP2"
    },
    "18746": {
      "op": "EQ"
    },
    "18747": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "18750": {
      "op": "JUMPI"
    },
    "18751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18753": {
      "op": "DUP1"
    },
    "18754": {
      "op": "REVERT"
    },
    "18755": {
      "op": "JUMPDEST"
    },
    "18756": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "18758": {
      "op": "DUP2"
    },
    "18759": {
      "op": "AND"
    },
    "18760": {
      "op": "DUP2"
    },
    "18761": {
      "op": "EQ"
    },
    "18762": {
      "op": "PUSH2",
      "value": "0x1575"
    },
    "18765": {
      "op": "JUMPI"
    },
    "18766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18768": {
      "op": "DUP1"
    },
    "18769": {
      "op": "REVERT"
    }
  },
  "sha1": "a7f7a15d2f49bbbc5068315d13394ede9591cdf6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.7;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/IERC721.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\n\nimport \"./interfaces/IRegistry.sol\";\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n\ncontract Registry is IRegistry, ERC721Holder, ERC1155Receiver, ERC1155Holder {\n    using SafeERC20 for ERC20;\n\n    IResolver private resolver;\n    address private admin;\n    address payable private beneficiary;\n    uint256 private lendingID = 1;\n    uint256 private rentingID = 1;\n    bool public paused = false;\n    uint256 public rentFee = 0;\n    uint256 private constant SECONDS_IN_DAY = 86400;\n    mapping(bytes32 => Lending) private lendings;\n    mapping(bytes32 => Renting) private rentings;\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"ReNFT::not admin\");\n        _;\n    }\n\n    modifier notPaused() {\n        require(!paused, \"ReNFT::paused\");\n        _;\n    }\n\n    constructor(\n        address newResolver,\n        address payable newBeneficiary,\n        address newAdmin\n    ) {\n        ensureIsNotZeroAddr(newResolver);\n        ensureIsNotZeroAddr(newBeneficiary);\n        ensureIsNotZeroAddr(newAdmin);\n        resolver = IResolver(newResolver);\n        beneficiary = newBeneficiary;\n        admin = newAdmin;\n    }\n\n    function lend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        IResolver.PaymentToken[] memory paymentToken\n    ) external override notPaused {\n        bundleCall(\n            handleLend,\n            createLendCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                lendAmount,\n                maxRentDuration,\n                dailyRentPrice,\n                paymentToken\n            )\n        );\n    }\n\n    function stopLend(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID\n    ) external override notPaused {\n        bundleCall(\n            handleStopLend,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                new uint256[](0)\n            )\n        );\n    }\n\n    function rent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) external payable override notPaused {\n        bundleCall(\n            handleRent,\n            createRentCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                rentDuration,\n                rentAmount\n            )\n        );\n    }\n\n    function stopRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(\n            handleStopRent,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                _rentingID\n            )\n        );\n    }\n\n    function claimRent(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) external override notPaused {\n        bundleCall(\n            handleClaimRent,\n            createActionCallData(\n                nftStandard,\n                nftAddress,\n                tokenID,\n                _lendingID,\n                _rentingID\n            )\n        );\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function handleLend(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            ensureIsLendable(cd, i);\n            bytes32 identifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    lendingID\n                )\n            );\n            IRegistry.Lending storage lending = lendings[identifier];\n            ensureIsNull(lending);\n            ensureTokenNotSentinel(uint8(cd.paymentToken[i]));\n            bool is721 = cd.nftStandard[i] == IRegistry.NFTStandard.E721;\n            lendings[identifier] = IRegistry.Lending({\n                nftStandard: cd.nftStandard[i],\n                lenderAddress: payable(msg.sender),\n                maxRentDuration: cd.maxRentDuration[i],\n                dailyRentPrice: cd.dailyRentPrice[i],\n                lendAmount: is721 ? 1 : uint8(cd.lendAmount[i]),\n                availableAmount: is721 ? 1 : uint8(cd.lendAmount[i]),\n                paymentToken: cd.paymentToken[i]\n            });\n            emit IRegistry.Lend(\n                is721,\n                msg.sender,\n                cd.nftAddress[cd.left],\n                cd.tokenID[i],\n                lendingID,\n                cd.maxRentDuration[i],\n                cd.dailyRentPrice[i],\n                is721 ? 1 : uint8(cd.lendAmount[i]),\n                cd.paymentToken[i]\n            );\n            lendingID++;\n        }\n        safeTransfer(\n            cd,\n            msg.sender,\n            address(this),\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(cd.lendAmount, cd.left, cd.right, 0)\n        );\n    }\n\n    function handleStopLend(IRegistry.CallData memory cd) private {\n        uint256[] memory lentAmounts = new uint256[](cd.right - cd.left);\n        IRegistry.NFTStandard nftStandard = IRegistry.NFTStandard.E721;\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            Lending storage lending = lendings[lendingIdentifier];\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            // the condition below ensures there are no rentings tied up to this lending\n            require(\n                lending.lendAmount == lending.availableAmount,\n                \"ReNFT::actively rented\"\n            );\n            ensureIsNotNull(lending);\n            ensureIsStoppable(lending, msg.sender);\n            lentAmounts[i - cd.left] = lending.lendAmount;\n            nftStandard = lending.nftStandard;\n            emit IRegistry.StopLend(cd.lendingID[i], uint32(block.timestamp));\n            delete lendings[lendingIdentifier];\n        }\n        safeTransfer(\n            cd,\n            address(this),\n            msg.sender,\n            sliceArr(cd.tokenID, cd.left, cd.right, 0),\n            sliceArr(lentAmounts, cd.left, cd.right, cd.left)\n        );\n    }\n\n    function handleRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    rentingID\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNull(renting);\n            ensureIsRentable(lending, cd, i, msg.sender);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                cd.rentAmount[i] <= lending.availableAmount,\n                \"ReNFT::invalid rent amount\"\n            );\n            uint8 paymentTokenIx = uint8(lending.paymentToken);\n            address paymentToken = resolver.getPaymentToken(paymentTokenIx);\n            uint256 decimals = ERC20(paymentToken).decimals();\n            {\n                uint256 scale = 10**decimals;\n                uint256 rentPrice = cd.rentDuration[i] *\n                    unpackPrice(lending.dailyRentPrice, scale);\n                require(rentPrice > 0, \"ReNFT::rent price is zero\");\n                ERC20(paymentToken).safeTransferFrom(\n                    msg.sender,\n                    address(this),\n                    rentPrice\n                );\n            }\n            rentings[rentingIdentifier] = IRegistry.Renting({\n                renterAddress: payable(msg.sender),\n                rentAmount: uint8(cd.rentAmount[i]),\n                rentDuration: cd.rentDuration[i],\n                rentedAt: uint32(block.timestamp)\n            });\n            lendings[lendingIdentifier].availableAmount -= uint8(\n                cd.rentAmount[i]\n            );\n            emit IRegistry.Rent(\n                msg.sender,\n                cd.lendingID[i],\n                rentingID,\n                uint8(cd.rentAmount[i]),\n                cd.rentDuration[i],\n                renting.rentedAt\n            );\n            rentingID++;\n        }\n    }\n\n    function handleStopRent(IRegistry.CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.rentingID[i]\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsReturnable(renting, msg.sender, block.timestamp);\n            require(\n                cd.nftStandard[i] == lending.nftStandard,\n                \"ReNFT::invalid nft standard\"\n            );\n            require(\n                renting.rentAmount <= lending.lendAmount,\n                \"ReNFT::critical error\"\n            );\n            uint256 secondsSinceRentStart = block.timestamp - renting.rentedAt;\n            distributePayments(lending, renting, secondsSinceRentStart);\n            lendings[lendingIdentifier].availableAmount += renting.rentAmount;\n            emit IRegistry.StopRent(cd.lendingID[i], uint32(block.timestamp));\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    function handleClaimRent(CallData memory cd) private {\n        for (uint256 i = cd.left; i < cd.right; i++) {\n            bytes32 lendingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.lendingID[i]\n                )\n            );\n            bytes32 rentingIdentifier = keccak256(\n                abi.encodePacked(\n                    cd.nftAddress[cd.left],\n                    cd.tokenID[i],\n                    cd.rentingID[i]\n                )\n            );\n            IRegistry.Lending storage lending = lendings[lendingIdentifier];\n            IRegistry.Renting storage renting = rentings[rentingIdentifier];\n            ensureIsNotNull(lending);\n            ensureIsNotNull(renting);\n            ensureIsClaimable(renting, block.timestamp);\n            distributeClaimPayment(lending, renting);\n            emit IRegistry.RentClaimed(\n                cd.lendingID[i],\n                uint32(block.timestamp)\n            );\n            lending.availableAmount =\n                lending.availableAmount +\n                renting.rentAmount;\n            delete rentings[rentingIdentifier];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function bundleCall(\n        function(IRegistry.CallData memory) handler,\n        IRegistry.CallData memory cd\n    ) private {\n        require(cd.nftAddress.length > 0, \"ReNFT::no nfts\");\n        while (cd.right != cd.nftAddress.length) {\n            if (\n                (cd.nftAddress[cd.left] == cd.nftAddress[cd.right]) &&\n                (cd.nftStandard[cd.right] == IRegistry.NFTStandard.E1155)\n            ) {\n                cd.right++;\n            } else {\n                handler(cd);\n                cd.left = cd.right;\n                cd.right++;\n            }\n        }\n        handler(cd);\n    }\n\n    function takeFee(uint256 rentAmt, IResolver.PaymentToken paymentToken)\n        private\n        returns (uint256 fee)\n    {\n        fee = rentAmt * rentFee;\n        fee /= 10000;\n        uint8 paymentTokenIx = uint8(paymentToken);\n        ERC20 pmtToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        pmtToken.safeTransfer(beneficiary, fee);\n    }\n\n    function distributePayments(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting,\n        uint256 secondsSinceRentStart\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        address pmtToken = resolver.getPaymentToken(paymentTokenIx);\n        uint256 decimals = ERC20(pmtToken).decimals();\n        uint256 scale = 10**decimals;\n        uint256 rentPrice = unpackPrice(lending.dailyRentPrice, scale);\n        uint256 totalRenterPmt = rentPrice * renting.rentDuration;\n        uint256 sendLenderAmt = (secondsSinceRentStart * rentPrice) /\n            SECONDS_IN_DAY;\n        require(totalRenterPmt > 0, \"ReNFT::total renter payment is zero\");\n        require(sendLenderAmt > 0, \"ReNFT::lender payment is zero\");\n        uint256 sendRenterAmt = totalRenterPmt - sendLenderAmt;\n        if (rentFee != 0) {\n            uint256 takenFee = takeFee(sendLenderAmt, lending.paymentToken);\n            sendLenderAmt -= takenFee;\n        }\n        ERC20(pmtToken).safeTransfer(lending.lenderAddress, sendLenderAmt);\n        if (sendRenterAmt > 0) {\n            ERC20(pmtToken).safeTransfer(renting.renterAddress, sendRenterAmt);\n        }\n    }\n\n    function distributeClaimPayment(\n        IRegistry.Lending memory lending,\n        IRegistry.Renting memory renting\n    ) private {\n        uint8 paymentTokenIx = uint8(lending.paymentToken);\n        ERC20 paymentToken = ERC20(resolver.getPaymentToken(paymentTokenIx));\n        uint256 decimals = ERC20(paymentToken).decimals();\n        uint256 scale = 10**decimals;\n        uint256 rentPrice = unpackPrice(lending.dailyRentPrice, scale);\n        uint256 finalAmt = rentPrice * renting.rentDuration;\n        uint256 takenFee = 0;\n        if (rentFee != 0) {\n            takenFee = takeFee(\n                finalAmt,\n                IResolver.PaymentToken(paymentTokenIx)\n            );\n        }\n        paymentToken.safeTransfer(lending.lenderAddress, finalAmt - takenFee);\n    }\n\n    function safeTransfer(\n        CallData memory cd,\n        address from,\n        address to,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount\n    ) private {\n        if (cd.nftStandard[cd.left] == IRegistry.NFTStandard.E721) {\n            IERC721(cd.nftAddress[cd.left]).transferFrom(\n                from,\n                to,\n                cd.tokenID[cd.left]\n            );\n        } else {\n            IERC1155(cd.nftAddress[cd.left]).safeBatchTransferFrom(\n                from,\n                to,\n                tokenID,\n                lendAmount,\n                \"\"\n            );\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function getLending(\n        address nftAddress,\n        uint256 tokenID,\n        uint256 _lendingID\n    )\n        external\n        view\n        returns (\n            uint8,\n            address,\n            uint8,\n            bytes4,\n            uint16,\n            uint16,\n            uint8\n        )\n    {\n        bytes32 identifier = keccak256(\n            abi.encodePacked(nftAddress, tokenID, _lendingID)\n        );\n        IRegistry.Lending storage lending = lendings[identifier];\n        return (\n            uint8(lending.nftStandard),\n            lending.lenderAddress,\n            lending.maxRentDuration,\n            lending.dailyRentPrice,\n            lending.lendAmount,\n            lending.availableAmount,\n            uint8(lending.paymentToken)\n        );\n    }\n\n    function getRenting(\n        address nftAddress,\n        uint256 tokenID,\n        uint256 _rentingID\n    )\n        external\n        view\n        returns (\n            address,\n            uint16,\n            uint8,\n            uint32\n        )\n    {\n        bytes32 identifier = keccak256(\n            abi.encodePacked(nftAddress, tokenID, _rentingID)\n        );\n        IRegistry.Renting storage renting = rentings[identifier];\n        return (\n            renting.renterAddress,\n            renting.rentAmount,\n            renting.rentDuration,\n            renting.rentedAt\n        );\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function createLendCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory lendAmount,\n        uint8[] memory maxRentDuration,\n        bytes4[] memory dailyRentPrice,\n        IResolver.PaymentToken[] memory paymentToken\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: lendAmount,\n            lendingID: new uint256[](0),\n            rentingID: new uint256[](0),\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: maxRentDuration,\n            dailyRentPrice: dailyRentPrice,\n            paymentToken: paymentToken\n        });\n    }\n\n    function createRentCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint8[] memory rentDuration,\n        uint256[] memory rentAmount\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: new uint256[](0),\n            rentDuration: rentDuration,\n            rentAmount: rentAmount,\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new IResolver.PaymentToken[](0)\n        });\n    }\n\n    function createActionCallData(\n        IRegistry.NFTStandard[] memory nftStandard,\n        address[] memory nftAddress,\n        uint256[] memory tokenID,\n        uint256[] memory _lendingID,\n        uint256[] memory _rentingID\n    ) private pure returns (CallData memory cd) {\n        cd = CallData({\n            left: 0,\n            right: 1,\n            nftStandard: nftStandard,\n            nftAddress: nftAddress,\n            tokenID: tokenID,\n            lendAmount: new uint256[](0),\n            lendingID: _lendingID,\n            rentingID: _rentingID,\n            rentDuration: new uint8[](0),\n            rentAmount: new uint256[](0),\n            maxRentDuration: new uint8[](0),\n            dailyRentPrice: new bytes4[](0),\n            paymentToken: new IResolver.PaymentToken[](0)\n        });\n    }\n\n    function unpackPrice(bytes4 price, uint256 scale)\n        private\n        pure\n        returns (uint256)\n    {\n        ensureIsUnpackablePrice(price, scale);\n        uint16 whole = uint16(bytes2(price));\n        uint16 decimal = uint16(bytes2(price << 16));\n        uint256 decimalScale = scale / 10000;\n        if (whole > 9999) {\n            whole = 9999;\n        }\n        if (decimal > 9999) {\n            decimal = 9999;\n        }\n        uint256 w = whole * scale;\n        uint256 d = decimal * decimalScale;\n        uint256 fullPrice = w + d;\n        return fullPrice;\n    }\n\n    function sliceArr(\n        uint256[] memory arr,\n        uint256 fromIx,\n        uint256 toIx,\n        uint256 arrOffset\n    ) private pure returns (uint256[] memory r) {\n        r = new uint256[](toIx - fromIx);\n        for (uint256 i = fromIx; i < toIx; i++) {\n            r[i - fromIx] = arr[i - arrOffset];\n        }\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function ensureIsNotZeroAddr(address addr) private pure {\n        require(addr != address(0), \"ReNFT::zero address\");\n    }\n\n    function ensureIsZeroAddr(address addr) private pure {\n        require(addr == address(0), \"ReNFT::not a zero address\");\n    }\n\n    function ensureIsNull(Lending memory lending) private pure {\n        ensureIsZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration == 0, \"ReNFT::duration not zero\");\n        require(lending.dailyRentPrice == 0, \"ReNFT::rent price not zero\");\n    }\n\n    function ensureIsNotNull(Lending memory lending) private pure {\n        ensureIsNotZeroAddr(lending.lenderAddress);\n        require(lending.maxRentDuration != 0, \"ReNFT::duration zero\");\n        require(lending.dailyRentPrice != 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsNull(Renting memory renting) private pure {\n        ensureIsZeroAddr(renting.renterAddress);\n        require(renting.rentDuration == 0, \"ReNFT::duration not zero\");\n        require(renting.rentedAt == 0, \"ReNFT::rented at not zero\");\n    }\n\n    function ensureIsNotNull(Renting memory renting) private pure {\n        ensureIsNotZeroAddr(renting.renterAddress);\n        require(renting.rentDuration != 0, \"ReNFT::duration is zero\");\n        require(renting.rentedAt != 0, \"ReNFT::rented at is zero\");\n    }\n\n    function ensureIsLendable(CallData memory cd, uint256 i) private pure {\n        require(cd.lendAmount[i] > 0, \"ReNFT::lend amount is zero\");\n        require(cd.lendAmount[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(cd.maxRentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(cd.maxRentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(uint32(cd.dailyRentPrice[i]) > 0, \"ReNFT::rent price is zero\");\n    }\n\n    function ensureIsRentable(\n        Lending memory lending,\n        CallData memory cd,\n        uint256 i,\n        address msgSender\n    ) private pure {\n        require(msgSender != lending.lenderAddress, \"ReNFT::cant rent own nft\");\n        require(cd.rentDuration[i] <= type(uint8).max, \"ReNFT::not uint8\");\n        require(cd.rentDuration[i] > 0, \"ReNFT::duration is zero\");\n        require(\n            cd.rentDuration[i] <= lending.maxRentDuration,\n            \"ReNFT::rent duration exceeds allowed max\"\n        );\n    }\n\n    function ensureIsReturnable(\n        Renting memory renting,\n        address msgSender,\n        uint256 blockTimestamp\n    ) private pure {\n        require(renting.renterAddress == msgSender, \"ReNFT::not renter\");\n        require(\n            !isPastReturnDate(renting, blockTimestamp),\n            \"ReNFT::past return date\"\n        );\n    }\n\n    function ensureIsStoppable(Lending memory lending, address msgSender)\n        private\n        pure\n    {\n        require(lending.lenderAddress == msgSender, \"ReNFT::not lender\");\n    }\n\n    function ensureIsUnpackablePrice(bytes4 price, uint256 scale) private pure {\n        require(uint32(price) > 0, \"ReNFT::invalid price\");\n        require(scale >= 10000, \"ReNFT::invalid scale\");\n    }\n\n    function ensureTokenNotSentinel(uint8 paymentIx) private pure {\n        require(paymentIx > 0, \"ReNFT::token is sentinel\");\n    }\n\n    function ensureIsClaimable(\n        IRegistry.Renting memory renting,\n        uint256 blockTimestamp\n    ) private pure {\n        require(\n            isPastReturnDate(renting, blockTimestamp),\n            \"ReNFT::return date not passed\"\n        );\n    }\n\n    function isPastReturnDate(Renting memory renting, uint256 nowTime)\n        private\n        pure\n        returns (bool)\n    {\n        require(nowTime > renting.rentedAt, \"ReNFT::now before rented\");\n        return\n            nowTime - renting.rentedAt > renting.rentDuration * SECONDS_IN_DAY;\n    }\n\n    //      .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.     .-.\n    // `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'   `._.'\n\n    function setRentFee(uint256 newRentFee) external onlyAdmin {\n        require(newRentFee < 10000, \"ReNFT::fee exceeds 100pct\");\n        rentFee = newRentFee;\n    }\n\n    function setBeneficiary(address payable newBeneficiary) external onlyAdmin {\n        beneficiary = newBeneficiary;\n    }\n\n    function setPaused(bool newPaused) external onlyAdmin {\n        paused = newPaused;\n    }\n}\n\n//              @@@@@@@@@@@@@@@@        ,@@@@@@@@@@@@@@@@\n//              @@@,,,,,,,,,,@@@        ,@@&,,,,,,,,,,@@@\n//         @@@@@@@@,,,,,,,,,,@@@@@@@@&  ,@@&,,,,,,,,,,@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@\n//         @@@**********@@@@@@@@@@@@@&  ,@@@@@@@@**********@@@@@@@@\n//         @@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@@@@@@&       .@@@**********@@@@@@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@\n//    @@@**********@@@@@@@@@@@@@&            .@@@@@@@@**********@@@@@@@@\n//    @@@@@@@@**********@@@@@@@@&            .@@@**********@@@@@@@@@@@@@\n//    @@@@@@@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&            .@@@//////////@@@@@@@@@@@@@\n//         @@@//////////@@@@@@@@&       ,@@@@@@@@//////////@@@@@@@@@@@@@\n//         @@@%%%%%/////(((((@@@&       ,@@@(((((/////%%%%%@@@@@@@@\n//         @@@@@@@@//////////@@@@@@@@&  ,@@@//////////@@@@@@@@@@@@@\n//              @@@%%%%%%%%%%@@@@@@@@&  ,@@@%%%%%%%%%%@@@@@@@@@@@@@\n//              @@@@@@@@@@@@@@@@@@@@@&  ,@@@@@@@@@@@@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n//                   @@@@@@@@@@@@@@@@&        @@@@@@@@@@@@@@@@\n",
  "sourceMap": "2113:25867:15:-:0;;;2356:1;2328:29;;;;2363;;2398:26;;;-1:-1:-1;;2398:26:15;;;-1:-1:-1;2430:26:15;;2807:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:32;2950:11;2930:19;:32::i;:::-;2972:35;2992:14;2972:19;:35::i;:::-;3017:29;3037:8;3017:19;:29::i;:::-;3056:8;:33;;-1:-1:-1;;;;;3056:33:15;;;-1:-1:-1;;;;;;3056:33:15;;;;;;;3099:11;:28;;;;;;;;;;;;;;;3056:33;3137:16;;;;;;;;;;;2113:25867;;23651:123;-1:-1:-1;;;;;23725:18:15;;23717:50;;;;-1:-1:-1;;;23717:50:15;;748:2:18;23717:50:15;;;730:21:18;787:2;767:18;;;760:30;826:21;806:18;;;799:49;865:18;;23717:50:15;;;;;;;;23651:123;:::o;14:527:18:-;110:6;118;126;179:2;167:9;158:7;154:23;150:32;147:52;;;195:1;192;185:12;147:52;227:9;221:16;246:31;271:5;246:31;:::i;:::-;346:2;331:18;;325:25;296:5;;-1:-1:-1;359:33:18;325:25;359:33;:::i;:::-;463:2;448:18;;442:25;411:7;;-1:-1:-1;476:33:18;442:25;476:33;:::i;:::-;528:7;518:17;;;14:527;;;;;:::o;894:131::-;-1:-1:-1;;;;;969:31:18;;959:42;;949:70;;1015:1;1012;1005:12;894:131;2113:25867:15;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}